{
  "sections": [{
    "text": "Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 469–476 Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics\n469"
  }, {
    "heading": "1 Introduction",
    "text": "Many recent state-of-the-art models for constituency parsing are transition based, decomposing production of each parse tree into a sequence of action decisions (Dyer et al., 2016; Cross and Huang, 2016; Liu and Zhang, 2017; Stern et al., 2017), building on a long line of work in transition-based parsing (Nivre, 2003; Yamada and Matsumoto, 2003; Henderson, 2004; Zhang and Clark, 2011; Chen and Manning, 2014; Andor et al., 2016; Kiperwasser and Goldberg, 2016).\nHowever, models of this type, which decompose structure prediction into sequential decisions, can be prone to two issues (Ranzato et al., 2016; Wiseman and Rush, 2016). The first is exposure bias: if, at training time, the model only observes\nstates resulting from correct past decisions, it will not be prepared to recover from its own mistakes during prediction. Second is the loss mismatch between the action-level loss used at training and any structure-level evaluation metric, for example F1.\nA large family of techniques address the exposure bias problem by allowing the model to make mistakes and explore incorrect states during training, supervising actions at the resulting states using an expert policy (Daumé III et al., 2009; Ross et al., 2011; Choi and Palmer, 2011; Chang et al., 2015); these expert policies are typically referred to as dynamic oracles in parsing (Goldberg and Nivre, 2012; Ballesteros et al., 2016). While dynamic oracles have produced substantial improvements in constituency parsing performance (Coavoux and Crabbé, 2016; Cross and Huang, 2016; Stern et al., 2017; González and Gómez-Rodrı́guez, 2018), they must be custom designed for each transition system.\nTo address the loss mismatch problem, another line of work has directly optimized for structurelevel cost functions (Goodman, 1996; Och, 2003). Recent methods applied to models that produce output sequentially commonly use policy gradient (Auli and Gao, 2014; Ranzato et al., 2016; Shen et al., 2016) or beam search (Xu et al., 2016; Wiseman and Rush, 2016; Edunov et al., 2017) at training time to minimize a structured cost. These methods also reduce exposure bias through exploration but do not require an expert policy for supervision.\nIn this work, we apply a simple policy gradient method to train four different state-of-theart transition-based constituency parsers to maximize expected F1. We compare against training with a dynamic oracle (both to supervise exploration and provide loss-augmentation) where one is available, including a novel dynamic oracle that we define for the top-down transition system of\nDyer et al. (2016). We find that while policy gradient usually outperforms standard likelihood training, it typically underperforms the dynamic oracle-based methods – which provide direct, model-aware supervision about which actions are best to take from arbitrary parser states. However, a substantial fraction of each dynamic oracle’s performance gain is often recovered using the model-agnostic policy gradient method. In the process, we obtain new state-of-the-art results for single-model discriminative transition-based parsers trained on the English PTB (92.6 F1), French Treebank (83.5 F1), and Penn Chinese Treebank Version 5.1 (87.0 F1)."
  }, {
    "heading": "2 Models",
    "text": "The transition-based parsers we use all decompose production of a parse tree y for a sentence x into a sequence of actions (a1, . . . aT ) and resulting states (s1, . . . sT+1). Actions at are predicted sequentially, conditioned on a representation of the parser’s current state st and parameters θ:\np(y|x; θ) = T∏ t=1 p(at | st; θ) (1)\nWe investigate four parsers with varying transition systems and methods of encoding the current state and sentence: (1) the discriminative Recurrent Neural Network Grammars (RNNG) parser of Dyer et al. (2016), (2) the In-Order parser of Liu and Zhang (2017), (3) the Span-Based parser of Cross and Huang (2016), and (4) the Top-Down parser of Stern et al. (2017).1 We refer to the original papers for descriptions of the transition systems and model parameterizations."
  }, {
    "heading": "3 Training Procedures",
    "text": "Likelihood training without exploration maximizes Eq. 1 for trees in the training corpus, but may be prone to exposure bias and loss mismatch (Section 1). Dynamic oracle methods are known to improve on this training procedure for a variety of parsers (Coavoux and Crabbé, 2016; Cross and Huang, 2016; Stern et al., 2017; González and Gómez-Rodrı́guez, 2018), supervising exploration\n1Stern et al. (2017) trained their model using a nonprobabilistic, max-margin objective. For comparison to the other models and to allow training with policy gradient, we create a locally-normalized probabilistic variant of their model by applying a softmax function to the predicted scores for each action.\nduring training by providing the parser with the best action to take at each explored state. We describe how policy gradient can be applied as an oracle-free alternative. We then compare to several variants of dynamic oracle training which focus on addressing exposure bias, loss mismatch, or both."
  }, {
    "heading": "3.1 Policy Gradient",
    "text": "Given an arbitrary cost function ∆ comparing structured outputs (e.g. negative labeled F1, for trees), we use the risk objective:\nR(θ) = N∑ i=1 ∑ y p(y | x(i); θ)∆(y,y(i))\nwhich measures the model’s expected cost over possible outputs y for each of the training examples (x(1),y(1)), . . . , (x(N),y(N)).\nMinimizing a risk objective has a long history in structured prediction (Povey and Woodland, 2002; Smith and Eisner, 2006; Li and Eisner, 2009; Gimpel and Smith, 2010) but often relies on the cost function decomposing according to the output structure. However, we can avoid any restrictions on the cost using reinforcement learning-style approaches (Xu et al., 2016; Shen et al., 2016; Edunov et al., 2017) where cost is ascribed to the entire output structure – albeit at the expense of introducing a potentially difficult credit assignment problem.\nThe policy gradient method we apply is a simple variant of REINFORCE (Williams, 1992). We perform mini-batch gradient descent on the gradient of the risk objective:\n∇R(θ) = N∑ i=1 ∑ y p(y|x(i))∆(y,y(i))∇ log p(y|x(i); θ)\n≈ N∑ i=1 ∑ y∈Y(x(i)) ∆(y,y(i))∇ log p(y|x(i); θ)\nwhere Y(x(i)) is a set of k candidate trees obtained by sampling from the model’s distribution for sentence x(i). We use negative labeled F1 for ∆.\nTo reduce the variance of the gradient estimates, we standardize ∆ using its running mean and standard deviation across all candidates used so far throughout training. Following Shen et al. (2016), we also found better performance when including the gold tree y(i) in the set of k candidates Y(x(i)), and do so for all experiments reported here.2\n2Including the gold tree in the set of candidates does bias"
  }, {
    "heading": "3.2 Dynamic Oracle Supervision",
    "text": "For a given parser state st, a dynamic oracle defines an action a∗(st) which should be taken to incrementally produce the best tree still reachable from that state.3\nDynamic oracles provide strong supervision for training with exploration, but require custom design for a given transition system. Cross and Huang (2016) and Stern et al. (2017) defined optimal (with respect to F1) dynamic oracles for their respective transition systems, and below we define a novel dynamic oracle for the top-down system of RNNG.\nIn RNNG, tree production occurs in a stackbased, top-down traversal which produces a leftto-right linearized representation of the tree using three actions: OPEN a labeled constituent (which fixes the constituent’s span to begin at the next word in the sentence which has not been shifted), SHIFT the next word in the sentence to add it to the current constituent, or CLOSE the current constituent (which fixes its span to end after the last word that has been shifted). The parser stores opened constituents on the stack, and must therefore close them in the reverse of the order that they were opened.\nAt a given parser state, our oracle does the following:\n1. If there are any open constituents on the stack which can be closed (i.e. have had a word shifted since being opened), check the topmost of these (the one that has been opened most recently). If closing it would produce a constituent from the the gold tree that has not yet been produced (which is determined by the constituent’s label, span beginning position, and the number of words currently shifted), or if the constituent could not be closed at a later position in the sentence to produce a constituent in the gold tree, return CLOSE.\nthe estimate of the risk objective’s gradient; however since in the parsing tasks we consider, the gold tree has constant and minimal cost, augmenting with the gold is equivalent to jointly optimizing the standard likelihood and risk objectives, using an adaptive scaling factor for each objective that is dependent on the cost for the trees that have been sampled from the model. We found that including the gold candidate in this manner outperformed initial experiments that first trained a model using likelihood training and then fine-tuned using unbiased policy gradient.\n3More generally, an oracle can return a set of such actions that could be taken from the current state, but the oracles we use select a single canonical action.\n2. Otherwise, if there are constituents in the gold tree which have not yet been opened in the parser state, with span beginning at the next unshifted word, OPEN the outermost of these.\n3. Otherwise, SHIFT the next word.\nWhile we do not claim that this dynamic oracle is optimal with respect to F1, we find that it still helps substantially in supervising exploration (Section 5).\nLikelihood Training with Exploration Past work has differed on how to use dynamic oracles to guide exploration during oracle training (Ballesteros et al., 2016; Cross and Huang, 2016; Stern et al., 2017). We use the same sample-based method of generating candidate sets Y as for policy gradient, which allows us to control the dynamic oracle and policy gradient methods to perform an equal amount of exploration. Likelihood training with exploration then maximizes the sum of the log probabilities for the oracle actions for all states composing the candidate trees:\nLE(θ) = N∑ i=1 ∑ y∈Y(x(i)) ∑ s∈y log p(a∗(s) | s)\nwhere a∗(s) is the dynamic oracle’s action for state s.\nSoftmax Margin Softmax margin loss (Gimpel and Smith, 2010; Auli and Lopez, 2011) addresses loss mismatch by incorporating task cost into the training loss. Since trees are decomposed into a sequence of local action predictions, we cannot use a global cost, such as F1, directly. As a proxy, we rely on the dynamic oracles’ action-level supervision.\nIn all models we consider, action probabilities (Eq. 1) are parameterized by a softmax function\npML(a | st; θ) ∝ exp(z(a, st, θ))\nfor some state–action scoring function z. The softmax-margin objective replaces this by\npSMM (a | st; θ) ∝ exp(z(a, st, θ) + ∆(a, a∗t )) (2) We use ∆(a, a∗t ) = 0 if a = a ∗ t and 1 otherwise. This can be viewed as a “soft” version of the maxmargin objective used by Stern et al. (2017) for training without exploration, but retains a locallynormalized model that we can use for samplingbased exploration.\nSoftmax Margin with Exploration Finally, we train using a combination of softmax margin loss augmentation and exploration. We perform the same sample-based candidate generation as for policy gradient and likelihood training with exploration, but use Eq. 2 to compute the training loss for candidate states. For those parsers that have a dynamic oracle, this provides a means of training that more directly provides both exploration and cost-aware losses."
  }, {
    "heading": "4 Experiments",
    "text": "We compare the constituency parsers listed in Section 2 using the above training methods. Our experiments use the English PTB (Marcus et al., 1993), French Treebank (Abeillé et al., 2003), and Penn Chinese Treebank (CTB) Version 5.1 (Xue et al., 2005).\nTraining To compare the training procedures as closely as possible, we train all models for a given parser in a given language from the same randomly-initialized parameter values.\nWe train two different versions of the RNNG model: one model using size 128 for the LSTMs and hidden states (following the original work), and a larger model with size 256. We perform evaluation using greedy search in the Span-Based and Top-Down parsers, and beam search with beam size 10 for the RNNG and In-Order parsers. We found that beam search improved performance for these two parsers by around 0.1-0.3 F1 on the development sets, and use it at inference time in every setting for these two parsers.\nIn our experiments, policy gradient typically requires more epochs of training to reach performance comparable to either of the dynamic oraclebased exploration methods. Figure 1 gives a typical learning curve, for the Top-Down parser on English. We found that policy gradient is also more sensitive to the number of candidates sampled per\nsentence than either of the other exploration methods, with best performance on the development set usually obtained with k = 10 for k ∈ {2, 5, 10} (where k also counts the sentence’s gold tree, included in the candidate set). See Appendix A in the supplemental material for the values of k used.\nTags, Embeddings, and Morphology We largely follow previous work for each parser in our use of predicted part-of-speech tags, pretrained word embeddings, and morphological features.\nAll parsers use predicted part-of-speech tags as part of their sentence representations. For English and Chinese, we follow the setup of Cross and Huang (2016): training the Stanford tagger (Toutanova et al., 2003) on the training set of each parsing corpus to predict development and test set tags, and using 10-way jackknifing to predict tags for the training set.\nFor French, we use the predicted tags and morphological features provided with the SPMRL dataset (Seddah et al., 2014). We modified the publicly released code for all parsers to use predicted morphological features for French. We follow the approach outlined by Cross and Huang (2016) and Stern et al. (2017) for representing morphological features as learned embeddings, and use the same dimensions for these embeddings as in their papers. For RNNG and In-Order, we similarly use 10-dimensional learned embeddings for each morphological feature, feeding them as LSTM inputs for each word alongside the word and part-of-speech tag embeddings.\nFor RNNG and the In-Order parser, we use the same word embeddings as the original papers for English and Chinese, and train 100-dimensional word embeddings for French using the structured skip-gram method of Ling et al. (2015) on French Wikipedia."
  }, {
    "heading": "5 Results and Discussion",
    "text": "Table 1 compares parser F1 by training procedure for each language. Policy gradient improves upon likelihood training in 14 out of 15 cases, with improvements of up to 1.5 F1. One of the three dynamic oracle-based training methods – either likelihood with exploration, softmax margin (SMM), or softmax margin with exploration – obtains better performance than policy gradient in 10 out of 12 cases. This is perhaps unsurprising given the strong supervision provided by the dynamic oracles and the credit assignment problem faced by\npolicy gradient. However, a substantial fraction of this performance gain is recaptured by policy gradient in most cases.\nWhile likelihood training with exploration using a dynamic oracle more directly addresses exploration bias, and softmax margin training more directly addresses loss mismatch, these two phenomena are still entangled, and the best dynamic oracle-based method to use varies. The effectiveness of the oracle method is also likely to be influenced by the nature of the dynamic oracle available for the parser. For example, the oracle for RNNG lacks F1 optimality guarantees, and softmax margin without exploration often underperforms likelihood for this parser. However, exploration improves softmax margin training across all parsers and conditions.\nAlthough results from likelihood training are mostly comparable between RNNG-128 and the larger model RNNG-256 across languages, policy gradient and likelihood training with exploration both typically yield larger improvements in the larger models, obtaining 92.6 F1 for English and 86.0 for Chinese (using likelihood training with exploration), although results are slightly higher for the policy gradient and dynamic oracle-based methods for the smaller model on French (including 83.5 with softmax margin with exploration). Finally, we observe that policy gradient also provides large improvements for the In-Order parser, where a dynamic oracle has not been defined.\nWe note that although some of these results (92.6 for English, 83.5 for French, 87.0 for Chinese) are state-of-the-art for single model, discriminative transition-based parsers, other work on constituency parsing achieves better performance through other methods. Techniques that combine multiple models or add semi-supervised data (Vinyals et al., 2015; Dyer et al., 2016; Choe and Charniak, 2016; Kuncoro et al., 2017; Liu and Zhang, 2017; Fried et al., 2017) are orthogonal to, and could be combined with, the singlemodel, fixed training data methods we explore. Other recent work (Gaddy et al., 2018; Kitaev and Klein, 2018) obtains comparable or stronger performance with global chart decoders, where training uses loss augmentation provided by an oracle. By performing model-optimal global inference, these parsers likely avoid the exposure bias problem of the sequential transition-based parsers we investigate, at the cost of requiring a chart decoding procedure for inference.\nOverall, we find that although optimizing for F1 in a model-agnostic fashion with policy gradient typically underperforms the model-aware expert supervision given by the dynamic oracle training methods, it provides a simple method for consistently improving upon static oracle likelihood training, at the expense of increased training costs."
  }, {
    "heading": "Acknowledgments",
    "text": "DF is supported by a Huawei / Berkeley AI fellowship. This research used the Savio computational cluster provided by the Berkeley Research Computing program at the University of California, Berkeley."
  }],
  "year": 2018,
  "references": [{
    "title": "Building a Treebank for French",
    "authors": ["Anne Abeillé", "Lionel Clément", "François Toussenel."],
    "venue": "Springer Netherlands, Dordrecht.",
    "year": 2003
  }, {
    "title": "Globally normalized transition-based neural networks",
    "authors": ["Daniel Andor", "Chris Alberti", "David Weiss", "Aliaksei Severyn", "Alessandro Presta", "Kuzman Ganchev", "Slav Petrov", "Michael Collins."],
    "venue": "Proceedings of the 54th Annual Meeting of the Associa-",
    "year": 2016
  }, {
    "title": "Decoder integration and expected BLEU training for recurrent neural network language models",
    "authors": ["Michael Auli", "Jianfeng Gao."],
    "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Pa-",
    "year": 2014
  }, {
    "title": "Training a loglinear parser with loss functions via softmax-margin",
    "authors": ["Michael Auli", "Adam Lopez."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing, EMNLP ’11, pages 333–343, Stroudsburg, PA, USA. Associ-",
    "year": 2011
  }, {
    "title": "Training with exploration improves a greedy stack lstm parser",
    "authors": ["Miguel Ballesteros", "Yoav Goldberg", "Chris Dyer", "Noah A. Smith."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 2005–2010, Austin,",
    "year": 2016
  }, {
    "title": "Learning to search better than your teacher",
    "authors": ["Kai-Wei Chang", "Akshay Krishnamurthy", "Alekh Agarwal", "Hal Daumé III", "John Langford."],
    "venue": "International Conference on Machine Learning.",
    "year": 2015
  }, {
    "title": "A fast and accurate dependency parser using neural networks",
    "authors": ["Danqi Chen", "Christopher Manning."],
    "venue": "Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), pages 740–750.",
    "year": 2014
  }, {
    "title": "Parsing as language modeling",
    "authors": ["Do Kook Choe", "Eugene Charniak."],
    "venue": "Empirical Methods in Natural Language Processing.",
    "year": 2016
  }, {
    "title": "Getting the most out of transition-based dependency parsing",
    "authors": ["Jinho D. Choi", "Martha Palmer."],
    "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies: Short Papers - Volume 2, HLT",
    "year": 2011
  }, {
    "title": "Neural greedy constituent parsing with dynamic oracles",
    "authors": ["Maximin Coavoux", "Benoit Crabbé."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 172–182, Berlin, Germany. As-",
    "year": 2016
  }, {
    "title": "Span-based constituency parsing with a structure-label system and provably optimal dynamic oracles",
    "authors": ["James Cross", "Liang Huang."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 1–11, Austin,",
    "year": 2016
  }, {
    "title": "Search-based structured prediction",
    "authors": ["Hal Daumé III", "John Langford", "Daniel Marcu."],
    "venue": "Machine learning, 75(3):297–325.",
    "year": 2009
  }, {
    "title": "Recurrent neural network grammars",
    "authors": ["Chris Dyer", "Adhiguna Kuncoro", "Miguel Ballesteros", "Noah A. Smith."],
    "venue": "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language",
    "year": 2016
  }, {
    "title": "Classical structured prediction losses for sequence to sequence learning",
    "authors": ["Sergey Edunov", "Myle Ott", "Michael Auli", "David Grangier", "Marc’Aurelio Ranzato"],
    "venue": "arXiv preprint arXiv:1711.04956",
    "year": 2017
  }, {
    "title": "Improving neural parsing by disentangling model combination and reranking effects",
    "authors": ["Daniel Fried", "Mitchell Stern", "Dan Klein."],
    "venue": "Proceedings of ACL.",
    "year": 2017
  }, {
    "title": "What’s going on in neural constituency parsers? an analysis",
    "authors": ["David Gaddy", "Mitchell Stern", "Dan Klein."],
    "venue": "Proceedings of NAACL.",
    "year": 2018
  }, {
    "title": "Softmaxmargin crfs: Training log-linear models with cost functions",
    "authors": ["Kevin Gimpel", "Noah A. Smith."],
    "venue": "Human Language Technologies: The 2010 Annual Conference of the North American Chapter of the Association for Computational Lin-",
    "year": 2010
  }, {
    "title": "A dynamic oracle for arc-eager dependency parsing",
    "authors": ["Yoav Goldberg", "Joakim Nivre."],
    "venue": "Proceedings of COLING 2012, pages 959–976, Mumbai, India. The COLING 2012 Organizing Committee.",
    "year": 2012
  }, {
    "title": "Faster shift-reduce constituent parsing with a non-binary, bottom-up strategy",
    "authors": ["Daniel Fernández González", "Carlos GómezRodrı́guez"],
    "venue": "arXiv preprint,",
    "year": 2018
  }, {
    "title": "Parsing algorithms and metrics",
    "authors": ["Joshua Goodman."],
    "venue": "Proceedings of the 34th Annual Meeting of the Association for Computational Linguistics, pages 177–183, Santa Cruz, California, USA. Association for Computational Linguistics.",
    "year": 1996
  }, {
    "title": "Discriminative training of a neural network statistical parser",
    "authors": ["James Henderson."],
    "venue": "Proceedings of the 42Nd Annual Meeting on Association for Computational Linguistics, ACL ’04, Stroudsburg, PA, USA. Association for Computational Linguistics.",
    "year": 2004
  }, {
    "title": "Simple and accurate dependency parsing using bidirectional lstm feature representations",
    "authors": ["Eliyahu Kiperwasser", "Yoav Goldberg."],
    "venue": "Transactions",
    "year": 2016
  }, {
    "title": "Constituency parsing with a self-attentive encoder",
    "authors": ["Nikita Kitaev", "Dan Klein."],
    "venue": "arXiv preprint arXiv:1805.01052.",
    "year": 2018
  }, {
    "title": "What do recurrent neural network grammars learn about syntax",
    "authors": ["Adhiguna Kuncoro", "Miguel Ballesteros", "Lingpeng Kong", "Chris Dyer", "Graham Neubig", "Noah A. Smith"],
    "venue": "In Proceedings of the 15th Conference of the European Chapter",
    "year": 2017
  }, {
    "title": "First- and secondorder expectation semirings with applications to minimum-risk training on translation forests",
    "authors": ["Zhifei Li", "Jason Eisner."],
    "venue": "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume",
    "year": 2009
  }, {
    "title": "Two/too simple adaptations of word2vec for syntax problems",
    "authors": ["Wang Ling", "Chris Dyer", "Alan W Black", "Isabel Trancoso."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics:",
    "year": 2015
  }, {
    "title": "In-order transition-based constituent parsing",
    "authors": ["Jiangming Liu", "Yue Zhang."],
    "venue": "Transactions of the Association for Computational Linguistics, 5:413–424.",
    "year": 2017
  }, {
    "title": "Building a large annotated corpus of English: The Penn treebank",
    "authors": ["Mitchell P Marcus", "Mary Ann Marcinkiewicz", "Beatrice Santorini."],
    "venue": "Computational Linguistics, 19(2):313–330.",
    "year": 1993
  }, {
    "title": "An efficient algorithm for projective dependency parsing",
    "authors": ["Joakim Nivre."],
    "venue": "Proceedings of the 8th International Workshop on Parsing Technologies (IWPT).",
    "year": 2003
  }, {
    "title": "Minimum error rate training in statistical machine translation",
    "authors": ["Franz Josef Och."],
    "venue": "Proceedings of the 41st Annual Meeting of the Association for Computational Linguistics, pages 160–167, Sapporo, Japan. Association for Computational Linguis-",
    "year": 2003
  }, {
    "title": "Minimum phone error and i-smoothing for improved discriminative training",
    "authors": ["Daniel Povey", "Philip C Woodland."],
    "venue": "Acoustics, Speech, and Signal Processing (ICASSP), 2002 IEEE International Conference on, volume 1, pages I–105. IEEE.",
    "year": 2002
  }, {
    "title": "Sequence level training with recurrent neural networks",
    "authors": ["Marc’Aurelio Ranzato", "Sumit Chopra", "Michael Auli", "Wojciech Zaremba"],
    "venue": "International Conference on Learning Representations",
    "year": 2016
  }, {
    "title": "A reduction of imitation learning and structured prediction to no-regret online learning",
    "authors": ["Stéphane Ross", "Geoffrey Gordon", "Drew Bagnell."],
    "venue": "Proceedings of the fourteenth international conference on artificial intelligence and statistics, pages 627–",
    "year": 2011
  }, {
    "title": "Introducing the spmrl 2014 shared task on parsing morphologically-rich languages",
    "authors": ["Djamé Seddah", "Sandra Kübler", "Reut Tsarfaty."],
    "venue": "Proceedings of the First Joint Workshop on Statistical Parsing of Morphologically Rich Languages and",
    "year": 2014
  }, {
    "title": "Minimum risk training for neural machine translation",
    "authors": ["Shiqi Shen", "Yong Cheng", "Zhongjun He", "Wei He", "Hua Wu", "Maosong Sun", "Yang Liu."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long",
    "year": 2016
  }, {
    "title": "Minimum risk annealing for training log-linear models",
    "authors": ["David A. Smith", "Jason Eisner."],
    "venue": "Proceedings of the COLING/ACL 2006 Main Conference Poster Sessions, pages 787–794, Sydney, Australia. Association for Computational Linguistics.",
    "year": 2006
  }, {
    "title": "A minimal span-based neural constituency parser",
    "authors": ["Mitchell Stern", "Jacob Andreas", "Dan Klein."],
    "venue": "Proceedings of ACL.",
    "year": 2017
  }, {
    "title": "Feature-rich part-ofspeech tagging with a cyclic dependency network",
    "authors": ["Kristina Toutanova", "Dan Klein", "Christopher D. Manning", "Yoram Singer."],
    "venue": "Proceedings of the 2003 Conference of the North American Chapter of the Association for Computa-",
    "year": 2003
  }, {
    "title": "Grammar as a foreign language",
    "authors": ["Oriol Vinyals", "Łukasz Kaiser", "Terry Koo", "Slav Petrov", "Ilya Sutskever", "Geoffrey Hinton."],
    "venue": "Proceedings of NIPS, pages 2773–2781.",
    "year": 2015
  }, {
    "title": "Simple statistical gradientfollowing algorithms for connectionist reinforcement learning",
    "authors": ["Ronald J Williams."],
    "venue": "Reinforcement Learning, pages 5–32. Springer.",
    "year": 1992
  }, {
    "title": "Sequence-to-sequence learning as beam-search optimization",
    "authors": ["Sam Wiseman", "Alexander M. Rush."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 1296–1306, Austin, Texas. Association",
    "year": 2016
  }, {
    "title": "Expected f-measure training for shiftreduce parsing with recurrent neural networks",
    "authors": ["Wenduan Xu", "Michael Auli", "Stephen Christopher Clark."],
    "venue": "Proceedings of the 2016 Conference of the North",
    "year": 2016
  }, {
    "title": "The penn chinese treebank: Phrase structure annotation of a large corpus",
    "authors": ["Naiwen Xue", "Fei Xia", "Fu-dong Chiou", "Marta Palmer."],
    "venue": "Nat. Lang. Eng., 11(2):207–238.",
    "year": 2005
  }, {
    "title": "Statistical dependency analysis with support vector machines",
    "authors": ["Hiroyasu Yamada", "Yuji Matsumoto."],
    "venue": "Proceedings of the 8th International Workshop on Parsing Technologies (IWPT).",
    "year": 2003
  }, {
    "title": "Syntactic processing using the generalized perceptron and beam search",
    "authors": ["Yue Zhang", "Stephen Clark."],
    "venue": "Computational linguistics, 37(1):105–151.",
    "year": 2011
  }],
  "id": "SP:d150cc4a84bacf74a7bfb0aa85c0a708ef1c1512",
  "authors": [{
    "name": "Daniel Fried",
    "affiliations": []
  }, {
    "name": "Dan Klein",
    "affiliations": []
  }],
  "abstractText": "Dynamic oracles provide strong supervision for training constituency parsers with exploration, but must be custom defined for a given parser’s transition system. We explore using a policy gradient method as a parser-agnostic alternative. In addition to directly optimizing for a tree-level metric such as F1, policy gradient has the potential to reduce exposure bias by allowing exploration during training; moreover, it does not require a dynamic oracle for supervision. On four constituency parsers in three languages, the method substantially outperforms static oracle likelihood training in almost all settings. For parsers where a dynamic oracle is available (including a novel oracle which we define for the transition system of Dyer et al. (2016)), policy gradient typically recaptures a substantial fraction of the performance gain afforded by the dynamic oracle.",
  "title": "Policy Gradient as a Proxy for Dynamic Oracles in Constituency Parsing"
}