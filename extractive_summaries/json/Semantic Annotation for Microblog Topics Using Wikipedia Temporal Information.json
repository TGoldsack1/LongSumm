{
  "sections": [{
    "heading": "1 Introduction",
    "text": "With the proliferation of microblogging and its wide influence on how information is shared and digested, the studying of microblog sites has gained interest in recent NLP research. Several approaches have been proposed to enable a deep understanding of information on Twitter. An emerging approach is to use semantic annotation techniques, for instance by mapping Twitter information snippets to canonical entities in a knowledge base or to Wikipedia (Meij et al., 2012; Guo et al., 2013), or by revisiting NLP tasks in the Twitter domain (Owoputi et al., 2013; Ritter et al., 2011). Much of the existing work focuses on annotating a single Twitter message (tweet). However, information in Twitter is rarely digested in isolation, but rather in a collective manner, with the adoption of special mechanisms such as hashtags. When put together, the unprecedentedly massive adoption of\na hashtag within a short time period can lead to bursts and often reflect trending social attention. Understanding the meaning of trending hashtags offers a valuable opportunity for various applications and studies, such as viral marketing, social behavior analysis, recommendation, etc. Unfortunately, the task of hashtag annotation has been largely unexplored so far.\nIn this paper, we study the problem of annotating trending hashtags on Twitter by entities derived from Wikipedia. Instead of establishing a static semantic connection between hashtags and entities, we are interested in dynamically linking the hashtags to entities that are closest to the underlying topics during burst time periods of the hashtags. For instance, while ‘#sochi’ refers to a city in Russia, during February 2014, the hashtag was used to report the 2014 Winter Olympics (cf. Figure 1). Hence, it should be linked more to Wikipedia pages related to the event than to the location.\nCompared to traditional domains of text (e.g., news articles), annotating hashtags poses additional challenges. Hashtags’ surface forms are\nar X\niv :1\n70 1.\n03 93\n9v 1\n[ cs\n.I R\n] 1\n4 Ja\nn 20\n17\nvery ad-hoc, as they are chosen not in favor of the text quality, but by the dynamics in attention of the large crowd. In addition, the evolution of the semantics of hashtags (e.g., in the case of ‘#sochi’) makes them more ambiguous. Furthermore, a hashtag can encode multiple topics at once. For example, in March 2014, ‘#oscar’ refers to the 86th Academy Awards, but at the same time also to the Trial of Oscar Pistorius. Sometimes, it is difficult even for humans to understand a trending hashtag without knowledge about what was happening with the related entities in the real world.\nIn this work, we propose a novel solution to these challenges by leveraging temporal knowledge about entity dynamics derived from Wikipedia. We hypothesize that a trending hashtag is associated with an increase in public attention to certain entities, and this can also be observed on Wikipedia. As in Figure 1, we can identify 2014 Winter Olympics as a prominent entity for ‘#sochi’ during February 2014, by observing the change of user attention to the entity, for instance via the page view statistics of Wikipedia articles. We exploit both Wikipedia edits and page views for annotation. We also propose a novel learning method, inspired by the information spreading nature of social media such as Twitter, to suggest the optimal annotations without the need for human labeling. In summary:\n• We are the first to combine the Wikipedia edit history and page view statistics to overcome the temporal ambiguity of Twitter hashtags.\n• We propose a novel and efficient learning algorithm based on influence maximization to automatically annotate hashtags. The idea is generalizable to other social media sites that have a similar information spreading nature.\n• We conduct thorough experiments on a realworld dataset and show that our system can outperform competitive baselines by 17-28%."
  }, {
    "heading": "2 Related Work",
    "text": "Entity Linking in Microblogs The task of semantic annotation in microblogs has been recently tackled by different methods, which can be divided into two classes, i.e., content-based and graphbased methods. While the content-based methods (Meij et al., 2012; Guo et al., 2013; Fang and Chang, 2014) consider tweets independently, the\ngraph-based methods (Cassidy et al., 2012; Liu et al., 2013) use all related tweets (e.g., posted by a user) together. However, most of them focus on entity mentions in tweets. In contrast, we take into account hashtags which reflect the topics discussed in tweets, and leverage external resources from Wikipedia (in particular, the edit history and page view logs) for semantic annotation.\nAnalysis of Twitter Hashtags In an attempt to understand the user interest dynamics on Twitter, a rich body of work analyzes the temporal patterns of popular hashtags (Lehmann et al., 2012; Naaman et al., 2011; Tsur and Rappoport, 2012). Few works have paid attention to the semantics of hashtags, i.e., to the underlying topics conveyed in the corresponding tweets. Recently, Bansal et al. (2015) attempt to segment a hashtag and link each of its tokens to a Wikipedia page. However, the authors only aim to retrieve entities directly mentioned within a hashtag, which are very few in practice. The external information derived from the tweets is largely ignored. In contrast, we exploit both context information from the microblog and Wikipedia resources.\nEvent Mining Using Wikipedia Recently some works exploit Wikipedia for detecting and analyzing events on Twitter (Osborne et al., 2012; Tolomei et al., 2013; Tran et al., 2014). However, most of the existing studies focus on the statistical signals of Wikipedia (such as the edit or page view volumes). We are the first to combine the content of the Wikipedia edit history and the magnitude of page views to handle trending topics on Twitter."
  }, {
    "heading": "3 Framework",
    "text": "Preliminaries We refer to an entity (denoted by e) as any object described by a Wikipedia article (ignoring disambiguation, lists, and redirect pages). The number of times an entity’s article has been requested is called the entity view count. The text content of the article is denoted by C(e). In this work, we choose to study hashtags at the daily level, i.e., from the timestamps of tweets we only consider their creation day. A hashtag is called trending at a time point (a day) if the number of tweets where it appears is significantly higher than that on other days. There are many ways to detect such trendings. (Lappas et al., 2009; Lehmann et al., 2012). Each trending hashtag has one or multiple burst time periods, surrounding the trend-\ning day, where the users’ interest in the underlying topic remains stronger than in other periods. We denote with T (h) (or T for short) one hashtag burst time period, and withDT (h) the set of tweets containing the hashtag h created during T .\nTask Definition Given a trending hashtag h and the burst time period T of h, identify the top-k most prominent entities to describe h during T .\nIt is worth noting that not all trending hashtags are mapable to Wikipedia entities, as the coverage of topics in Wikipedia is much lower than on Twitter. This is also the limitation of systems relying on Wikipedia such as entity disambiguation, which can only disambiguate popular entities and not the ones in the long tail. In this study, we focus on the precision and the popular trending hashtags, and leave the improvement of recall to future work.\nOverview We approach the task in three steps. The first step is to identify all entity candidates by checking surface forms of the constituent tweets of the hashtag. In the second step, we compute different similarities between each candidate and the hashtag, based on different types of contexts, which are derived from either side (Wikipedia or Twitter). Finally, we learn a unified ranking function for each (hashtag, entity) pair and choose the top-k entities with the highest scores. The ranking function is learned through an unsupervised model and needs no human-defined labels."
  }, {
    "heading": "3.1 Entity Linking",
    "text": "The most obvious resource to identify candidate entities for a hashtag is via its tweets. We follow common approaches that use a lexicon to match each textual phrase in a tweet to a potential entity set (Shen et al., 2013; Fang and Chang, 2014). Our lexicon is constructed from Wikipedia page titles, hyperlink anchors, redirects, and disambiguation pages, which are mapped to the corresponding entities. As for the tweet phrases, we extract all n-grams (n ≤ 5) from the input tweets within T . We apply the longest-match heuristic (Meij et al., 2012): We start with the longest n-grams and stop as soon as the entity set is found, otherwise we continue with the smaller constituent n-grams.\nCandidate Set Expansion While the lexiconbased linking works well for single tweets, applying it on the hashtag level has subtle implications. Processing a huge amount of text, especially during a hashtag burst time period, incurs expen-\nsive computational costs. Therefore, to guarantee a good recall in this step while still maintaining feasible computation, we apply entity linking only on a random sample of the complete tweet set. Then, for each candidate entity e, we include all entities whose Wikipedia article is linked with the article of e by an outgoing or incoming link."
  }, {
    "heading": "3.2 Measuring Entity–Hashtag Similarities",
    "text": "To rank the entity by prominence, we measure the similarity between each candidate entity and the hashtag. We study three types of similarities:\nMention Similarity This measure relies on the explicit mentions of entities in tweets. It assumes that entities directly linked from more prominent anchors are more relevant to the hashtag. It is estimated using both statistics from Wikipedia and tweet phrases, and turns out to be surprisingly effective in practice (Fang and Chang, 2014).\nContext Similarity For entities that are not directly linked to mentions (the mention similarity is zero) we exploit external resources instead. Their prominence is perceived by users via external sources, such as web pages linked from tweets, or entity home pages or Wikipedia pages. By exploiting the content of entities from these external sources, we can complement the explicit similarity metrics based on mentions.\nTemporal Similarity The two measures above rely on the textual representation and are degraded by the linguistic difference between the two platforms. To overcome this drawback, we incorporate the temporal dynamics of hashtags and entities, which serve as a proxy to the change of user interests towards the underlying topics (Ciglan and Nørvåg, 2010). We employ the correlation between the times series of hashtag adoption and the entity view as the third similarity measure."
  }, {
    "heading": "3.3 Ranking Entity Prominence",
    "text": "While each similarity measure captures one evidence of the entity prominence, we need to unify all scores to obtain a global ranking function. In this work, we propose to combine the individual similarities using a linear function:\nf(e, h) = αfm(e, h)+βfc(e, h)+γft(e, h) (1)\nwhere α, β, γ are model weights and fm, fc, ft are the similarity measures based on mentions, context, and temporal information, respectively, be-\ntween the entity e and the hashtag h. We further constrain that α + β + γ = 1, so that the ranking scores of entities are normalized between 0 and 1, and that our learning algorithm is more tractable. The algorithm, which automatically learns the parameters without the need of human-labeled data, is explained in detail in Section 5."
  }, {
    "heading": "4 Similarity Measures",
    "text": "We now discuss in detail how the similarity measures between hashtags and entities are computed."
  }, {
    "heading": "4.1 Link-based Mention Similarity",
    "text": "The similarity of an entity with one individual mention in a tweet can be interpreted as the probabilistic prior in mapping the mention to the entity via the lexicon. One common way to estimate the entity prior exploits the anchor statistics from Wikipedia links, and has been proven to work well in different domains of text. We follow this approach and define LP (e|m) = |lm(e)|∑\nm′ |lm′ (e)| as the\nlink prior of the entity e given a mention m, where lm(e) is the set of links with anchor m that point to e. The mention similarity fm is measured as the aggregation of link priors of the entity e over all mentions in all tweets with the hashtag h:\nfm(e, h) = ∑ m (LP (e|m) · q(m)) (2)\nwhere q(m) is the frequency of the mentionm over all mentions of e in all tweets of h."
  }, {
    "heading": "4.1.1 Context Similarity",
    "text": "To compute fc, we first construct the contexts for hashtags and entities. The context of a hashtag is built by extracting all words from its tweets. We tokenize and parse the tweets’ part-of-speech tags (Owoputi et al., 2013), and remove words of Twitter-specific tags (e.g., @-mentions, URLs, emoticons, etc.). Hashtags are normalized using the word breaking method by Wang et al. (2011).\nThe textual context of an entity is extracted from its Wikipedia article. One subtle aspect is that the articles are not created at once, but are incrementally updated over time in accordance with changing information about entities. Texts added in the same time period of a trending hashtag contribute more to the context similarity between the entity and the hashtag. Based on this observation, we use the Wikipedia revision history – an archive of all revisions of Wikipedia articles – to calculate the\nentity context. We collect the revisions of articles during the time period T , plus one day to acknowledge possible time lags. We compute the difference between two consecutive revisions, and extract only the added text snippets. These snippets are accumulated to form the temporal context of an entity e during T , denoted by CT (e). The distribution of a word w for the entity e is estimated by a mixture between the probability of generating w from the temporal context and from the general context C(e) of the entity:\nP̂ (w|e) = λP̂ (w|MCT (e))+(1−λ)P̂ (w|MC(e))\nwhere MCT (e) and MC(e) are the language models of e based on CT (e) and C(e), respectively. The probability P̂ (w|MC(e)) can be regarded as corresponding to the background model, while P̂ (w|MCT (e)) corresponds to the foreground model in traditional language modeling settings. Here we use a simple maximum likelihood estimation to estimate these probabilities: P̂ (w|MC(e)) = tfw,c |C(e)| and P̂ (w|MCT (e)) = tfw,cT |CT (e)| , where tfw,c and tfw,cT are the term frequencies of w in the two text sources of C(e) and CT (e), respectively, and |C(e)| and |CT (e)| are the lengths of the two texts, respectively. We use the same estimation for tweets: P̂ (w|h) = tfw,D(h) |D(h)| , where D(h) is the concatenated text of all tweets of h in T . We use and normalize the Kullback-Leibler divergence to compare the distributions over all words appearing both in the Wikipedia contexts and the tweets:\nKL(e ‖ h) = ∑ w P̂ (w|e) · P̂ (w|e) P̂ (w|h)\nfc(e, h) = e −KL(e ‖ h) (3)"
  }, {
    "heading": "4.1.2 Temporal Similarity",
    "text": "The third similarity, ft, is computed using temporal signals from both sources – Twitter and Wikipedia. For the hashtags, we build the time series based on the volume of tweets adopting the hashtag h on each day in T : TSh = [n1, n2, . . . , n|T |]. Similarly for the entities, we build the time series of view counts for the entity e in T : TSe = [v1, v2, . . . , v|T |]. A time series similarity metric is then used to compute ft. Several metrics can be used, however most of them suffer from the time lag and scaling discrepancy, or incur expensive computational costs (Radinsky et al., 2011). In this work, we employ a simple yet\neffective metric that is agnostic to the scaling and time lag of time series (Yang and Leskovec, 2011). It measures the distance between two time series by finding optimal shifting and scaling parameters to match the shape of two time series:\nft(e, h) = min q,δ ‖TSh − δdq(TSe)‖ ‖TSh‖\n(4)\nwhere dq(TSe) is the time series derived from TSe by shifting q time units, and ‖·‖ is the L2 norm. It has been proven that Equation 4 has a closed-form solution for δ given fixed q, thus we can design an efficient gradient-based optimization algorithm to compute ft (Yang and Leskovec, 2011)."
  }, {
    "heading": "5 Entity Prominence Ranking",
    "text": ""
  }, {
    "heading": "5.1 Ranking Framework",
    "text": "To unify the individual similarities into one global metric (Equation 1), we need a guiding premise of what manifest the prominence of an entity to a hashtag. Such a premise can be instructed through manual assessment (Meij et al., 2012; Guo et al., 2013), but it requires human-labeled data and is biased from evaluator to evaluator. Other heuristics assume that entities close to the main topic of a text are also coherent to each other (Ratinov et al., 2011; Liu et al., 2013). Based on this, state-ofthe-art methods in traditional disambiguation estimate entity prominence by optimizing the overall coherence of the entities’ semantic relatedness. However, this coherence does not hold for topics in hashtags: Entities reported in a big topic such as the Olympics vary greatly with different subevents. They are not always coherent to each other,\nas they are largely dependent on the users’ diverse attention to each sub-event. This heterogeneity of hashtags calls for a different premise, abandoning the idea of coherence.\nInfluence Maximization (IM) We propose a new approach to find entities for a hashtag. We use an observed behavioral pattern in creating Wikipedia pages for guiding our approach to entity prominence: Wikipedia articles of entities that are prominent for a topic are quickly created or updated,1 and subsequently enriched with links to related entities. This linking process signals the dynamics of editor attention and exposure to the event (Keegan et al., 2011). We argue that the process does not, or to a much lesser degree, happen to more marginal entities or to very general entities. As illustrated in Figure 2, the entities closer to the 2014 Olympics get more updates in the revisions of their Wikipedia articles, with subsequent links pointing to articles of more distant entities. The direction of the links influences the shifting attention of users (Keegan et al., 2011) as they follow the structure of articles in Wikipedia.\nWe assume that, similar to Wikipedia, the entity prominence also influences how users are exposed and spread the hashtag on Twitter. In particular, the initial spreading of a trending hashtag involves more entities in the focus of the topic. Subsequent exposure and spreading of the hashtag then include other related entities (e.g., discussing background or providing context), driven by interests in different parts of the topic. Based on this assumption,\n1Osborne et al. (2012) suggested a time lag of 3 hours.\nwe propose to gauge the entity prominence as its potential in maximizing the information spreading within all entities present in the tweets of the hashtag. In other words, the problem of ranking the most prominent entities becomes identifying the set of entities that lead to the largest number of entities in the candidate set. This problem is known in social network research as influence maximization (Kempe et al., 2003).\nIterative Influence-Prominence Learning (IPL) IM itself is an NP-hard problem (Kempe et al., 2003). Therefore, we propose an approximation framework, which can jointly learn the influence scores of the entity and the entity prominence together. The framework (called IPL) contains several iterations, each consisting of two steps:(1) Pick up a model and use it to compute the entity influence score. (2) Based on the influence scores, update the entity prominence. In the sequel we detail our learning framework."
  }, {
    "heading": "5.2 Entity Graph",
    "text": "Influence Graph To compute the entity influence scores, we first construct the entity influence graph as follows. For each hashtag h, we construct a directed graph Gh = (Eh, Vh), where the nodes Eh ⊆ E consist of all candidate entities (cf. Section 3.1), and an edge (ei, ej) ∈ Vh indicates that there is a link from ej’s Wikipedia article to ei’s. Note that edges of the influence graph are inversed in direction to links in Wikipedia, as such a link gives an “influence endorsement” from the destination entity to the source entity.\nEntity Relatedness In this work, we assume that an entity endorses more of its influence score to highly related entities than to lower related ones. We use a popular entity relatedness measure suggested by Milne and Witten (2008):\nMW (e1, e2) = 1− log(max(|I1|,|I2|)−log(|I1∩I2|)))log(|E|)−log(min(|I1|,|I2|))\nwhere I1 and I2 are sets of entities having links to e1 and e2, respectively, and E is the set of all entities in Wikipedia. The influence transition from ei to ej is defined as the normalized value:\nbi,j = MW (ei, ej)∑\n(ei,ek)∈V MW (ei, ek) (5)\nInfluence Score Let rh be the influence score vector of entities in Gh. We can estimate rh efficiently using random walk models, similarly to the\nAlgorithm 1: Entity Influence-Prominence Learning Input : h, T,DT (h),B, k, learning rate µ, threshold Output: ω, top-k most prominent entities.\nInitialize: ω := ω(0) Calculate fm, fc, ft, fω := fω(0) using Eqs. 1, 2, 3, 4 while true do\nf̂ω := normalize fω Set sh := f̂ω, calculate rh using Eq. 6 Sort rh, get the top-k entities E(h, k) if ∑\ne∈E(h,k) L(f(e, h), r(e, h)) < then Stop\nend ω := ω − µ ∑ e∈E(h,k)∇L(f(e, h), r(e, h))\nend return ω,E(h, k)\nbaseline method suggested by Liu et al. (2014):\nrh := τBrh + (1− τ)sh (6)\nwhere B is the influence transition matrix, sh are the initial influence scores that are based on the entity prominence model (Step 1 of IPL), and τ is the damping factor."
  }, {
    "heading": "5.3 Learning Algorithm",
    "text": "Now we detail the IPL algorithm. The objective is to learn the model ω = (α, β, γ) of the global function (Equation 1). The general idea is that we find an optimal ω such that the average error with respect to the top influencing entities is minimized\nω = argmin ∑ E(h,k) L(f(e, h), r(e, h))\nwhere r(e, h) is the influence score of e and h, E(h, k) is the set of top-k entities with highest r(e, h), and L is the squared error loss function, L(x, y) = (x−y) 2\n2 . The main steps are depicted in Algorithm 1. We start with an initial guess for ω, and compute the similarities for the candidate entities. Here fm, fc, ft, and fω represent the similarity score vectors. We use matrix multiplication to calculate the similarities efficiently. In each iteration, we first normalize fω such that the entity scores sum up to 1. A random walk is performed to calculate the influence score rh. Then we update ω using a batch gradient descent method on the top-k influencer entities. To derive the gradient of the loss function L, we first remark that our random walk Equation 6 is similar to context-sensitive PageRank (Haveliwala, 2002). Using the linearity property (Fogaras et al., 2005),\nwe can express r(e, h) as the linear function of influence scores obtained by initializing with the individual similarities fm, fc, and ft instead of fω. The derivative thus can be written as:\n∇L(f(e, h), r(e, h)) = α(rm(e, h)− fm(e, h))+ β(rc(e, h)− fc(e, h)) + γ(rt(e, h)− ft(e, h))\nwhere rm(e, h), rc(e, h), rt(e, h) are the components of the three vector solutions of Equation 6, each having sh replaced by fm, fc, ft respectively.\nSince both B and f̂ω are normalized such that their column sums are equal to 1, Equation 6 is convergent (Haveliwala, 2002). Also, as discussed above, rh is a linear combination of factors that are independent of ω, hence L is a convex function, and the batch gradient descent is also guaranteed to converge. In practice, we can utilize several indexing techniques to significantly speed up the similarity and influence scores calculation."
  }, {
    "heading": "6 Experiments and Results",
    "text": ""
  }, {
    "heading": "6.1 Setup",
    "text": "Dataset There is no standard benchmark for our problem, since available datasets on microblog annotation (such as the Microposts challenge (Basave et al., 2014)) do not have global statistics, so we cannot identify the trending hashtags. Therefore, we created our own dataset. We used the Twitter API to collect from the public stream a sample of 500, 551, 041 tweets from January to April 2014. We removed hashtags that were adopted by less than 500 users, having no letters, or having characters repeated more than 4 times (e.g., ‘#oooommgg’). We identified trending hashtags by computing the daily time series of hashtag tweet counts, and removing those of which the time series’ variance score is less than 900. To identify the hashtag burst time period T , we compute the outlier fraction (Lehmann et al., 2012) for each hashtag h and\nday t: pt(h) = |nt−nb|\nmax (nb,nmin) , where nt is the num-\nber of tweets containing h, nb is the median value of nt over all points in a 2-month time window centered on t, and nmin = 10 is the threshold to filter low activity hashtags. The hashtag is skipped if its highest outlier fraction score is less than 15. Finally, we define the burst time period of a trending hashtag as the time window of size w, centered at day t0 with the highest pt0(h).\nFor the Wikipedia datasets we process the dump from 3rd May 2014, so as to cover all events in the Twitter dataset. We have developed Hedera (Tran and Nguyen, 2014), a scalable tool for processing the Wikipedia revision history dataset based on Map-Reduce paradigm. In addition, we download the Wikipedia page view dataset that stores how many times a Wikipedia article was requested on an hourly level. We process the dataset for the four months of our study and use Hedera to accumulate all view counts of redirects to the actual articles.\nSampling From the trending hashtags, we sample 30 distinct hashtags for evaluation. Since our study focuses on trending hashtags that are mapable to entities in Wikipedia, the sampling must cover a sufficient number of “popular” topics that are seen in Wikipedia, and at the same time cover rare topics in the long tail. To do this, we apply several heuristics in the sampling. First, we only consider hashtags where the lexicon-based linking (Section 3.1) results in at least 20 different entities. Second, we randomly choose hashtags to cover different types of topics (long-running events, breaking events, endogenous hashtags). Instead of inspecting all hashtags in our corpus, we follow Lehmann et al. (2012) and calculate the fraction of tweets published before, during and after the peak. The hashtags are then clustered in this 3-dimensional vector space. Each cluster suggests a group of hashtags with a distinct semantics (Lehmann et al., 2012). We then pick up hashtags randomly from each cluster, resulting in 200 hashtags in total. From this rough sample, three inspectors carefully checked the tweets and chose 30 hashtags where the meanings and hashtag types were certain to the knowledge of the inspectors.\nParameter Settings We initialize the similarity weights to 13 , the damping factor to τ = 0.85, and the weight for the language model to λ = 0.9. The learning rate µ is empirically fixed to µ = 0.003.\nBaseline We compare IPL with other entity annotation methods. Our first group of baselines includes entity linking systems in domains of general text, Wikiminer (Milne and Witten, 2008), and short text, Tagme (Ferragina and Scaiella, 2012). For each method, we use the default parameter settings, apply them for the individual tweets, and take the average of the annotation confidence scores as the prominence ranking function. The second group of baselines includes systems specifically designed for microblogs. For the contentbased methods, we compare against Meij et al. (2012), which uses a supervised method to rank entities with respect to tweets. We train the model using the same training data as in the original paper. For the graph-based method, we compare against KAURI (Shen et al., 2013), a method which uses user interest propagation to optimize the entity linking scores. To tune the parameters, we pick up four hashtags from different clusters, randomly sample 50 tweets for each, and manually annotate the tweets. For all baselines, we obtained the implementation from the authors. The exception is Meij method, where we implemented ourselves, but we clarified with the authors via emails on several settings. In addition, we also compare three variants of our method, using only local functions for entity ranking (referred to as M , C, and T for mention, context, and time, respectively).\nEvaluation In total, there are 6, 965 entityhashtag pairs returned by all systems. We employ five volunteers to evaluate the pairs in the range from 0 to 2, where 0 means the entity is noisy or obviously unrelated, 2 means the entity is strongly tied to the topic of the hashtag, and 1 means that although the entity and hashtag might share some common contexts, they are not involved in a direct relationship (for instance, the entity is a too general concept such as Ice hockey, as in the case illustrated in Figure 2). The annotators were advised to use search engines, the Twitter search box or Wikipedia archives whenever applicable to get more background on the stories. Inter-annotator agreement under Fleiss score is 0.625."
  }, {
    "heading": "6.2 Results and Discussion",
    "text": "Table 2 shows the performance comparison of the methods using the standard metrics for a ranking system (precision at 5 and 15 and MAP at 15). In general, all baselines perform worse than reported in the literature, confirming the higher complexity of the hashtag annotation task as compared to traditional tasks. Interestingly enough, using our local similarities already produces better results than Tagme and Wikiminer. The local model fm significantly outperforms both the baselines in all metrics. Combining the similarities improves the performance even more significantly.2 Compared to the baselines, IPL improves the performance by 17-28%. The time similarity achieves the highest result compared to other content-based mention and context similarities. This supports our assumption that lexical matching is not always the best strategy to link entities in tweets. The time seriesbased metric incurs lower cost than others, yet it produces a considerably good performance. Context similarity based on Wikipedia edits does not yield much improvement. This can be explained in two ways. First, information in Wikipedia is largely biased to popular entities, it fails to capture many entities in the long tail. Second, language models are dependent on direct word representations, which are different between Twitter and Wikipedia. This is another advantage of noncontent measures such as ft.\nFor the second group of baselines (Kauri and Meij), we also observe the reduction in precision, especially for Kauri. This is because the method relies on the coherence of user interests within a group of tweets to be able to perform well, which does not hold in the context of hashtags. One astonishing result is that Meij performs better than IPL in terms of P@15. However, it performs worse in terms of MAP and P@5, suggesting that most of the correctly identified entities are ranked lower in the list. This is reasonable, as Meij attempts to optimize (with human supervision effort) the se-\n2All significance tests are done against both Tagme and Wikiminer, with a p-value < 0.01.\nmantic agreement between entities and information found in the tweets, instead of ranking their prominence as in our work. To investigate this case further, we re-examined the hashtags and divided them by their semantics, as to whether the hashtags are spurious trends of memes inside social media (endogenous, e.g., “#stopasian2014”), or whether they reflect external events (exogenous, e.g., “#mh370”). The performance of the methods in terms of MAP scores is shown in Figure 3. It can be clearly seen that entity linking methods perform well in the endogenous group, but then deteriorate in the exogenous group. The explanation is that for endogenous hashtags, the topical consonance between tweets is very low, thus most of the assessments become just verifying general concepts (such as locations) In this case, topical annotation is trumped by conceptual annotation. However, whenever the hashtag evolves into a meaningful topic, a deeper annotation method will produce a significant improvement, as seen in Figure 3.\nFinally, we study the impact of the burst time period on the annotation quality. For this, we expand the window size w (cf. Section 6.1) and examine how different methods perform. The result is depicted in Figure 4. It is obvious that within the win-\ndow of 2 months (where the hashtag time series is constructed and a trending time is identified), our method is stable and always outperforms the baselines by a large margin. Even when the trending hashtag has been saturated, hence introduced more noise, our method is still able to identify the prominent entities with high quality."
  }, {
    "heading": "7 Conclusion and Future Work",
    "text": "In this work, we address the new problem of topically annotating a trending hashtag using Wikipedia entities, which has many important applications in social media analysis. We study Wikipedia temporal resources and find that using efficient time series-based measures can complement content-based methods well in the domain of Twitter. We propose use similarity measures to model both the local mention-based, as well as the global context- and time-based prominence of entities. We propose a novel strategy of topical annotation of texts using and influence maximization approach and design an efficient learning algorithm to automatically unify the similarities without the need of human involvement. The experiments show that our method outperforms significantly the established baselines.\nAs future work, we aim to improve the efficiency of our entire workflow, such that the annotation can become an end-to-end service. We also aim to improve the context similarity between entities and the topic, for example by using a deeper distributional semantics-based method, instead of language models as in our current work. In addition, we plan to extend the annotation framework to other types of trending topics, by including the type of out-of-knowledge entities. Finally, we are investigating how to apply more advanced influence maximization methods. We believe that influence maximization has a great potential in NLP research, beyond the scope of annotation for microblogging topics."
  }, {
    "heading": "Acknowledgments",
    "text": "This work was funded by the European Commission in the FP7 project ForgetIT (600826) and the ERC advanced grant ALEXANDRIA (339233), and by the German Federal Ministry of Education and Research for the project “Gute Arbeit” (01UG1249C). We thank the reviewers for the fruitful discussion and Claudia Niederee from L3S for suggestions on improving Section 5."
  }],
  "year": 2017,
  "references": [{
    "title": "Towards deep semantic analysis of hashtags",
    "authors": ["Bansal et al.2015] P. Bansal", "R. Bansal", "V. Varma"],
    "venue": "In ECIR,",
    "year": 2015
  }, {
    "title": "Making sense of microposts (#microposts2014) named entity extraction & linking challenge",
    "authors": ["G. Rizzo", "A. Varga", "M. Rowe", "M. Stankovic", "A. Dadzie"],
    "venue": "In 4th Workshop on Making Sense of Microp-",
    "year": 2014
  }, {
    "title": "Analysis and enhancement of wikification for microblogs with context expansion",
    "authors": ["Cassidy et al.2012] T. Cassidy", "H. Ji", "L.-A. Ratinov", "A. Zubiaga", "H. Huang"],
    "venue": "In COLING,",
    "year": 2012
  }, {
    "title": "WikiPop: personalized event detection system based on Wikipedia page view statistics",
    "authors": ["Ciglan", "Nørvåg2010] M. Ciglan", "K. Nørvåg"],
    "venue": "In CIKM,",
    "year": 2010
  }, {
    "title": "Entity linking on microblogs with spatial and temporal signals",
    "authors": ["Fang", "Chang2014] Y. Fang", "M.-W. Chang"],
    "venue": "Trans. of the Assoc. for Comp. Linguistics,",
    "year": 2014
  }, {
    "title": "Fast and accurate annotation of short texts with Wikipedia pages",
    "authors": ["Ferragina", "Scaiella2012] P. Ferragina", "U. Scaiella"],
    "venue": "IEEE Softw.,",
    "year": 2012
  }, {
    "title": "Towards scaling fully personalized PageRank: Algorithms, lower bounds, and experiments",
    "authors": ["Fogaras et al.2005] D. Fogaras", "B. Rácz", "K. Csalogány", "T. Sarlós"],
    "venue": "Internet Mathematics,",
    "year": 2005
  }, {
    "title": "To link or not to link? A study on end-to-end tweet entity linking",
    "authors": ["S. Guo", "M.-W. Chang", "E. Kıcıman"],
    "venue": "In NAACL-HLT,",
    "year": 2013
  }, {
    "title": "Hot off the wiki: Dynamics, practices, and structures in wikipedia’s coverage of the tohoku catastrophes",
    "authors": ["Keegan et al.2011] Brian Keegan", "Darren Gergle", "Noshir Contractor"],
    "venue": "In WikiSym,",
    "year": 2011
  }, {
    "title": "Maximizing the spread of influence through a social network",
    "authors": ["Kempe et al.2003] D. Kempe", "J. Kleinberg", "É. Tardos"],
    "venue": "In KDD,",
    "year": 2003
  }, {
    "title": "On burstiness-aware search for document sequences",
    "authors": ["Lappas et al.2009] T. Lappas", "B. Arai", "M. Platakis", "D. Kotsakos", "D. Gunopulos"],
    "venue": "In KDD,",
    "year": 2009
  }, {
    "title": "Dynamical classes of collective attention in Twitter",
    "authors": ["Lehmann et al.2012] J. Lehmann", "B. Gonçalves", "J.J. Ramasco", "C. Cattuto"],
    "venue": "In WWW,",
    "year": 2012
  }, {
    "title": "Entity linking for tweets",
    "authors": ["X. Liu", "Y. Li", "H. Wu", "M. Zhou", "F. Wei", "Y. Lu"],
    "venue": "In ACL,",
    "year": 2013
  }, {
    "title": "Influence maximization over large-scale social networks: A bounded linear approach",
    "authors": ["Q. Liu", "B. Xiang", "E. Chen", "H. Xiong", "F. Tang", "J.X. Yu"],
    "venue": "In CIKM,",
    "year": 2014
  }, {
    "title": "Adding semantics to microblog posts",
    "authors": ["Meij et al.2012] E. Meij", "W. Weerkamp", "M. de Rijke"],
    "venue": "In WSDM,",
    "year": 2012
  }, {
    "title": "Learning to link with Wikipedia",
    "authors": ["Milne", "Witten2008] D. Milne", "I.H. Witten"],
    "venue": "In CIKM,",
    "year": 2008
  }, {
    "title": "Hip and trendy: Characterizing emerging trends on Twitter",
    "authors": ["Naaman et al.2011] M. Naaman", "H. Becker", "L. Gravano"],
    "year": 2011
  }, {
    "title": "Bieber no more: First story detection using Twitter and Wikipedia",
    "authors": ["Osborne et al.2012] M. Osborne", "S. Petrovic", "R. McCreadie", "C. Macdonald", "I. Ounis"],
    "venue": "In Workshop on Time-aware Information Access",
    "year": 2012
  }, {
    "title": "Improved part-of-speech tagging for online conversational text with word clusters",
    "authors": ["Owoputi et al.2013] O. Owoputi", "B. O’Connor", "C. Dyer", "K. Gimpel", "N. Schneider", "N.A. Smith"],
    "venue": "In NAACL-HLT,",
    "year": 2013
  }, {
    "title": "A word at a time: Computing word relatedness using temporal semantic analysis",
    "authors": ["Radinsky et al.2011] K. Radinsky", "E. Agichtein", "E. Gabrilovich", "S. Markovitch"],
    "venue": "In WWW,",
    "year": 2011
  }, {
    "title": "Local and Global Algorithms for Disambiguation to Wikipedia",
    "authors": ["Ratinov et al.2011] L. Ratinov", "D. Roth", "D. Downey", "M. Anderson"],
    "venue": "In ACL,",
    "year": 2011
  }, {
    "title": "Named entity recognition in tweets: an experimental study",
    "authors": ["Ritter et al.2011] Alan Ritter", "Sam Clark", "Oren Etzioni"],
    "venue": "In EMNLP,",
    "year": 2011
  }, {
    "title": "Linking named entities in tweets with knowledge base via user interest modeling",
    "authors": ["Shen et al.2013] W. Shen", "J. Wang", "P. Luo", "M. Wang"],
    "venue": "In WSDM,",
    "year": 2013
  }, {
    "title": "Twitter anticipates bursts of requests for Wikipedia articles",
    "authors": ["Tolomei et al.2013] G. Tolomei", "S. Orlando", "D. Ceccarelli", "C. Lucchese"],
    "venue": "In Workshop on Data-driven User Behavioral Modelling and Mining from Social Media,",
    "year": 2013
  }, {
    "title": "Hedera: Scalable indexing, exploring entities in Wikipedia revision history",
    "authors": ["Tran", "Nguyen2014] T. Tran", "T. Ngoc Nguyen"],
    "venue": "In ISWC,",
    "year": 2014
  }, {
    "title": "Analysing the duration of trending topics in Twitter using Wikipedia",
    "authors": ["T. Tran", "M. Georgescu", "X. Zhu", "N. Kanhabua"],
    "venue": "In Conf. on Web Science,",
    "year": 2014
  }, {
    "title": "What’s in a hashtag?: Content based prediction of the spread of ideas in microblogging communities",
    "authors": ["Tsur", "Rappoport2012] O. Tsur", "A. Rappoport"],
    "venue": "In WSDM,",
    "year": 2012
  }, {
    "title": "Web scale NLP: a case study on URL word breaking",
    "authors": ["K. Wang", "C. Thrasher", "B.-J.P. Hsu"],
    "venue": "In WWW,",
    "year": 2011
  }],
  "id": "SP:4610eaf4f937f269956a8de9a74bf1ae24708ff0",
  "authors": [{
    "name": "Tuan Tran",
    "affiliations": []
  }, {
    "name": "Nam Khanh Tran",
    "affiliations": []
  }, {
    "name": "Asmelash Teka Hadgu",
    "affiliations": []
  }, {
    "name": "Robert Jäschke",
    "affiliations": []
  }],
  "abstractText": "Trending topics in microblogs such as Twitter are valuable resources to understand social aspects of real-world events. To enable deep analyses of such trends, semantic annotation is an effective approach; yet the problem of annotating microblog trending topics is largely unexplored by the research community. In this work, we tackle the problem of mapping trending Twitter topics to entities from Wikipedia. We propose a novel model that complements traditional text-based approaches by rewarding entities that exhibit a high temporal correlation with topics during their burst time period. By exploiting temporal information from the Wikipedia edit history and page view logs, we have improved the annotation performance by 17-28%, as compared to the competitive baselines.",
  "title": "Semantic Annotation for Microblog Topics Using Wikipedia Temporal Information"
}