{
  "sections": [{
    "text": "In this paper we argue that crime drama exemplified in television programs such as CSI: Crime Scene Investigation is an ideal testbed for approximating real-world natural language understanding and the complex inferences associated with it. We propose to treat crime drama as a new inference task, capitalizing on the fact that each episode poses the same basic question (i.e., who committed the crime) and naturally provides the answer when the perpetrator is revealed. We develop a new dataset1 based on CSI episodes, formalize perpetrator identification as a sequence labeling problem, and develop an LSTM-based model which learns from multi-modal data. Experimental results show that an incremental inference strategy is key to making accurate guesses as well as learning from representations fusing textual, visual, and acoustic input."
  }, {
    "heading": "1 Introduction",
    "text": "The success of neural networks in a variety of applications (Sutskever et al., 2014; Vinyals et al., 2015) and the creation of large-scale datasets have played a critical role in advancing machine understanding of natural language on its own or together with other modalities. The problem has assumed several guises in the literature such as reading comprehension (Richardson et al., 2013; Rajpurkar et al., 2016), recognizing textual entailment (Bowman et al., 2015; Rocktäschel et al., 2016), and notably question answering based on text (Hermann et al.,\n1Our dataset is available at https://github.com/ EdinburghNLP/csi-corpus.\n2015; Weston et al., 2015), images (Antol et al., 2015), or video (Tapaswi et al., 2016).\nIn order to make the problem tractable and amenable to computational modeling, existing approaches study isolated aspects of natural language understanding. For example, it is assumed that understanding is an offline process, models are expected to digest large amounts of data before being able to answer a question, or make inferences. They are typically exposed to non-conversational texts or still images when focusing on the visual modality, ignoring the fact that understanding is situated in time and space and involves interactions between speakers. In this work we relax some of these simplifications by advocating a new task for natural language understanding which is multi-modal, exhibits spoken conversation, and is incremental, i.e., unfolds sequentially in time.\nSpecifically, we argue that crime drama exemplified in television programs such as CSI: Crime Scene Investigation can be used to approximate real-world natural language understanding and the complex inferences associated with it. CSI revolves around a team of forensic investigators trained to solve criminal cases by scouring the crime scene, collecting irrefutable evidence, and finding the missing pieces that solve the mystery. Each episode poses the same “whodunnit” question and naturally provides the answer when the perpetrator is revealed. Speculation about the identity of the perpetrator is an integral part of watching CSI and an incremental process: viewers revise their hypotheses based on new evidence gathered around the suspect/s or on new inferences which they make as the episode evolves.\nWe formalize the task of identifying the perpetrator in a crime series as a sequence labeling problem.\n1\nTransactions of the Association for Computational Linguistics, vol. 6, pp. 1–15, 2018. Action Editor: Marco Baroni. Submission batch: 8/2017; Revision batch: 10/2017; Published 1/2018.\nc©2018 Association for Computational Linguistics. Distributed under a CC-BY 4.0 license.\nLike humans watching an episode, we assume the model is presented with a sequence of inputs comprising information from different modalities such as text, video, or audio (see Section 4 for details). The model predicts for each input whether the perpetrator is mentioned or not. Our formulation generalizes over episodes and crime series. It is not specific to the identity and number of persons committing the crime as well as the type of police drama under consideration. Advantageously, it is incremental, we can track model predictions from the beginning of the episode and examine its behavior, e.g., how often it changes its mind, whether it is consistent in its predictions, and when the perpetrator is identified.\nWe develop a new dataset based on 39 CSI episodes which contains goldstandard perpetrator mentions as well as viewers’ guesses about the perpetrator while each episode unfolds. The sequential nature of the inference task lends itself naturally to recurrent network modeling. We adopt a generic architecture which combines a one-directional long-short term memory network (Hochreiter and Schmidhuber, 1997) with a softmax output layer over binary labels indicating whether the perpetrator is mentioned. Based on this architecture, we investigate the following questions:\n1. What type of knowledge is necessary for performing the perpetrator inference task? Is the textual modality sufficient or do other modalities (i.e., visual and auditory input) also play a role?\n2. What type of inference strategy is appropriate? In other words, does access to past information matter for making accurate inferences?\n3. To what extent does model behavior simulate humans? Does performance improve over time and how much of an episode does the model need to process in order to make accurate guesses?\nExperimental results on our new dataset reveal that multi-modal representations are essential for the task at hand boding well with real-world natural language understanding. We also show that an incremental inference strategy is key to guessing the perpetrator accurately although the model tends to be\nless consistent compared to humans. In the remainder, we first discuss related work (Section 2), then present our dataset (Section 3) and formalize the modeling problem (Section 4). We describe our experiments in Section 5."
  }, {
    "heading": "2 Related Work",
    "text": "Our research has connections to several lines of work in natural language processing, computer vision, and more generally multi-modal learning. We review related literature in these areas below.\nLanguage Grounding Recent years have seen increased interest in the problem of grounding language in the physical world. Various semantic space models have been proposed which learn the meaning of words based on linguistic and visual or acoustic input (Bruni et al., 2014; Silberer et al., 2016; Lazaridou et al., 2015; Kiela and Bottou, 2014). A variety of cross-modal methods which fuse techniques from image and text processing have also been applied to the tasks of generating image descriptions and retrieving images given a natural language query (Vinyals et al., 2015; Xu et al., 2015; Karpathy and Fei-Fei, 2015). Another strand of research focuses on how to explicitly encode the underlying semantics of images making use of structural representations (Ortiz et al., 2015; Elliott and Keller, 2013; Yatskar et al., 2016; Johnson et al., 2015). Our work shares the common goal of grounding language in additional modalities. Our model is, however, not static, it learns representations which evolve over time.\nVideo Understanding Work on video understanding has assumed several guises such as generating descriptions for video clips (Venugopalan et al., 2015a; Venugopalan et al., 2015b), retrieving video clips with natural language queries (Lin et al., 2014), learning actions in video (Bojanowski et al., 2013), and tracking characters (Sivic et al., 2009). Movies have also been aligned to screenplays (Cour et al., 2008), plot synopses (Tapaswi et al., 2015), and books (Zhu et al., 2015) with the aim of improving scene prediction and semantic browsing. Other work uses low-level features (e.g., based on face detection) to establish social networks of main characters in order to summarize movies or perform genre\nclassification (Rasheed et al., 2005; Sang and Xu, 2010; Dimitrova et al., 2000). Although visual features are used mostly in isolation, in some cases they are combined with audio in order to perform video segmentation (Boreczky and Wilcox, 1998) or semantic movie indexing (Naphide and Huang, 2001).\nA few datasets have been released recently which include movies and textual data. MovieQA (Tapaswi et al., 2016) is a large-scale dataset which contains 408 movies and 14,944 questions, each accompanied with five candidate answers, one of which is correct. For some movies, the dataset also contains subtitles, video clips, scripts, plots, and text from the Described Video Service (DVS), a narration service for the visually impaired. MovieDescription (Rohrbach et al., 2017) is a related dataset which contains sentences aligned to video clips from 200 movies. Scriptbase (Gorinski and Lapata, 2015) is another movie database which consists of movie screenplays (without video) and has been used to generate script summaries.\nIn contrast to the story comprehension tasks envisaged in MovieQA and MovieDescription, we focus on a single cinematic genre (i.e., crime series), and have access to entire episodes (and their corresponding screenplays) as opposed to video-clips or DVSs for some of the data. Rather than answering multiple factoid questions, we aim to solve a single problem, albeit one that is inherently challenging to both humans and machines.\nQuestion Answering A variety of question answering tasks (and datasets) have risen in popularity in recent years. Examples include reading compre-\nhension, i.e., reading text and answering questions about it (Richardson et al., 2013; Rajpurkar et al., 2016), open-domain question answering, i.e., finding the answer to a question from a large collection of documents (Voorhees and Tice, 2000; Yang et al., 2015), and cloze question completion, i.e., predicting a blanked-out word of a sentence (Hill et al., 2015; Hermann et al., 2015). Visual question answering (VQA; Antol et al. (2015)) is a another related task where the aim is to provide a natural language answer to a question about an image.\nOur inference task can be viewed as a form of question answering over multi-modal data, focusing on one type of question. Compared to previous work on machine reading or visual question answering, we are interested in the temporal characteristics of the inference process, and study how understanding evolves incrementally with the contribution of various modalities (text, audio, video). Importantly, our formulation of the inference task as a sequence labeling problem departs from conventional question answering allowing us to study how humans and models alike make decisions over time."
  }, {
    "heading": "3 The CSI Dataset",
    "text": "In this work, we make use of episodes of the U.S. TV show “Crime Scene Investigation Las Vegas” (henceforth CSI), one of the most successful crime series ever made. Fifteen seasons with a total of 337 episodes were produced over the course of fifteen years. CSI is a procedural crime series, it follows a team of investigators employed by the Las Vegas Police Department as they collect and evaluate ev-\nidence to solve murders, combining forensic police work with the investigation of suspects.\nWe paired official CSI videos (from seasons 1–5) with screenplays which we downloaded from a website hosting TV show transcripts.2 Our dataset comprises 39 CSI episodes, each approximately 43 minutes long. Episodes follow a regular plot, they begin with the display of a crime (typically without revealing the perpetrator) or a crime scene. A team of five recurring police investigators attempt to reconstruct the crime and find the perpetrator. During the investigation, multiple (innocent) suspects emerge, while the crime is often committed by a single person, who is eventually identified and convicted. Some CSI episodes may feature two or more unrelated cases. At the beginning of the episode the CSI team is split and each investigator is assigned a single case. The episode then alternates between scenes covering each case, and the stories typically do not overlap. Figure 1 displays a small excerpt from a CSI screenplay. Readers unfamiliar with script writing conventions should note that scripts typically consist of scenes, which have headings indicating where the scene is shot (e.g., inside someone’s house). Character cues preface the lines the actors speak (see boldface in Figure 1), and scene descriptions explain what the camera sees (see second and fifth panel in Figure 1).\nScreenplays were further synchronized with the 2http://transcripts.foreverdreaming.org/\nvideo using closed captions which are time-stamped and provided in the form of subtitles as part of the video data. The alignment between screenplay and closed captions is non-trivial, since the latter only contain dialogue, omitting speaker information or scene descriptions. We first used dynamic time warping (DTW; Myers and Rabiner (1981)) to approximately align closed captions with the dialogue in the scripts. And then heuristically time-stamped remaining elements of the screenplay (e.g., scene descriptions), allocating them to time spans between spoken utterances. Table 1 shows some descriptive statistics on our dataset, featuring the number of cases per episode, its length (in terms of number of sentences), the type of crime, among other information.\nThe data was further annotated, with two goals in mind. Firstly, in order to capture the characteristics of the human inference process, we recorded how participants incrementally update their beliefs about the perpetrator. Secondly, we collected goldstandard labels indicating whether the perpetrator is mentioned. Specifically, while a participant watches an episode, we record their guesses about who the perpetrator is (Section 3.1). Once the episode is finished and the perpetrator is revealed, the same participant annotates entities in the screenplay referring to the true perpetrator (Section 3.2)."
  }, {
    "heading": "3.1 Eliciting Behavioral Data",
    "text": "All annotations were collected through a webinterface. We recruited three annotators, all postgraduate students and proficient in English, none of them regular CSI viewers. We obtained annotations for 39 episodes (comprising 59 cases).\nA snapshot of the annotation interface is presented in Figure 2. The top of the interface provides a short description of the episode, i.e., in the form of a one-sentence summary (carefully designed to not give away any clues about the perpetrator). Summaries were adapted from the CSI season summaries available in Wikipedia.3 The annotator watches the episode (i.e., the video without closed captions) as a sequence of three minute intervals. Every three minutes, the video halts, and the annotator is pre-\n3See e.g., https://en.wikipedia.org/wiki/ CSI:_Crime_Scene_Investigation_(season_1).\nsented with the screenplay corresponding to the part of the episode they have just watched. While reading through the screenplay, they must indicate for every sentence whether they believe the perpetrator is mentioned. This way, we are able to monitor how humans create and discard hypotheses about perpetrators incrementally. As mentioned earlier, some episodes may feature more than one case. Annotators signal for each sentence, which case it belongs to or whether it is irrelevant (see the radio buttons in Figure 2). In order to obtain a more fine-grained picture of the human guesses, annotators are additionally asked to press a large red button (below the video screen) as soon as they “think they know who the perpetrator is”, i.e., at any time while they are\nwatching the video. They are allowed to press the button multiple times throughout the episode in case they change their mind.\nEven though the annotation task just described reflects individual rather than gold-standard behavior, we report inter-annotator agreement (IAA) as a means of estimating variance amongst participants. We computed IAA using Cohen’s (1960) Kappa based on three episodes annotated by two participants. Overall agreement on this task (second column in Figure 2) is 0.74. We also measured percent agreement on the minority class (i.e., sentences tagged as “perpetrator mentioned”) and found it to be reasonably good at 0.62, indicating that despite individual differences, the process of guessing the perpetrator is broadly comparable across participants. Finally, annotators had no trouble distinguishing which utterances refer to which case (when the episode revolves around several), achieving an IAA of κ = 0.96."
  }, {
    "heading": "3.2 Gold Standard Mention Annotation",
    "text": "After watching the entire episode, the annotator reads through the screenplay for a second time, and tags entity mentions, now knowing the perpetrator. Each word in the script has three radio buttons attached to it, and the annotator selects one only if a word refers to a perpetrator, a suspect, or a character who falls into neither of these classes (e.g., a police investigator or a victim). For the majority of words, no button will be selected. A snapshot of our interface for this second layer of annotations is shown in Figure 3. To ensure consistency, annotators were given detailed guidelines about what constitutes an entity. Examples include proper names and their titles (e.g., Mr Collins, Sgt. O’ Reilly),\npronouns (e.g., he, we), and other referring expressions including nominal mentions (e.g., let’s arrest the guy with the black hat).\nInter-annotator agreement based on three episodes and two annotators was κ = 0.90 on the perpetrator class and κ = 0.89 on other entity annotations (grouping together suspects with other entities). Percent agreement was 0.824 for perpetrators and 0.823 for other entities. The high agreement indicates that the task is well-defined and the elicited annotations reliable. After the second pass, various entities in the script are disambiguated in terms of whether they refer to the perpetrator or other individuals.\nNote that in this work we do not use the tokenlevel gold standard annotations directly. Our model is trained on sentence-level annotations which we obtain from token-level annotations, under the assumption that a sentence mentions the perpetrator if it contains a token that does."
  }, {
    "heading": "4 Model Description",
    "text": "We formalize the problem of identifying the perpetrator in a crime series episode as a sequence labeling task. Like humans watching an episode, our model is presented with a sequence of (possibly multi-modal) inputs, each corresponding to a sentence in the script, and assigns a label l indicating whether the perpetrator is mentioned in the sentence (l = 1) or not (l = 0). The model is fully incremental, each labeling decision is based solely on information derived from previously seen inputs.\nWe could have formalized our inference task as a multi-label classification problem where labels correspond to characters in the script. Although perhaps more intuitive, the multi-class framework results in an output label space different for each episode which renders comparison of model performance across episodes problematic. In contrast, our formulation has the advantage of being directly applicable to any episode or indeed any crime series.\nA sketch of our inference task is shown in Figure 4. The core of our model (see Figure 5) is a one-directional long-short term memory network (LSTM; Hochreiter and Schmidhuber (1997); Zaremba et al. (2014)). LSTM cells are a variant of recurrent neural networks with a more complex\ncomputational unit which have emerged as a popular architecture due to their representational power and effectiveness at capturing long-term dependencies. LSTMs provide ways to selectively store and forget aspects of previously seen inputs, and as a consequence can memorize information over longer time periods. Through input, output, and forget gates, they can flexibly regulate the extent to which inputs are stored, used, and forgotten.\nThe LSTM processes a sequence of (possibly multi-modal) inputs s = {xh1 , xh2 , ..., xhN}. It utilizes a memory slot ct and a hidden state ht which are incrementally updated at each time step t. Given input xt, the previous latent state ht−1 and previous memory state ct−1, the latent state ht for time t and the\nupdated memory state ct, are computed as follows:\n \nit ft ot ĉt\n  =   σ σ σ\ntanh\n W [ ht−1 xt ]\nct = ft ct−1 + it ĉt ht = ot tanh(ct).\nThe weight matrix W is estimated during inference, and i, o, and f are memory gates.\nAs mentioned earlier, the input to our model consists of a sequence of sentences, either spoken utterances or scene descriptions (we do not use speaker information). We further augment textual input with multi-modal information obtained from the alignment of screenplays to video (see Section 3).\nTextual modality Words in each sentence are mapped to 50-dimensional GloVe embeddings, pretrained on Wikipedia and Gigaword (Pennington et al., 2014). Word embeddings are subsequently concatenated and padded to the maximum sentence length observed in our data set in order to obtain fixed-length input vectors. The resulting vector is passed through a convolutional layer with maxpooling to obtain a sentence-level representation xs. Word embeddings are fine-tuned during training.\nVisual modality We obtain the video corresponding to the time span covered by each sentence and sample one frame per sentence from the center of the associated period.4 We then map each frame to a 1,536-dimensional visual feature vector xv using the final hidden layer of a pre-trained convolutional network which was optimized for object classification (inception-v4; Szegedy et al. (2016)).\nAcoustic modality For each sentence, we extract the audio track from the video which includes all sounds and background music but no spoken dialog. We then obtain Mel-frequency cepstral coefficient (MFCC) features from the continuous signal. MFCC features were originally developed in the context of speech recognition (Davis and Mermelstein, 1990; Sahidullah and Saha, 2012), but\n4We also experimented with multiple frames per sentence but did not observe any improvement in performance.\nhave also been shown to work well for more general sound classification (Chachada and Kuo, 2014). We extract a 13-dimensional MFCC feature vector for every five milliseconds in the video. For each input sentence, we sample five MFCC feature vectors from its associated time interval, and concatenate them in chronological order into the acoustic input xa.5\nModality Fusion Our model learns to fuse multimodal input as part of its overall architecture. We use a general method to obtain any combination of input modalities (i.e., not necessarily all three). Single modality inputs are concatenated into an m-dimensional vector (where m is the sum of dimensionalities of all the input modalities). We then multiply this vector with a weight matrix W h of dimension m× n, add an m-dimensional bias bh, and pass the result through a rectified linear unit (ReLU):\nxh = ReLU([xs;xv;xa]W h + bh)\nThe resulting multi-modal representation xh is of dimension n and passed to the LSTM (see Figure 5)."
  }, {
    "heading": "5 Evaluation",
    "text": "In our experiments we investigate what type of knowledge and strategy are necessary for identifying the perpetrator in a CSI episode. In order to shed light on the former question we compare variants of our model with access to information from different modalities. We examine different inference strategies by comparing the LSTM to three baselines. The first one lacks the ability to flexibly fuse multi-modal information (a CRF), while the second one does not have a notion of history, classifying inputs independently (a multilayer perceptron). Our third baseline is a rule-base system that neither uses multi-modal inputs nor has a notion of history. We also compare the LSTM to humans watching CSI. Before we report our results, we describe our setup and comparison models in more detail."
  }, {
    "heading": "5.1 Experimental Settings",
    "text": "Our CSI data consists of 39 episodes giving rise to 59 cases (see Table 1). The model was trained on\n5Preliminary experiments showed that concatenation outperforms averaging or relying on a single feature vector.\n53 cases using cross-validation (five splits with 47/6 training/test cases). The remaining 6 cases were used as truly held-out test data for final evaluation.\nWe trained our model using ADAM with stochastic gradient-descent and mini-batches of six episodes. Weights were initialized randomly, except for word embeddings which were initialized with pre-trained 50-dimensional GloVe vectors (Pennington et al., 2014), and fine-tuned during training. We trained our networks for 100 epochs and report the best result obtained during training. All results are averages of five runs of the network. Parameters were optimized using two cross-validation splits.\nThe sentence convolution layer has three filters of sizes 3, 4, 5 each of which after convolution returns 75-dimensional output. The final sentence representation xs is obtained by concatenating the output of the three filters and is of dimension 225. We set the size of the hidden representation of merged crossmodal inputs xh to 300. The LSTM has one layer with 128 nodes. We set the learning rate to 0.001 and apply dropout with probability of 0.5.\nWe compared model output against the gold standard of perpetrator mentions which we collected as part of our annotation effort (second pass)."
  }, {
    "heading": "5.2 Model Comparison",
    "text": "CRF Conditional Random Fields (Lafferty et al., 2001) are probabilistic graphical models for sequence labeling. The comparison allows us to examine whether the LSTM’s use of long-term memory and (non-linear) feature integration is beneficial for sequence prediction. We experimented with a variety of features for the CRF, and obtained best results when the input sentence is represented by concatenated word embeddings.\nMLP We also compared the LSTM against a multi-layer perceptron with two hidden layers, and a softmax output layer. We replaced the LSTM in our overall network structure with the MLP, keeping the methodology for sentence convolution and modality fusion and all associated parameters fixed to the values described in Section 5.1. The hidden layers of the MLP have ReLU activations and a layer-size of 128, as in the LSTM. We set the learning rate to 0.0001. The MLP makes independent predictions for each element in the sequence. This comparison\nsheds light on the importance of sequential information for the perpetrator identification task. All results are best checkpoints over 100 training epochs, averaged over five runs.\nPRO Aside from the supervised models described so far, we developed a simple rule-based system which does not require access to labeled data. The system defaults to the perpetrator class for any sentence containing a personal (e.g., you), possessive (e.g., mine) or reflexive pronoun (e.g., ourselves). In other words, it assumes that every pronoun refers to the perpetrator. Pronoun mentions were identified using string-matching and a precompiled list of 31 pronouns. This system cannot incorporate any acoustic or visual data.\nHuman Upper Bound Finally, we compared model performance against humans. In our annotation task (Section 3.1), participants annotate sentences incrementally, while watching an episode for the first time. The annotations express their belief as to whether the perpetrator is mentioned. We evaluate these first-pass guesses against the gold standard (obtained in the second-pass annotation)."
  }, {
    "heading": "5.3 Which Model Is the Best Detective?",
    "text": "We report precision, recall and f1 on the minority class, focusing on how accurately the models identify perpetrator mentions. Table 2 summarizes our results, averaged across five cross-validation splits (left) and on the truly held-out test episodes (right).\nOverall, we observe that humans outperform all comparison models. In particular, human precision is superior, whereas recall is comparable, with the exception of PRO which has high recall (at the expense of precision) since it assumes that all pronouns refer to perpetrators. We analyze the differences between model and human behavior in more detail in Section 5.5. With regard to the LSTM, both visual and acoustic modalities bring improvements over the textual modality, however, their contribution appears to be complementary. We also experimented with acoustic and visual features on their own, but without high-level textual information, the LSTM converges towards predicting the majority class only. Results on the held-out test set reveal that our model generalizes well to unseen episodes, despite being trained on a relatively small data sample compared to standards in deep learning.\nThe LSTM consistently outperforms the nonincremental MLP. This shows that the ability to utilize information from previous inputs is essential for this task. This is intuitively plausible; in order to identify the perpetrator, viewers must be aware of the plot’s development and make inferences while the episode evolves. The CRF is outperformed by\nall other systems, including rule-based PRO. In contrast to the MLP and PRO, the CRF utilizes sequential information, but cannot flexibly fuse information from different modalities or exploit non-linear mappings like neural models. The only type of input which enabled the CRF to predict perpetrator mentions were concatenated word embeddings (see Table 2). We trained CRFs on audio or visual features, together with word embeddings, however these models converged to only predicting the majority class. This suggests that CRFs do not have the capacity to model long complex sequences and draw meaningful inferences based on them. PRO achieves a reasonable f1 score but does so because it achieves high recall at the expense of very low precision. The precision-recall tradeoff is much more balanced for the neural systems."
  }, {
    "heading": "5.4 Can the Model Identify the Perpetrator?",
    "text": "In this section we assess more directly how the LSTM compares against humans when asked to identify the perpetrator by the end of a CSI episode. Specifically, we measure precision in the final 10% of an episode, and compare human performance (first-pass guesses) and an LSTM model which uses all three modalities. Figure 6 shows precision results for 30 test episodes (across five cross-validation splits) and average precision as horizontal bars.\nPerhaps unsurprisingly, human performance is superior; however, the model achieves an average precision of 60% which is encouraging (compared to\nEpisode 12 (Season 03): “Got Murder?” Episode 19 (Season 03): “A Night at the Movies”\n85% achieved by humans). Our results also show a moderate correlation between the model and humans: episodes which are difficult for the LSTM (see left side of the plot in Figure 6) also result in lower human precision. Two episodes on the very left of the plot have 0% precision and are special cases. The first one revolves around a suicide, which is not strictly speaking a crime, while the second one does not mention the perpetrator in the final 10%."
  }, {
    "heading": "5.5 How Is the Model Guessing?",
    "text": "We next analyze how the model’s guessing ability compares to humans. Figure 7 tracks model behavior over the course of two episodes, across 100 equally sized intervals. We show the cumulative development of f1 (top plot), cumulative true positive counts (center plot), and true positive counts within each interval (bottom plot). Red bars indicate times at which annotators pressed the red button.\nFigure 7 (right) shows that humans may outperform the LSTM in precision (but not necessarily in recall). Humans are more cautious at guessing the perpetrator: the first human guess appears around sentence 300 (see the leftmost red vertical bars in\nFigure 7 right), the first model guess around sentence 190, and the first true mention around sentence 30. Once humans guess the perpetrator, however, they are very precise and consistent. Interestingly, model guesses at the start of the episode closely follow the pattern of gold-perpetrator mentions (bottom plots in Figure 7). This indicates that early model guesses are not noise, but meaningful predictions.\nFurther analysis of human responses is illustrated in Figure 8. For each of our three annotators we plot the points in each episode where they press the red button to indicate that they know the perpetrator (bottom). We also show the number of times (all three) annotators pressed the red button individually for each interval and cumulatively over the course of the episode. Our analysis reveals that viewers tend to press the red button more towards the end, which is not unexpected since episodes are inherently designed to obfuscate the identification of the perpetrator. Moreover, Figure 8 suggests that there are two types of viewers: eager viewers who like our model guess early on, change their mind often, and therefore press the red button frequently (annotator 1 pressed the red button 6.1 times on average per\nepisode) and conservative viewers who guess only late and press the red button less frequently (on average annotator 2 pressed the red button 2.9 times per episode, and annotator 3 and 3.7 times). Notice that statistics in Figure 8 are averages across several episodes each annotator watched and thus viewer behavior is unlikely to be an artifact of individual episodes (e.g., featuring more or less suspects). Table 3 provides further evidence that the LSTM behaves more like an eager viewer. It presents the time in the episode (by sentence count) where the model correctly identifies the perpetrator for the first time. As can be seen, the minimum and average identification times are lower for the LSTM compared to human viewers. Table 4 shows model predictions on two CSI screenplay excerpts. We illustrate the degree of the model’s belief in a perpetrator being mentioned by color intensity. True perpetrator mentions are highlighted in blue. In the first example, the model mostly identifies perpetrator mentions correctly. In the second example, it identifies seemingly plausible sentences which, however, refer to a suspect and not the true perpetrator."
  }, {
    "heading": "5.6 What if There Is No Perpetrator?",
    "text": "In our experiments, we trained our model on CSI episodes which typically involve a crime, committed by a perpetrator, who is ultimately identified. How does the LSTM generalize to episodes without\na crime, e.g., because the “victim” turns out to have committed suicide? To investigate how model and humans alike respond to atypical input we present both with an episode featuring a suicide, i.e., an episode which did not have any true positive perpetrator mentions.\nFigure 8 tracks the incremental behavior of a human viewer and the model while watching the suicide episode. Both are primed by their experience with CSI episodes to identify characters in the plot as potential perpetrators, and consequently predict false positive perpetrator mentions. The human realizes after roughly two thirds of the episode that there is no perpetrator involved (he does not annotate any subsequent sentences as “perpetrator mentioned”), whereas the LSTM continues to make perpetrator predictions until the end of the episode. The LSTM’s behavior is presumably an artifact of the recurring pattern of discussing the perpetrator in the very end of an episode."
  }, {
    "heading": "6 Conclusions",
    "text": "In this paper we argued that crime drama is an ideal testbed for models of natural language understanding and their ability to draw inferences from complex, multi-modal data. The inference task is welldefined and relatively constrained: every episode poses and answers the same “whodunnit” question. We have formalized perpetrator identification as a sequence labeling problem and developed an LSTM-based model which learns incrementally from complex naturalistic data. We showed that multi-modal input is essential for our task, as well\nan incremental inference strategy with flexible access to previously observed information. Compared to our model, humans guess cautiously in the beginning, but are consistent in their predictions once they have a strong suspicion. The LSTM starts guessing earlier, leading to superior initial true-positive rates, however, at the cost of consistency.\nThere are many directions for future work. Beyond perpetrators, we may consider how suspects emerge and disappear in the course of an episode. Note that we have obtained suspect annotations but did not use them in our experiments. It should also be interesting to examine how the model behaves out-of-domain, i.e., when tested on other crime series, e.g., “Law and Order”. Finally, more detailed analysis of what happens in an episode (e.g., what actions are performed, by who, when, and where) will give rise to deeper understanding enabling applications like video summarization and skimming.\nAcknowledgments The authors gratefully acknowledge the support of the European Research Council (award number 681760; Frermann, Lapata) and H2020 EU project SUMMA (award number 688139/H2020-ICT-2015; Cohen). We also thank our annotators, the TACL editors and anonymous reviewers whose feedback helped improve the present paper, and members of EdinburghNLP for helpful discussions and suggestions."
  }],
  "year": 2018,
  "references": [{
    "title": "VQA: Visual Question Answering",
    "authors": ["Stanislaw Antol", "Aishwarya Agrawal", "Jiasen Lu", "M̃argaret Mitchell", "Dhruv Batra", "C. Lawrence Zitnick", "Devi Parikh"],
    "venue": "In Proceedings of the IEEE International Conference on Computer Vision (ICCV),",
    "year": 2015
  }, {
    "title": "Finding actors and actions in movies",
    "authors": ["Piotr Bojanowski", "Francis Bach", "Ivan Laptev", "Jean Ponce", "Cordelia Schmid", "Josef Sivic."],
    "venue": "The IEEE International Conference on Computer Vision (ICCV), pages 2280– 2287, Sydney, Australia.",
    "year": 2013
  }, {
    "title": "A hidden Markov model framework for video segmentation using audio and image features",
    "authors": ["John S. Boreczky", "Lynn D. Wilcox."],
    "venue": "Proceedings of the 1998 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP), pages 3741–",
    "year": 1998
  }, {
    "title": "A large annotated corpus for learning natural language inference",
    "authors": ["Samuel R. Bowman", "Gabor Angeli", "Christopher Potts", "Christopher D. Manning."],
    "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 632–",
    "year": 2015
  }, {
    "title": "Multimodal distributional semantics",
    "authors": ["Elia Bruni", "Nam Khanh Tran", "Marco Baroni."],
    "venue": "Journal of Artificial Intelligence Research, 49(1):1–47, January.",
    "year": 2014
  }, {
    "title": "Environmental sound recognition: A survey",
    "authors": ["Sachin Chachada", "C.-C. Jay Kuo."],
    "venue": "APSIPA Transactions on Signal and Information Processing, 3.",
    "year": 2014
  }, {
    "title": "A coefficient of agreement for nominal scales",
    "authors": ["Jacob Cohen."],
    "venue": "Educational and Psychological Measurement, 20(1):37–46.",
    "year": 1960
  }, {
    "title": "Movie/script: Alignment and parsing of video and text transcription",
    "authors": ["Timothee Cour", "Chris Jordan", "Eleni Miltsakaki", "Ben Taskar."],
    "venue": "Proceedings of the 10th European Conference on Computer Vision, pages 158–171, Marseille, France.",
    "year": 2008
  }, {
    "title": "Comparison of parametric representations for monosyllabic word recognition in continuously spoken sentences",
    "authors": ["Steven B. Davis", "Paul Mermelstein."],
    "venue": "Alex Waibel and Kai-Fu Lee, editors, Readings in Speech Recognition, pages 65–74. Morgan Kaufmann",
    "year": 1990
  }, {
    "title": "Video classification based on HMM using text and faces",
    "authors": ["Nevenka Dimitrova", "Lalitha Agnihotri", "Gang Wei."],
    "venue": "Proceedings of the 10th European Signal Processing Conference (EUSIPCO), pages 1–4. IEEE.",
    "year": 2000
  }, {
    "title": "Image description using visual dependency representations",
    "authors": ["Desmond Elliott", "Frank Keller."],
    "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1292– 1302, Seattle, Washington, USA.",
    "year": 2013
  }, {
    "title": "Movie script summarization as graph-based scene extraction",
    "authors": ["Philip John Gorinski", "Mirella Lapata."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies,",
    "year": 2015
  }, {
    "title": "Teaching machines to read and comprehend",
    "authors": ["Karl Moritz Hermann", "Tomas Kocisky", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom."],
    "venue": "C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances",
    "year": 2015
  }, {
    "title": "The Goldilocks principle: Reading children’s books with explicit memory representations",
    "authors": ["Felix Hill", "Antoine Bordes", "Sumit Chopra", "Jason Weston."],
    "venue": "Proceedings of the 3rd International Conference on Learning Representations (ICLR), San Diego, Califor-",
    "year": 2015
  }, {
    "title": "Long short-term memory",
    "authors": ["Sepp Hochreiter", "Jürgen Schmidhuber."],
    "venue": "Neural Computation, 9(8):1735– 1780, November.",
    "year": 1997
  }, {
    "title": "Image retrieval using scene graphs",
    "authors": ["Justin Johnson", "Ranjay Krishna", "Michael Stark", "Li-Jia Li", "David A Shamma", "Michael S Bernstein", "Li FeiFei."],
    "venue": "Proceedings of the 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages",
    "year": 2015
  }, {
    "title": "Deep visualsemantic alignments for generating image descriptions",
    "authors": ["Andrej Karpathy", "Li Fei-Fei."],
    "venue": "Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 3128– 3137, Boston, Massachusetts.",
    "year": 2015
  }, {
    "title": "Learning image embeddings using convolutional neural networks for improved multi-modal semantics",
    "authors": ["Douwe Kiela", "Léon Bottou."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 36–45, Doha,",
    "year": 2014
  }, {
    "title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data",
    "authors": ["John D. Lafferty", "Andrew McCallum", "Fernando C.N. Pereira."],
    "venue": "Proceedings of the 18th International Conference on Machine Learning, pages 282–289, San Francisco,",
    "year": 2001
  }, {
    "title": "Combining language and vision with a multimodal skip-gram model",
    "authors": ["Angeliki Lazaridou", "Nghia The Pham", "Marco Baroni."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Hu-",
    "year": 2015
  }, {
    "title": "Visual semantic search: Retrieving videos via complex textual queries",
    "authors": ["Dahua Lin", "Sanja Fidler", "Chen Kong", "Raquel Urtasun."],
    "venue": "IEEE Conference on Computer Vision and Pattern Recognition, pages 2657–2664, Columbus, Ohio, USA.",
    "year": 2014
  }, {
    "title": "A comparative study of several dynamic time-warping algorithms for connected word recognition",
    "authors": ["Cory S. Myers", "Lawrence R. Rabiner."],
    "venue": "The Bell System Technical Journal, 60(7):1389–1409.",
    "year": 1981
  }, {
    "title": "A probabilistic framework for semantic video indexing, filtering, and retrieval",
    "authors": ["Milind R. Naphide", "Thomas S. Huang."],
    "venue": "IEEE Transactions on Multimedia, 3(1):141–151.",
    "year": 2001
  }, {
    "title": "Learning to interpret and describe abstract scenes",
    "authors": ["Luis Gilberto Mateos Ortiz", "Clemens Wolff", "Mirella Lapata."],
    "venue": "Proceedings of the 2015 NAACL: Human Language Technologies, pages 1505–1515, Denver, Colorado, USA.",
    "year": 2015
  }, {
    "title": "GloVe: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning."],
    "venue": "Proceedings of the 2014 Conference 13",
    "year": 2014
  }, {
    "title": "SQuAD: 100,000+ questions for machine comprehension of text",
    "authors": ["Pranav Rajpurkar", "Jian Zhang", "Konstantin Lopyrev", "Percy Liang."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 2383–2392, Austin,",
    "year": 2016
  }, {
    "title": "On the use of computable features for film classification",
    "authors": ["Zeeshan Rasheed", "Yaser Sheikh", "Mubarak Shah."],
    "venue": "IEEE Transactions on Circuits and Systems for Video Technology, 15(1):52–64.",
    "year": 2005
  }, {
    "title": "MCTest: A challenge dataset for the open-domain machine comprehension of text",
    "authors": ["Matthew Richardson", "Christopher J.C. Burges", "Erin Renshaw."],
    "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 193–203,",
    "year": 2013
  }, {
    "title": "Reasoning about entailment with neural attention",
    "authors": ["Tim Rocktäschel", "Edward Grefenstette", "Karl Moritz Hermann", "Tomas Kocisky", "Phil Blunsom."],
    "venue": "Proceedings of the 4th International Conference on Learning Representations (ICLR), San Juan, Puerto",
    "year": 2016
  }, {
    "title": "Movie description",
    "authors": ["Anna Rohrbach", "Atousa Torabi", "Marcus Rohrbach", "Niket Tandon", "Christopher Pal", "Hugo Larochelle", "Aaron Courville", "Bernt Schiele."],
    "venue": "International Journal of Computer Vision, 123(1):94–120.",
    "year": 2017
  }, {
    "title": "Design, analysis and experimental evaluation of block based transformation in MFCC computation for speaker recognition",
    "authors": ["Md Sahidullah", "Goutam Saha."],
    "venue": "Speech Communication, 54(4):543–565.",
    "year": 2012
  }, {
    "title": "Character-based movie summarization",
    "authors": ["Jitao Sang", "Changsheng Xu."],
    "venue": "Proceedings of the 18th ACM International Conference on Multimedia, pages 855–858, Firenze, Italy.",
    "year": 2010
  }, {
    "title": "Visually grounded meaning representations",
    "authors": ["Carina Silberer", "Vittorio Ferrari", "Mirella Lapata."],
    "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence, 99.",
    "year": 2016
  }, {
    "title": "Who are you?” – Learning person specific classifiers from video",
    "authors": ["Josef Sivic", "Mark Everingham", "Andrew Zisserman."],
    "venue": "IEEE Conference on Computer Vision and Pattern Recognition, pages 1145– 1152, Miami, Florida, USA.",
    "year": 2009
  }, {
    "title": "Sequence to sequence learning with neural networks",
    "authors": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V. Le."],
    "venue": "Proceedings of the 27th International Conference on Neural Information Processing Systems, NIPS’14, pages 3104–3112, Cambridge, MA, USA. MIT Press.",
    "year": 2014
  }, {
    "title": "Inception-v4, Inception-ResNet and the im",
    "authors": ["Christian Szegedy", "Sergey Ioffe", "Vincent Vanhoucke"],
    "year": 2016
  }, {
    "title": "Aligning plot synopses to videos for storybased retrieval",
    "authors": ["Makarand Tapaswi", "Martin Bäuml", "Rainer Stiefelhagen."],
    "venue": "International Journal of Multimedia Information Retrieval, (4):3–26.",
    "year": 2015
  }, {
    "title": "MovieQA: Understanding stories in movies through question-answering",
    "authors": ["Makarand Tapaswi", "Yukun Zhu", "Rainer Stiefelhagen", "Antonio Torralba", "Raquel Urtasun", "Sanja Fidler."],
    "venue": "The IEEE Conference on Computer Vision and Pattern Recognition (CVPR),",
    "year": 2016
  }, {
    "title": "Sequence to sequence – Video to text",
    "authors": ["Subhashini Venugopalan", "Marcus Rohrbach", "Jeff Donahue", "Raymond J. Mooney", "Trevor Darrell", "Kate Saenko."],
    "venue": "Proceedings of the 2015 International Conference on Computer Vision (ICCV), pages 4534–4542, Santi-",
    "year": 2015
  }, {
    "title": "Translating videos to natural language using deep recurrent neural networks",
    "authors": ["Subhashini Venugopalan", "Huijuan Xu", "Jeff Donahue", "Marcus Rohrbach", "Raymond Mooney", "Kate Saenko."],
    "venue": "Proceedings the 2015 Conference of the North American",
    "year": 2015
  }, {
    "title": "Show and tell: A neural image caption generator",
    "authors": ["Oriol Vinyals", "Alexander Toshev", "Samy Bengio", "Dumitru Erhan."],
    "venue": "Proceedings of the 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), pages 3156–3164.",
    "year": 2015
  }, {
    "title": "Building a question answering test collection",
    "authors": ["Ellen M. Voorhees", "Dawn M. Tice."],
    "venue": "ACM Special Interest Group on Information Retrieval (SIGIR), pages 200–207, Athens, Greece.",
    "year": 2000
  }, {
    "title": "Towards AI-complete question answering: A set of prerequisite toy tasks",
    "authors": ["Jason Weston", "Antoine Bordes", "Sumit Chopra", "Tomas Mikolov."],
    "venue": "CoRR, abs/1502.05698.",
    "year": 2015
  }, {
    "title": "Show, attend and tell: Neural image caption generation with visual attention",
    "authors": ["Kelvin Xu", "Jimmy Ba", "Ryan Kiros", "Kyunghyun Cho", "Aaron Courville", "Ruslan Salakhudinov", "Rich Zemel", "Yoshua Bengio."],
    "venue": "Proceedings of the 32nd International Conference on",
    "year": 2015
  }, {
    "title": "WikiQA: A challenge dataset for open-domain question answering",
    "authors": ["Yi Yang", "Wen-tau Yih", "Christopher Meek."],
    "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 2013–2018, Lisbon, Portugal.",
    "year": 2015
  }, {
    "title": "Situation recognition: Visual semantic role labeling",
    "authors": ["Mark Yatskar", "Luke Zettlemoyer", "Ali Farhadi"],
    "year": 2016
  }, {
    "title": "Recurrent neural network regularization",
    "authors": ["Wojciech Zaremba", "Ilya Sutskever", "Oriol Vinyals."],
    "venue": "CoRR, abs/1409.2329.",
    "year": 2014
  }, {
    "title": "Aligning books and movies: Towards story-like visual explanations by watching movies and reading books",
    "authors": ["Yukun Zhu", "Ryan Kiros", "Rich Zemel", "Ruslan Salakhutdinov", "Raquel Urtasun", "Antonio Torralba", "Sanja Fidler."],
    "venue": "The IEEE International Conference",
    "year": 2015
  }],
  "id": "SP:366cab6bf6100ea99c7d6ebd089878ee31aeecab",
  "authors": [{
    "name": "Lea Frermann",
    "affiliations": []
  }, {
    "name": "Shay B. Cohen",
    "affiliations": []
  }, {
    "name": "Mirella Lapata",
    "affiliations": []
  }],
  "abstractText": "In this paper we argue that crime drama exemplified in television programs such as CSI: Crime Scene Investigation is an ideal testbed for approximating real-world natural language understanding and the complex inferences associated with it. We propose to treat crime drama as a new inference task, capitalizing on the fact that each episode poses the same basic question (i.e., who committed the crime) and naturally provides the answer when the perpetrator is revealed. We develop a new dataset1 based on CSI episodes, formalize perpetrator identification as a sequence labeling problem, and develop an LSTM-based model which learns from multi-modal data. Experimental results show that an incremental inference strategy is key to making accurate guesses as well as learning from representations fusing textual, visual, and acoustic input.",
  "title": "Whodunnit? Crime Drama as a Case for Natural Language Understanding"
}