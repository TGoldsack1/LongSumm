{
  "sections": [{
    "text": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 2347‚Äì2356, Lisbon, Portugal, 17-21 September 2015. c¬©2015 Association for Computational Linguistics."
  }, {
    "heading": "1 Introduction",
    "text": "Applications using social media data, such as reviews, discussion posts, and (micro) blogs are becoming increasingly popular. We observed from our collaborations with social science and health science researchers that in a typical application, the researcher first need to obtain a set of posts of a particular topic that he/she wants to study, e.g., a political issue. Keyword search is often used as the first step. However, that is not sufficient due to low precision and low recall. A post containing the keyword ‚Äúpolitics‚Äù may not be a political post while a post that does not contain the keyword may be a political post. Thus,\ntext classification is needed to make more sophisticated decisions to improve accuracy.\nFor classification, the user first manually labels a set of relevant posts (positive data) about the political issue and irrelevant posts (negative data) not about the political issue and then builds a classifier by running a learning algorithm, e.g. SVM or na√Øve Bayes. However, the resulting classifier may not be satisfactory. There may be many reasons. One key reason we observed is that the labeled negative training data is not fully representative of the negative test data.\nLet the user-interested topic be P (positive), and the set of all other irrelevant topics discussed in a social media source be T = {T1, T2, ‚Ä¶, Tn}, which forms the negative data. n is usually large. However, due to the labor-intensive effort of manual labeling, the user can label only a certain number of training posts. Then the labeled negative training posts may cover only a small number of irrelevant topics S of T (S ‚äÜ T) as negative. Further, due to the highly dynamic nature of social media, it is probably impossible to label all possible negative topics. In testing, when posts of other negative topics in T‚àíS show up, their classification can be unpredictable. For example, in an application, the training data has no negative examples about sports. However, in testing, some sports posts show up. These unexpected sports posts may be classified arbitrarily, which results in low classification accuracy. In this paper, we aim to solve this problem.\nIn machine learning, this problem is called covariate shift, a type of sample selection bias. In classic machine learning, it is assumed that the training and testing data are drawn from the same distribution. However, this assumption may not hold in practice such as in our case above, i.e., the training and the test distributions are different (Heckman 1979; Shimodaira 2000; Zadrozny 2004; Huang et al. 2007; Sugiyama et al. 2008; Bickel et al. 2009). In general, the sample selection bias problem is not solvable because the two\n2347\ndistributions can be arbitrarily far apart from each other. Various assumptions were made to solve special cases of the problem. One main assumption was that the conditional distribution of the class given a data instance is the same in the training and test data sets (Shimodaira 2000; Huang et al. 2007; Bickel et al. 2009). This gives the covariate shift problem.\nIn this paper, we focus on a special case of the covariate shift problem. We assume that the covariate shift problem occurs mainly in the negative training and test data, and no or minimum covariate shift exists in the positive training and test data. This assumption is reasonable because the user knows the type of posts/documents that s/he is looking for and can label many of them.\nFollowing the notations in (Bickel et al. 2009), our special case of the covariate shift problem can be stated formally as follows: let the set of training examples be {(x1, y1), (x2, y2), ‚Ä¶, (xk, yk)}, where xi is the data/feature vector and yi is the class label of xi. Let the set of test cases be {xk+1, xk+2, ‚Ä¶, xn}, which have no class labels. Since we are interested in binary classification, yi is either 1 (positive class) or -1 (negative class). The labeled training data and the unseen test data have the same target conditional distribution p(y|x) and the marginal distributions of the positive data in both the training and testing are also the same. But the marginal distributions of the negative data in the training and testing are different, i.e., ùëù!(ùê±!) ‚â† ùëù!(ùê±!), where L, T, and ‚Äì represent the labeled training data, test data, and the negative class respectively.\nExisting methods for addressing the covariate shift problem basically work as follows (see the Related Work section). First, they estimate the bias of the training data based on the given test data using some statistical techniques. Then, a classifier is trained on a weighted version of the original training set based on the estimated bias. Requiring the test data to be available in training is, however, a major weakness. In the social media post classification setting, the system needs to constantly classify the incoming data. It is infeasible to perform training constantly.\nIn this paper, we propose a novel learning technique that does not need the test data to be available during training due to the specific nature of our problem, i.e., the positive training data does not have the covariate shift issue.\nOne obvious solution to this problem is oneclass classification (Sch√∂lkopf et al. 1999; Tax and Duin, 1999a), i.e., one-class SVM. We simply discard the negative training posts/documents\ncompletely because they have the covariate shift problem. Although this is a valid solution, as we will see in the evaluation section, the models built based on one-class SVM perform poorly. Although it is conceivable to use an unsupervised method such clustering, SVD (Alter et al., 2000) or LDA (Blei et al., 2003), supervised learning usually give much higher accuracy.\nIn our proposed method, instead of performing supervised learning in the original document space based on n-grams, we perform learning in a similarity space. Thus, the key novelty of the method is the transformation from the original document space (DS) to a center-based similarity space (CBS). In the new space, the covariate shift problem is significantly mitigated, which enables us to build more accurate classifiers. The reason for this is that in CBS based learning the vectors in the similarity space enable SVM (which is the learning algorithm that we use) to find a good boundary of the positive class data based on similarity and to separate it from all possible negative class data, including those negative data that is not represented in training. We will explain this in greater detail in Section 3.5 after we present the proposed algorithm, which we call CBS-L (for CBS Learning).\nThis paper makes three contributions: First, it formulates a special case of the covariate shift problem. This case occurs frequently in social media data classification as we discussed above. Second, it proposes a novel CBS space based learning method, CBS-L, which avoids the covariate shift problem to a large extent because it is able to find a good similarity boundary of the positive data. Third, it experimentally demonstrates the effectiveness of the proposed method."
  }, {
    "heading": "2 Related Work",
    "text": "Traditional supervised learning assumes that the training and test examples are drawn from the same distribution. However, this assumption can be violated in many applications. This is especially the case for social media data because of the high topic diversity and constant changes of topics. This problem is known as covariate shift, which is a form of sample selection bias.\nSample selection bias was first introduced in econometrics by Heckman (1979). It came into the field of machine learning through the work of Zadrozny (2004). The main approach in machine learning is to first estimate the distribution bias of the training data based on the test data, and then learn using weighted training examples to\ncompensate for the bias (Bickel et al. 2009). For example, Shimodaira (2000) and Sugiyama and Muller (2005) proposed to estimate the training and test data distributions using kernel density estimation. The estimated density ratio is then used to generate weighted training examples. Dudik et al. (2005) and Bickel and Scheffer (2007) used maximum entropy density estimation, while Huang et al. (2007) proposed kernel mean matching. Sugiyama et al. (2008) and Tsuboi et al. (2008) estimated the weights for the training instances by minimizing the KullbackLeibler divergence between the test and the weighted training distributions. Bickel et al. (2009) proposed an integrated model. As we discussed in the introduction, the need for the test data at the training time is a major weakness for social media data classification. The proposed technique CBS-L doesn‚Äôt have this restriction.\nAs mentioned in the introduction, one-class classification is a suitable approach to solve the problem. Tax and Duin (1999a and 1999b) proposed a model for one-class classification called Support Vector Data Description (SVDD) to seek a hyper-sphere around the positive data that encompasses points in the data with the minimum radius. In order to balance between model over-fitting and under-fitting, Tax and Duin (2001) proposed a method that tries to use artificially generated outliers to optimize the model parameters. However, their experiments suggest that the procedure to generate artificial outliers in a hyper-sphere is only feasible for up to 30 dimensions. Also, as pointed out by (Khan and Madden, 2010; 2014), one drawback of their methods is that they often require a large dataset and the methods become very inefficient in high dimensional feature spaces. Since text documents are usually represented in a much higher dimensional space, these methods are less suitable for text applications. Manevitz and Yousef (2001) performed one-class text classification using one-class SVM as proposed by Sch√∂lkopf et al. (1999). The method is based on identifying outlier data that are representative of the second class. Instead of assuming the origin is the only member of the outlier class, it assumes those data points with few non-zero entries are also outliers. However, as reported in the paper, their methods produce quite weak results (Sch√∂lkopf et al., 1999; 2000). Li et al. (2003) presented an improved version of one-class SVM for detecting anomalies. Their idea is to consider all data points that are close to the origin as outliers. Both (Yang and Madden, 2007) and (Tian and\nGu, 2010) tried to refine Sch√∂lkopf‚Äôs models by searching optimal parameters. Luo et al., (2007) proposed a cost-sensitive one-class SVM algorithm for intrusion detection. We will see in the experiment section that one-class classification is far inferior to our proposed CBS-L method.\nIn this work, we propose to represent documents in the similarity space and thus it is related to works on document representation. Alternative document representations have been proposed in the past and have been shown to perform well in many applications (Radev et al., 2000; He et al., 2004; Lebanon 2006; Ranzato and Szummer, 2008, Wang and Domeniconi, 2008). In (Radev et al., 2000), although the centroid sentence/document vector was computed, it was not transformed to a similarity space vector representation. Wang and Domeniconi (2008) proposed to use external knowledge to build semantic kernels for documents in order to improve text classification. In our problem, the main difficulty is that testing negative documents cannot be well covered in training. It is not clear how the enriched document representations could help solve our problem.\nOur work is also related to learning from positive and unlabeled examples, also known as PU learning (Denis, 1998; Yu et al. 2002; Liu et al. 2003; Lee and Liu, 2003; Elkan and Noto, 2008; Li et al. 2010). In this learning model, there is a set of labeled positive training data and a set of unlabeled data, but there is no labeled negative training data. Clearly, their setting is different from ours too. There is also no guarantee that the unlabeled data has the same distribution as the future test data.\nOur problem is also very different from domain adaption as we work in the same domain. Due to the use of document similarity, our method has some resemblance to learning to rank (Li, 2011; Liu, 2011). However, CBS-L is very different because we perform supervised classification. Our similarity is also center-based rather than pair-wise document similarity, which is also used in (Qian and Liu 2013) for spam detection."
  }, {
    "heading": "3 The Proposed CBS Learning",
    "text": "We now formulate the proposed supervised learning in the CBS space, called CSB-L. The key difference between CBS learning and the classic document space (DS) learning is in the document representation, which applies to both training and testing documents or posts. In the next subsection, we first give the intuitive idea\nand a simple example. The detailed algorithm follows. In Section 3.5, we explain why CBS-L is better than DS-based learning when unexpected negative data appear in the test set."
  }, {
    "heading": "3.1 Basic Idea",
    "text": "In the proposed CBS-L formulation, each document d is still represented as a feature vector, but the vector no longer represents the document d itself based on n-grams. Instead, it represents a set of similarity values between document d and the center of the positive documents. Specifically, the learning consists of the following steps:\n1. Each document d (in the positive or negative class) is first represented with a set of document representations, i.e., document space vectors (ds-vectors) based on the document itself as in traditional text classification. Each vector denotes one representation of the document. For example, one representation may be based on only unigrams, and another representation may be based on only bigrams. For simplicity, we use only one representation/vector x (e.g., unigrams) here to represent d. Note that we use bold lower case letters to represent vectors. Each feature in a ds-vector is called a ds-feature. 2. A center vector c is then computed for each document representation for the positive class documents using the ds-vectors of all positive and negative documents of that representation. c is thus also a ds-vector. 3. Each document d in the positive and negative class is then transformed to a center-based similarity space vector sd (called a cbs-vector). sd consists of a set of similarity values between document d‚Äôs set of ds-vectors, i.e., {x} in our case here (since we use only one representation), and the set of corresponding positive class center vectors, i.e., {c} in our case:\nsd =Sim({x}, {c}),\nwhere Sim is a similarity function consisting of a set of similarity measures. Each feature in sd is called an cbs-feature. sd still has the same original class label as d. Let us see an actual example. We assume that our single center vector for the positive class has been computed (see Section 3.2) based on the unigram representation of documents: c: 1:1 2:1 6:2 where y:z represents a ds-feature y (e.g., a word) and its feature value (e.g., term frequency, tf). We want to transform the follow-\ning positive document d1 and negative document d2 (ds-vectors) to their cbs-vectors (the first number is the class):\nd1: 1 1:2 2:1 3:1 d2: -1 2:2 3:1 5:2 If we use cosine as the first similarity measure in Sim, we can generate a cbs-feature 1:0.50 for d1 (as cosine(c, d1) = 0.50) and a cbsfeature 1:0.27 for d2 (as cosine(c, d2) = 0.27). If we have more similarity measures, more cbs-features will be produced. The resulting cbs-vectors for d1 and d2 with their class labels, 1 and -1, are:\nd1: 1 1:0.50 ‚Ä¶ d2: -1 1:0.27 ‚Ä¶ 4. We now have a binary classification problem\nin the CBS space. This step simply runs a classification algorithm, e.g., SVM, to build a classifier. We use SVM in our work."
  }, {
    "heading": "3.2 CBS Based Learning",
    "text": "We are given a binary text classification problem. Let D = {(d1, y1), (d2, y2), ‚Ä¶, (dn, yn)} be the set of training examples, where di is a document and yi ‚àà {1, -1} is its class label. Traditional classification directly uses D to build a binary classifier. However, in the CBS space, we learn a classifier that returns 1 for documents that are ‚Äúclose enough‚Äù to the center of the training positive documents and -1 for documents elsewhere.\nWe now detail the proposed technique. As we mentioned above, instead of using one single dsvector to represent a document di ‚ààD, we use a set Rd of p ds-vectors Rd = {ùê±!! , ùê±!! , ‚Ä¶, ùê±!!}. Each vector ùê±!! denotes one document space representation of the document, e.g., unigram representation. We then compute the center of positive training documents, which is represented as a set of ùëù centroids C = {c1, c2, ‚Ä¶, cp}, each of which corresponds to one document space representation in Rd. The way to compute each center ci is similar to that in the Rocchio relevance feedback method in information retrieval (Rocchio, 1971; Manning et al. 2008), which uses the corresponding ds-vectors of all training positive and negative documents. The detail will be given below. Based on Rd for document d and the center C, we can transform a document d from its document space representations Rd to one center-based similarity vector cbs-v by applying a similarity function ùëÜùëñùëö on each element ùê±!! of Rd and its corresponding center ci. We now detail document transformation.\nTraining document transformation: The train-\ning data transformation from ds-vectors to cbsvectors performs the following two steps:\nStep 1: Compute the set C of centroids for the positive class. Each centroid vector ci‚ààC is for one document representation ùê±!!. And it is computed by applying the Rocchio method to the corresponding ds-vectors of all documents in both positive and negative training data.\nùêú! = ùõº ùê∑!\nùê±!!\nùê±!!ùêùùê¨!!‚àà!!  ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬† ¬†\n ¬† ¬† ¬† ¬† ¬†‚àí ùõΩ |ùê∑ ‚àí ùê∑!| ùê±!!\nùê±!!ùê±!!‚àà!!!!\nwhere ùê∑! is the set of documents in the positive class and |.| is the size function. ùõº and ùõΩ are parameters, which are usually set empirically. It is reported that using tf-idf representation, ùõº = 16 and ùõΩ = 4 usually work quite well (Buckley et al. 1994). The subtraction is used to reduce the influence of those terms that are not discriminative (i.e., terms appearing in both positive and negative documents). Step 2: Compute the similarity vector cbs-vd (center-based similarity space vector) for each document d ‚ààD based on its set of document space vectors Rd and the corresponding centroids C of the positive documents.\ncbs-vd = Sim(Rd, C)\nSim has a set of similarity measures, and each measure mj is applied to p document representations ùê±!! in Rd and their corresponding centers ùêú! in C to generate p similarity features (cbs-features) in cbs-vd. We discuss the dsfeatures and similarity measures for computing cbs-features in the next two subsections.\nComplexity: The data transformation step is clearly linear in the number of examples, i.e., n. Test document transformation: For each test document d, we can use step 2 above to produce a cbs-vector for d."
  }, {
    "heading": "3.3 DS-Features",
    "text": "In order to compute cbs-features (center-based similarity space features) for each document, we need to have the ds-features of a document and the center of the positive class. We discuss dsfeatures first, which are extracted from each document itself.\nSince our task is document classification, we use the popular unigram, bigram and trigram\nwith tf-idf weighting as the ds-features for a document. These three types of ds-features also give us three different document representations."
  }, {
    "heading": "3.4 CBS-Features",
    "text": "Ds-vectors are transformed into cbs-vectors by applying a set of similarity measures on each document space vector and the corresponding center vector. In this work, we employed five similarity measures from (Cha, 2007) to gauge the similarity of two vectors. Based on these measures, we produce 15 CBS features using the unigram, bigram, and trigrams representations of each document. The similarity measures we used are listed in Table 1, where P and Q are two vectors and d represents the dimension of P and Q."
  }, {
    "heading": "3.5 Why Does CBS Space Learning Work?",
    "text": "We now try to explain why CBS learning (CBSL) can deal with the covariate shift problem, and thus can perform better than document space learning. The reason is that due to the use of similarity features, CBS-L is essentially trying to generate a boundary for the positive training data because similarity is not directional and thus covers all directions in a spherical shape in the space. In classification, the negative data from anywhere or direction outside the spherical shape can be detected. The covariate shift problem will not affect the classification much. Many types of documents that are not represented in the negative training data will still be detected due to their low similarity. For example, in Figure 1, we want to build a SVM classifier to separate positive data represented as black squares and negative data represented as empty circles. The constructed CBS-L classifier would look like a circle (in dashed line) in the original document space\ncovering the positive data. The size of this (boundary) circle depends on the separation margin between the two classes. Although data points represented by empty triangles are not represented in the negative training data (which has only empty circles) in building the classifier, our classifier is able to identify them as not positive at the test time because they are outside the boundary circle.\nIf we had used the document space (DS) features to build a SVM classifier, the classifier would be a line (see Figure 1) between the positive data (black squares) and the negative data (empty circles). This line unfortunately will not be able to identify data points represented as empty triangles as not positive because the triangles actually lie on the positive side and would be classified as positive, which is clearly wrong."
  }, {
    "heading": "4 Experiments",
    "text": "In this section, we evaluate the proposed learning in the center-based similarity space (CBS-L) and compare it with baselines."
  }, {
    "heading": "4.1 Experimental Dataset",
    "text": "As stated at the beginning of the paper, this work was motivated by the real-life problem of identifying the right social media posts or documents for specific applications. For an effective evaluation, we need a large number of classes in the data to reflect the topic richness and diversity of the social media. The whole data also has to be labeled for evaluation. Using online reviews of a large number of products is a natural choice because there are many types of products and services and there is no need to do manual labeling, which is very labor intensive, time consuming, and error prone. We obtained the Amazon review database from the authors of (Jindal and Liu 2008), and constructed a dataset with reviews of 50 types of products, which we also call 50 topics. Each topic (a type of products) have 1000 reviews. For each topic, we randomly sampled 700 reviews/documents for training and the remaining 300 reviews for testing. Note that although we use this product review collection, we\ndo not perform sentiment classification. Instead, we still perform the traditional topic based classification. That is, given a review, the system decides what type of product the review is about. In our experiments, we use every topic as the positive class. This gives us 50 classification results."
  }, {
    "heading": "4.2 Baselines",
    "text": "We use three baselines in our evaluation. Document space one-class SVM (ds-osvm): As we discussed earlier, due to the covariate shift problem in the negative training data, one solution is to drop the negative training data completely to build a one-class classifier. One-class SVM is the state-of-the-art one-class classification algorithm. We apply one-class SVM to the documents in the document space as one of the baselines. One-class SVM was first introduced by Sch√∂lkopf et al. (1999; 2000), which is based on the assumption that the origin is the only member of the second class. The data is first mapped into a transformed feature space via a kernel and then standard two-class SVM is employed to construct a hyper-plane that separates the data and the original with maximum margin. As mentioned earlier, there is also the support vector data description (SVDD) formulation for one-class classification proposed by Tax and Duin (1999a; 1999b). SVDD seeks to distinguish the positive class from all other possible data in space. It basically finds a hyper-sphere around the positive class data that contains almost all points in the data set with the minimum radius. It has been shown that the use of Gaussian kernel makes SVDD and One-class SVM equivalent, and the results reported in (Khan and Madden, 2014) demonstrate that SVDD and One-class SVM are comparable when the Gaussian kernel is applied. Thus in this paper, we just use oneclass SVM, which is one of the SVM-based classification tools in the LIBSVM1 library (version 3.20) (Chang and Lin, 2011).\nCenter-based similarity space one-class SVM (cbs-osvm): Instead of applying one-class SVM to documents in the original document space, this baseline applies it to the CBS space after the documents are transformed to CBS vectors.\nSVM: This baseline is the SVM applied in the original document space. Although in this case, there is covariate shift problem, we want to see how serious the problem might be, and how the proposed CBS-L technique can deal with the 1 http://www.csie.ntu.edu.tw/~cjlin/libsvmtools/\nproblem. We use the SVM tool in LIBSVM."
  }, {
    "heading": "4.3 Kernels and Parameters",
    "text": "As Khan and Madden (2014) pointed out that one-class SVM performs the best when Gaussian kernel is used, we use Gaussian kernel as well. Manevitz and Yousef (2001) applied one-class SVM to text classification, and the authors reported that one-class SVM works the best with binary feature weighting scheme compared to tf or tf-idf weighting schemes. Also, they reported that a small number of features (10) with highest document frequency performed the best with Gaussian kernel. We also use binary representation, but found that 10 features are already too many in our case. In fact, 5 features give the best results. Using a small number of features is intuitive because to find the boundary of a very high dimensional space is very difficult. We also tried more features but they were poorer.\nFor SVM classification in the document space, we use the linear kernel as it has been shown by many researchers that the linear kernel performs the best (e.g., Joachims, 1998; Colas and Brazdil, 2006). We experimented with RBF kernels extensively, but they did not perform well with the traditional document representation. The term weighting scheme is tf-idf (Colas and Brazdil, 2006) with no feature selection.\nFor our proposed method CBS-L, we use tf-idf\nvalues of unigram, bigram and trigram to represent a document in three ways in the document space. As mentioned earlier, five document similarity functions are used to transform document space vectors to CBS space vectors. And in order to filter out less useful features for the center vector of the positive class, we performed feature selection in the document space using the classic information gain method (Yang and Pedersen, 1997) to empirically choose the most effective 100 features for the positive class.\nFor all the kernels, we use the default parameter settings in the LIBSVM systems. We tried to tune the parameters, but did not get better results."
  }, {
    "heading": "4.4 Results",
    "text": "We now present the experiment results. As mentioned above, we treat each topic as the positive class. This gives 50 tests. To test the effect of covariate shift, we also vary the number of topics in the negative class. We used 10, 20, 30, and 40 topics in the training negative class. The test set always has 49 topics of negative data.\nFor each setting, we give three sets of results for the positive class, which is the target topic data that we are interested in obtaining through classification. Each set of results includes the standard measures of precision, recall, and F1score for the positive class. The three sets are: 1. In-training: In this case, the test negative data\ncontains only data from those topics used in training. This is the classical supervised learning setting where the training and test data are randomly drawn from the same distribution. 2. Not-in-training: In this case, the test negative set contains only data from the other topics not used in training. The classical setting of supervised learning does not deal with this problem. This represents covariate shift. 3. Combined: In this case, the test data contains both in-training and not-in-training negative topics. Due to the use of not-in-training test data, this is also not the classical setting. Due to a large number of experiment results, we cannot report all the details. Table 2 summarizes the results. Notice that for ds-osvm, it does not make sense to have in-training and not-intraining results because it does not use any training negative data. Thus, there is only one set of results for ‚ÄúCombined,‚Äù which is duplicated in the table for easy comparison. However, note that cbs-osvm uses negative data for training in order to compute the center for the positive class.\nFrom the table, we can make the following observations (since there are many numbers, we only focus on F1-scores). 1. The proposed CBS-L method performs mark-\nedly better than all baselines. For the results of in-training, not-in-training, and combined, CBS-L is consistently better in all cases than all baselines. Even for in-training, CBS-L perform better than SVM. This clearly shows the superiority of the proposed CBS-L method. 2. ds-osvm performs poorly. cbs-osvm is much better because it uses the negative data in feature selection and center computation. 3. SVM in the document space performed poorly (Combined) when only a small number of negative topics are used in training. It gets better than both one-class SVM baselines when more negative topics are used in training (see the reason in the next point). 4. Finally, we can also see that with the number of training negative topics increases, the results of the combined case of both SVM and CBS-L improve. This is expected because with the increased number of negative topics for training, the number of not-in-training negative topics for testing decreases and the covariate shift problem gets smaller. We can also see that cbs-osvm, SVM and CBS-L‚Äôs F1-scores for not-in-training improve with the increased training negative topics due to the same reason. However, their F1-scores drop for in-training because with more negative\ntopics, the data becomes more skewed, which hurts in-training classification.\nTo give a flavor of the detailed results for each topic (product), we give the full results for one setting with 30 randomly selected topics as the training negative data (Table 3). The results in the table are F1-scores of the combined case."
  }, {
    "heading": "5 Conclusion",
    "text": "The ability to get relevant posts accurately about a topic from social media is a challenging problem. This paper attempted to solve this problem by identifying and dealing with the technical issue of covariate shift. The key idea of our technique is to transform document representation from the traditional n-gram feature space to a similarity based space. Our experimental results show that the proposed method CBS-L outperformed strong baselines by large margins."
  }, {
    "heading": "Acknowledgments",
    "text": "This research was partially supported by the NSF grants IIS-1111092 and IIS-1407927, and a Google faculty award.\nReference\nAlter, O., Brown, P.O. and Bostein, D. 2000. Singular Value Decomposition for GenomeWide Expression Data Processing and Modeling. Proc. Nat',l Academy of Science, vol. 97, no. 18, pp. 10101-10106, Aug.\nBlei, D. Ng, A. and Jordan, M., 2003. Latent dirichlet allocation, The Journal of Machine Learning Research, 3, p.993-1022, 3/1/2003\nBuckley, C., Salton, G., Allan, J. 1994. The Effect of Adding Relevance Information in a Relevance Feedback Environment, Proceedings of SIGIR Conference.\nBickel, S., Bruckner, M., and Scheffer. 2009. T. Discriminative learning under covariate shift. Journal of Machine Learning Research.\nBickel S. and Scheffer T. 2007. Dirichletenhanced spam filtering based on biased samples. Advances in Neural Information Processing Systems.\nCha, S.-H. 2007. Comprehensive Survey on Distance/Similarity Measures between Probability Density Functions. International Journal of Mathematical Models and Methods in Applied Sciences, 1(4):300--307.\nChang, C-C. and Lin, C-J. 2011. LIBSVM: a\nlibrary for support vector machines. ACM Transactions on Intelligent Systems and Technology, 2:27:1--27:27, http://www.csie. ntu.edu. tw/~cjlin/libsvm\nColas, F. and Brazdil. P. 2006. Comparison of SVM and some older classification algorithms in text classification tasks. Artificial Intelligence in Theory and Practice. IFIP International Federation for Information Processing, pp. 169-178.\nDenis, F., PAC learning from positive statistical queries. ALT, 1998.\nRadev, D., Jing, H. and Budzikowska, M. 2000. Centroid-based summarization of multiple documents: Sentence extraction, utility-based evaluation, and user studies. In ANLP/NAACL Workshop on Summarization, Seattle, April.\nDudik, M., Schapire, R., and Phillips, S. 2005. Correcting sample selection bias in maximum entropy density estimation. Advances in Neural Information Processing Systems.\nElkan, C. and Noto, K. 2008. Learning classifiers from only positive and unlabeled data. KDD, 213-220.\nHe, X., Cai, D., Liu, H. and Ma, W.-Y. 2004. Locality Preserving Indexing for Document Representation. Proc. Of SIGIR.\nHeckman, J. 1979. Sample selection bias as a specification error. Econometrica, 47:153‚Äì 161.\nHuang, J., Smola, A. and Gretton, A., Borgwardt K., and Scholkopf B. 2007. Correcting sample selection bias by unlabeled data. Advances in Neural Information Processing Systems.\nJoachims, T. 1998. Text categorization with support vector machines: Learning with many relevant features. ECML.\nJindal, N. and Liu, B. 2008. Opinion Spam and Analysis. Proceedings of the ACM Conference on Web Search and Data Mining.\nKhan, S., and Madden, M. 2010. A survey of recent trends in one class classification. Artificial Intelligence and Cognitive Science, volume 6206 of Lecture Notes in Computer Science. 188‚Äì197.\nKhan, S. and Madden, M. 2014. One-Class Classification: Taxonomy of Study and Review of Techniques. The Knowledge Engineering Review, 1-30.\nLebanon, G. 2006. Sequential document repre-\nsentations and simplicial curves. UAI. Lee, W. S. and Liu, B. 2003. Learning with Posi-\ntive and Unlabeled Examples Using Weighted Logistic Regression. ICML.\nLi, H. 2011. Learning to Rank for Information Retrieval and Natural Language Processing. Morgan & Claypool publishers.\nLi, K., Huang, H., Tian, S. and Xu, W. 2003. Improving One-class SVM for anomaly detection. Proc. of the Second International conference on Machine Learning and Cybernetics, volume 5, pages 3077‚Äì3081.\nLi, X., Liu, B. and Ng. S.-K. 2010. Negative Training Data can be Harmful to Text Classification. EMNLP.\nLiu, B, Dai, Y., Li, X., Lee, W-S. and Yu. P. 2003. Building text classifiers using positive and unlabeled examples. ICDM.\nLiu. T. 2011. Learning to Rank for Information Retrieval. Springer.\nLuo, J., Ding, L., Pan, Z., Ni, G. and Hu, G. 2007. Research on cost-sensitive learning in one-class anomaly detection algorithms. Autonomic and Trusted Computing, volume 4610 of Lecture Notes in Computer Science.\nManevitz, L. and Yousef. M. 2001. One-class SVMs for document classification. Journal of Machine Learning research.\nManning, C. D., Prabhakar R., and Hinrich, S. 2008. Introduction to Information Retrieval. Cambridge University Press.\nQian, T. and Liu, B. 2013. Identifying Multiple Userids of the Same Author. EMNLP.\nRanzato, M. and Szummer, M. 2008. Semisupervised learning of compact document representations with deep networks. ICML.\nRocchio, J. 1971. Relevant feedback in information retrieval. In G. Salton (ed.). The smart retrieval system: experiments in automatic document processing.\nSch√∂lkopf, B., Williamson, R., Smola, A., Taylor, J. and Platt, J. 2000. Support vector method for novelty detection. Neural Information Processing Systems, pages 582‚Äì588.\nSch√∂lkopf, B., Platt, J., Shawe-Taylor, J., Smola, A. and Williamson, R. 1999. Estimating the support of a high-dimensional distribution. Technical Report, Microsoft Research, MSRTR-99-87.\nShimodaira, H. 2000. Improving predictive inference under covariate shift by weighting the log-likelihood function. Journal of Statistical Planning and Inference, 90:227‚Äì 244.\nSugiyama, M. and Muller, K.-R. 2005. Inputdependent estimation of generalization error under covariate shift. Statistics and Decision, 23(4):249‚Äì279.\nSugiyama, M., Nakajima, S., Kashima, H., von Bunau P., and Kawanabe M. 2008. Direct importance estimation with model selection and its application to covariate shift adaptation. Advances in Neural Information Processing Systems.\nTax, D. and Duin, R. 1999a. Data domain description using support vectors. Proceedings ESAN99, Brussels. 251-256\nTax, D. and Duin, R. 1999b. Support vector domain description. Pattern Recognition Letters 20. 1191-1199\nTax, D. and Duin, R. 2001. Uniform object generation for optimizing one-class classifiers. J. of Machine Learning Research, 2:155‚Äì173.\nTian, J. and Gu, H. 2010. Anomaly detection combining one-class SVMs and particle swarm optimization algorithms. Nonlinear Dynamics, 61(1-2): 303‚Äì310.\nTsuboi, J., Kashima, H., Hido, S., Bickel, S., and Sugiyama, M. 2008. Direct density ratio estimation for large-scale covariate shift adaptation. Proceedings of the SIAM International Conference on Data Mining (SDM).\nWang, P. and Domeniconi, C. 2008. Building semantic kernels for text classification using Wikipedia, KDD.\nYang, Y. and Pedersen, J. O. 1997. A comparative study on feature selection in text categorization. ICML.\nYang, L., and Madden, M. 2007. One-class support vector machine calibration using particle swarm optimization. AICS, Dublin.\nYu, H., Han, J. and Chang, K. 2002. PEBL: Positive example based learning for Web page classification using SVM. KDD, 239-248.\nZadrozny, B. 2004. Learning and evaluating classifiers under s ample selection bias, ICML."
  }],
  "year": 2015,
  "references": [{
    "title": "Singular Value Decomposition for GenomeWide Expression Data Processing and Modeling",
    "authors": ["O. Alter", "P.O. Brown", "D. Bostein"],
    "venue": "Proc. Nat',l Academy of Science, vol. 97, no. 18, pp. 10101-10106, Aug.",
    "year": 2000
  }, {
    "title": "Latent dirichlet allocation",
    "authors": ["Blei", "A.D. Ng", "M. Jordan"],
    "venue": "The Journal of Machine Learning Research,",
    "year": 2003
  }, {
    "title": "The Effect of Adding Relevance Information in a Relevance Feedback Environment",
    "authors": ["C. Buckley", "G. Salton", "J. Allan"],
    "venue": "Proceedings of SIGIR Conference",
    "year": 1994
  }, {
    "title": "T",
    "authors": ["S. Bickel", "M. Bruckner", "Scheffer."],
    "venue": "Discriminative learning under covariate shift. Journal of Machine Learning Research.",
    "year": 2009
  }, {
    "title": "Dirichletenhanced spam filtering based on biased samples",
    "authors": ["S. Bickel", "T. Scheffer"],
    "venue": "Advances in Neural Information Processing Systems.",
    "year": 2007
  }, {
    "title": "Comprehensive Survey on Distance/Similarity Measures between Probability Density Functions",
    "authors": ["Cha", "S.-H."],
    "venue": "International Journal of Mathematical Models and Methods in Applied Sciences, 1(4):300--307.",
    "year": 2007
  }, {
    "title": "Comparison of SVM and some older classification algorithms in text classification tasks",
    "authors": ["F. Colas", "Brazdil. P."],
    "venue": "Artificial Intelligence in Theory and Practice. IFIP International Federation for Information Processing,",
    "year": 2006
  }, {
    "title": "PAC learning from positive statistical queries",
    "authors": ["F. Denis"],
    "venue": "ALT,",
    "year": 1998
  }, {
    "title": "Centroid-based summarization of multiple documents: Sentence extraction, utility-based evaluation, and user studies",
    "authors": ["D. Radev", "H. Jing", "M. Budzikowska"],
    "venue": "ANLP/NAACL Workshop on Summarization, Seattle, April.",
    "year": 2000
  }, {
    "title": "Correcting sample selection bias in maximum entropy density estimation",
    "authors": ["M. Dudik", "R. Schapire", "S. Phillips"],
    "venue": "Advances in Neural Information Processing Systems.",
    "year": 2005
  }, {
    "title": "Learning classifiers from only positive and unlabeled data",
    "authors": ["C. Elkan", "K. Noto"],
    "venue": "KDD, 213-220.",
    "year": 2008
  }, {
    "title": "Locality Preserving Indexing for Document Representation",
    "authors": ["X. He", "D. Cai", "H. Liu", "Ma", "W.-Y."],
    "venue": "Proc. Of SIGIR.",
    "year": 2004
  }, {
    "title": "Sample selection bias as a specification error",
    "authors": ["J. Heckman"],
    "venue": "Econometrica, 47:153‚Äì 161.",
    "year": 1979
  }, {
    "title": "Correcting sample selection bias by unlabeled data",
    "authors": ["J. Huang", "A. Smola", "A. Gretton", "Borgwardt K.", "Scholkopf B."],
    "venue": "Advances in Neural Information Processing Systems.",
    "year": 2007
  }, {
    "title": "Text categorization with support vector machines: Learning with many relevant features",
    "authors": ["T. Joachims"],
    "venue": "ECML.",
    "year": 1998
  }, {
    "title": "Opinion Spam and Analysis",
    "authors": ["N. Jindal", "B. Liu"],
    "venue": "Proceedings of the ACM Conference on Web Search and Data Mining.",
    "year": 2008
  }, {
    "title": "A survey of recent trends in one class classification",
    "authors": ["S. Khan", "M. Madden"],
    "venue": "Artificial Intelligence and Cognitive Science, volume 6206 of Lecture Notes in Computer Science. 188‚Äì197.",
    "year": 2010
  }, {
    "title": "One-Class Classification: Taxonomy of Study and Review of Techniques",
    "authors": ["S. Khan", "M. Madden"],
    "venue": "The Knowledge Engineering Review, 1-30.",
    "year": 2014
  }, {
    "title": "Learning with Positive and Unlabeled Examples Using Weighted Logistic Regression",
    "authors": ["W.S. Lee", "B. Liu"],
    "venue": "ICML.",
    "year": 2003
  }, {
    "title": "Learning to Rank for Information Retrieval and Natural Language Processing",
    "authors": ["H. Li"],
    "venue": "Morgan & Claypool publishers.",
    "year": 2011
  }, {
    "title": "Improving One-class SVM for anomaly detection",
    "authors": ["K. Li", "H. Huang", "S. Tian", "W. Xu"],
    "venue": "Proc. of the Second International conference on Machine Learning and Cybernetics, volume 5, pages 3077‚Äì3081.",
    "year": 2003
  }, {
    "title": "Negative Training Data can be Harmful to Text Classification",
    "authors": ["X. Li", "B. Liu", "Ng. S.-K."],
    "venue": "EMNLP.",
    "year": 2010
  }, {
    "title": "Building text classifiers using positive and unlabeled examples. ICDM",
    "authors": ["B Liu", "Y. Dai", "X. Li", "Lee", "W-S", "Yu. P"],
    "year": 2003
  }, {
    "title": "Learning to Rank for Information Retrieval",
    "authors": ["T. Liu."],
    "venue": "Springer.",
    "year": 2011
  }, {
    "title": "Research on cost-sensitive learning in one-class anomaly detection algorithms",
    "authors": ["J. Luo", "L. Ding", "Z. Pan", "G. Ni", "G. Hu"],
    "venue": "Autonomic and Trusted Computing, volume 4610 of Lecture Notes in Computer Science.",
    "year": 2007
  }, {
    "title": "One-class SVMs for document classification",
    "authors": ["L. Manevitz", "Yousef. M."],
    "venue": "Journal of Machine Learning research.",
    "year": 2001
  }, {
    "title": "Introduction to Information Retrieval",
    "authors": ["C.D. Manning", "Prabhakar R.", "S. Hinrich"],
    "venue": "Cambridge University Press.",
    "year": 2008
  }, {
    "title": "Identifying Multiple Userids of the Same Author",
    "authors": ["T. Qian", "B. Liu"],
    "venue": "EMNLP.",
    "year": 2013
  }, {
    "title": "Semisupervised learning of compact document representations with deep networks",
    "authors": ["M. Ranzato", "M. Szummer"],
    "venue": "ICML.",
    "year": 2008
  }, {
    "title": "Relevant feedback in information retrieval",
    "authors": ["J. Rocchio"],
    "venue": "G. Salton (ed.). The smart retrieval system: experiments in automatic document processing.",
    "year": 1971
  }, {
    "title": "Support vector method for novelty detection",
    "authors": ["B. Sch√∂lkopf", "R. Williamson", "A. Smola", "J. Taylor", "J. Platt"],
    "venue": "Neural Information Processing Systems, pages 582‚Äì588.",
    "year": 2000
  }, {
    "title": "Estimating the support of a high-dimensional distribution",
    "authors": ["B. Sch√∂lkopf", "J. Platt", "J. Shawe-Taylor", "A. Smola", "R. Williamson"],
    "venue": "Technical Report, Microsoft Research, MSRTR-99-87.",
    "year": 1999
  }, {
    "title": "Improving predictive inference under covariate shift by weighting the log-likelihood function",
    "authors": ["H. Shimodaira"],
    "venue": "Journal of Statistical Planning and Inference, 90:227‚Äì 244.",
    "year": 2000
  }, {
    "title": "Inputdependent estimation of generalization error under covariate shift",
    "authors": ["M. Sugiyama", "Muller", "K.-R."],
    "venue": "Statistics and Decision, 23(4):249‚Äì279.",
    "year": 2005
  }, {
    "title": "Direct importance estimation with model selection and its application to covariate shift adaptation",
    "authors": ["M. Sugiyama", "S. Nakajima", "H. Kashima", "von Bunau P", "Kawanabe M"],
    "venue": "Advances in Neural Information",
    "year": 2008
  }, {
    "title": "Data domain description using support vectors",
    "authors": ["D. Tax", "R. Duin"],
    "venue": "Proceedings ESAN99, Brussels. 251-256",
    "year": 1999
  }, {
    "title": "Support vector domain description",
    "authors": ["D. Tax", "R. Duin"],
    "venue": "Pattern Recognition Letters",
    "year": 1999
  }, {
    "title": "Uniform object generation for optimizing one-class classifiers",
    "authors": ["D. Tax", "R. Duin"],
    "venue": "J. of Machine Learning Research, 2:155‚Äì173.",
    "year": 2001
  }, {
    "title": "Anomaly detection combining one-class SVMs and particle swarm optimization algorithms",
    "authors": ["J. Tian", "H. Gu"],
    "venue": "Nonlinear Dynamics, 61(1-2): 303‚Äì310.",
    "year": 2010
  }, {
    "title": "Direct density ratio estimation for large-scale covariate shift adaptation",
    "authors": ["J. Tsuboi", "H. Kashima", "S. Hido", "S. Bickel", "M. Sugiyama"],
    "venue": "Proceedings of the SIAM International Conference on Data Mining",
    "year": 2008
  }, {
    "title": "Building semantic kernels for text classification using Wikipedia, KDD",
    "authors": ["P. Wang", "C. Domeniconi"],
    "year": 2008
  }, {
    "title": "A comparative study on feature selection in text categorization",
    "authors": ["Y. Yang", "J.O. Pedersen"],
    "venue": "ICML.",
    "year": 1997
  }, {
    "title": "One-class support vector machine calibration using particle swarm optimization",
    "authors": ["L. Yang", "M. Madden"],
    "venue": "AICS, Dublin.",
    "year": 2007
  }, {
    "title": "PEBL: Positive example based learning for Web page classification using SVM",
    "authors": ["H. Yu", "J. Han", "K. Chang"],
    "venue": "KDD, 239-248.",
    "year": 2002
  }, {
    "title": "Learning and evaluating classifiers under s ample selection bias, ICML",
    "authors": ["B. Zadrozny"],
    "year": 2004
  }],
  "id": "SP:7307df9edffcd23c692b3367565b680bc2682490",
  "authors": [{
    "name": "Geli Fei",
    "affiliations": []
  }, {
    "name": "Bing Liu",
    "affiliations": []
  }],
  "abstractText": "In a typical social media content analysis task, the user is interested in analyzing posts of a particular topic. Identifying such posts is often formulated as a classification problem. However, this problem is challenging. One key issue is covariate shift. That is, the training data is not fully representative of the test data. We observed that the covariate shift mainly occurs in the negative data because topics discussed in social media are highly diverse and numerous, but the user-labeled negative training data may cover only a small number of topics. This paper proposes a novel technique to solve the problem. The key novelty of the technique is the transformation of document representation from the traditional ngram feature space to a center-based similarity (CBS) space. In the CBS space, the covariate shift problem is significantly mitigated, which enables us to build much better classifiers. Experiment results show that the proposed approach markedly improves classification.",
  "title": "Social Media Text Classification under Negative Covariate Shift"
}