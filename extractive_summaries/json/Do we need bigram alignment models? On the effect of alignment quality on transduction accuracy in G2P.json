{
  "sections": [{
    "text": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1175–1185, Lisbon, Portugal, 17-21 September 2015. c©2015 Association for Computational Linguistics."
  }, {
    "heading": "1 Introduction",
    "text": "Grapheme-to-phoneme (G2P) conversion is the problem of converting a string of letters into a string of phonetic symbols. Closely related to G2P are other string transduction problems in natural language processing (NLP) such as transliteration (Sherif and Kondrak, 2007), lemmatization (Dreyer et al., 2008), and spelling error correction (Brill and Moore, 2000). The classical learning paradigm in each of these settings is to train a model on pairs of strings {(x,y)} and then to evaluate model performance on test data. While there are exceptions (e.g., (Rao et al., 2015)), most state-of-the-art modelings (e.g., (Jiampojamarn et al., 2007; Bisani and Ney, 2008; Jiampojamarn et al., 2008; Jiampojamarn et al., 2010; Novak et al., 2012)) view string transduction as a two-stage process in which string pairs (x,y) in the training data are first aligned, and then a subsequent (e.g., sequence labeling) module is learned on the aligned data.\nState-of-the-art alignments in G2P are characterized by the following properties:\n(i) Alignments are monotone in that the ordering of characters in input and output sequences is preserved by the alignments. Furthermore, they are many-to-many in the sense that several x sequence characters may be matched up with several y sequence characters as illustrated in Table 1.\n(ii) The alignment is a latent variable and learnt in an unsupervised manner from pairs of strings in the training data.\n(iii) The unsupervised alignment models are unigram alignment models insofar as the overall score that the alignment model assigns an alignment is the same for all orderings of the matched-up subsequences (context independence).\nTo illustrate point (iii), consider, in the field of lemmatization, the case of aligning an inflected word form with the extended infinitive in German, such as absagt (‘rejects’) with abzusagen (‘to reject’). Critically, the insertion -zu- appears in infixal position and a plausible alignment might be as in Table 2. Then, correctly aligning certain\nanalogous forms such as zusagt (‘accepts’) with\n1175\ntheir corresponding extended infinitive zuzusagen (‘to accept’) is beyond the scope of a unigram alignment model since this cannot distinguish the linguistically correct alignment from the following linguistically incorrect alignment\nz u s a g t zu z u s a g en\nprecisely because it has no notion of context. In this work, we firstly address bigram alignment models in G2P. We investigate whether there are phenomena in G2P that require bigram alignment models and, more generally, whether bigram alignment models produce better alignments — with respect to a human gold standard — than unigram alignment models within the G2P setting. We do so, secondly, in a supervised setting where the model learns from gold-standard alignments. While this may seem an odd scenario at first sight, modern alignment toolkits in the related field of machine translation typically include the possibility to learn both in a supervised and unsupervised manner (Liu et al., 2010; Liu and Sun, 2015). The rationale behind supervised learning models may be that they perform better than unsupervised models, and if alignment quality has a large impact upon subsequent string translation performance, then a supervised model may be a suitable alternative. Thirdly, we investigate how alignment quality affects overall G2P performance. This allows us to address whether it is worthwhile to work on better alignment models, which bigram and supervised alignment models promise to be. To our knowledge, all three outlined aspects of alignments — bigram models, supervised learning, and systematically estimating the relationship between alignment quality and overall string transduction performance — are novel in the G2P setting and its related fields as outlined; however, see also the related work section.\nThis work is structured as follows. Section 2 presents definitions and algorithms for uni- and bigram alignment models. Section 3 surveys related work. Section 4 presents our data and Section 5 our experiments. We conclude in Section 6."
  }, {
    "heading": "2 Uni- and bigram alignment models",
    "text": "We first formally define the problem of aligning two strings x and y over arbitrary alphabets in a monotone and many-to-many manner. Let `x = |x| and `y = |y| denote the lengths of x and y, respectively. Let N = {0, 1, 2, . . .}, and let S ⊆\nN2\\{(0, 0)} be a set defining the valid match-up operations between x characters and y characters. In other words, when (s, t) ∈ S, then this means we allow matches of subsequences of x of length s and subsequences of y of length t.1\nIt is convenient to define a monotone many-tomany alignment of x and y as a 2×k (for k ≥ 1 arbitrary) nonnegative integer matrix Ax,y ∈ N2×k\nsatisfying Ax,y1k = ( `x `y ) , i.e., the two rows of Ax,y sum up to the lengths of the respective strings,2 and where each column of Ax,y lies in S. For any such alignment, we let (x1, . . . ,xk) be the corresponding induced segmentation of x and (y1, . . . ,yk) be the corresponding induced segmentation of y.\nExample. For any S ⊇ {(1, 1), (1, 2), (2, 1)}, the alignment of x = phoenix and y = finIks shown in Table 1 may be represented by the ma-\ntrix Ax,y = (\n2 2 1 1 1 1 1 1 1 2\n) . The correspond-\ning induced segmentations are (ph,oe,n,i,x) and (f,i,n,I,ks).\nLet AS(x,y) denote the class of all alignments of x and y. We call a function f : AS(x,y)→ R an alignment model. We call an alignment model f a unigram alignment model if f takes the form, for any Ax,y ∈ AS(x,y),\nf(Ax,y) = k∑ i=1 sim1(xi,yi) (1)\nwhere sim1 is an arbitrary (real-valued) similarity function measuring similarity of two subsequences. We call an alignment model f a bigram alignment model if f takes the form\nf(Ax,y) = k∑ i=1 sim2 ( (xi,yi), (xi−1,yi−1) ) (2)\nwhere sim2 is an arbitrary (real-valued) similarity function measuring similarity of successive pairs of subsequences.\nExample. Let sim1(u,v) be equal to |u| · |v| and let funi(Ax,y) be as in Eq. (1). Then, funi is a unigram alignment model that assigns the score\n1This is sometimes denoted in the manner M -N (e.g., 3- 2, 1-0), indicating that M characters of one string may be matched up with N characters of the other string. Analogously, we could write here s-t rather than (s, t).\n2Here, 1k denotes the unit vector of dimension k."
  }, {
    "heading": "1 + 1 + 0 + 1 + 1 + 1 + 2 = 7 to the alignment",
    "text": "given in Table 2.\nExample. Let sim2 ( (u,v), (u′,v′) ) = (|u| · |v|)|v′| if |u| = |u′| − 1 or u = v and −2 otherwise. Let fbi(Ax,y) be as in Eq. (2). Then, fbi is a bigram alignment model assigning the score (1 · 1)0 + (1 · 1)1 + (0 · 2)1 + (1 · 1)2 + (1 · 1)1 + (1 · 1)1 − 2 = 3 to the alignment in Table 2.\nIn statistical alignment modeling, the task is to find an optimal alignment (i.e., one with maximal score) given strings x and y and given the alignment model f . When f is a unigram model, this can be solved efficiently via dynamic programming (DP). When f is a bigram alignment model, then finding the optimal alignment can still be solved via DP, by introducing a variable Mijqw denoting the score of the best alignment of x(1 : i) and y(1 : j) that ends in the matchup of x(q : i) with y(w : j).3 The variable Mijqw satisfies a recurrence leading to a DP algorithm, shown in Algorithm 1. The actual alignment can be found by storing pointers to the maximizing steps taken. Running time of the algorithm is O(`2x`2y|S|). Note also that the sketched algorithm is supervised insofar as it assumes that the similarity values sim2(·, ·) are known. Typically, such alignment algorithms can be converted into unsupervised algorithms in which similarity measures sim are learnt iteratively, e.g., in an EM-like fashion (cf., e.g., Eger (2012), Eger (2013)); however, in this paper, we only investigate the supervised base version as indicated."
  }, {
    "heading": "3 Related work",
    "text": "Monotone alignments have a long tradition in NLP. The classical Needleman-Wunsch algorithm (Needleman and Wunsch, 1970) computes the optimal alignment between two sequences when only single character matches, mismatches, and skips are allowed. It is a special case of the unigram model (1) for which S = {(1, 0), (0, 1), (1, 1)} and sim1 takes on values from {0,−1}, depending on whether compared subsequences match or not. As is well-known, this alignment specification is equivalent to the edit distance problem (Levenshtein, 1966) in which the minimal number of insertions, deletions and substitutions is sought that transforms one string\n3We denote by x(a : b) the substring xaxa+1 · · ·xb of the string x1x2 · · ·xt.\ninto another. Substring-to-substring edit operations — or equivalently, (monotone) many-tomany alignments — have appeared in the NLP context, e.g., in Deligne et al. (1995), Brill and Moore (2000), Jiampojamarn et al. (2007), Bisani and Ney (2008), Jiampojamarn et al. (2010), or, significantly earlier, in Ukkonen (1985), Véronis (1988). Learning edit distance/monotone alignments in an unsupervised manner has been the topic of, e.g., Ristad and Yianilos (1998), Cotterell et al. (2014), besides the works already mentioned. All of these approaches are special cases of our unigram model — i.e., they consider particular S (most prominently, S = {(1, 0), (0, 1), (1, 1)}) and sim1.4 Eger (2015b), Yao and Kondrak (2015), and Eger (2015a) generalize to alignments of multiple strings, but likewise only consider unigram alignment models in their experiments.\nProbably the most closely related work to ours is Jiampojamarn and Kondrak (2010). There, older and specialized alignment techniques such as ALINE (Kondrak, 2000) (as well as partly heuristic/semi-automatic alignment methods) are compared with variants of the M2M alignment algorithm, which we also survey. This work does not consider supervised alignments or bigram alignments, as we do. Moreover, Jiampojamarn and Kondrak (2010) also evaluate the impact of alignment quality on overall G2P system accuracy by running a few experiments, finding that better alignment quality does not always translate into better G2P accuracy, but that there is a “strong correlation” between the two. We more thorougly investigate this question, using, arguably, more heterogeneous aligners, and many more experiments. We also quantitatively estimate how alignment quality influences G2P system accuracy on two different languages via linear regression.\nGoldwater et al. (2006) study the effect of context in (unsupervised) word/sequence segmentation, which may be considered the onedimensional specialization of sequence alignment, using a Bayesian method. They find that bigram models greatly outperform unigram models for their task.\nOf course, our study is also related to the field of machine translation and its studies on the rela-\n4In Cotterell et al. (2014), context influences alignments, so that the approach goes beyond the unigram model sketched in (1) (but does not allow for many-to-many match-ups). The contextual dependencies in this model are set up differently from the bigram dependencies in our paper.\nAlgorithm 1 1: procedure BIGRAM-ALIGN(x = x1 . . . xn,y = y1 . . . ym; S, sim2) 2: Mijqw ← −∞ for all (i, j, q, w) ∈ Z4 3: M0000 ← 0 4: for i = 0 . . . n do 5: for j = 0 . . .m do 6: for q = 0 . . . i+ 1 do 7: for w = 0 . . . j + 1 do 8: if (i, j, q, w) 6= (0, 0, 0, 0) then 9: if (i− q + 1, j − w + 1) ∈ S then\n10: Mijqw= max (a,b)∈S Mq−1,w−1,q−a,w−b+sim2\n(( x(q:i),y(w:j) ) , ( x(q−a:q−1),y(w−b:w−1) ))\ntionship between alignment quality and translation performance (Ganchev et al., 2008). In machine translation, the monotonicity assumption of string transduction does typically not hold, however, rendering alignment and translation techniques different and more heuristic in nature."
  }, {
    "heading": "4 Data and systems",
    "text": ""
  }, {
    "heading": "4.1 Data",
    "text": "For English, we conduct experiments on the General American (GA) variant of the Combilex data set (Richmond et al., 2009). This contains about 128 000 grapheme-phoneme pairs as exemplified in Table 3. Importantly, Combilex provides goldstandard alignments, which we will make use of for the supervised alignment models as well as for measuring alignment quality. For German, we ran-\ndomly extract 3 000 G2P string pairs from CELEX (Baayen et al., 1995). We had a native speaker manually align them so that gold standard alignments are available here, too. Both data sets contain quite complex match-ups of character subsequences such as (2,3) as in English s-oi-r-ee-s/swOA-r-P-z or (4,1) as in w-eigh-t/w-P-t but the majority of match-ups are of type (1,1), (2,1), and, to a lesser degree, (1,2) and (3,1)."
  }, {
    "heading": "4.2 Alignment toolkits/models",
    "text": "The M2M aligner (Jiampojamarn et al., 2007), which is based on EM maximum likelihood estimation of alignment parameters, is the classical unsupervised unigram many-to-many aligner in G2P. As has been pointed out (Kubo et al., 2011), M2M greatly overfits the data.5 This means that when the M2M aligner is given the freedom to align two sequences without restrictions, it matches them up as a whole. The reason is that a (probabilistic) unigram alignment model adds log-probabilities of matched-up subsequences, which, if not appropriately corrected for, makes alignments with few match-ups a priori more likely than alignments with many matchups, when probabilities of individual match-ups are uniformly or randomly initialized (as is typically the case for EM maximum likelihood estimation in unsupervised models). To address this, M2M must artifically restrain, in our language, the set S to be {(1, 1), (1, 2), (2, 1)}. In contrast, the Mpaligner (Kubo et al., 2011) introduces a prior (or penalty) in the alignment model which favors ‘short’ matches (s, t) over ‘long’ ones. Finally, the Phonetisaurus aligner (Novak et al., 2012) modifies the M2M aligner by adding additional soft constraints.\nOur own alignment model is, as indicated, supervised. We implement a unigram alignment model where we specify sim1(u,v) as\nα · logp((u,v)) + β · logp((|u|, |v|)) +γ · logp(u) + δ · logp(v).\nHere, logp(z) denotes the log-probability — estimated from the training data — of observing the\n5See also the discussion in (Goldwater et al., 2006) for the related word segmentation problem.\nobject z, and α, β, γ and δ are parameters. This specification says that the subsequences u and v are similar insofar as (i) u and v have been paired frequently in the training data, (ii) the length of u and the length of v have been paired frequently, (iii)/(iv) u/v by itself is likely. We refer to this unigram alignment model as uniα,β,γ,δ. We also implement a bigram alignment model where we specify sim2 ( (u,v), (u′,v′) ) as\nα · logp((u,v) | (u′,v′)) +β · logp((|u|, |v|) | (|u′|, |v′|)) +γ · logp(u|u′)+ δ · logp(v|v′).\nHere, logp(z | z′) denotes the logarithm of the conditional probability of observing the object z following the object z′. We refer to this bigram alignment model as biα,β,γ,δ."
  }, {
    "heading": "4.3 Transduction systems",
    "text": "We use two string transduction systems for our experiments. The first one is DirecTL+ (Jiampojamarn et al., 2010), a discriminative string-tostring translation system incorporating joint ngram features. DirecTL+ is an extension of the model presented in Jiampojamarn et al. (2008) which treats string transduction as a source sequence segmentation and subsequent sequence labeling task. In addition, we use Phonetisaurus (Novak et al., 2012), a weighted finite state-based joint n-gram model employing recurrent neural network language model N -best rescoring in decoding. Both systems take aligned pairs of strings as input and from this construct a monotone translation model.6"
  }, {
    "heading": "4.4 Measuring alignment quality",
    "text": "We employ two measures of alignment quality. First, we use word accuracy, defined as the fraction of correctly aligned sequence pairs in a test sample. This is a very strict measure that penalizes even tiny deviations from the gold standard. Additionally, we measure the edit distance between the true alignment Ax,y and the predicted alignment Âx,y. To implement this, we view the two induced segmentations that constitute an alignment — e.g., (ph,oe,n,i,x) and (f,i,n,I,ks) — as strings including splitting signs. Thus, we can compute the edit distance between the gold-standard segmented x\n6We run both systems with parameters determined by some manual tuning, without trying to systematically optimize their individual performances, however.\nstring and the predicted segmentation, and analogously for the y sequence. Then, we define the edit distance between Ax,y and Âx,y as the sum of these two string edit distances. For a test sample, we indicate so-defined average edit distance, averaged over all pairs in the sample."
  }, {
    "heading": "5 Experiments",
    "text": ""
  }, {
    "heading": "5.1 Alignment quality",
    "text": "To measure alignment quality for the different systems, for English, we run experiments on sets of size x+5 000, where x = 1 000, 2 000, 5 000, 10 000, and 20 000. For the supervised models, we consider x as the training data and the 5 000 additional string pairs as test data.7 To quantify effects when training data is very little, we let x also range over 100 and 500 string pairs for the supervised models. For the unsupervised models, we simply take all x+5 000 string pairs as data to learn from (but evaluate performance only on the 5 000 string pairs, for comparability).\nResults are shown in Tables 4, 5, and 6. We first note (Table 4) that the unsupervised models perform decently, obtaining accuracy rates of 80% and beyond under appropriate parametrizations. We also observe the M2M aligner’s deterioration in performance as we increase its degrees of freedom (allowing it to match subsequences of larger length), confirming our previous remarks. The Mpaligner does not suffer from this problem as it penalizes large matches. Phonetisaurus suffers from the same problems as M2M, but to a lesser degree. Overall, we find that, under optimal parametrizations, Phonetisaurus produces best alignments, followed by Mpalign and M2M. However, peak performances of all three unsupervised aligners are close. Unsurprisingly, the supervised alignment models perform better than the unsupervised ones (Tables 5 and 6). Surprisingly, however, they do so with very little training data; fewer than 100 aligned string pairs suffice to outperform the unsupervised models under good calibrations. When there is sufficient training data, the supervised models perform splendidly, with a peak accuracy of 99.43% for the bigram alignment model that includes appropriate features (scoring lengths of aligned subsequences,\n7For all our below experiments involving the supervised aligners, we set S to a (‘pessimistically’ large) value of {(a, b) | 1 ≤ a ≤ 6, 1 ≤ b ≤ 6}. Also, for the bigram models, we add special sequence boundary markers.\netc.). We also note that the bigram alignment model is almost consistently better than the unigram alignment model, with a surplus of about 1% point, depending on specific parametrizations.\nWe performed an analogous analysis for the German data. Results are quite similar except that unigram and bigram alignment model have indistinguishable performance on the German data, indicating (the known fact) that G2P is a more complex task in English, apparently not requiring bigram alignment models.\nError analysis Concerning errors that the unigram model commits and the bigram model does not, the majority of errors (roughly 80%) involve match-ups of ed/d and d. For example, the unigram model aligns as in\nt w i n k le d t w I N k @l d\nwhile the gold-standard alignment is\nt w i n k l ed t w I N k @l d\nWhile all match-ups in both alignments are plausible, the bigram model assigns here higher probability to the correct ed/d match-up in terminal position (consistently favored in the data set), which\nhas a particular meaning there, namely, that of a suffix marker for past tense.8,9 In the German data, there is a single instance where the unigram and bigram alignment model disagree, namely, in the alignment of s-t-o-ff-f-l-a-sch-e/S-t-O-f-f-l-&S-@, which the unigram model falsely aligns as s-t-o-f-ff-l-a-sch-e/S-t-O-f-f-l-&-S-@; note that in the correct alignment f must follow ff, not vice versa, which depends on context information, e.g., that o/O signifies a short vowel which is followed by a double consonant, not a single consonant.\nAll remaining errors that the bigram alignment models commits are, for the best considered parametrization and training set size, typically due to match-up types not seen in the training data, and thus mostly concern foreign names or writings (e.g., Bh-u-tt-o/b-u-t-F, falsely aligned as B-hu-tto/b-u-t-F). A few other errors might be corrected when the feature coefficients α, β, γ, δ were optimized on a development set rather than set manually. We find no indication that our G2P data, either for English or German, would further benefit from n-gram alignment models of order n > 2."
  }, {
    "heading": "5.2 Alignment quality vs. overall G2P performance",
    "text": "Next, we estimate the relationship between alignment quality and overall G2P performance (transcription accuracy). To this end, for the English data, we use the 5 000 aligned string pairs from the previous experiment on alignment quality and feed them in — as training data — to either DirecTL+ or Phonetisaurus as outlined in Section 4. We then evaluate G2P performance — in terms of word accuracy (fraction of correctly transcribed strings) — on a distinct test set of size 10 000. Figure 1 shows a plot of overall G2P accuracy vs. training set size for the aligner (ranging over the x values in the last section); and a second plot that sketches G2P accuracy as a function of corresponding alignment accuracy. We first note that, as the supervised aligner receives more training\n8Similar cases are, e.g., alignments of the type f-ee-d-ba-ck/f-i-d-b-a-k, which the unigram model falsely aligns as f-e-ed-b-a-ck/f-i-d-b-a-k. Here, too, the unigram is unable to account for the almost exclusive terminal position of the ed/d match-up in the data.\n9Other errors involve ‘unusual/foreign’ spelling/pronunciation pairs such as Ph-oe-n-i-c-ia/f-@n-i-S-@ (wrongly aligned as Ph-o-en-i-c-ia/f-@-n-i-S-@ by the unigram model) or m-a-d-e-m-oi-s-e-ll-e-’s/m-a-d-@-mw@-z-E-l-0-z (m-a-d-e-m-o-i-s-e-ll-e-’s/m-a-d-@-m-w-@z-E-l-0-z), where the bigram alignment model has apparently gathered the more appropriate statistics.\ndata from which to align the 5 000 string pairs, the overall G2P accuracy of both DirecTL+ and Phonetisaurus increase substantially (and as a convex function of training set size). Apparently, the better alignments produced by more training data for the particular supervised aligner considered directly translate into better overall G2P accuracy. The other plot in the figure shows that, indeed, there seems to be a linear trend coupling alignment quality with overall G2P performance. Table 7 pairs G2P accuracy with alignment accuracy of selected systems, all run in the x = 20 000 setting. While, in the table, better alignments do not necessarily imply better overall G2P performance, the two best alignments also lead to the two best overall G2P performances (although, in this case, the second best alignment is paired with the best overall G2P performance); conversely, the worst alignment quality is coupled with the worst overall G2P performance.\nOverall, we ran 249 experiments (including the German data) in which we trained DirecTL+ or Phonetisaurus with alignments of specific quali-\nties obtained from particularly parametrized aligners. In each of these cases, we obtained an alignment quality score and a subsequent overall G2P system performance. The English part of this data is sketched in Figure 2. This figure seems to corroborate the linear relationship (apparently present in Figure 1) between alignment quality and overall G2P system accuracy, particularly, when alignment quality is measured in the more finegrained metric of edit distance. To formally test\nthis, we regress overall G2P system performance (measured in word accuracy) on edit distance and other variables.10 This yielded the coefficients as given in Table 8; in each case, the goodness-offit of the linear model was quite large, with R2 values above 90% for the English data and about 84% for the German data. Also, the coefficients on alignment quality were highly significantly different from zero. The table shows that the coefficients are on the order of about −3.80% to −4.70%, meaning that, all else being equal, increasing alignment quality by 1 edit distance to the gold-standard alignment increases overall G2P by about 3.80 to 4.70%.\nSo far, we have estimated the effects of alignment quality on overall G2P system performance for a fixed size of training data, namely, 5 000 aligned string pairs. To see whether this relationship changes when we vary the amount of training data, we run several more experiments. In these, we align training sets of sizes 100, 500,\n10These include binary dummy variables for the specific systems as well as alignment consistency and its square — measured in conditional entropy H(Y |X) (Pervouchine et al., 2009) — in the regression.\n1 000, 2 000, 10 000, 20 000, 40 000 and 60 000 via our several alignment systems. Then we feed the aligned data to the Phonetisaurus system (we omit DirecTL+ here because of its long run times) and compute overall G2P accuracy on a disjoint test set of size 28 000 approximately. This time, we only use the unsupervised aligners and the gold-standard alignments directly, omitting results for our various supervised aligners. Note, however, that these aligners could, in principle, imitate the gold-standard alignments with a very high degree of precision, as previously seen. Table 9\nshows that training G2P systems from the human gold standard alignments in each case yields better overall G2P transcriptions than training them from either of the three unsupervised alignments considered here. However, we note that the surplus over the unsupervised alignments decreases as training set size increases. This may be due to the fact that the unsupervised aligners themselves create better alignments once they are boot-\nstrapped from larger data sets (cf. Table 4). Additionally, the effect of alignment quality on overall G2P system performance may simply vanish as training set sizes become large enough because the translation modules can better accomodate ‘noisy’ data as long as its size is sufficiently large. Figure\n3 sketches the decreasing influence of alignment system on overall G2P system performance as size of the aligned data increases."
  }, {
    "heading": "6 Conclusion",
    "text": "We have investigated the need for bigram alignment models and the benefit of supervised alignment techniques in G2P. We have also quantitatively estimated the relationship between alignment quality and overall G2P system performance. We have found that, in English, bigram alignment models do perform better than unigram alignment models on the G2P task (we find almost no differences between unigram and bigram models for the German sample of G2P data we considered). Moreover, we have found that supervised alignment techniques may perform considerably better than their unsupervised brethren and that few manually aligned training pairs suffice for them to do so. Finally, we have estimated a highly significant impact of alignment quality on overall G2P transcription performance and that this relationship is linear in nature. At a particular training size, a linear regression model has estimated that improving alignment quality by 1 edit distance toward the\ngold standard alignments leads to an 3.80-4.70% increase in G2P transcription accuracy. However, we have also found that the importance of good alignments on G2P accuracy appears to dimish as data set size increases, possibly because the translation modules can accomodate more ‘noisy’ data in this scenario.\nAs a ‘policy’ implication, we recommend the use of supervised alignment techniques particularly when the size of the G2P corpus is small or when high quality alignments, as an end in themselves, are required. In this case, constructing a few dozen or few hundred alignments in an unsupervised manner and correcting them by hand (to serve as an input for a supervised technique) may be highly beneficial.\nIn future work, it may be worthwhile to study the impact of alignment techniques on overall system performance in other string transduction problems such as transliteration, lemmatization, and spelling error correction.\nOur supervised uni- and bigram aligners are available via https://github.com/ SteffenEger/."
  }, {
    "heading": "Acknowledgments",
    "text": "I thank three anonymous reviewers and Tim vor der Brück for valuable suggestions."
  }],
  "year": 2015,
  "references": [{
    "title": "The CELEX2 lexical database",
    "authors": ["H. Baayen", "R. Piepenbrock", "L. Gulikers."],
    "venue": "ldc96l14.",
    "year": 1995
  }, {
    "title": "Jointsequence models for grapheme-to-phoneme conversion",
    "authors": ["Maximilian Bisani", "Hermann Ney."],
    "venue": "Speech Communication, 50(5):434–451.",
    "year": 2008
  }, {
    "title": "An improved error model for noisy channel spelling correction",
    "authors": ["Eric Brill", "Robert C. Moore."],
    "venue": "Proceedings of the 38th Annual Meeting on Association for Computational Linguistics, ACL ’00, pages 286–293, Stroudsburg, PA, USA. Association",
    "year": 2000
  }, {
    "title": "Stochastic contextual edit distance and probabilistic FSTs",
    "authors": ["Ryan Cotterell", "Nanyun Peng", "Jason Eisner."],
    "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (ACL), pages 625–630, Baltimore, June.",
    "year": 2014
  }, {
    "title": "Variable-length sequence matching for phonetic transcription using joint multigrams",
    "authors": ["Sabine Deligne", "Franois Yvon", "Frédéric Bimbot."],
    "venue": "EUROSPEECH. ISCA.",
    "year": 1995
  }, {
    "title": "Latent-variable modeling of string transductions with finite-state methods",
    "authors": ["Markus Dreyer", "Jason Smith", "Jason Eisner."],
    "venue": "EMNLP, pages 1080– 1089. ACL.",
    "year": 2008
  }, {
    "title": "S-restricted monotone alignments: Algorithm, search space, and applications",
    "authors": ["Steffen Eger."],
    "venue": "COLING’12, pages 781–798.",
    "year": 2012
  }, {
    "title": "Sequence alignment with arbitrary steps and further generalizations, with applications to alignments in linguistics",
    "authors": ["Steffen Eger."],
    "venue": "Inf. Sci., 237:287–304.",
    "year": 2013
  }, {
    "title": "Improving g2p from wiktionary and other (web) resources",
    "authors": ["Steffen Eger."],
    "venue": "Proceedings of Interspeech. accepted.",
    "year": 2015
  }, {
    "title": "Multiple many-to-many sequence alignment for combining string-valued variables: A G2P experiment",
    "authors": ["Steffen Eger."],
    "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th International Joint",
    "year": 2015
  }, {
    "title": "Better alignments = better translations? In Kathleen McKeown, Johanna D",
    "authors": ["Kuzman Ganchev", "Joo Graa", "Ben Taskar."],
    "venue": "Moore, Simone Teufel, James Allan, and Sadaoki Furui, editors, ACL, pages 986–993. The Association for Computational Lin-",
    "year": 2008
  }, {
    "title": "Contextual dependencies in unsupervised word segmentation",
    "authors": ["Sharon Goldwater", "Thomas L. Griffiths", "Mark Johnson."],
    "venue": "Proceedings of the 21st International Conference on Computational Linguistics and 44th Annual Meeting of the Associa-",
    "year": 2006
  }, {
    "title": "Letter-phoneme alignment: An exploration",
    "authors": ["Sittichai Jiampojamarn", "Grzegorz Kondrak."],
    "venue": "Jan Hajic, Sandra Carberry, and Stephen Clark, editors, ACL, pages 780–788. The Association for Computational Linguistics.",
    "year": 2010
  }, {
    "title": "Applying many-to-many alignments and hidden markov models to letter-to-phoneme conversion",
    "authors": ["Sittichai Jiampojamarn", "Grzegorz Kondrak", "Tarek Sherif."],
    "venue": "Human Language Technologies 2007: The Conference of the North American Chap-",
    "year": 2007
  }, {
    "title": "Joint processing and discriminative training for letter-to-phoneme conversion",
    "authors": ["Sittichai Jiampojamarn", "Colin Cherry", "Grzegorz Kondrak."],
    "venue": "Proceedings of ACL-08: HLT, pages 905–913, Columbus, Ohio, June. Association for Computational Lin-",
    "year": 2008
  }, {
    "title": "Integrating joint n-gram features into a discriminative training framework",
    "authors": ["Sittichai Jiampojamarn", "Colin Cherry", "Grzegorz Kondrak."],
    "venue": "HLTNAACL, pages 697–700. The Association for Computational Linguistics.",
    "year": 2010
  }, {
    "title": "A new algorithm for the alignment of phonetic sequences",
    "authors": ["Grzegorz Kondrak."],
    "venue": "Proceedings of the 1st North American Chapter of the Association for Computational Linguistics Conference, NAACL 2000, pages 288–295, Stroudsburg, PA, USA. Asso-",
    "year": 2000
  }, {
    "title": "Unconstrained many-to-many alignment for automatic pronunciation annotation",
    "authors": ["Keigo Kubo", "Hiromichi Kawanami", "Hiroshi Saruwatari", "Kiyohiro Shikano."],
    "venue": "Proceedings of Asia-Pacific Signal and Information Processing",
    "year": 2011
  }, {
    "title": "Binary Codes Capable of Correcting Deletions, Insertions and Reversals",
    "authors": ["VI Levenshtein."],
    "venue": "Soviet Physics Doklady, 10:707.",
    "year": 1966
  }, {
    "title": "Contrastive unsupervised word alignment with non-local features",
    "authors": ["Yang Liu", "Maosong Sun."],
    "venue": "Proceedings of AAAI 2015.",
    "year": 2015
  }, {
    "title": "Discriminative word alignment by linear modeling",
    "authors": ["Yang Liu", "Qun Liu", "Shouxun Lin."],
    "venue": "Computational Linguistics, pages 303–339.",
    "year": 2010
  }, {
    "title": "A general method applicable to the search for similarities in the amino acid sequence of two proteins",
    "authors": ["Saul B. Needleman", "Christian D. Wunsch."],
    "venue": "Journal of Molecular Biology, 48(3):443– 453, March.",
    "year": 1970
  }, {
    "title": "WFST-based grapheme-to-phoneme conversion: Open source tools for alignment, model-building and decoding",
    "authors": ["Josef R. Novak", "Nobuaki Minematsu", "Keikichi Hirose."],
    "venue": "Proceedings of the 10th International Workshop on Finite State Meth-",
    "year": 2012
  }, {
    "title": "Transliteration alignment",
    "authors": ["Vladimir Pervouchine", "Haizhou Li", "Bo Lin."],
    "venue": "Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on Natural Language Processing of the AFNLP:",
    "year": 2009
  }, {
    "title": "Grapheme-to-phoneme conversion using long short-term memory recurrent neural networks",
    "authors": ["Kanishka Rao", "Fuchun Peng", "Hasim Sak", "Franoise Beaufays."],
    "venue": "ICASSP 2015.",
    "year": 2015
  }, {
    "title": "Robust LTS rules with the Combilex speech technology lexicon",
    "authors": ["Korin Richmond", "Robert A.J. Clark", "Susan Fitt."],
    "venue": "INTERSPEECH, pages 1295–1298. ISCA. 1184",
    "year": 2009
  }, {
    "title": "Learning string-edit distance",
    "authors": ["Eric Sven Ristad", "Peter N. Yianilos."],
    "venue": "IEEE Trans. Pattern Anal. Mach. Intell., 20(5):522–532.",
    "year": 1998
  }, {
    "title": "Substringbased transliteration",
    "authors": ["Tarek Sherif", "Grzegorz Kondrak."],
    "venue": "John A. Carroll, Antal van den Bosch, and Annie Zaenen, editors, ACL. The Association for Computational Linguistics.",
    "year": 2007
  }, {
    "title": "Algorithms for approximate string matching",
    "authors": ["Esko Ukkonen."],
    "venue": "Information and Control, 64:100– 118.",
    "year": 1985
  }, {
    "title": "Computerized correction of phonographic errors",
    "authors": ["Jean Véronis."],
    "venue": "Computers and the Humanities, 22(1):43–56.",
    "year": 1988
  }, {
    "title": "Joint generation of transliterations from multiple representations",
    "authors": ["Lei Yao", "Grzegorz Kondrak."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies,",
    "year": 2015
  }],
  "id": "SP:bcb86c1aceb8caf94e9990c979fd76da62d755df",
  "authors": [{
    "name": "Steffen Eger",
    "affiliations": []
  }],
  "abstractText": "We investigate the need for bigram alignment models and the benefit of supervised alignment techniques in graphemeto-phoneme (G2P) conversion. Moreover, we quantitatively estimate the relationship between alignment quality and overall G2P system performance. We find that, in English, bigram alignment models do perform better than unigram alignment models on the G2P task. Moreover, we find that supervised alignment techniques may perform considerably better than their unsupervised brethren and that few manually aligned training pairs suffice for them to do so. Finally, we estimate a highly significant impact of alignment quality on overall G2P transcription performance and that this relationship is linear in nature.",
  "title": "Do we need bigram alignment models? On the effect of alignment quality on transduction accuracy in G2P"
}