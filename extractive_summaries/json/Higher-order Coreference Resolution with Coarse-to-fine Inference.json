{
  "sections": [{
    "text": "Proceedings of NAACL-HLT 2018, pages 687–692 New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics"
  }, {
    "heading": "1 Introduction",
    "text": "Recent coreference resolution systems have heavily relied on first order models (Clark and Manning, 2016a; Lee et al., 2017), where only pairs of entity mentions are scored by the model. These models are computationally efficient and scalable to long documents. However, because they make independent decisions about coreference links, they are susceptible to predicting clusters that are locally consistent but globally inconsistent. Figure 1 shows an example from Wiseman et al. (2016) that illustrates this failure case. The plurality of [you] is underspecified, making it locally compatible with both [I] and [all of you], while the full cluster would have mixed plurality, resulting in global inconsistency.\nWe introduce an approximation of higher-order inference that uses the span-ranking architecture from Lee et al. (2017) in an iterative manner. At each iteration, the antecedent distribution is used as an attention mechanism to optionally update existing span representations, enabling later corefer-\nence decisions to softly condition on earlier coreference decisions. For the example in Figure 1, this enables the linking of [you] and [all of you] to depend on the linking of [I] and [you].\nTo alleviate computational challenges from this higher-order inference, we also propose a coarseto-fine approach that is learned with a single endto-end objective. We introduce a less accurate but more efficient coarse factor in the pairwise scoring function. This additional factor enables an extra pruning step during inference that reduces the number of antecedents considered by the more accurate but inefficient fine factor. Intuitively, the model cheaply computes a rough sketch of likely antecedents before applying a more expensive scoring function.\nOur experiments show that both of the above contributions improve the performance of coreference resolution on the English OntoNotes benchmark. We observe a significant increase in average F1 with a second-order model, but returns quickly diminish with a third-order model. Additionally, our analysis shows that the coarse-to-fine approach makes the model performance relatively insensitive to more aggressive antecedent pruning, compared to the distance-based heuristic pruning from previous work.\n687"
  }, {
    "heading": "2 Background",
    "text": "Task definition We formulate the coreference resolution task as a set of antecedent assignments yi for each of span i in the given document, following Lee et al. (2017). The set of possible assignments for each yi is Y(i) = { , 1, . . . , i − 1}, a dummy antecedent and all preceding spans. Non-dummy antecedents represent coreference links between i and yi. The dummy antecedent represents two possible scenarios: (1) the span is not an entity mention or (2) the span is an entity mention but it is not coreferent with any previous span. These decisions implicitly define a final clustering, which can be recovered by grouping together all spans that are connected by the set of antecedent predictions.\nBaseline We describe the baseline model (Lee et al., 2017), which we will improve to address the modeling and computational limitations discussed previously. The goal is to learn a distribution P (yi) over antecedents for each span i :\nP (yi) = es(i,yi)∑\ny′∈Y(i) e s(i,y′)\n(1)\nwhere s(i, j) is a pairwise score for a coreference link between span i and span j. The baseline model includes three factors for this pairwise coreference score: (1) sm(i), whether span i is a mention, (2) sm(j), whether span j is a mention, and (3) sa(i, j) whether j is an antecedent of i:\ns(i, j) = sm(i) + sm(j) + sa(i, j) (2)\nIn the special case of the dummy antecedent, the score s(i, ) is instead fixed to 0. A common component used throughout the model is the vector representations gi for each possible span i. These are computed via bidirectional LSTMs (Hochreiter and Schmidhuber, 1997) that learn context-dependent boundary and head representations. The scoring functions sm and sa take these span representations as input:\nsm(i) = w > m FFNNm(gi) (3) sa(i, j) = w > a FFNNa([gi, gj , gi ◦ gj , φ(i, j)]) (4)\nwhere ◦ denotes element-wise multiplication, FFNN denotes a feed-forward neural network, and the antecedent scoring function sa(i, j) includes explicit element-wise similarity of each span gi ◦ gj and a feature vector φ(i, j) encoding speaker\nand genre information from the metadata and the distance between the two spans.\nThe model above is factored to enable a twostage beam search. A beam of up to M potential mentions is computed (whereM is proportional to the document length) based on the spans with the highest mention scores sm(i). Pairwise coreference scores are only computed between surviving mentions during both training and inference.\nGiven supervision of gold coreference clusters, the model is learned by optimizing the marginal log-likelihood of the possibly correct antecedents. This marginalization is required since the best antecedent for each span is a latent variable."
  }, {
    "heading": "3 Higher-order Coreference Resolution",
    "text": "The baseline above is a first-order model, since it only considers pairs of spans. First-order models are susceptible to consistency errors as demonstrated in Figure 1. Unlike in sentence-level semantics, where higher-order decisions can be implicitly modeled by the LSTMs, modeling these decisions at the document-level requires explicit inference due to the potentially very large surface distance between mentions.\nWe propose an inference procedure that allows the model to condition on higher-order structures, while being fully differentiable. This inference involves N iterations of refining span representations, denoted as gni for the representation of span i at iteration n. At iteration n, gni is computed with an attention mechanism that averages over previous representations gn−1j weighted according to how likely each mention j is to be an antecedent for i, as defined below.\nThe baseline model is used to initialize the span representation at g1i . The refined span representations allow the model to also iteratively refine the antecedent distributions Pn(yi):\nPn(yi) = es(g\nn i ,g n yi )\n∑ y∈Y(i) e s(gni ,g n y ))\n(5)\nwhere s is the coreference scoring function of the baseline architecture. The scoring function uses the same parameters at every iteration, but it is given different span representations.\nAt each iteration, we first compute the expected antecedent representation ani of each span i by using the current antecedent distribution Pn(yi) as\nan attention mechanism:\nani = ∑\nyi∈Y(i) Pn(yi) · gnyi (6)\nThe current span representation gni is then updated via interpolation with its expected antecedent representation ani :\nfni = σ(Wf[g n i ,a n i ]) (7) gn+1i = f n i ◦ gni + (1− fni ) ◦ ani (8)\nThe learned gate vector fni determines for each dimension whether to keep the current span information or to integrate new information from its expected antecedent. At iteration n, gni is an element-wise weighted average of approximately n span representations (assuming Pn(yi) is peaked), allowing Pn(yi) to softly condition on up to n other spans in the predicted cluster.\nSpan-ranking can be viewed as predicting latent antecedent trees (Fernandes et al., 2012; Martschat and Strube, 2015), where the predicted antecedent is the parent of a span and each tree is a predicted cluster. By iteratively refining the span representations and antecedent distributions, another way to interpret this model is that the joint distribution∏ i PN (yi) implicitly models every directed path of up to length N +1 in the latent antecedent tree."
  }, {
    "heading": "4 Coarse-to-fine Inference",
    "text": "The model described above scales poorly to long documents. Despite heavy pruning of potential mentions, the space of possible antecedents for every surviving span is still too large to fully consider. The bottleneck is in the antecedent score sa(i, j), which requires computing a tensor of size M ×M × (3|g|+ |φ|).\nThis computational challenge is even more problematic with the iterative inference from Section 3, which requires recomputing this tensor at every iteration."
  }, {
    "heading": "4.1 Heuristic antecedent pruning",
    "text": "To reduce computation, Lee et al. (2017) heuristically consider only the nearest K antecedents of each span, resulting in a smaller input of size M ×K × (3|g|+ |φ|).\nThe main drawback to this solution is that it imposes an a priori limit on the maximum distance of a coreference link. The previous work only considers up to K = 250 nearest mentions, whereas coreference links can reach much further in natural language discourse."
  }, {
    "heading": "4.2 Coarse-to-fine antecedent pruning",
    "text": "We instead propose a coarse-to-fine approach that can be learned end-to-end and does not establish an a priori maximum coreference distance. The key component of this coarse-to-fine approach is an alternate bilinear scoring function:\nsc(i, j) = g > i Wc gj (9)\nwhere Wc is a learned weight matrix. In contrast to the concatenation-based sa(i, j), the bilinear sc(i, j) is far less accurate. A direct replacement of sa(i, j) with sc(i, j) results in a performance loss of over 3 F1 in our experiments. However, sc(i, j) is much more efficient to compute. Computing sc(i, j) only requires manipulating matrices of size M × |g| and M ×M .\nTherefore, we instead propose to use sc(i, j) to compute a rough sketch of likely antecedents. This is accomplished by including it as an additional factor in the model:\ns(i, j) = sm(i) + sm(j) + sc(i, j) + sa(i, j) (10)\nSimilar to the baseline model, we leverage this additional factor to perform an additional beam pruning step. The final inference procedure involves a three-stage beam search:\nFirst stage Keep the top M spans based on the mention score sm(i) of each span.\nSecond stage Keep the top K antecedents of each remaining span i based on the first three factors, sm(i) + sm(j) + sc(i, j).\nThird stage The overall coreference s(i, j) is computed based on the remaining span pairs. The soft higher-order inference from Section 3 is computed in this final stage.\nWhile the maximum-likelihood objective is computed over only the span pairs from this final stage, this coarse-to-fine approach expands the set of coreference links that the model is capable of learning. It achieves better performance while using a much smaller K (see Figure 2)."
  }, {
    "heading": "5 Experimental Setup",
    "text": "We use the English coreference resolution data from the CoNLL-2012 shared task (Pradhan et al., 2012) in our experiments. The code for replicating these results is publicly available.1\nOur models reuse the hyperparameters from Lee et al. (2017), with a few exceptions mentioned below. In our results, we report two improvements that are orthogonal to our contributions.\n• We used embedding representations from a language model (Peters et al., 2018) at the input to the LSTMs (ELMo in the results).\n• We changed several hyperparameters:\n1. increasing the maximum span width from 10 to 30 words.\n2. using 3 highway LSTMs instead of 1. 3. using GloVe word embeddings (Pen-\nnington et al., 2014) with a window size\n1https://github.com/kentonl/e2e-coref\nof 2 for the head word embeddings and a window size of 10 for the LSTM inputs.\nThe baseline model considers up to 250 antecedents per span. As shown in Figure 2, the coarse-to-fine model is quite insensitive to more aggressive pruning. Therefore, our final model considers only 50 antecedents per span.\nOn the development set, the second-order model (N = 2) outperforms the first-order model by 0.8 F1, but the third order model only provides an additional 0.1 F1 improvement. Therefore, we only compute test results for the secondorder model."
  }, {
    "heading": "6 Results",
    "text": "We report the precision, recall, and F1 of the the MUC, B3, and CEAFφ4metrics using the official CoNLL-2012 evaluation scripts. The main evaluation is the average F1 of the three metrics.\nResults on the test set are shown in Table 1. We include performance of systems proposed in the past 3 years for reference. The baseline relative to our contributions is the span-ranking model from Lee et al. (2017) augmented with both ELMo and hyperparameter tuning, which achieves 72.3 F1. Our full approach achieves 73.0 F1, setting a new state of the art for coreference resolution.\nCompared to the heuristic pruning with up to 250 antecedents, our coarse-to-fine model only computes the expensive scores sa(i, j) for 50 antecedents. Despite using far less computation, it outperforms the baseline because the coarse scores\nsc(i, j) can be computed for all antecedents, enabling the model to potentially predict a coreference link between any two spans in the document. As a result, we observe a much higher recall when adopting the coarse-to-fine approach.\nWe also observe further improvement by including the second-order inference (Section 3). The improvement is largely driven by the overall increase in precision, which is expected since the higher-order inference mainly serves to rule out inconsistent clusters. It is also consistent with findings from Martschat and Strube (2015) who report mainly improvements in precision when modeling latent trees to achieve a similar goal."
  }, {
    "heading": "7 Related Work",
    "text": "In addition to the end-to-end span-ranking model (Lee et al., 2017) that our proposed model builds upon, there is a large body of literature on coreference resolvers that fundamentally rely on scoring span pairs (Ng and Cardie, 2002; Bengtson and Roth, 2008; Denis and Baldridge, 2008; Fernandes et al., 2012; Durrett and Klein, 2013; Wiseman et al., 2015; Clark and Manning, 2016a).\nMotivated by structural consistency issues discussed above, significant effort has also been devoted towards cluster-level modeling. Since global features are notoriously difficult to define (Wiseman et al., 2016), they often depend heavily on existing pairwise features or architectures (Björkelund and Kuhn, 2014; Clark and Manning, 2015, 2016b). We similarly use an existing pairwise span-ranking architecture as a building block for modeling more complex structures. In contrast to Wiseman et al. (2016) who use highly expressive recurrent neural networks to model clusters, we show that the addition of a relatively lightweight gating mechanism is sufficient to effectively model higher-order structures."
  }, {
    "heading": "8 Conclusion",
    "text": "We presented a state-of-the-art coreference resolution system that models higher order interactions between spans in predicted clusters. Additionally, our proposed coarse-to-fine approach alleviates the additional computational cost of higherorder inference, while maintaining the end-to-end learnability of the entire model."
  }, {
    "heading": "Acknowledgements",
    "text": "The research was supported in part by DARPA under the DEFT program (FA8750-13-2-0019), the ARO (W911NF-16-1-0121), the NSF (IIS1252835, IIS-1562364), gifts from Google and Tencent, and an Allen Distinguished Investigator Award. We also thank the UW NLP group for helpful conversations and comments on the work."
  }],
  "year": 2018,
  "references": [{
    "title": "Understanding the value of features for coreference resolution",
    "authors": ["Eric Bengtson", "Dan Roth."],
    "venue": "EMNLP.",
    "year": 2008
  }, {
    "title": "Learning structured perceptrons for coreference resolution with latent antecedents and non-local features",
    "authors": ["Anders Björkelund", "Jonas Kuhn."],
    "venue": "ACL.",
    "year": 2014
  }, {
    "title": "Entity-centric coreference resolution with model stacking",
    "authors": ["Kevin Clark", "Christopher D. Manning."],
    "venue": "ACL.",
    "year": 2015
  }, {
    "title": "Deep reinforcement learning for mention-ranking coreference models",
    "authors": ["Kevin Clark", "Christopher D. Manning."],
    "venue": "EMNLP.",
    "year": 2016
  }, {
    "title": "Improving coreference resolution by learning entitylevel distributed representations",
    "authors": ["Kevin Clark", "Christopher D. Manning."],
    "venue": "ACL.",
    "year": 2016
  }, {
    "title": "Specialized models and ranking for coreference resolution",
    "authors": ["Pascal Denis", "Jason Baldridge."],
    "venue": "EMNLP.",
    "year": 2008
  }, {
    "title": "Easy victories and uphill battles in coreference resolution",
    "authors": ["Greg Durrett", "Dan Klein."],
    "venue": "EMNLP.",
    "year": 2013
  }, {
    "title": "Latent structure perceptron with feature induction for unrestricted coreference resolution",
    "authors": ["Eraldo Rezende Fernandes", "Cı́cero Nogueira Dos Santos", "Ruy Luiz Milidiú"],
    "venue": "In CoNLL",
    "year": 2012
  }, {
    "title": "Long Short-term Memory",
    "authors": ["Sepp Hochreiter", "Jürgen Schmidhuber."],
    "venue": "Neural computation .",
    "year": 1997
  }, {
    "title": "End-to-end neural coreference resolution",
    "authors": ["Kenton Lee", "Luheng He", "Mike Lewis", "Luke S. Zettlemoyer."],
    "venue": "EMNLP.",
    "year": 2017
  }, {
    "title": "Latent structures for coreference resolution",
    "authors": ["Sebastian Martschat", "Michael Strube."],
    "venue": "TACL .",
    "year": 2015
  }, {
    "title": "Identifying anaphoric and non-anaphoric noun phrases to improve coreference resolution",
    "authors": ["Vincent Ng", "Claire Cardie."],
    "venue": "Computational linguistics .",
    "year": 2002
  }, {
    "title": "Glove: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning."],
    "venue": "EMNLP.",
    "year": 2014
  }, {
    "title": "Deep contextualized word representations",
    "authors": ["Matthew E. Peters", "Mark Neumann", "Mohit Iyyer", "Matt Gardner", "Christopher Clark", "Kenton Lee", "Luke Zettlemoyer."],
    "venue": "HLT-NAACL.",
    "year": 2018
  }, {
    "title": "Conll2012 shared task: Modeling multilingual unrestricted coreference in ontonotes",
    "authors": ["Sameer Pradhan", "Alessandro Moschitti", "Nianwen Xue", "Olga Uryupina", "Yuchen Zhang."],
    "venue": "CoNLL.",
    "year": 2012
  }, {
    "title": "Learning global features for coreference resolution",
    "authors": ["Sam Wiseman", "Alexander M Rush", "Stuart M Shieber."],
    "venue": "NAACL-HLT .",
    "year": 2016
  }, {
    "title": "Learning anaphoricity and antecedent ranking features for coreference resolution",
    "authors": ["Sam Wiseman", "Alexander M. Rush", "Stuart M. Shieber", "Jason Weston."],
    "venue": "ACL.",
    "year": 2015
  }],
  "id": "SP:e6566ece21f6637c515fe9969f9d1ec6cca6d36c",
  "authors": [{
    "name": "Kenton Lee",
    "affiliations": []
  }, {
    "name": "Luheng He",
    "affiliations": []
  }, {
    "name": "Luke Zettlemoyer",
    "affiliations": []
  }, {
    "name": "Paul G. Allen",
    "affiliations": []
  }],
  "abstractText": "We introduce a fully differentiable approximation to higher-order inference for coreference resolution. Our approach uses the antecedent distribution from a span-ranking architecture as an attention mechanism to iteratively refine span representations. This enables the model to softly consider multiple hops in the predicted clusters. To alleviate the computational cost of this iterative process, we introduce a coarse-to-fine approach that incorporates a less accurate but more efficient bilinear factor, enabling more aggressive pruning without hurting accuracy. Compared to the existing state-of-the-art span-ranking approach, our model significantly improves accuracy on the English OntoNotes benchmark, while being far more computationally efficient.",
  "title": "Higher-order Coreference Resolution with Coarse-to-fine Inference"
}