{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Work in the last decade on matrix completion has shown that it is possible to leverage linear structure in order to interpolate missing values in a low-rank matrix (Candes & Recht, 2012). The high-level idea of this work is that if the data defining the matrix belongs to a structure having fewer degrees of freedom than the entire dataset, that structure provides redundancy that can be leveraged to complete\n1Department of EECS, University of Michigan, Ann Arbor, Michigan, USA 2Department of ECE, University of Wisconsin, Madison, Wisconsin, USA. Correspondence to: Greg Ongie <gongie@umich.edu>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nthe matrix. The assumption that the matrix is low-rank is equivalent to assuming the data lies on (or near) a lowdimensional linear subspace.\nIt is of great interest to generalize matrix completion to exploit low-complexity nonlinear structures in the data. Several avenues have been explored in the literature, from generic manifold learning (Lee et al., 2013), to unions of subspaces (Eriksson et al., 2012; Elhamifar & Vidal, 2013), to low-rank matrices perturbed by a nonlinear monotonic function (Ganti et al., 2015; Song et al., 2016). In each case missing data has been considered, but there lacks a clear, unifying framework for these ideas.\nIn this work we study the problem of completing a matrix whose columns belong to an algebraic variety, i.e., the set of solutions to a system of polynomial equations (Cox et al., 2015). This is a strict generalization of the linear (or affine) subspace model, which can be written as the set of points satisfying a system of linear equations. Unions of subspaces and unions of affine spaces are also algebraic varieties. Plus, a much richer class of non-linear curves, surfaces, and their unions, are captured by a variety model.\nThe matrix completion problem using a variety model can be formalized as follows. Let X = [ x1, . . . ,xs ] ∈ Rn×s be a matrix of s data points where each column xi ∈ Rn. Define φd : Rn → RN as the mapping that sends the vector x = (x1, ..., xn) to the vector of all monomials in x1, ..., xn of degree at most d, and let φd(X) denote the matrix that results after applying φd to each column of X , which we call the lifted matrix. We will show the lifted matrix is rank deficient if and only if the columns ofX belong to an algebraic variety. This motivates the following matrix completion approach:\nmin X̂\nrankφd(X̂) such that PΩ(X̂) = PΩ(X) (1)\nwhere PΩ(·) represents a projection that restricts to some observation set Ω ⊂ {1, . . . , n} × {1, . . . , s}. The rank of φd(X̂) depends on the choice of the polynomial degree d and the underlying “complexity” of the variety, in a sense we will make precise. Figure 1 shows three examples of datasets that have low-rank in the lifted space for different polynomial degrees d.\nIn this work we investigate the factors that influence the sampling complexity of varieties as well as algorithms for\ncompletion. The challenges are (a) to characterize varieties having low-rank (and therefore few degrees of freedom) in the lifted space, i.e., determine when φd(X) is low-rank, (b) devise efficient algorithms for solving (1) that can exploit these few degrees of freedom in a matrix completion setting, and (c) determine the trade-offs relative to existing matrix completion approaches. This work contributes considerable progress towards these goals.\nOur main contributions are as follows. We identify bounds on the rank of a matrix φd(X) when the columns of the data matrix X belong to an algebraic variety. We study how many entries of such a matrix should be observed in order to recover the full matrix from an incomplete sample. We show as a case study that monomial representations produce low-rank representations of unions of subspaces, and we characterize the rank. The standard union of subspace representation as a discrete collection of individual subspaces is inherently non-smooth in nature, whereas the algebraic variety allows for a purely continuous parameterization. This leads to a general algorithm for completion of a data matrix whose columns belong to a variety. The algorithm’s performance is showcased on data simulated as a union of subspaces, a union of low-dimensional parametric surfaces, and real data from a motion segmentation dataset and a motion capture dataset. The simulations show that the performance of our algorithm matches our predictions and outperforms other methods. In addition, the analysis of the degrees of freedom associated with the proposed representations introduces several new research avenues at the intersection of nonlinear algebraic geometry and random matrix theory."
  }, {
    "heading": "1.1. Related work",
    "text": "There has been a great deal of research activity on matrix completion problems since (Candes & Recht, 2012), where the authors showed that one can recover an incomplete matrix from few entries using a convex relaxation of the rank minimization optimization problem. For example, it is now known that only O(rn) entries are necessary and sufficient (Pimentel-Alarcón et al., 2016b) for almost every n × n rank r matrix as long as the measurement pattern satisfies\ncertain deterministic conditions. However, these methods and theory are restricted to low-rank linear models. A great deal of real data exhibit nonlinear structure, and so it is of interest to generalize this approach. Work in that direction has dealt with union of subspaces models (Eriksson et al., 2012; Yang et al., 2015; Elhamifar, 2016; PimentelAlarcón et al., 2016a; Pimentel-Alarcon & Nowak, 2016), locally linear approximations (Lee et al., 2013), as well as low-rank models perturbed by an arbitrary nonlinear link function (Ganti et al., 2015; Song et al., 2016; Rao et al., 2017). In this paper we instead seek a more general model that captures both linear and nonlinear structure. The variety model has as instances low-rank subspaces and their union as well as quadratic and higher degree curves and surfaces.\nWork on kernel PCA (cf., (Sanguinetti & Lawrence, 2006; Nguyen & Torre, 2009)) leverage similar geometry to ours. In Kernel Spectral Curvature Clustering (Chen et al., 2009), the authors similarly consider clustering of data points via subspace clustering in a lifted space using kernels. These works are algorithmic in nature, with promising numerical experiments, but do not systematically consider missing data or analyze relative degrees of freedom.\nThis paper also has close ties to algebraic subspace clustering (ASC) (Vidal et al., 2003; 2005; 2016; Tsakiris & Vidal, 2015), also known as generalized PCA. Similar to our approach, the ASC framework models unions of subspaces as an algebraic variety, and makes use of monomial liftings of the data to identify the subspaces. Characterizations of the rank of data belonging to union of subspaces under the monomial lifting are used in the ASC framework (Vidal et al., 2016) based on results in (Derksen, 2007). The difference of the results in (Derksen, 2007) and those in Prop. 1 is that ours hold for monomial liftings of all degrees d, not just d ≥ k, where k is the number of subspaces. Also, the main focus of ASC is to recover unions of subspaces or unions of affine spaces, whereas we consider data belonging to a more general class of algebraic varieties. Finally, the ASC framework has not been adapted to the case of missing data, which is the main focus of this work."
  }, {
    "heading": "2. Variety Models",
    "text": "As a toy example to illustrate our approach, consider a matrix\nX = ( x1,1 x1,2 · · · x1,6 x2,1 x2,2 · · · x2,6 ) ∈ R2×6\nwhose six columns satisfy the quadratic equation\nc0+c1 x1,i+c2 x2,i+c3 x 2 1,i+c4 x1,ix2,i+c5 x 2 2,i = 0 (2)\nfor i = 1, . . . , 6 and some unknown constants c0, ..., c5 that are not all zero. Generically,X will be full rank. However,\nsuppose we vertically expand each column of the matrix to make a 6× 6 matrix\nY =  1 1 ··· 1 x1,1 x1,2 ··· x1,6 x2,1 x2,2 ··· x2,6 x21,1 x 2 1,2 ··· x 2 1,6\nx1,1x2,1 x1,2x2,2 ··· x1,6x2,6 x22,1 x 2 2,2 ··· x 2 2,6  ∈ R6×6, i.e., we augment each column of X with a 1 and with the quadratic monomials x21,i, x1,ix2,i, x 2 2,i. This allows us to re-express the polynomial equation (2) as the matrixvector product Y T c = 0 where c = (c0, c1, .., c5)T . In other words, Y is rank deficient. Suppose, for example, that we are missing entry x1,1 of X . Since X is full rank, there is no way to uniquely complete the missing entry by leveraging linear structure alone. Instead, we ask: Can we complete x1,1 using the linear structure present in Y ? Due to the missing entry x1,1, the first column of Y will having the following pattern of missing entries: (1,−, x2,1,−,−, x22,1)T . However, assuming the five complete columns in Y are linearly independent, we can uniquely determine the nullspace vector c up to a scalar multiple. Then from (2) we have\nc3 x 2 1,1 + (c1 + c4 x2,1)x1,1 = −c0 − c2 x2,1 − c5 x22,1.\nIn general, this equation will yield at most two possibilities for x1,1. Moreover, there are conditions where we can uniquely recover x1,1, namely when c3 = 0 and c1 + c4 x2,1 6= 0.\nThis example shows that even without a priori knowledge of the particular polynomial equation satisfied by the data, it is possible to uniquely recover missing entries in the original matrix by leveraging induced linear structure in the matrix of expanded monomials. We now show how to considerably generalize this example to the case of data belonging to an arbitrary algebraic variety."
  }, {
    "heading": "2.1. Formulation",
    "text": "LetX = [ x1, . . . ,xs ] ∈ Rn×s be a matrix of s data points where each column xi ∈ Rn. Define φd : Rn → RN as the mapping that sends the vector x = (x1, ..., xn) to the vector of all monomials in x1, ..., xn of degree at most d:\nφd(x) = (x α)|α|≤d ∈ RN\nwhere α = (α1, ..., αn) is a multi-index of non-negative integers, withxα := xα11 · · ·xαnn , and |α| := α1+· · ·+αn. In the context of kernel methods in machine learning, the map φd is often called a polynomial feature map (Muller et al., 2001). Borrowing this terminology, we call φd(x) a feature vector, the entries of φd(x) features, and the range of φd feature space. Note that the number of features is given by N = N(n, d) = ( n+d n ) = ( n+d d ) , the number of unique monomials in n variables of degree at most d.\nWhen X = [x1, ...,xs] is an n× s matrix, we use φd(X) to denote the N × s matrix [φd(x1), ..., φd(xs)].\nThe problem we consider is this: can we complete a partially observed matrixX under the assumption that φd(X) is low-rank? This can be posed as the optimization problem given above in (1). We give a practical algorithm for solving a relaxation of (1) in Section 4. Similar to previous work cited above on using polynomial feature maps, our method leverages the kernel trick for efficient computations. The success of this optimization and its relaxations will depend on many factors, but clearly the rank of φd(X) and the number of sampled entries will play an important role. The number of samples, rank, and dimensions all grow in the mapping to feature space, but they grow at different rates depending on the underlying geometry; it is not immediately obvious what conditions on the geometry and sampling rates impact our ability to determine the missing entries. In the remainder of this section, we show how to relate the rank of φd(X) to the underlying variety, and we study the sampling requirements necessary for the completion of the matrix in feature space."
  }, {
    "heading": "2.2. Rank properties",
    "text": "To better understand what determines the rank of the matrix φd(X), we introduce some additional notation and concepts from algebraic geometry. Let R[x] denote the space of all polynomials with real coefficients in n variables x = (x1, ..., xn). We model a collection of data as belonging to a real (affine) algebraic variety (Cox et al., 2015), which is defined as the common zero set of a system of polynomials P ⊂ R[x]:\nV (P ) = {x ∈ Rn : f(x) = 0 for all f ∈ P}.\nSuppose the variety V (P ) is defined by the finite set of polynomials P = {f1, ..., fq}, where each fi has degree at most d. Let C ∈ RN×q be the matrix whose columns are given by the vectorized coefficients (cα,i)|α|≤d of the polynomials fi(x), i = 1, ..., q in P . Then the columns of X belong to the variety V (P ) if and only if φd(X)TC = 0. In particular, assuming the columns ofC are linearly independent, this shows that φd(X) has rank≤ min(N − q, s). In particular, when the number of data points s > N − q, then φd(X) is rank deficient.\nHowever, the exact rank of φd(X) could be much smaller than min(N − q, s), especially when the degree d is large. This is because the coefficients c of any polynomial that vanishes at every column of X satisfies φd(X)T c = 0. We will find it useful to identify this space of coefficients with a finite dimensional vector space of polynomials. Let Rd[x] be the space of all polynomials in n real variables of degree at most d. We define the vanishing ideal of degree d corresponding to a set X ⊂ Rn, denoted by Id(X ), to be\nsubspace of polynomials belonging to Rd[x] that vanish at all points in X :\nId(X ) := {f ∈ Rd[x] : f(x) = 0 for all x ∈ X}.\nWe also define the non-vanishing ideal of degree d corresponding to X , denoted by Sd(X ), to be the orthogonal complement of Id(X ) in Rd[x]:\nSd(X ) :={g ∈ Rd[x] :〈f, g〉 = 0 for all f ∈ Id(X )},\nwhere the inner product 〈f, g〉 of polynomials f, g ∈ Rd[x] is defined as the inner product of their coefficient vectors. Hence, the rank R of φd(X) can expressed in terms of the dimension of non-vanishing ideal of degree d corresponding to X = {x1, ....,xs}, the set of all columns of X . Specifically, we have rank φd(X) = min(R, s) where\nR = dim Sd(X ) = N − dim Id(X ) .\nIn general the dimension of the space Id(X ) or Sd(X ) is difficult to determine when X is an arbitrary set of points. However, if we assume X is a subset of a variety V , then Id(V ) ⊆ Id(X ) and hence\nrank φd(X) ≤ dim Sd(V ).\nIn certain cases dim Sd(V ) can be computed exactly or bounded using properties of the polynomials defining V . For example, it is possible to compute the dimension of Sd(V ) directly from a Gröbner basis for the vanishing ideal associated with V (Cox et al., 2015). In Section 3 we show how to bound the dimension of Sd(V ) in the case where V is a union of subspaces."
  }, {
    "heading": "2.3. Sampling rate",
    "text": "Informally, the degrees of freedom of a class of objects is the minimum number of free variables needed to describe an element in that class uniquely. For example, a n×s rank r matrix has r(n+ s− r) degrees of freedom: nr parameters to describe r linearly independent columns making up a basis of the column space, and r(s− r) parameters to describe the remaining s − r columns in terms of this basis. It is impossible to uniquely complete a matrix in this class if we sample fewer than this many entries.\nWe can make a similar argument to specify the minimum number of samples needed to uniquely complete a matrix that is low-rank when mapped to feature space. First, we characterize how missing entries of the data matrix translate to missing entries in feature space. For simplicity, we will assume a sampling model where we sample a fixed number of entries m from each column of the original data matrix. Let x ∈ Rn represent a single column of the data matrix, and Ω ⊂ {1, ..., n} with m = |Ω| denote the indices of the sampled entries of x. The pattern of revealed\nentries in φd(x) corresponds to the set of multi-indices:\n{α = (α1, ..., αn) : |α| ≤ d, αi = 0 for all i ∈ Ωc},\nwhich has the same cardinality as the set of all monomials of degree at most d in m variables, i.e., ( m+d d ) . If we call this quantity M , then the ratio of revealed entries in φd(x) to the feature space dimension is\nM N =\n( m+d d )( n+d d ) = (m+ d)(m+ d− 1) · · · (m+ 1) (n+ d)(n+ d− 1) · · · (n+ 1) ,\nwhich is on the order of (mn ) d for small d. More precisely, we have the bounds(m n )d ≤ M N ≤ ( m+ d n )d . (3)\nIn total, observing m entries per column of the data matrix translates to M entries per column in feature space. Suppose the N × s lifted matrix φd(X) is rank R. By the preceding discussion, we need least R(N + s−R) entries of the feature space matrix φd(X) to complete it uniquely among the class of all N × s matrices of rank R. Hence, at minimum we need to satisfy\nMs ≥ R(N + s−R). (4)\nLet m0 denote the minimal value of m such that M =( m+d d ) achieves the bound (4), and set M0 = ( m0+d d ) . Dividing (4) through by the feature space dimension N and s gives\nM0 N ≥ ( R N )( N + s−R s ) = ( R s + R N ( 1− R s )) ,\n(5) and so from (3) we see we can guarantee this bound with\nρ0 := m0 n ≥ ( R s + R N ( 1− R s )) 1 d , (6)\nand this in fact will result in tight satisfaction of (5) because (M0/N) 1 d ≈ m0/n for small d and large n.\nAt one extreme where the matrix φd(X) is full rank, then R/s = 1 or R/N = 1 and according to (6) we need ρ0 ≈ 1, i.e., full sampling of every data column. At the other extreme where instead we have many more data points than the feature space rank, R/s 1, then (6) gives the asymptotic bound ρ0 ≈ (R/N) 1 d .\nThe above discussion bounds the degrees of freedom of a matrix that is rank-R in feature space. Of course, the proposed variety model has potentially fewer degrees of freedom than this, because additionally the columns of the lifted matrix are constrained to lie in the image of the feature map. We use the above bound only as a rule of thumb\nfor sampling requirements on our matrix. Furthermore, we note that sample complexities for standard matrix completion often require that locations are observed uniformly at random, whereas in our problem the locations of observations in the lifted space will necessarily be structured. However, there is recent work that shows matrix completion can suceed without these assumptions (PimentelAlarcón et al., 2016b; Chen et al., 2014) that gives reason to believe random samples in the original space may allow completion in the lifted space, and our empirical results in Section 5 support this rationale."
  }, {
    "heading": "3. Case Study: Union of Affine Subspaces",
    "text": "A union of affine subspaces can be modeled as an algebraic variety. For example, with (x, y, z) ∈ R3, the union of the plane z = 1 and the line x = y is the zero-set of the quadratic polynomial (z − 1)(x− y). In general, if A1,A2 ⊂ Rn are affine spaces of dimension r1 and r2, respectively, then we can write A1 = {x : fi(x) = 0 for i = 1, ..., n− r1} and A2 = {x : gi(x) = 0 for i = 1, ..., n− r2} where the fi and gi are affine functions. The union A ∪ B can be expressed as the common zero set of all possible products of the fi and gi, i.e., A1 ∪ A2 is the common zero set of a system of (n− r1)(n− r2) quadratic equations. Similarly, a union of k affine subspaces of dimensions r1, ..., rk is a variety described by a system of ∏k i=1(n− ri) polynomial equations of degree k.\nIn this section we establish bounds on the feature space rank for data belonging to a union of affine subspaces. We will make use of the following lemma that shows the dimension of a vanishing ideal is fixed under an affine change of variables:\nLemma 1. Let T : Rn → Rn be an affine change of variables, i.e., T (x) = Ax+b, where b ∈ Rn andA ∈ Rn×n is invertible. Then for any S ⊂ Rn,\ndim Id(S) = dim Id(T (S)). (7)\nWe omit the proof for brevity, but the result is elementary and relies on the fact the degree of a polynomial is unchanged under an affine change of variables. Our next result establishes a bound on the feature space rank for a single affine subspace:\nProposition 1. If the columns of a matrixXn×s belong to an affine subspace of dimension at most r, then\nrankφd(X) ≤ ( r + d\nd\n) , for all d ≥ 1. (8)\nProof. By Lemma 1, dim Id(A) is preserved under an affine transformation of A. Note that we can always find an affine change of variables y = Ax + c with invertible A ∈ Rn×n and c ∈ Rn such that in the coordinates\ny = (y1, ..., yn) the variety A becomes\nA = {(y1, . . . , yr, 0, . . . , 0) : y1, ..., yr ∈ R}. (9)\nFor any polynomial f(y) = ∑ |α|≤d cαy\nα, the only monomial terms in f(y) that do not vanish on A are those of the form yα11 · · · yαrr . Furthermore, any polynomial in just these monomials that vanishes on all ofA must be the zero polynomial, since the y1, ..., yr are free variables. Hence,\nSd(A) = span{yα11 · · · yαrr : α1 + · · ·+ αr ≤ d} (10)\ni.e., the non-vanishing ideal coincides with the space of polynomials in r variables of degree at most d, which has dimension ( r+d d ) , proving the claim. We note that for s sufficiently large, the bound in (8) becomes an equality, provided the data points are distributed generically within the affine subspace, meaning they are not the solution to additional non-trivial polynomial equations of degree at most d.\nProposition 1 shows that points belonging to a single affine subspace of dimension r are mapped to a linear subspace of dimension ( r+d d ) under φd. Therefore, if the columns of a data matrix are drawn from a union of k affine subspaces of dimension r, their image under φd will belong to a union of k linear subspaces each of dimension at most ( r+d d ) . The\nlinear span of this union has dimension at most k ( r+d d ) , which yields the following result:\nProposition 2. If the columns of a matrixXn×s belong to a union of k affine subspaces each of dimension at most r, then\nrankφd(X) ≤ k ( r + d\nd\n) , for all d ≥ 1. (11)\nIn some cases the bound (11) is (nearly) tight. For example, if the data lies on the union of two r-dimensional affine subspaces A and B that are mutually orthogonal, one can show1 rankφd(X) = 2 ( r+d d ) − 1. Empirically, we observe that the bound in (11) is order-optimal with respect to k, r, and d. In this case, the feature space rank to dimension ratio is R/N = O(k ( r n )d ). Recall that the minimum sampling rate is approximately (R/N) 1 d for s R. Hence the mininum number of samples per column m should be\nm ≈ O(k 1d r). (12)\nThis rate is favorable to low-rank matrix completion approaches, which need m = O(kr) for a union of k subspaces having dimension r. At first glance, this bound suggests it is always better to take the degree d as large as possible. However, this is only true for sufficiently large s.\n1The rank is one less than the bound in (11) because Sd(A) ∩ Sd(B) has dimension one, coinciding with the space of constant polynomials.\nTo take advantage of the improved sampling rate implied by (12), according to (6) we need the number of data vectors per subspace to be O(rd). In other words, our model is able to accommodate more subspaces with larger d but at the expense of requiring exponentially more data points per subspace. Note that if the number of data points is sufficiently large, we could take d = log k and require only m ≈ O(r) observed entries per column. In this case, for moderately sized k (e.g., k ≤ 20) we should choose d = 2 or 3. In fact, we find that for these values of d we get excellent empirical results for the recovery of union of subspaces data, as shown in Section 5."
  }, {
    "heading": "4. Algorithm",
    "text": "There are several existing matrix completion algorithms that could potentially be adapted to solve a relaxation of the rank minimization problem (1), such as singular value thresholding (Cai et al., 2010), or alternating minimization (Jain et al., 2013). However, these approaches do not easily lend themselves to “kernelized” implementations, i.e., ones that do not require forming the high-dimensional lifted matrix φd(X) explicitly, but instead make use of the efficiently computable kernel function for polynomial feature maps 2\nkd(x,y) := φd(x) Tφd(y) = (x Ty + 1)d. (13)\nFor matrices X = [x1, ...,xs],Y = [y1, ...,ys] ∈ Rn×s, we use kd(X,Y ) to denote the matrix whose (i, j)-th entry is kd(xi,yj), or equivalently,\nkd(X,Y ) := φd(X) Tφd(Y ) = (X TY + 1) d, (14)\nwhere 1 ∈ Rs×s is the matrix of all ones, and (·) d denotes the entrywise d-th power of a matrix. A kernelized implentation is critical for even modest sizes of d, since the number of rows of the lifted matrix scales exponentially with d.\nOne class of algorithm that kernelizes very naturally is the iterative reweighted least squares (IRLS) approach of (Fornasier et al., 2011; Mohan & Fazel, 2012) for low-rank matrix completion. The algorithm also has the advantage of being able to accommodate the non-convex Schatten-p relaxation of the rank penalty, in addition to the convex nuclear norm relaxation. Specifically, we use an IRLS approach to solve the following variety-based matrix completion (VMC) optimization problem:\nmin X ‖φd(X)‖pSp s.t. PΩ(X) = PΩ(X0), (VMC)\n2Strictly speaking, kd is not kernel associated with the polynomial feature map φd as defined in (2.1). Instead, it is the kernel of the related map φ̃d(x) := { √ cαx\nα : |α| ≤ d} where cα are appropriately chosen multinomial coefficients.\nAlgorithm 1 Kernelized IRLS to solve (VMC). Require: InitializeX = X0, γ = γ0. Choose η,γmin.\nwhile not converged do Step 1: Inverse power of kernel matrix K ← kd(X,X) (V ,S) = eig(K). W ← V (S + γI) p 2−1V T\nStep 2: Projected gradient descent step τ ← γ1− p 2 X ←X − τX(W kd−1(X,X)) X ← PΩ(X0) + PΩc(X) γ ← max{γ/η, γmin}\nend while\nwhere ‖Y ‖Sp is the Schatten-p quasi-norm defined as\n‖Y ‖Sp := (∑ i σi(Y ) p ) 1 p , 0 < p ≤ 1 (15)\nwith σi(Y ) denoting the ith singular value of Y . Algorithm 1 gives the pseudo-code of the proposed IRLS algorithm for solving (VMC), which we derive below.\nFirst, consider the simpler problem of minimizing the Schatten-p norm of a matrix variable Y belonging to a constraint set C. The main idea behind the IRLS approach is re-express the Schatten-p quasi-norm as\n‖Y ‖pSp = tr[(Y TY ) p 2 ] = tr[(Y TY )W ], (16)\nwhere W := (Y TY ) p 2−1. Note if W is treated as constant, then (16) is a smooth, quadratic function of Y . This motivates the following iterative approach:\nWn = (Y T n Yn + γn)\np 2−1\nYn+1 = arg min Y ∈C\ntr[(Y TY )Wn].\nHere γn is a sequence of smoothing parameters satisfying γn → γmin as n → ∞, where γmin is close to zero, which is included to improve numerical stability and avoid local minima; this is equivalent to minimizing a smooth approximation of the Schatten-p cost (Mohan & Fazel, 2012).\nMaking the substitution Y = φd(X) in the above derivation, gives the following approach for solving (VMC):\nWn = (k(Xn,Xn) + γnI) p 2−1\nXn+1 = arg min X\ntr[k(X,X)Wn] s.t. PΩ(X) = PΩ(X0)\nRather than finding the exact minimum in the X update, which could be costly, following the approach in (Mohan & Fazel, 2012), we instead take a single projected gradient descent step to update X . A straightforward calculation shows that the gradient of\nthe objective F (X) = tr[k(X,X)W ] is given by ∇F (X) = X(W kd−1(X,X)), where denotes an entry-wise product. Hence a projected gradient step with step-size τn > 0 is given by\nX̃n = Xn − τnXn(Wn kd−1(Xn,Xn)) Xn = PΩ(X0) + PΩc(X̃n).\nSimilar to (Mohan & Fazel, 2012), one can show that every limit point of the above iterates converges to a stationary point of a smoothed Schatten-p cost for appropriate choices of step-sizes τn. Heuristics are given in (Mohan & Fazel, 2012) for updating the smoothing parameter γn, which we adopt as well. Specifically, we set γn = γ0/ηn, where γ0 and η are user-defined parameters, and update τn = γ 1−p/2 n . The appropriate choice of γ0 and η will depend on the scaling and spectral properties of the data. Empirically, we find that setting γ0 = (0.1)dλmax, where λmax is the largest eigenvalue of the kernel matrix obtained from the initialization, and η = 1.01 work well in a variety of settings. For all our experiments in Section 5 we fix p = 1/2, which was found to give the best matrix recovery results for synthetic data. We also use a zero-filled initializationX0 in all cases."
  }, {
    "heading": "5. Numerical Experiments",
    "text": ""
  }, {
    "heading": "5.1. Empirical validation of sampling bounds",
    "text": "In Figure 2 we report the results of two experiments to validate the predicted minimum sampling rate ρ0 in (4) on synthetic variety data. In the first experiment we generated n× s data matrices whose columns belong to a union of k subspaces each of dimension r (with n = 15, s = 100k,\nr = 3). In the second experiment we generated data matrices of size 20 × 300 whose columns belong to a union of randomly generated parametric surfaces of low dimension, where we sorted each dataset by its empirically determined feature space rank R. For both experiments, we undersampled each column of the matrix taking m entries uniformly at random at various values of k and R, and then attempted to recover the missing entries using our proposed IRLS algorithm for VMC (Algorithm 1 with p = 1/2) for d = 2, 3. For the union of subspaces data, we also compare with low-rank matrix completion in the original matrix domain via nuclear norm minimization (LRMC) and non-convex Schatten-1/2 minimization (LRMC-NCVX), implemented using Algorithm 1 with a linear kernel (d = 1 in (13)). We said a column was successfully recovered if ‖x−x0‖/‖x0‖ ≤ 10−5, where x is the recovered column and x0 is the original column. For each pair of parameters (m, k) or (m,R) we perform 10 random trials to determine the probability of successful recovery.\nConsistent with our theory, VMC is successful at recovering most of the data columns above the predicted minimum sampling rate, substantially extending the range of recovery over LRMC. While VMC often fails to recover 100% of the columns near the predicted rate, in fact a large proportion of the columns (%99–%90) are still successfully completed. Sometimes the recovery dips below the predicted rate (e.g., VMC, d = 2 in Fig. 2(a) and VMC, d = 3 in Fig. 2(b)). However, since the predicted rate relies on what is likely an over-estimate of the true degrees of freedom, it is not surprising that the VMC algorithm occasionally succeeds below this rate, too."
  }, {
    "heading": "5.2. Motion segmentation of real data",
    "text": "In Figure 3 we apply VMC to the problem of motion segmentation (Kanatani, 2001) with missing data using the Hopkins 155 dataset (Tron & Vidal, 2007). This data consists of several feature points tracked across frames of the video. We reproduce the experimental setting in (Yang et al., 2015), and simulate high-rank data by undersampling frames of the dataset. We simulate missing trajectories by sampling uniformly at random from the feature points across all frames. To obtain a clustering we first completed the missing entries using VMC and then ran the sparse subspace clustering (SSC) algorithm (Elhamifar & Vidal, 2009) on the result, calling this VMC+SSC. A similar approach of standard LRMC followed by SSC (LRMC+SSC) provides a consistent baseline for subspace clustering with missing data (Yang et al., 2015; Elhamifar, 2016). We also compare against SSC with entrywise zerofill (SSC-EWZF) (Yang et al., 2015). We find the VMC+SSC approach gives similar or lower clustering error than LRMC+SCC for low missing rates. Likewise, VMC+SSC also substantially outperforms SSC-EWZF for high missing rates. Unlike SSC-EWZF and the other algorithms in (Yang et al., 2015), VMC+SSC also succeeds in setting where the data is low-rank (i.e., when all frames are retained). This is because the performance of VMC is similar to standard LRMC in the low-rank setting."
  }, {
    "heading": "5.3. Completion of motion capture data",
    "text": "In Figure 4 we demonstrate VMC for completing timeseries trajectories from motion capture sensors using a dataset from the CMU Mocap database3 (subject 56, trial 6). Empirically, this dataset has been shown to be locally low-rank over the time frames corresponding to each separate activity, and can be modeled as a union of subspaces (Elhamifar, 2016). The data had measurements from n = 62 sensors at s = 6784 time instants. We randomly undersampled the columns of this matrix and attempt to complete the data using VMC, LRMC, and LRMC-NCVX and measure the resulting completion error: ‖X −X0‖F /‖X0‖F , where X is the recovered matrix and X0 is the original matrix. Similar to results on synthetic data, we find the\n3http://mocap.cs.cmu.edu\nVMC approach outperforms LRMC-NCVX for appropriately chosen degree d. In particular, VMC with d = 2, 3 perform similar for small missing rates, but VMC d = 2 gives lower completion error over d = 3 for large missing rates, consistent with the results in Figure 2."
  }, {
    "heading": "6. Conclusion",
    "text": "We introduce a matrix completion approach that generalizes low-rank matrix completion to a much wider class of variety models, including data belonging to a union of subspaces. We present a hypothesized sampling complexity bound for the completion of a matrix whose columns belong to an algebraic variety. A surprising result of our analysis that that a union of k affine subspaces of dimension r should be recoverable fromO(rk1/d) measurements per column, provided we haveO(rd) data points (columns) per subspace, where d is the degree of the feature space map. In particular, if we choose d = log k, then we need only O(r) measurements per column as long as we have O(rlog k) columns per subspace. We additionally introduce an efficient algorithm based on an iterative reweighted least squares approach that realizes these hypothesized bounds on synthetic data, and reaches state-of-the-art performance on for matrix completion on several real high-rank datasets.\nOur algorithm can easily accommodate other smooth kernels, including the popular Gaussian RBF kernel (Muller et al., 2001). A similar optimization formulation to ours was presented in the recent pre-print (Garg et al., 2016) using Gaussian RBF kernels in place of polynomial kernels, showing good empirical results in a matrix completion context. However, analysis of the sample complexity in this case is complicated by the fact that a feature space representation for Gaussian RBF kernel is necessarily infinitedimensional. Understanding the sample requirements in this case would be an interesting avenue for future work."
  }, {
    "heading": "Acknowledgements",
    "text": "For this work, Balzano and Ongie were supported in part by ARO grant W911NF-14-1-0634. Willett and Nowak were supported in part by NSF IIS-1447449, NSF CCF0353079, and NIH 1 U54 AI117924-01, and Nowak also by AFOSR FA9550-13-1-0138."
  }],
  "year": 2017,
  "references": [{
    "title": "A singular value thresholding algorithm for matrix completion",
    "authors": ["Cai", "Jian-Feng", "Candès", "Emmanuel J", "Shen", "Zuowei"],
    "venue": "SIAM Journal on Optimization,",
    "year": 1956
  }, {
    "title": "Exact matrix completion via convex optimization",
    "authors": ["Candes", "Emmanuel", "Recht", "Benjamin"],
    "venue": "Communications of the ACM,",
    "year": 2012
  }, {
    "title": "Kernel spectral curvature clustering (kscc)",
    "authors": ["Chen", "Guangliang", "Atev", "Stefan", "Lerman", "Gilad"],
    "venue": "In Computer Vision Workshops (ICCV Workshops),",
    "year": 2009
  }, {
    "title": "Coherent matrix completion",
    "authors": ["Chen", "Yudong", "Bhojanapalli", "Srinadh", "Sanghavi", "Sujay", "Ward", "Rachel"],
    "venue": "In Proceedings of The 31st International Conference on Machine Learning,",
    "year": 2014
  }, {
    "title": "Ideals, Varieties, and Algorithms",
    "authors": ["Cox", "David A", "Little", "John", "O’Shea", "Donal"],
    "year": 2015
  }, {
    "title": "Hilbert series of subspace arrangements",
    "authors": ["Derksen", "Harm"],
    "venue": "Journal of pure and applied algebra,",
    "year": 2007
  }, {
    "title": "High-rank matrix completion and clustering under self-expressive models",
    "authors": ["Elhamifar", "Ehsan"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2016
  }, {
    "title": "Sparse subspace clustering",
    "authors": ["Elhamifar", "Ehsan", "Vidal", "René"],
    "venue": "In Computer Vision and Pattern Recognition,",
    "year": 2009
  }, {
    "title": "Sparse subspace clustering: Algorithm, theory, and applications",
    "authors": ["Elhamifar", "Ehsan", "Vidal", "René"],
    "venue": "IEEE transactions on pattern analysis and machine intelligence,",
    "year": 2013
  }, {
    "title": "High-rank matrix completion",
    "authors": ["Eriksson", "Brian", "Balzano", "Laura", "Nowak", "Robert D"],
    "venue": "In AISTATS, pp",
    "year": 2012
  }, {
    "title": "Low-rank matrix recovery via iteratively reweighted least squares minimization",
    "authors": ["Fornasier", "Massimo", "Rauhut", "Holger", "Ward", "Rachel"],
    "venue": "SIAM Journal on Optimization,",
    "year": 2011
  }, {
    "title": "Matrix completion under monotonic single index models",
    "authors": ["Ganti", "Ravi Sastry", "Balzano", "Laura", "Willett", "Rebecca"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2015
  }, {
    "title": "Non-linear dimensionality regularizer for solving inverse problems",
    "authors": ["Garg", "Ravi", "Eriksson", "Anders", "Reid", "Ian"],
    "venue": "arXiv preprint arXiv:1603.05015,",
    "year": 2016
  }, {
    "title": "Low-rank matrix completion using alternating minimization",
    "authors": ["Jain", "Prateek", "Netrapalli", "Praneeth", "Sanghavi", "Sujay"],
    "venue": "In Proceedings of the forty-fifth annual ACM symposium on Theory of computing,",
    "year": 2013
  }, {
    "title": "Motion segmentation by subspace separation and model selection",
    "authors": ["Kanatani", "Ken-ichi"],
    "venue": "In Computer Vision,",
    "year": 2001
  }, {
    "title": "Local low-rank matrix approximation",
    "authors": ["Lee", "Joonseok", "Kim", "Seungyeon", "Lebanon", "Guy", "Singer", "Yoram"],
    "venue": "ICML (2),",
    "year": 2013
  }, {
    "title": "Iterative reweighted algorithms for matrix rank minimization",
    "authors": ["Mohan", "Karthik", "Fazel", "Maryam"],
    "venue": "The Journal of Machine Learning Research,",
    "year": 2012
  }, {
    "title": "An introduction to kernel-based learning algorithms",
    "authors": ["Muller", "K-R", "Mika", "Sebastian", "Ratsch", "Gunnar", "Tsuda", "Koji", "Scholkopf", "Bernhard"],
    "venue": "IEEE Transactions on Neural Networks,",
    "year": 2001
  }, {
    "title": "Robust kernel principal component analysis",
    "authors": ["Nguyen", "Minh H", "Torre", "Fernando"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2009
  }, {
    "title": "Group-sparse subspace clustering with missing data",
    "authors": ["D Pimentel-Alarcón", "L Balzano", "R Marcia", "R Nowak", "R. Willett"],
    "venue": "In Statistical Signal Processing Workshop (SSP),",
    "year": 2016
  }, {
    "title": "The information-theoretic requirements of subspace clustering with missing data",
    "authors": ["Pimentel-Alarcon", "Daniel", "Nowak", "Robert"],
    "venue": "In Proceedings of The 33rd International Conference on Machine Learning,",
    "year": 2016
  }, {
    "title": "A characterization of deterministic sampling patterns for low-rank matrix completion",
    "authors": ["Pimentel-Alarcón", "Daniel L", "Boston", "Nigel", "Nowak", "Robert D"],
    "venue": "IEEE Journal of Selected Topics in Signal Processing,",
    "year": 2016
  }, {
    "title": "On learning high dimensional structured single index models",
    "authors": ["Rao", "Nikhil", "Ganti", "Ravi", "Balzano", "Laura", "Willett", "Rebecca", "Nowak", "Robert"],
    "venue": "In Proceedings of the 31st AAAI conference on artificial intelligence,",
    "year": 2017
  }, {
    "title": "Missing data in kernel PCA",
    "authors": ["Sanguinetti", "Guido", "Lawrence", "Neil D"],
    "venue": "In European Conference on Machine Learning,",
    "year": 2006
  }, {
    "title": "Blind regression: Nonparametric regression for latent variable models via collaborative filtering",
    "authors": ["Song", "Dogyoon", "Lee", "Christina E", "Li", "Yihua", "Shah", "Devavrat"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2016
  }, {
    "title": "A benchmark for the comparison of 3-d motion segmentation algorithms",
    "authors": ["Tron", "Roberto", "Vidal", "René"],
    "venue": "In Computer Vision and Pattern Recognition,",
    "year": 2007
  }, {
    "title": "Algebraic clustering of affine subspaces",
    "authors": ["Tsakiris", "Manolis C", "Vidal", "René"],
    "venue": "arXiv preprint arXiv:1509.06729,",
    "year": 2015
  }, {
    "title": "An algebraic geometric approach to the identification of a class of linear hybrid systems",
    "authors": ["Vidal", "René", "Soatto", "Stefano", "Ma", "Yi", "Sastry", "Shankar"],
    "venue": "In Decision and Control,",
    "year": 2003
  }, {
    "title": "Generalized principal component analysis (GPCA)",
    "authors": ["Vidal", "René", "Ma", "Yi", "Sastry", "Shankar"],
    "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,",
    "year": 1945
  }, {
    "title": "Generalized Principal Component Analysis",
    "authors": ["Vidal", "René", "Ma", "Yi", "Sastry", "Shankar"],
    "year": 2016
  }, {
    "title": "Sparse subspace clustering with missing entries",
    "authors": ["Yang", "Congyuan", "Robinson", "Daniel", "Vidal", "René"],
    "venue": "In Proceedings of The 32nd International Conference on Machine Learning,",
    "year": 2015
  }],
  "id": "SP:0ff29dc8b03957ae9d61b856a38a097e7177b27d",
  "authors": [{
    "name": "Greg Ongie",
    "affiliations": []
  }, {
    "name": "Rebecca Willett",
    "affiliations": []
  }, {
    "name": "Robert D. Nowak",
    "affiliations": []
  }, {
    "name": "Laura Balzano",
    "affiliations": []
  }],
  "abstractText": "We consider a generalization of low-rank matrix completion to the case where the data belongs to an algebraic variety, i.e., each data point is a solution to a system of polynomial equations. In this case the original matrix is possibly high-rank, but it becomes low-rank after mapping each column to a higher dimensional space of monomial features. Many well-studied extensions of linear models, including affine subspaces and their union, can be described by a variety model, as well as a rich class of nonlinear quadratic and higher degree curves and surfaces. We study the sampling requirements for matrix completion under a variety model with a focus on a union of affine subspaces. We also propose an efficient matrix completion algorithm that minimizes a convex or non-convex surrogate of the rank of the matrix of monomial features, using the wellknown “kernel trick” to avoid working directly with the high-dimensional monomial matrix. We show the proposed algorithm is able to recover synthetically generated data up to the predicted sampling complexity bounds, and outperforms standard low rank matrix completion and subspace clustering algorithms in experiments with real data.",
  "title": "Algebraic Variety Models for High-Rank Matrix Completion"
}