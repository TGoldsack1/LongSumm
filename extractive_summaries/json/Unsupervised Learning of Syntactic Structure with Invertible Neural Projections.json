{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1292–1302 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n1292"
  }, {
    "heading": "1 Introduction",
    "text": "Data annotation is a major bottleneck for the application of supervised learning approaches to many problems. As a result, unsupervised methods that learn directly from unlabeled data are increasingly important. For tasks related to unsupervised syntactic analysis, discrete generative models have dominated in recent years – for example, for both part-of-speech (POS) induction (Blunsom and Cohn, 2011; Stratos et al., 2016) and unsupervised dependency parsing (Klein and Manning,\n1Code is available at https://github.com/jxhe/structlearning-with-flow.\n(a) Traditional pre-trained skip-gram embeddings (b) Learned latent embeddings from our approach\nFigure 1: Visualization (t-SNE) of skip-gram embeddings (trained on one billion words with context window size equal to 1) and latent embeddings learned by our approach with a Markov-structured prior. Each node represents a word and is colored according to the most likely gold POS tag from the Penn Treebank (best seen in color).\n2004; Cohen and Smith, 2009; Pate and Johnson, 2016). While similar models have had success on a range of unsupervised tasks, they have mostly ignored the apparent utility of continuous word representations evident from supervised NLP applications (He et al., 2017; Peters et al., 2018). In this work, we focus on leveraging and explicitly representing continuous word embeddings within unsupervised models of syntactic structure.\nPre-trained word embeddings from massive unlabeled corpora offer a compact way of injecting a prior notion of word similarity into models that would otherwise treat words as discrete, isolated categories. However, the specific properties of language captured by any particular embedding scheme can be difficult to control, and, further, may not be ideally suited to the task at hand. For example, pre-trained skip-gram embeddings (Mikolov et al., 2013) with small context window size are found to capture the syntactic properties of language well (Bansal et al., 2014; Lin et al., 2015). However, if our goal is to separate syntactic categories, this embedding space is not ideal – POS categories correspond to overlap-\nping interspersed regions in the embedding space, evident in Figure 1(a).\nIn our approach, we propose to learn a new latent embedding space as a projection of pretrained embeddings (depicted in Figure 1(b)), while jointly learning latent syntactic structure – for example, POS categories or syntactic dependencies. To this end, we introduce a new generative model (shown in Figure 2) that first generates a latent syntactic representation (e.g. a dependency parse) from a discrete structured prior (which we also call the “syntax model”), then, conditioned on this representation, generates a sequence of latent embedding random variables corresponding to each word, and finally produces the observed (pre-trained) word embeddings by projecting these latent vectors through a parameterized non-linear function. The latent embeddings can be jointly learned with the structured syntax model in a completely unsupervised fashion.\nBy choosing an invertible neural network as our non-linear projector, and then parameterizing our model in terms of the projection’s inverse, we are able to derive tractable exact inference and marginal likelihood computation procedures so long as inference is tractable in the underlying syntax model. In §3.1 we show that this derivation corresponds to an alternate view of our approach whereby we jointly learn a mapping of observed word embeddings to a new embedding space that is more suitable for the syntax model, but include an additional Jacobian regularization term to prevent information loss.\nRecent work has sought to take advantage of word embeddings in unsupervised generative\nmodels with alternate approaches (Lin et al., 2015; Tran et al., 2016; Jiang et al., 2016; Han et al., 2017). Lin et al. (2015) build an HMM with Gaussian emissions on observed word embeddings, but they do not attempt to learn new embeddings. Tran et al. (2016), Jiang et al. (2016), and Han et al. (2017) extend HMM or dependency model with valence (DMV) (Klein and Manning, 2004) with multinomials that use word (or tag) embeddings in their parameterization. However, they do not represent the embeddings as latent variables.\nIn experiments, we instantiate our approach using both a Markov-structured syntax model and a tree-structured syntax model – specifically, the DMV. We evaluate on two tasks: part-of-speech (POS) induction and unsupervised dependency parsing without gold POS tags. Experimental results on the Penn Treebank (Marcus et al., 1993) demonstrate that our approach improves the basic HMM and DMV by a large margin, leading to the state-of-the-art results on POS induction, and state-of-the-art results on unsupervised dependency parsing in the difficult training scenario where neither gold POS annotation nor punctuation-based constraints are available."
  }, {
    "heading": "2 Model",
    "text": "As an illustrative example, we first present a baseline model for Markov syntactic structure (POS induction) that treats a sequence of pre-trained word embeddings as observations. Then, we propose our novel approach, again using Markov structure, that introduces latent word embedding variables and a neural projector. Lastly, we extend our approach to more general syntactic structures."
  }, {
    "heading": "2.1 Example: Gaussian HMM",
    "text": "We start by describing the Gaussian hidden Markov model introduced by Lin et al. (2015), which is a locally normalized model with multinomial transitions and Gaussian emissions. Given a sentence of length `, we denote the latent POS tags as z = {zi}`i=1, observed (pre-trained) word embeddings as x = {xi}`i=1, transition parameters as θ, and Gaussian emission parameters as η. The joint distribution of data and latent variables factors as:\np(z,x;θ,η) = ∏`\ni=1 pθ(zi|zi−1)pη(xi|zi), (1)\nwhere pθ(zi|zi−1) is the multinomial transition probability and pη(xi|zi) is the multivariate Gaussian emission probability.\nWhile the observed word embeddings do inform this model with a notion of word similarity – lacking in the basic multinomial HMM – the Gaussian emissions may not be sufficiently flexible to separate some syntactic categories in the complex pretrained embedding space – for example the skipgram embedding space as visualized in Figure 1(a) where different POS categories overlap. Next we introduce a new approach that adds flexibility to the emission distribution by incorporating new latent embedding variables."
  }, {
    "heading": "2.2 Markov Structure with Neural Projector",
    "text": "To flexibly model observed embeddings and yield a new representation space that is more suitable for the syntax model, we propose to cascade a neural network as a projection function, deterministically transforming the simple space defined by the Gaussian HMM to the observed embedding space. We denote the latent embedding of the ith word in a sentence as ei ∈ Rde , and the neural projection function as f , parameterized by φ. In the case of sequential Markov structure, our new model corresponds to the following generative process:\nFor each time step i = 1, 2, · · · , `,\n• Draw the latent state zi ∼ pθ(zi|zi−1) • Draw the latent embedding ei ∼ N (µzi ,Σzi) • Deterministically produce embedding xi = fφ(ei)\nThe graphical model is depicted in Figure 2. The deterministic projection can also be viewed as sampling each observation from a point mass at\nfφ(ei). The joint distribution of our model is:\np(z, e,x;θ,η,φ) = ∏`\ni=1 [pθ(zi|zi−1)pη(ei|zi)pφ(xi|ei)],\n(2)\nwhere pη(·|zi) is a conditional Gaussian distribution, and pφ(xi|ei) is the Dirac delta function centered at fφ(ei):\npφ(xi|ei) = δ(xi−fφ(ei)) = { ∞ xi = fφ(ei) 0 otherwise\n(3)"
  }, {
    "heading": "2.3 General Structure with Neural Projector",
    "text": "Our approach can be applied to a broad family of structured syntax models. We denote latent embedding variables as e = {ei}`i=1, discrete latent variables in the syntax model as z = {zk}Kk=1 (K > `), where z1, z2, . . . , z` are conditioned to generate e1, e2, . . . , e`. The joint probability of our model factors as:\np(z, e,x;θ,η,φ) = ∏`\ni=1\n[ pη(ei|zi)pφ(xi|ei) ] · psyntax(z;θ), (4)\nwhere psyntax(z;θ) represents the probability of the syntax model, and can encode any syntactic structure – though, its factorization structure will determine whether inference is tractable in our full model. As shown in Figure 2, we focus on two syntax models for syntactic analysis in this paper. The first is Markov-structured, which we use for POS induction, and the second is DMV-structured, which we use to learn dependency parses without supervision.\nThe marginal data likelihood of our model is: p(x) = ∑\nz\n( psyntax(z;θ)\n· ∏`\ni=1 [ ∫ ei\npη(ei|zi)pφ(xi|ei)dei︸ ︷︷ ︸ p(xi|zi)\n]) .\n(5)\nWhile the discrete variables z can be marginalized out with dynamic program in many cases, it is generally intractable to marginalize out the latent continuous variables, ei, for an arbitrary projection f in Eq. (5), which means inference and learning may be difficult. In §3, we address this issue by constraining f to be invertible, and show that this constraint enables tractable exact inference and marginal likelihood computation."
  }, {
    "heading": "3 Learning & Inference",
    "text": "In this section, we introduce an invertibility condition for our neural projector to tackle the optimization challenge. Specifically, we constrain our neural projector with two requirements: (1) dim(x) = dim(e) and (2) f−1φ exists. Invertible transformations have been explored before in independent components analysis (Hyvärinen et al., 2004), gaussianization (Chen and Gopinath, 2001), and deep density models (Dinh et al., 2014, 2016; Kingma and Dhariwal, 2018), for unstructured data. Here, we generalize this style of approach to structured learning, and augment it with discrete latent variables (zi). Under the invertibility condition, we derive a learning algorithm and give another view of our approach revealed by the objective function. Then, we present the architecture of a neural projector we use in experiments: a volume-preserving invertible neural network proposed by Dinh et al. (2014) for independent components estimation."
  }, {
    "heading": "3.1 Learning with Invertibility",
    "text": "For ease of exposition, we explain the learning algorithm in terms of Markov structure without loss of generality. As shown in Eq. (5), the optimization challenge in our approach comes from the intractability of the marginalized emission factor p(xi|zi). If we can marginalize out ei and compute p(xi|zi), then the posterior and marginal likelihood of our Markov-structured model can be computed with the forward-backward algorithm. We can apply Eq. (3) and obtain :\np(xi|zi;η,φ) = ∫ ei pη(ei|zi)δ(xi − fφ(ei))dei.\nBy using the change of variable rule to the integration, which allows the integration variable ei to be replaced by x′i = fφ(ei), the marginal emission factor can be computed in closed-form when the invertibility condition is satisfied:\np(xi|zi;η,φ)\n= ∫ x′i pη(f −1 φ (x ′ i)|zi)δ(xi − x′i) ∣∣∣det∂f−1φ ∂x′i ∣∣∣dx′i = pη(f −1 φ (xi)|zi) ∣∣∣det∂f−1φ ∂xi\n∣∣∣, (6) where pη(·|z) is a conditional Gaussian distribution, ∂f−1φ ∂xi is the Jacobian matrix of function f−1φ\nat xi, and ∣∣det∂f−1φ∂xi ∣∣ represents the absolute value of its determinant. This Jacobian term is nonzero and differentiable if and only if f−1φ exists.\nEq. (6) shows that we can directly calculate the marginal emission distribution p(xi|zi). Denote the marginal data likelihood of Gaussian HMM as pHMM(x), then the log marginal data likelihood of our model can be directly written as:\nlog p(x) = log pHMM(f −1 φ (x))\n+ ∑` i=1 log ∣∣∣det∂f−1φ\n∂xi ∣∣∣, (7) where f−1φ (x) represents the new sequence of embeddings after applying f−1φ to each xi. Eq. (7) shows that the training objective of our model is simply the Gaussian HMM log likelihood with an additional Jacobian regularization term. From this view, our approach can be seen as equivalent to reversely projecting the data through f−1φ to another manifold e that is directly modeled by the Gaussian HMM, with a regularization term. Intuitively, we optimize the reverse projection f−1φ to modify the e space, making it more appropriate for the syntax model. The Jacobian regularization term accounts for the volume expansion or contraction behavior of the projection. Maximizing it can be thought of as preventing information loss. In the extreme case, the Jacobian determinant is equal to zero, which means the projection is non-invertible and thus information is being lost through the projection. Such “information preserving” regularization is crucial during optimization, otherwise the trivial solution of always projecting data to the same single point to maximize likelihood is viable.2\nMore generally, for an arbitrary syntax model the data likelihood of our approach is: p(x) = ∑\nz\n( psyntax(z)\n· ∏`\ni=1 pη(f\n−1 φ (xi)|zi) ∣∣∣det∂f−1φ ∂xi ∣∣∣). (8) If the syntax model itself allows for tractable inference and marginal likelihood computation, the same dynamic program can be used to marginalize out z. Therefore, our joint model inherits the tractability of the underlying syntax model.\n2For example, all ei could learn to be zero vectors, leading to the trivial solution of learning zero mean and zero variance Gaussian emissions achieving infinite data likelihood."
  }, {
    "heading": "3.2 Invertible Volume-Preserving Neural Net",
    "text": "For the projection we can use an arbitrary invertible function, and given the representational power of neural networks they seem a natural choice. However, calculating the inverse and Jacobian of an arbitrary neural network can be difficult, as it requires that all component functions be invertible and also requires storage of large Jacobian matrices, which is memory intensive. To address this issue, several recent papers propose specially designed invertible networks that are easily trainable yet still powerful (Dinh et al., 2014, 2016; Jacobsen et al., 2018). Inspired by these works, we use the invertible transformation proposed by Dinh et al. (2014), which consists of a series of “coupling layers”. This architecture is specially designed to guarantee a unit Jacobian determinant (and thus the invertibility property).\nFrom Eq. (8) we know that only f−1φ is required for accomplishing learning and inference; we never need to explicitly construct fφ. Thus, we directly define the architecture of f−1φ . As shown in Figure 3, the nonlinear transformation from the observed embedding xi to h (1) i represents the first coupling layer. The input in this layer is partitioned into left and right halves of dimensions, xi,l and xi,r, respectively. A single coupling layer is defined as:\nh (1) i,l = xi,l, h (1) i,r = xi,r + g(xi,l), (9)\nwhere g : Rdx/2 → Rdx/2 is the coupling function and can be any nonlinear form. This transformation satisfies dim(h(1)) = dim(x), and Dinh et al. (2014) show that its Jacobian matrix is tri-\nangular with all ones on the main diagonal. Thus the Jacobian determinant is always equal to one (i.e. volume-preserving) and the invertibility condition is naturally satisfied.\nTo be sufficiently expressive, we compose multiple coupling layers as suggested in Dinh et al. (2014). Specifically, we exchange the role of left and right half vectors at each layer as shown in Figure 3. For instance, from xi to h (1) i the left subset xi,l is unchanged, while from h (1) i to h (2) i the right subset h (1) i,r remains the same. Also note that composing multiple coupling layers does not change the volume-preserving and invertibility properties. Such a sequence of invertible transformations from the data space x to e is also called normalizing flow (Rezende and Mohamed, 2015)."
  }, {
    "heading": "4 Experiments",
    "text": "In this section, we first describe our datasets and experimental setup. We then instantiate our approach with Markov and DMV-structured syntax models, and report results on POS tagging and dependency grammar induction respectively. Lastly, we analyze the learned latent embeddings."
  }, {
    "heading": "4.1 Data",
    "text": "For both POS tagging and dependency parsing, we run experiments on the Wall Street Journal (WSJ) portion of the Penn Treebank.3 To create the observed data embeddings, we train skip-gram word embeddings (Mikolov et al., 2013) that are found to capture syntactic properties well when trained with small context window (Bansal et al., 2014; Lin et al., 2015). Following Lin et al. (2015), the dimensionality dx is set to 100, and the training context window size is set to 1 to encode more syntactic information. The skip-gram embeddings are trained on the one billion word language modeling benchmark dataset (Chelba et al., 2013) in addition to the WSJ corpus."
  }, {
    "heading": "4.2 General Experimental Setup",
    "text": "For the neural projector, we employ rectified networks as coupling function g following Dinh et al. (2014). We use a rectified network with an input layer, one hidden layer, and linear output units, the number of hidden units is set to the same as the number of input units. The number of coupling layers are varied as 4, 8, 16 for both tasks.\n3Preprocessing is different for the two tasks, we describe the details in the following subsections.\nWe optimize marginal data likelihood directly using Adam (Kingma and Ba, 2014). For both tasks in the fully unsupervised setting, we do not tune the hyper-parameters using supervised data."
  }, {
    "heading": "4.3 Unsupervised POS tagging",
    "text": "For unsupervised POS tagging, we use a Markovstructured syntax model in our approach, which is a popular structure for unsupervised tagging tasks (Lin et al., 2015; Tran et al., 2016).\nSetup. Following existing literature, we train and test on the entire WSJ corpus (49208 sentences, 1M tokens). We use 45 tag clusters, the number of POS tags that appear in WSJ corpus. We train the discrete HMM and the Gaussian HMM (Lin et al., 2015) as baselines. For the Gaussian HMM, mean vectors of Gaussian emissions are initialized with the empirical mean of all word vectors with an additive noise. We assume diagonal covariance matrix for p(ei|zi) and initialize it with the empirical variance of the word vectors. Following Lin et al. (2015), the covariance matrix is fixed during training. The multinomial probabilities are initialized as θkv ∝ exp(ukv), where ukv ∼ U [0, 1]. For our approach, we initialize the syntax model and Gaussian parameters with the pre-trained Gaussian HMM. The weights of layers in the rectified network are initialized from a uniform distribution with mean zero and a standard deviation of √ 1/nin, where nin is the input dimension.4 We evaluate the performance of POS tagging with both Many-to-One (M-1) accuracy (Johnson, 2007) and V-Measure (VM) (Rosenberg and Hirschberg, 2007). Given a model we found that the tagging performance is well-correlated with the training data likelihood, thus we use training data likelihood as a unsupervised criterion to select the trained model over 10 random restarts after training 50 epochs. We repeat this process 5 times and report the mean and standard deviation of performance.\nResults. We compare our approach with basic HMM, Gaussian HMM, and several stateof-the-art systems, including sophisticated HMM variants and clustering techniques with handengineered features. The results are presented in Table 1. Through the introduced latent embeddings and additional neural projection, our approach improves over the Gaussian HMM by 5.4 points in M-1 and 5.6 points in VM. Neural HMM\n4This is the default parameter initialization in PyTorch.\n(NHMM) (Tran et al., 2016) is a baseline that also learns word representation jointly. Both their basic model and extended Conv version does not outperform the Gaussian HMM. Their best model incorporates another LSTM to model long distance dependency and breaks the Markov assumption, yet our approach still achieves substantial improvement over it without considering more context information. Moreover, our method outperforms the best published result that benefits from hand-engineered features (Yatbaz et al., 2012) by 2.0 points on VM.\nConfusion Matrix. We found that most tagging errors happen in noun subcategories. Therefore, we do the one-to-one mapping between gold POS tags and induced clusters and plot the normalized confusion matrix of noun subcategories in Figure 4. The Gaussian HMM fails to identify “NN” and “NNS” correctly for most cases, and it often recognizes “NNPS” as “NNP”. In contrast, our approach corrects these errors well."
  }, {
    "heading": "4.4 Unsupervised Dependency Parsing without gold POS tags",
    "text": "For the task of unsupervised dependency parse induction, we employ the Dependency Model with Valence (DMV) (Klein and Manning, 2004) as the syntax model in our approach. DMV is a generative model that defines a probability distribution over dependency parse trees and syntactic categories, generating tokens and dependencies in a head-outward fashion. While, traditionally, DMV is trained using gold POS tags as observed syntactic categories, in our approach, we treat each tag as a latent variable, as described in §2.3.\nMost existing approaches to this task are not fully unsupervised since they rely on gold POS tags following the original experimental setup for DMV. This is partially because automatically parsing from words is difficult even when using unsupervised syntactic categories (Spitkovsky et al., 2011a). However, inducing dependencies from words alone represents a more realistic experimental condition since gold POS tags are often unavailable in practice. Previous work that has trained from words alone often requires additional linguistic constraints (like sentence internal boundaries) (Spitkovsky et al., 2011a,b, 2012, 2013), acoustic cues (Pate and Goldwater, 2013), additional training data (Pate and Johnson, 2016), or annotated data from related languages (Cohen et al., 2011). Our approach is naturally designed to train on word embeddings directly, thus we attempt to induce dependencies without using gold POS tags or other extra linguistic information.\nSetup. Like previous work we use sections 02- 21 of WSJ corpus as training data and evaluate on section 23, we remove punctuations and train the models on sentences of length 6 10, “headpercolation” rules (Collins, 1999) are applied to obtain gold dependencies for evaluation. We train basic DMV, extended DMV (E-DMV) (Headden III et al., 2009) and Gaussian DMV (which treats POS tag as unknown latent variables and generates observed word embeddings directly conditioned on them following Gaussian distribution) as baselines. Basic DMV and E-DMV are trained with Viterbi EM (Spitkovsky et al., 2010) on unsupervised POS tags induced from our Markov-structured model described in §4.3. Multinomial parameters of the syntax model in both Gaussian DMV and our model are initialized with the pre-trained DMV baseline. Other\nparameters are initialized in the same way as in the POS tagging experiment. The directed dependency accuracy (DDA) is used for evaluation and we report accuracy on sentences of length 6 10 and all lengths. We train the parser until training data likelihood converges, and report the mean and standard deviation over 20 random restarts.\nComparison with other related work. Our model directly observes word embeddings and does not require gold POS tags during training. Thus, results from related work trained on gold tags are not directly comparable. However, to measure how these systems might perform without gold tags, we run three recent state-of-theart systems in our experimental setting: URA E-DMV (Tu and Honavar, 2012), Neural EDMV (Jiang et al., 2016), and CRF Autoencoder (CRFAE) (Cai et al., 2017).5 We use unsupervised POS tags (induced from our Markov-structured model) in place of gold tags.6 We also train basic DMV on gold tags and include several stateof-the-art results on gold tags as reference points.\nResults. As shown in Table 2, our approach is able to improve over the Gaussian DMV by 4.8 points on length 6 10 and 4.8 points on all\n5For the three systems, we use implementations from the original papers (via personal correspondence with the authors), and tune their hyperparameters on section 22 of WSJ.\n6Using words directly is not practical because these systems often require a transition probability matrix between input symbols, which requires too much memory.\nlengths, which suggests the additional latent embedding layer and neural projector are helpful. The proposed approach yields, to the best of our knowledge,7 state-of-the-art performance without gold POS annotation and without sentenceinternal boundary information. DMV, UR-A EDMV, Neural E-DMV, and CRFAE suffer a large decrease in performance when trained on unsupervised tags – an effect also seen in previous work (Spitkovsky et al., 2011a; Cohen et al., 2011). Since our approach induces latent POS tags jointly with dependency trees, it may be able to learn POS clusters that are more amenable to grammar induction than the unsupervised tags. We observe that CRFAE underperforms its goldtag counterpart substantially. This may largely be a result of the model’s reliance on prior linguistic rules that become unavailable when gold POS tag types are unknown. Many extensions to DMV can be considered orthogonal to our approach – they essentially focus on improving the syntax model. It is possible that incorporating these more sophisticated syntax models into our approach may lead to further improvements."
  }, {
    "heading": "4.5 Sensitivity Analysis",
    "text": "Impact of Initialization. In the above experiments we initialize the structured syntax components with the pre-trained Gaussian or discrete baseline, which is shown as a useful technique to help train our deep models. We further study the results with fully random initialization. In the POS tagging experiment, we report the results in Table 3. While the performance with 4 layers is comparable to the pre-trained Gaussian initialization, deeper projections (8 or 16 layers) result in a dramatic drop in performance. This suggests that the structured syntax model with very deep projections is difficult to train from scratch, and a simpler projection might be a good compromise in the random initialization setting.\nDifferent from the Markov prior in POS tag7We tried to be as thorough as possible in evaluation by running top performing systems using our more difficult training setup when this was feasible – but it was not possible to evaluate them all.\nging experiments, our parsing model seems to be quite sensitive to the initialization. For example, directed accuracy of our approach on sentences of length 6 10 is below 40.0 with random initialization. This is consistent with previous work that has noted the importance of careful initialization for DMV-based models such as the commonly used harmonic initializer (Klein and Manning, 2004). However, it is not straightforward to apply the harmonic initializer for DMV directly in our model without using some kind of pre-training since we do not observe gold POS.\nImpact of Observed Embeddings. We investigate the effect of the choice of pre-trained embedding on performance while using our approach. To this end, we additionally include results using fastText embeddings (Bojanowski et al., 2017) – which, in contrast with skip-gram embeddings, include character-level information. We set the context windows size to 1 and the dimension size to 100 as in the skip-gram training, while keeping other parameters set to their defaults. These results are summarized in Table 4 and Table 5. While fastText embeddings lead to reduced performance with our model, our approach still yields an improvement over the Gaussian baseline with the new observed embeddings space."
  }, {
    "heading": "4.6 Qualitative Analysis of Embeddings",
    "text": "We perform qualitative analysis to understand how the latent embeddings help induce syntactic structures. First we filter out low-frequency words and punctuations in WSJ, and visualize the rest words (10k) with t-SNE (Maaten and Hinton, 2008) under different embeddings. We assign each word with its most likely gold POS tags in WSJ and color them according to the gold POS tags.\nFor our Markov-structured model, we have displayed the embedding space in Figure 1(b), where the gold POS clusters are well-formed. Further, we present five example target words and their five nearest neighbors in terms of cosine similarity. As shown in Table 6, the skip-gram embedding captures both semantic and syntactic aspects to some degree, yet our embeddings are able to focus especially on the syntactic aspects of words, in an unsupervised fashion without using any extra morphological information.\nIn Figure 5 we depict the learned latent embeddings with the DMV-structured syntax model. Unlike the Markov structure, the DMV structure maps a large subset of singular and plural nouns to the same overlapping region. However, two clusters of singular and plural nouns are actually separated. We inspect the two clusters and the overlapping region in Figure 5, it turns out that the nouns in the separated clusters are words that can appear as subjects and, therefore, for which verb agreement is important to model. In contrast, the nouns\nin the overlapping region are typically objects. This demonstrates that the latent embeddings are focusing on aspects of language that are specifically important for modeling dependency without ever having seen examples of dependency parses.\nSome previous work has deliberately created embeddings to capture different notions of similarity (Levy and Goldberg, 2014; Cotterell and Schütze, 2015), while they use extra morphology or dependency annotations to guide the embedding learning, our approach provides a potential alternative to create new embeddings that are guided by structured syntax model, only using unlabeled text corpora."
  }, {
    "heading": "5 Related Work",
    "text": "Our approach is related to flow-based generative models, which are first described in NICE (Dinh et al., 2014) and have recently received more attention (Dinh et al., 2016; Jacobsen et al., 2018; Kingma and Dhariwal, 2018). This relevant work mostly adopts simple (e.g. Gaussian) and fixed priors and does not attempt to learn interpretable latent structures. Another related generative model class is variational auto-encoders (VAEs) (Kingma and Welling, 2013) that optimize a lower bound on the marginal data likelihood, and can be extended to learn latent structures (Miao and Blunsom, 2016; Yin et al., 2018). Against the flow-based models, VAEs remove the invertibility constraint but sacrifice the merits of exact inference and exact log likelihood computation, which potentially results in optimization challenges (Kingma et al., 2016). Our approach can also be viewed in connection with generative adversarial networks (GANs) (Goodfellow et al., 2014) that is a likelihood-free framework to learn implicit generative models. However, it is nontrivial for a gradient-based method like GANs to propagate gradients through discrete structures."
  }, {
    "heading": "6 Conclusion",
    "text": "In this work, we define a novel generative approach to leverage continuous word representations for unsupervised learning of syntactic structure. Experiments on both POS induction and unsupervised dependency parsing tasks demonstrate the effectiveness of our proposed approach. Future work might explore more sophisticated invertible projections, or recurrent projections that jointly transform the entire input sequence."
  }],
  "year": 2018,
  "references": [{
    "title": "Tailoring continuous word representations for dependency parsing",
    "authors": ["Mohit Bansal", "Kevin Gimpel", "Karen Livescu."],
    "venue": "Proceedings of ACL.",
    "year": 2014
  }, {
    "title": "Painless unsupervised learning with features",
    "authors": ["Taylor Berg-Kirkpatrick", "Alexandre Bouchard-Côté", "John DeNero", "Dan Klein."],
    "venue": "Proceedings of HLT-NAACL, pages 582–590. Association for Computational Linguistics.",
    "year": 2010
  }, {
    "title": "A hierarchical pitman-yor process hmm for unsupervised part of speech induction",
    "authors": ["Phil Blunsom", "Trevor Cohn."],
    "venue": "Proceedings of ACL.",
    "year": 2011
  }, {
    "title": "Enriching word vectors with subword information",
    "authors": ["Piotr Bojanowski", "Edouard Grave", "Armand Joulin", "Tomas Mikolov."],
    "venue": "Transactions of the Association of Computational Linguistics.",
    "year": 2017
  }, {
    "title": "Crf autoencoder for unsupervised dependency parsing",
    "authors": ["Jiong Cai", "Yong Jiang", "Kewei Tu."],
    "venue": "Proceedings of EMNLP.",
    "year": 2017
  }, {
    "title": "One billion word benchmark for measuring progress in statistical language modeling",
    "authors": ["Ciprian Chelba", "Tomas Mikolov", "Mike Schuster", "Qi Ge", "Thorsten Brants", "Phillipp Koehn", "Tony Robinson."],
    "venue": "arXiv preprint arXiv:1312.3005.",
    "year": 2013
  }, {
    "title": "Gaussianization",
    "authors": ["Scott Saobing Chen", "Ramesh A Gopinath."],
    "venue": "Advances in neural information processing systems.",
    "year": 2001
  }, {
    "title": "Two decades of unsupervised pos induction: How far have we come",
    "authors": ["Christos Christodoulopoulos", "Sharon Goldwater", "Mark Steedman"],
    "venue": "In Proceedings of EMNLP",
    "year": 2010
  }, {
    "title": "Unsupervised structure prediction with nonparallel multilingual guidance",
    "authors": ["Shay B Cohen", "Dipanjan Das", "Noah A Smith."],
    "venue": "Proceedings of EMNLP.",
    "year": 2011
  }, {
    "title": "Shared logistic normal distributions for soft parameter tying in unsupervised grammar induction",
    "authors": ["Shay B Cohen", "Noah A Smith."],
    "venue": "Proceedings of HLT-NAACL.",
    "year": 2009
  }, {
    "title": "HEAD-DRIVEN STATISTICAL MODELS FOR NATURAL LANGUAGE PARSING",
    "authors": ["Michael Collins."],
    "venue": "Ph.D. thesis, University of Pennsylvania.",
    "year": 1999
  }, {
    "title": "Morphological word-embeddings",
    "authors": ["Ryan Cotterell", "Hinrich Schütze."],
    "venue": "Proceedings of NAACL-HLT.",
    "year": 2015
  }, {
    "title": "Nice: Non-linear independent components estimation",
    "authors": ["Laurent Dinh", "David Krueger", "Yoshua Bengio."],
    "venue": "arXiv preprint arXiv:1410.8516.",
    "year": 2014
  }, {
    "title": "Density estimation using real nvp",
    "authors": ["Laurent Dinh", "Jascha Sohl-Dickstein", "Samy Bengio."],
    "venue": "arXiv preprint arXiv:1605.08803.",
    "year": 2016
  }, {
    "title": "Generative adversarial nets",
    "authors": ["Ian Goodfellow", "Jean Pouget-Abadie", "Mehdi Mirza", "Bing Xu", "David Warde-Farley", "Sherjil Ozair", "Aaron Courville", "Yoshua Bengio."],
    "venue": "Proceedings of NIPS.",
    "year": 2014
  }, {
    "title": "Dependency grammar induction with neural lexicalization and big training data",
    "authors": ["Wenjuan Han", "Yong Jiang", "Kewei Tu."],
    "venue": "Proceedings of EMNLP.",
    "year": 2017
  }, {
    "title": "Deep semantic role labeling: What works and whats next",
    "authors": ["Luheng He", "Kenton Lee", "Mike Lewis", "Luke Zettlemoyer."],
    "venue": "Proceedings of ACL.",
    "year": 2017
  }, {
    "title": "Improving unsupervised dependency parsing with richer contexts and smoothing",
    "authors": ["William P Headden III", "Mark Johnson", "David McClosky."],
    "venue": "Proceedings of HLT-NAACL.",
    "year": 2009
  }, {
    "title": "Independent component analysis, volume 46",
    "authors": ["Aapo Hyvärinen", "Juha Karhunen", "Erkki Oja."],
    "venue": "John Wiley & Sons.",
    "year": 2004
  }, {
    "title": "i-revnet: Deep invertible networks",
    "authors": ["Jörn-Henrik Jacobsen", "Arnold Smeulders", "Edouard Oyallon."],
    "venue": "arXiv preprint arXiv:1802.07088.",
    "year": 2018
  }, {
    "title": "Unsupervised neural dependency parsing",
    "authors": ["Yong Jiang", "Wenjuan Han", "Kewei Tu."],
    "venue": "Proceedings of EMNLP.",
    "year": 2016
  }, {
    "title": "Why doesnt em find good hmm pos-taggers? In Proceedings of the EMNLPCoNLL",
    "authors": ["Mark Johnson"],
    "year": 2007
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Diederik P Kingma", "Jimmy Ba."],
    "venue": "arXiv preprint arXiv:1412.6980.",
    "year": 2014
  }, {
    "title": "Glow: Generative flow with invertible 1x1 convolutions",
    "authors": ["Diederik P Kingma", "Prafulla Dhariwal."],
    "venue": "arXiv preprint arXiv:1807.03039.",
    "year": 2018
  }, {
    "title": "Improved variational inference with inverse autoregressive flow",
    "authors": ["Diederik P Kingma", "Tim Salimans", "Rafal Jozefowicz", "Xi Chen", "Ilya Sutskever", "Max Welling."],
    "venue": "Advances in Neural Information Processing Systems, pages 4743–4751.",
    "year": 2016
  }, {
    "title": "Autoencoding variational bayes",
    "authors": ["Diederik P Kingma", "Max Welling."],
    "venue": "arXiv preprint arXiv:1312.6114.",
    "year": 2013
  }, {
    "title": "Corpusbased induction of syntactic structure: Models of dependency and constituency",
    "authors": ["Dan Klein", "Christopher D Manning."],
    "venue": "Proceedings of ACL.",
    "year": 2004
  }, {
    "title": "Unsupervised dependency parsing: Let’s use supervised parsers",
    "authors": ["Phong Le", "Willem Zuidema."],
    "venue": "Proceedings of NAACL-HLT.",
    "year": 2015
  }, {
    "title": "Dependencybased word embeddings",
    "authors": ["Omer Levy", "Yoav Goldberg."],
    "venue": "Proceedings of ACL.",
    "year": 2014
  }, {
    "title": "Unsupervised pos induction with word embeddings",
    "authors": ["Chu-Cheng Lin", "Waleed Ammar", "Chris Dyer", "Lori Levin."],
    "venue": "Proceedings of the NAACL-HLT.",
    "year": 2015
  }, {
    "title": "Visualizing data using t-sne",
    "authors": ["Laurens van der Maaten", "Geoffrey Hinton."],
    "venue": "Journal of Machine Learning Research.",
    "year": 2008
  }, {
    "title": "Building a large annotated corpus of english: The penn treebank",
    "authors": ["Mitchell P Marcus", "Mary Ann Marcinkiewicz", "Beatrice Santorini."],
    "venue": "Computational linguistics, 19(2):313–330.",
    "year": 1993
  }, {
    "title": "Language as a latent variable: Discrete generative models for sentence compression",
    "authors": ["Yishu Miao", "Phil Blunsom."],
    "venue": "Proceedings of EMNLP.",
    "year": 2016
  }, {
    "title": "Efficient estimation of word representations in vector space",
    "authors": ["Tomas Mikolov", "Kai Chen", "Greg Corrado", "Jeffrey Dean."],
    "venue": "arXiv preprint arXiv:1301.3781.",
    "year": 2013
  }, {
    "title": "Unsupervised dependency parsing with acoustic cues",
    "authors": ["John K Pate", "Sharon Goldwater."],
    "venue": "Transactions of the Association for Computational Linguistics.",
    "year": 2013
  }, {
    "title": "Grammar induction from (lots of) words alone",
    "authors": ["John K Pate", "Mark Johnson."],
    "venue": "Proceedings of COLING.",
    "year": 2016
  }, {
    "title": "Deep contextualized word representations",
    "authors": ["Matthew E Peters", "Mark Neumann", "Mohit Iyyer", "Matt Gardner", "Christopher Clark", "Kenton Lee", "Luke Zettlemoyer."],
    "venue": "Proceedings of HLT-NAACL.",
    "year": 2018
  }, {
    "title": "Variational inference with normalizing flows",
    "authors": ["Danilo Jimenez Rezende", "Shakir Mohamed."],
    "venue": "Proceedings of ICML.",
    "year": 2015
  }, {
    "title": "Vmeasure: A conditional entropy-based external cluster evaluation measure",
    "authors": ["Andrew Rosenberg", "Julia Hirschberg."],
    "venue": "Proceedings of EMNLPCoNLL.",
    "year": 2007
  }, {
    "title": "Unsupervised dependency parsing without gold part-of-speech tags",
    "authors": ["Valentin I Spitkovsky", "Hiyan Alshawi", "Angel X Chang", "Daniel Jurafsky."],
    "venue": "Proceedings of EMNLP.",
    "year": 2011
  }, {
    "title": "Punctuation: Making a point in unsupervised dependency parsing",
    "authors": ["Valentin I Spitkovsky", "Hiyan Alshawi", "Daniel Jurafsky."],
    "venue": "Proceedings of CoNLL.",
    "year": 2011
  }, {
    "title": "Capitalization cues improve dependency grammar induction",
    "authors": ["Valentin I Spitkovsky", "Hiyan Alshawi", "Daniel Jurafsky."],
    "venue": "Proceedings of NAACL-HLT Workshop on the Induction of Linguistic Structure.",
    "year": 2012
  }, {
    "title": "Breaking out of local optima with count transforms and model recombination: A study in grammar induction",
    "authors": ["Valentin I Spitkovsky", "Hiyan Alshawi", "Daniel Jurafsky."],
    "venue": "Proceedings of EMNLP.",
    "year": 2013
  }, {
    "title": "Viterbi training improves unsupervised dependency parsing",
    "authors": ["Valentin I Spitkovsky", "Hiyan Alshawi", "Daniel Jurafsky", "Christopher D Manning."],
    "venue": "Proceedings of CoNLL.",
    "year": 2010
  }, {
    "title": "Unsupervised part-of-speech tagging with anchor hidden markov models",
    "authors": ["Karl Stratos", "Michael Collins", "Daniel Hsu."],
    "venue": "Transactions of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "Unsupervised neural hidden markov models",
    "authors": ["Ke M Tran", "Yonatan Bisk", "Ashish Vaswani", "Daniel Marcu", "Kevin Knight."],
    "venue": "Proceedings of the Workshop on Structured Prediction for NLP.",
    "year": 2016
  }, {
    "title": "Unambiguity regularization for unsupervised learning of probabilistic grammars",
    "authors": ["Kewei Tu", "Vasant Honavar."],
    "venue": "Proceedings of EMNLPCoNLL.",
    "year": 2012
  }, {
    "title": "Learning syntactic categories using paradigmatic representations of word context",
    "authors": ["Mehmet Ali Yatbaz", "Enis Sert", "Deniz Yuret."],
    "venue": "Proceedings of EMNLP-CoNLL.",
    "year": 2012
  }, {
    "title": "Unsupervised instance-based part of speech induction using probable substitutes",
    "authors": ["Mehmet Ali Yatbaz", "Enis Rıfat Sert", "Deniz Yuret."],
    "venue": "Proceedings of COLING.",
    "year": 2014
  }, {
    "title": "Structvae: Tree-structured latent variable models for semi-supervised semantic parsing",
    "authors": ["Pengcheng Yin", "Chunting Zhou", "Junxian He", "Graham Neubig."],
    "venue": "Proceedings of ACL.",
    "year": 2018
  }],
  "id": "SP:a03675379685d88c727bc985a323cc71d06f2514",
  "authors": [{
    "name": "Junxian He",
    "affiliations": []
  }, {
    "name": "Graham Neubig",
    "affiliations": []
  }, {
    "name": "Taylor Berg-Kirkpatrick",
    "affiliations": []
  }],
  "abstractText": "Unsupervised learning of syntactic structure is typically performed using generative models with discrete latent variables and multinomial parameters. In most cases, these models have not leveraged continuous word representations. In this work, we propose a novel generative model that jointly learns discrete syntactic structure and continuous word representations in an unsupervised fashion by cascading an invertible neural network with a structured generative prior. We show that the invertibility condition allows for efficient exact inference and marginal likelihood computation in our model so long as the prior is well-behaved. In experiments we instantiate our approach with both Markov and tree-structured priors, evaluating on two tasks: part-of-speech (POS) induction, and unsupervised dependency parsing without gold POS annotation. On the Penn Treebank, our Markov-structured model surpasses state-of-the-art results on POS induction. Similarly, we find that our tree-structured model achieves state-of-the-art performance on unsupervised dependency parsing for the difficult training condition where neither gold POS annotation nor punctuation-based constraints are available.1",
  "title": "Unsupervised Learning of Syntactic Structure with Invertible Neural Projections"
}