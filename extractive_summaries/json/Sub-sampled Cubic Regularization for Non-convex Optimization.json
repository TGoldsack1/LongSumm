{
  "sections": [{
    "heading": "1. Introduction",
    "text": "In this paper we address the problem of minimizing an objective function of the form\nx∗ = arg min x∈Rd\n[ f(x) := 1\nn n∑ i=1 fi(x)\n] , (1)\nwhere f(x) ∈ C2(Rd,R) is a not necessarily convex, (regularized) loss function over n datapoints. Stochastic Gradient Descent (SGD) is a popular method to optimize this type of objective especially in the context of large-scale\n1Department of Computer Science, ETH Zurich, Switzerland. Correspondence to: Jonas Moritz Kohler <jonas.kohler@student.kit.edu>, Aurelien Lucchi <aurelien.lucchi@inf.ethz.ch>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nlearning when n is very large. Its convergence properties are well understood for convex functions, which arise in many machine learning applications (Nesterov, 2004). However, non-convex functions are also ubiquitous and have recently drawn a lot of interest due to the growing success of deep neural networks. Yet, non-convex functions are extremely hard to optimize due to the presence of saddle points and local minima which are not global optima (Dauphin et al., 2014; Choromanska et al., 2015). In fact, the work of (Hillar & Lim, 2013) showed that even a degree four polynomial can be NP-hard to optimize. Instead of aiming for a global minimizer, we will thus seek for a local optimum of the objective. In this regard, a lot of attention has focused on a specific type of functions known as strict saddle functions or ridable functions (Ge et al., 2015; Sun et al., 2015). These functions are characterized by the fact that the Hessian of every saddle point has a negative eigenvalue. Geometrically this means that there is a direction of negative curvature where decreasing function values can be found. Examples of strict saddle functions include dictionary learning, orthogonal tensor decomposition and generalized phase retrieval (Ge et al., 2015; Sun et al., 2015).\nIn this work, we focus our attention on trust region methods to optimize Eq. 1. These methods construct and optimize a local model of the objective function within a region whose radius depends on how well the model approximates the real objective. One of the keys for efficiency of these methods is to pick a model that is comparably easy to optimize, such as a quadratic function (Conn et al., 2000). Following the trust region paradigm, cubic regularization methods (Nesterov & Polyak, 2006; Cartis et al., 2011a) suggest finding the step sk that minimizes a cubic model of the form\nmk(sk) := f(xk) + s ᵀ k∇f(xk) +\n1 2 sᵀkHksk + σk 3 ‖sk‖3 ,\n(2) where Hk := ∇2f(xk) and σk > 0 1.\n(Nesterov & Polyak, 2006) were able to show that, if the\n1In the work of (Nesterov & Polyak, 2006), σk is assumed to be the Lipschitz constant of the Hessian in which case the model defined in Eq. 2 is a global overestimator of the objective, i.e. f(x) ≤ m(x) ∀x ∈ Rd. We will elaborate on the role of σk in (Cartis et al., 2011a) later on.\nstep is computed by globally minimizing the cubic model and if the Hessian Hk is globally Lipschitz continuous, Cubic regularization methods possess the best known worst case complexity to solve Eq. 1: an overall worst-case iteration count of order −3/2 for generating ‖∇f(xk)‖ ≤ , and of order −3 for achieving approximate nonnegative curvature. However, minimizing Eq. 2 in an exact manner impedes the performance of this method for machine learning applications as it requires access to the full Hessian matrix. More recently, (Cartis et al., 2011a) presented a method (hereafter referred to as ARC) which relaxed this requirement by assuming that one can construct an approximate Hessian Bk that is sufficiently close to Hk in the following way:\n‖(Bk −Hk)sk‖ ≤ C ‖sk‖2 , ∀k ≥ 0, C > 0 (3)\nFurthermore, they showed that it is sufficient to find an approximate minimizer by applying a Lanczos method to build up evolving Krylov spaces, which can be constructed in a Hessian-free manner, i.e. by accessing the Hessians only indirectly via matrix-vector products. However there are still two obstacles for the application of ARC in the field of machine learning: (1) The cost of the Lanczos process increases linearly in n and is thus not suitable for large datasets and (2) there is no theoretical guarantee that quasiNewton approaches satisfy Eq. 3 and (Cartis et al., 2011a) do not provide any alternative approximation technique.\nIn this work, we make explicit use of the finite-sum structure of Eq. 1 by applying a sub-sampling technique in order to provide guarantees for machine learning applications. Towards this goal, we make the following contributions:\n• We provide a theoretical Hessian sampling scheme that is guaranteed to satisfy Eq. 3 with high probability.\n• We extend the analysis to inexact gradients and prove that the convergence guarantees of (Nesterov & Polyak, 2006; Cartis et al., 2011a) can be retained.\n• Since the dominant iteration cost lie in the construction of the Lanczos process and increase linearly in n, we lower the computational cost significantly by reducing the number of samples used in each iteration.\n• Finally, we provide experimental results demonstrating significant speed-ups compared to standard first and second-order optimization methods for various convex and non-convex objectives."
  }, {
    "heading": "2. Related work",
    "text": "Sampling techniques for first-order methods. In largescale learning, when n dmost of the computational cost of traditional deterministic optimization methods is spent\nin computing the exact gradient information. A common technique to address this issue is to use sub-sampling in order to compute an unbiased estimate of the gradient. The simplest instance is Stochastic Gradient Descent (SGD) whose convergence does not depend on the number of datapoints n. However, the variance in the stochastic gradient estimates slows its convergence down. The work of (Friedlander & Schmidt, 2012) explored a sub-sampling technique for gradient descent in the case of convex functions, showing that it is possible to maintain the same convergence rate as full-gradient descent by carefully increasing the sample size over time. Another way to recover a linear rate of convergence for strongly-convex functions is to use variance-reduced methods (Johnson & Zhang, 2013; Defazio et al., 2014; Roux et al., 2012; Hofmann et al., 2015; Daneshmand et al., 2016). Recently, the convergence of SGD and its variance-reduced counterparts has also been extended to non-convex functions (Ghadimi & Lan, 2013; Reddi et al., 2016a) but the techniques used in these papers require using a randomized sampling scheme which is different from what is typically used in practice. Furthermore, the guarantees these methods provide are only in terms of convergence to critical points. However, the work of (Ge et al., 2015; Sun et al., 2015) recently showed that SGD can achieve stronger guarantees in the case of strict saddle functions. Yet, the convergence rate has a polynomial dependency to the dimension d and the smallest eigenvalue of the Hessian which can make this method fairly impractical.\nSecond-order methods. For second-order methods, the problem of avoiding saddle points is even worse as they might be attracted by saddle points or even points of local maximizers (Dauphin et al., 2014). Another predominant issue is the computation (and perhaps storage) of the Hessian matrix, which requires O(nd2) operations as well as computing the inverse of the Hessian, which requires O(d3) computations. Quasi-Newton methods such as the well-known (L-)BFGS algorithm partially address this issue by requiring O(nd + d2) per-iteration cost (Nesterov, 2004) instead of O(nd2 + d3). An increasingly popular alternative is to use sub-sampling techniques to approximate the Hessian matrix, such as done for example in (Byrd et al., 2011) and (Erdogdu & Montanari, 2015). The latter method, named NewSamp, approximates the Hessian with a low-rank approximation which reduces the complexity per iteration to O(nd + |S|d2) with |S| being the sample size 2. Although this is a significant reduction in terms of complexity, NewSamp yields a composite convergence rate: quadratic at first but only linear near the minimizer. Unlike NewSamp, our sampling scheme yields a locally quadratic rate of convergence (as well as faster global con-\n2Note that this method still requires O(nd) computation for the gradient as it only subsamples the Hessian.\nvergence). Our analysis also does not require using exact gradients and can thus further reduce the complexity per iteration.\nCubic regularization and trust region methods. Trust region methods are among the most effective algorithmic frameworks to avoid pitfalls such as local saddle points in non-convex optimization. Classical versions iteratively construct a local quadratic model and minimize it within a certain radius wherein the model is trusted to be sufficiently similar to the actual objective function. This is equivalent to minimizing the model function with a suitable quadratic penalty term on the stepsize. Thus, a natural extension is the cubic regularization method introduced by (Nesterov & Polyak, 2006) that uses a cubic over-estimator of the objective function as a regularization technique for the computation of a step to minimize the objective function. The drawback of their method is that it requires computing the exact minimizer of Eq. 2, thus requiring the exact gradient and Hessian matrix. However finding a global minimizer of the cubic model mk(s) may not be essential in practice and doing so might be prohibitively expensive from a computational point of view. (Cartis et al., 2011a) introduced a method named ARC which relaxed this requirement by letting sk be an approximation to the minimizer. The model defined by the adaptive cubic regularization method introduced two further changes. First, instead of computing the exact Hessian Hk it allows for a symmetric approximation Bk. Second, it introduces a dynamic positive parameter σk instead of using the global Lipschitz constant L.\nThere have been efforts to further reduce the computational complexity of this problem. For example, (Agarwal et al., 2016) refined the approach of (Nesterov & Polyak, 2006) to return an approximate local minimum in time which is linear in the input representation. Similar improvements have been made by (Carmon & Duchi, 2016) and (Hazan & Koren, 2016). These methods provide alternatives to minimize the cubic model and can thus be seen as complementary to our approach. Finally, the work of (Blanchet et al., 2016) proposed a stochastic variant of a trust region method but their analysis focused on randomized gradients only."
  }, {
    "heading": "3. Formulation",
    "text": "We are interested in optimizing Eq. 1 in a large-scale setting when the number of datapoints n is very large such that the cost of solving Eq. 2 exactly becomes prohibitive. In this regard we identify a sampling scheme that allows us to retain the convergence results of deterministic trust region and cubic regularization methods, including quadratic local convergence rates and global second-order convergence guarantees as well as worst-case complexity bounds. A detailed theoretical analysis is given in Section 4. Here we\nshall first state the algorithm itself and elaborate further on the type of local nonlinear models we employ as well as how these can be solved efficiently."
  }, {
    "heading": "3.1. Objective function",
    "text": "Instead of using deterministic gradient and Hessian information as in Eq. 2, we use unbiased estimates of the gradient and Hessian constructed from two independent sets of points denoted by Sg and SB . We then construct a local cubic model that is (approximately) minimized in each iteration:\nmk(sk) := f(xk) + s ᵀ kgk +\n1 2 sᵀkBksk + σk 3 ‖sk‖3 (4)\nwhere gk := 1|Sg| ∑ i∈Sg ∇fi(xk)\nand Bk := 1|SB | ∑ i∈SB ∇ 2fi(xk).\nThe model derivative with respect to sk is defined as:\n∇mk(sk) = gk + Bksk + λsk ,where λ = σk ‖sk‖ . (5)"
  }, {
    "heading": "3.2. Algorithm",
    "text": "Our Sub-sampled Cubic Regularization approach (SCR) is presented in Algorithm 1. At iteration step k, we subsample two sets of datapoints from which we compute a stochastic estimate of the gradient and the Hessian. We then solve the problem in Eq. 4 approximately using the method described in Section 3.4 and update the regularization parameter σk depending on how well the model approximates the real objective. In particular, very successful steps indicate that the model is (at least locally) an adequate approximation of the objective such that the penalty parameter is decreased in order to allow for longer steps. For unsuccessful iterations we proceed exactly the opposite way. Readers familiar with trust region methods might see that one can interpret the penalty parameter σk as inversely proportional to the trust region radius δk."
  }, {
    "heading": "3.3. Exact model minimization",
    "text": "Solving Eq. 4 requires minimizing an unconstrained nonconvex problem that may have isolated local minima. As shown in (Cartis et al., 2011a) the global model minimizer s∗k is characterized by following systems of equations,\n(Bk + λ ∗ kI)s ∗ k = −gk, λ∗k = σk ‖s∗k‖ , (Bk + λ∗kI) 0.\n(9)\nIn order to find a solution we can express s∗k := sk(λ ∗ k) = −(Bk+λ∗kI)−1gk, apply this in the second equation of (9) and obtain a univariate, nonlinear equation in λk∥∥−(Bk + λ∗kI)−1gk∥∥− λ∗kσk = 0. (10)\nAlgorithm 1 Sub-sampled Cubic Regularization (SCR) 1: Input:\nStarting point x0 ∈ Rd (e.g x0 = 0) γ > 1, 1 > η2 > η1 > 0, and σ0 > 0\n2: for k = 0, 1, . . . , until convergence do 3: Sample gradient gk and Hessian Hk according to Eq. 17 & Eq. 19 respectively 4: Obtain sk by solving mk(sk) (Eq. 4) such that A1 holds 5: Compute f(xk + sk) and\nρk = f(xk)− f(xk + sk) f(xk)−mk(sk)\n(6)\n6: Set\nxk+1 = { xk + sk if ρk ≥ η1 xk otherwise\n(7)\n7: Set\nσk+1 =  max{min{σk, ‖gk‖}, m} if ρk > η2 (very successful iteration) σk if η2 ≥ ρk ≥ η1 (successful iteration) γσk otherwise (unsuccessful iteration),\n(8)\nwhere m ≈ 10−16 is the relative machine precision. 8: end for\nFurthermore, we need λ∗k ≥ max{−λ1(Bk), 0}, where λ1(Bk) is the leftmost eigenvalue of Bk, in order to guarantee the semi-positive definiteness of (Bk + λ∗kI).\nThus, computing the global solution of mk boils down to finding the root of Eq. 10 in the above specified range of λk. The problem can be solved by Newton’s method, which involves factorizing Bk +λkI for various λk and is thus prohibitively expensive for large problem dimensions d. See Section 6.2 in (Cartis et al., 2011a) for more details. In the following Section we instead explore an approach to approximately minimize the model while retaining the convergence guarantees of the exact minimization."
  }, {
    "heading": "3.4. Approximate model minimization",
    "text": "(Cartis et al., 2011a) showed that it is possible to retain the remarkable properties of the cubic regularization algorithm with an inexact model minimizer. A necessary condition is that sk satisfies the two requirements stated in A1.\nAssumption 1 (Approximate model minimizer).\nsᵀkgk + s ᵀ kBksk + σk ‖sk‖ 3 = 0 (11)\nsᵀkBksk + σk ‖sk‖ 3 ≥ 0 (12)\nNote that the first equation is equal to ∇smk(sk)ᵀsk = 0 and the second to sᵀk∇2smk(sk)sk ≥ 0.\nAs shown in (Cartis et al., 2011a) Lemma 3.2, the global minimizer of mk(sk) in a Krylov subspace Kk := span{gk,Hkgk,H2kgk, ...} satisfies this assumption independent of the subspace dimension. This comes in handy,\nas minimizing mk in the Krylov subspace only involves factorizing a tri-diagonal matrix, which can be done at the cost of O(d). However, a Lanczos-type method must be used in order to build up an orthogonal basis of this subspace which typically involves one matrix-vector product (O((2d − 1)n)) per additional subspace dimension (see Chapter 5 in (Conn et al., 2000) for more details).\nThus, in order to keep the per iteration cost of SCR low and in accordance to ARC, we apply the following termination criterion to the Lanczos process in the hope to find a suitable trial step before Kk is of dimensionality d. Assumption 2 (Termination Criteria). For each outer iteration k, assume that the Lanczos process stops as soon as some Lanczos iteration i satisfies the criterion\nTC: ‖∇mk(si,k)‖ ≤ θk ‖gk‖ , (13)\nwhere θk = κθ min(1, ‖si,k‖), κθ ∈ (0, 1).\nHowever, we argue that especially for high dimensional problems, the cost of the Lanczos process may significantly slow down cubically regularized methods and since this cost increases linearly in n, carefully sub-sampled versions are an attractive alternative."
  }, {
    "heading": "4. Theoretical analysis",
    "text": "In this section, we provide the convergence analysis of SCR. For the sake of brevity, we assume Lipschitz continuous Hessians right away but note that a superlinear local convergence result as well as the global first-order conver-\ngence theorem can both be obtained without the former assumption.\nFirst, we lay out some critical assumptions regarding the gradient and Hessian approximations. Second, we show that one can theoretically satisfy these assumptions with high probability by sub-sampling first- and second-order information. Third, we give a condensed convergence analysis of SCR which is widely based on (Cartis et al., 2011a), but adapted for the case of stochastic gradients. There, we show that the local and global convergence properties of ARC can be retained by sub-sampled versions at the price of slightly worse constants."
  }, {
    "heading": "4.1. Assumptions",
    "text": "Assumption 3 (Continuity). The functions fi ∈ C2(Rd), gi and Hi are Lipschitz continuous for all i, with Lipschitz constants κf , κg and κH respectively.\nBy use of the triangle inequality, it follows that these assumptions hold for all g and H, independent of the sample size. Furthermore, note that the Hessian and gradient norms are uniformly bounded as a consequence of A3.\nIn each iteration, the Hessian approximation Bk shall satisfy condition AM.4 from (Cartis et al., 2011a), which we restate here for the sake of completeness.\nAssumption 4 (Sufficient Agreement of H and B).\n‖(Bk −H(xk))sk‖ ≤ C ‖sk‖2 , ∀k ≥ 0, C > 0. (14)\nWe explicitly stress the fact that this condition is stronger than the well-known Dennis Moré Condition. While quasiNewton approximations satisfy the latter, there is no theoretical guarantee that they also satisfy the former (Cartis et al., 2011a). Furthermore, any sub-sampled gradient shall satisfy the following condition.\nAssumption 5 (Sufficient Agreement of∇f and g).\n‖∇f(xk)− g(xk)‖ ≤M ‖sk‖2 , ∀k ≥ 0, M > 0. (15)"
  }, {
    "heading": "4.2. Sampling Conditions",
    "text": "Based on probabilistic deviation bounds for random vectors and matrices3, we now present sampling conditions that guarantee sufficient steepness and curvature information in each iteration k. In particular, the Bernstein inequality gives exponentially decaying bounds on the probability of a random variable to differ by more than from its mean for any fixed number of samples. We use this inequality\n3These bounds have lately become popular under the name of concentration inequalities. Unlike classic limit theorems, such as the Central Limit Theorem, concentration inequalities are specifically attractive for application in machine learning because of their non-asymptotic nature.\nto upper bound the `2-norm distance ‖∇f − g‖, as well as the spectral-norm distance ‖B −H‖ by quantities involving the sample size |S|. By applying the resulting bounds in the sufficient agreement assumptions (A4 & A5) and rearranging for |S|, we are able to translate the latter into concrete sampling conditions."
  }, {
    "heading": "4.2.1. GRADIENT SAMPLING",
    "text": "As detailed in the Appendix, the following Lemma arises from the Vector Bernstein Inequality.\nLemma 6 (Gradient deviation bound). Let the sub-sampled gradient gk be defined as in Eq. 4. For ≤ 2κf we have with probability (1− δ) that\n‖g(xk)−∇f(xk)‖ ≤ 4 √ 2κf\n√ log((2d)/δ) + 1/4\n|Sg,k| .\n(16)\nIt constitutes a non-asymptotic bound on the deviation of the gradient norms that holds with high probability. Note how the accuracy of the gradients increases in the sample size. This bound yields the following condition.\nTheorem 7 (Gradient Sampling). If\n|Sg,k| ≥ 32κ2f (log ((2d)/δ) + 1/4)\nM2 ‖sk‖4 , M ≥ 0,∀k ≥ 0\n(17) then gk satisfies the sufficient agreement condition A5 with probability (1− δ)."
  }, {
    "heading": "4.2.2. HESSIAN SAMPLING",
    "text": "In analogy to the gradient case, we use the matrix version of Bernstein’s Inequality to derive the following Lemma.\nLemma 8 (Hessian deviation bound). Let the sub-sampled Hessian B be defined as in Eq. 4. For ≤ 4κg we have with probability (1− δ) that\n‖B(xk)−H(xk)‖ ≤ 4κg\n√ log(2d/δ)\n|SB,k| , (18)\nThis, in turn, can be used to derive a Hessian sampling condition that is guaranteed to satisfy the sufficient agreement condition (A4) with high probability.\nTheorem 9 (Hessian Sampling). If\n|SB,k| ≥ 16κ2g log(2d/δ)\n(C ‖sk‖)2 , C ≥ 0, and ∀k ≥ 0 (19)\nthen Bk satisfies the strong agreement condition A4 with probability (1− δ).\nAs expected, the required sample sizes grow in the problem dimensionality d and in the Lipschitz constants κf and κg . Finally, as outlined in the Appendix (Lemma 20), the stepsize tends to zero as SCR approaches a second-order critical point. Consequently, the sample sizes must approach n as the algorithm converges and thus we have\ng→ ∇f as well as B→ H as k →∞ (20)"
  }, {
    "heading": "4.3. Convergence Analysis",
    "text": "The entire analysis of cubically regularized methods is prohibitively lengthy and we shall thus establish only the crucial properties that ensure global, as well as fast local convergence and improve the worst-case complexity of these methods over standard trust region approaches. Next to the cubic regularization term itself, these properties arise mainly from the penalty parameter updates and step acceptance criteria of the ARC framework, which give rise to a good relation between regularization and stepsize. Further details can be found in (Cartis et al., 2011a)."
  }, {
    "heading": "4.3.1. PRELIMINARY RESULTS",
    "text": "First, we note that the penalty parameter sequence {σk} is guaranteed to stay within some bounded positive range, which is essentially due to the fact that SCR is guaranteed to find a successful step as soon as the penalty parameter exceeds some critical value σsup.\nLemma 10 (Boundedness of σk). Let A3, A4 and A5 hold. Then\nσk ∈ [σinf , σsup], ∀k ≥ 0, (21)\nwhere σinf is defined in Step 7 of Algorithm 1 and\nσsup := {σ0, 3\n2 γ2(2M + C + κg)}. (22)\nFurthermore, for any successful iteration the objective decrease can be directly linked to the model decrease via the step acceptance criterion in Eq. 8. The latter, in turn, can be shown to be lower bounded by the stepsize which combined gives the following result.\nLemma 11 (Sufficient function decrease). Suppose that sk satisfies A1. Then, for all successful iterations k ≥ 0\nf(xk)− f(xk+1) ≥ η1(f(xk)−m(sk))\n≥ 1 6 η1σinf ‖sk‖3\n(23)\nFinally, the termination criterion (13) also guarantees step sizes that do not become too small compared to the respective gradient norm which leads to the following Lemma.\nLemma 12 (Sufficiently long steps). Let A3, A4 and A5 hold. Furthermore, assume the termination criterion TC (A2) and suppose that xk → x∗, as k → ∞. Then, for all sufficiently large successful iterations, sk satisfies\n‖sk‖ ≥ κs √ ‖∇f(xk+1)‖ (24)\nwhere κs is the positive constant\nκs =\n√ 1− κθ\n1 2κg + (1 + κθκg)M + C + σsup + κθκg\n. (25)"
  }, {
    "heading": "4.3.2. LOCAL CONVERGENCE",
    "text": "We here provide a proof of local convergence for any sampling scheme that satisfies the conditions presented in Theorem 7 and Theorem 9 as well as the additional condition that the sample size does not decrease in unsuccessful iterations. We show that such sampling schemes eventually yield exact gradient and Hessian information. Based upon this observation, we obtain the following local convergence result (as derived in the Appendix).\nTheorem 13 (Quadratic local convergence). Let A3 hold and assume that gk and Bk are sampled such that 17 and 19 hold and |Sg,k| and |SB,k| are not decreased in unsuccessful iterations. Furthermore, let sk satisfy A1 and\nxk → x∗, as k →∞, (26)\nwhere H(x∗) is positive definite. Moreover, assume the stopping criterion TC (A2). Then,\n‖xk+1 − x∗‖ ‖xk − x∗‖2 ≤ c, c > 0 as k →∞ (w.h.p.). (27)\nThat is, xk converges in q-quadratically to x∗ as k → ∞ with high probability."
  }, {
    "heading": "4.3.3. GLOBAL CONVERGENCE TO FIRST-ORDER CRITICAL POINT",
    "text": "Lemma 10 and 11 allow us to lower bound the function decrease of a successful step in terms of the full gradient∇fk (as we will shorty detail in Eq. 31). Combined with Lemma 10, this allows us to give deterministic global convergence guarantees using only stochastic first order information.\nTheorem 14 (Convergence to 1st-order Critical Points). Let A1, A3, A4 and A5 hold. Furthermore, let {f(xk)} be bounded below by some finf > −∞. Then\nlim k→∞\n‖∇f(xk)‖ = 0 (28)"
  }, {
    "heading": "4.3.4. GLOBAL CONVERGENCE TO SECOND-ORDER CRITICAL POINT",
    "text": "Unsurprisingly, the second-order convergence guarantee relies mainly on the use of second-order information so that the stochastic gradients do neither alter the result nor the proof as it can be found in Section 5 of (Cartis et al., 2011a). We shall restate it here for the sake of completeness.\nTheorem 15 (Second-order global convergence). Let A3, A4 and A5 hold. Furthermore, let {f(xk)} be bounded below by finf and sk be a global minimizer of mk over a subspaceLk that is spanned by the columns of the d× l orthogonal matrix Qk. As B→ H asymptotically (Eq. 20), any subsequence of negative leftmost eigenvalues {λmin(QᵀkH(xk)Qk)} converges to zero for sufficiently large, successful iterations. Hence\nlim k∈S inf k→∞\nλmin(Q ᵀ kH(xk)Qk) ≥ 0. (29)\nFinally, if Qk becomes a full orthogonal basis of Rd as k → ∞, then any limit point of the sequence of successful iterates {xk} is second-order critical (provided such a limit point exists)."
  }, {
    "heading": "4.3.5. WORST-CASE ITERATION COMPLEXITY",
    "text": "For the worst-case analysis we shall establish the two disjoint index sets Uj and Sj , which represent the un- and successful SCR iterations that have occurred up to some iteration j > 0, respectively. As stated in Lemma 10 the penalty parameter σk is bounded above and hence SCR may only take a limited number of consecutive unsuccessful steps. As a consequence, the total number of unsuccessful iterations is at most a problem dependent constant times the number of successful iterations. Lemma 16 (Number of unsuccessful iterations). For any fixed j ≥ 0, let Lemma 10 hold. Then we have that\n|Uj | ≤ ⌈ (|Sj |+ 1) log(σsup)− log(σinf)\nlog(η1)\n⌉ . (30)\nRegarding the number of successful iterations we have already established the two key ingredients: (i) a sufficient\nfunction decrease in each successful iteration (Lemma 11) and (ii) a step size that does not become too small compared to the respective gradient norm (Lemma 12), which is essential to driving the latter below at a fast rate. Combined they give rise to the guaranteed function decrease for successful iterations\nf(xk)− f(xk+1) ≥ 1\n6 η1σinfκ\n3 s ‖∇f(xk+1)‖ 3/2 , (31)\nwhich already contains the power of 3/2 that appears in the complexity bound. Finally, by summing over all successful iterations one obtains the following, so far best know, worst-case iteration bound to reach first-order criticality.\nTheorem 17 (First-order worst-case complexity). Let A1, A3, A4 and A5 hold. Furthermore, be {f(xk)} bounded below by finf and TC applied (A2). Then, for > 0 the total number of iterations SCR takes to generate the first iterate j with ‖∇f(xj+1)‖ ≤ , and assuming ≤ 1, is\nj ≤ ⌈ (1 + κi)(2 + κj) −3/2 ⌉ , (32)\nwhere\nκi = 6 f(x0)− finf η1σinfκ3s and κj = log(σsup)− log(σinf)\nlog(η1) (33)\nNote that the constants κi and κj involved in this upper bound both increase in the gradient inaccuracy M and the Hessian inaccuracy C (via κs and σsup), such that more inaccuracy in the sub-sampled quantities may well lead to an increased overall number of iterations.\nFinally, we want to point out that similar results can be established regarding a second-order worst-case complexity bound similar to Corollary 5.5 in (Cartis et al., 2011b), which we do not prove here for the sake of brevity."
  }, {
    "heading": "5. Experimental results",
    "text": "In this section we present experimental results on realworld datasets where n d 1. They largely confirm the analysis derived in the previous section. Please refer to the Appendix for more detailed results and experiments on higher dimensional problems."
  }, {
    "heading": "5.1. Practical implementation of SCR",
    "text": "We implement SCR as stated in Algorithm 1 and note the following details. Following (Erdogdu & Montanari, 2015), we require the sampling conditions derived in Section 4 to hold with probability O(1 − 1/d), which yields\nthe following practically applicable sampling schemes\n|Sk,H | ≥ 36κ2g log(d)\n(C ‖sk‖)2 , C > 0, ∀k > 0\n|Sk,g| ≥ 32κ2f (log(d) + 1/4)\nM2‖sk‖4 , M > 0, ∀k > 0.\n(34)\nThe positive constants C and M can be used to scale the sample size to a reasonable portion of the entire dataset and can furthermore be used to offset κg and κf , which are generally expensive to obtain.\nHowever, when choosing |S| for the current iteration k, the stepsize sk is yet to be determined. Based on the Lipschitz continuity of the involved functions, we argue that the previous stepsize is a fair estimator of the current one and this is confirmed by experimental results. Finally, we would like to point out that the sampling schemes derived in Eq. 34 gives our method a clear edge over sampling schemes that do not take any iteration information into account, e.g. linearly or geometrically increased samples."
  }, {
    "heading": "5.2. Baselines and datasets",
    "text": "We compare SCR to various optimization methods presented in Section 2. This includes SGD (with constant step-size), SAGA, Newton’s method, BFGS, L-BFGS and ARC. More details concerning the choice of the hyperparameters are provided in the appendix. We ran experiments on the datasets a9a, covtype and higgs (see details in the appendix). We experimented with a binary logistic regression model with two different regularizers: a standard `2 penalty λ‖x‖2, and a non-convex regularizer\nλ ∑d i=1 x 2 (i)/ ( 1 + x2(i) ) (see (Reddi et al., 2016b))."
  }, {
    "heading": "5.3. Results",
    "text": "The results in Figure 1 confirm our intuition that SCR can reduce ARCs computation time without losing its global convergence property. Newton’s method is the closest in terms of performance. However, it suffer heavily from an increase in d as can be seen by additional results provided in the appendix. Furthermore, it cannot optimize the non-convex version of covtype due to a singular Hessian. Notably, BFGS terminates early on the non-convex higgs dataset due to a local saddle point. Finally, the high condition number of covtype has a significant effect on the performance of SGD, SAGA and L-BFGS."
  }, {
    "heading": "6. Conclusion",
    "text": "In this paper we proposed a sub-sampling technique to estimate the gradient and Hessian in order to construct a cubic model analogue to trust region methods. We show that this method exhibits the same convergence properties as its deterministic counterpart, which are the best known worstcase convergence properties on non-convex functions. Our proposed method is especially interesting in the large scale regime when n d. Numerical experiments on both real and synthetic datasets demonstrate the performance of the proposed algorithm which we compared to its deterministic variant as well as more classical optimization methods. As future work we would like to explore the adequacy of our method to train neural networks which are known to be hard to optimize due to the presence of saddle points."
  }],
  "year": 2017,
  "references": [{
    "title": "Finding local minima for nonconvex optimization in linear time",
    "authors": ["Agarwal", "Naman", "Allen-Zhu", "Zeyuan", "Bullins", "Brian", "Hazan", "Elad", "Ma", "Tengyu"],
    "venue": "arXiv preprint arXiv:1611.01146,",
    "year": 2016
  }, {
    "title": "Convergence rate analysis of a stochastic trust region method for nonconvex optimization",
    "authors": ["Blanchet", "Jose", "Cartis", "Coralia", "Menickelly", "Matt", "Scheinberg", "Katya"],
    "venue": "arXiv preprint arXiv:1609.07428,",
    "year": 2016
  }, {
    "title": "On the use of stochastic hessian information in optimization methods for machine learning",
    "authors": ["Byrd", "Richard H", "Chin", "Gillian M", "Neveitt", "Will", "Nocedal", "Jorge"],
    "venue": "SIAM Journal on Optimization,",
    "year": 2011
  }, {
    "title": "Gradient descent efficiently finds the cubic-regularized non-convex newton step",
    "authors": ["Carmon", "Yair", "Duchi", "John C"],
    "year": 2016
  }, {
    "title": "Adaptive cubic regularisation methods for unconstrained optimization. part i: motivation, convergence and numerical results",
    "authors": ["Cartis", "Coralia", "Gould", "Nicholas IM", "Toint", "Philippe L"],
    "venue": "Mathematical Programming,",
    "year": 2011
  }, {
    "title": "Adaptive cubic regularisation methods for unconstrained optimization. part ii: worst-case function-and derivativeevaluation complexity",
    "authors": ["Cartis", "Coralia", "Gould", "Nicholas IM", "Toint", "Philippe L"],
    "venue": "Mathematical programming,",
    "year": 2011
  }, {
    "title": "Libsvm: a library for support vector machines",
    "authors": ["Chang", "Chih-Chung", "Lin", "Chih-Jen"],
    "venue": "ACM Transactions on Intelligent Systems and Technology (TIST),",
    "year": 2011
  }, {
    "title": "The loss surfaces of multilayer networks",
    "authors": ["Choromanska", "Anna", "Henaff", "Mikael", "Mathieu", "Michael", "Arous", "Gérard Ben", "LeCun", "Yann"],
    "venue": "In AISTATS,",
    "year": 2015
  }, {
    "title": "Starting small - learning with adaptive sample sizes",
    "authors": ["Daneshmand", "Hadi", "Lucchi", "Aurélien", "Hofmann", "Thomas"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2016
  }, {
    "title": "Convergence rates of sub-sampled newton methods",
    "authors": ["Erdogdu", "Murat A", "Montanari", "Andrea"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2015
  }, {
    "title": "Hybrid deterministic-stochastic methods for data fitting",
    "authors": ["Friedlander", "Michael P", "Schmidt", "Mark"],
    "venue": "SIAM Journal on Scientific Computing,",
    "year": 2012
  }, {
    "title": "Escaping from saddle points-online stochastic gradient for tensor decomposition",
    "authors": ["Ge", "Rong", "Huang", "Furong", "Jin", "Chi", "Yuan", "Yang"],
    "venue": "In COLT, pp",
    "year": 2015
  }, {
    "title": "Stochastic first-and zeroth-order methods for nonconvex stochastic programming",
    "authors": ["Ghadimi", "Saeed", "Lan", "Guanghui"],
    "venue": "SIAM Journal on Optimization,",
    "year": 2013
  }, {
    "title": "Updating the regularization parameter in the adaptive cubic regularization algorithm",
    "authors": ["Gould", "Nicholas IM", "M Porcelli", "Toint", "Philippe L"],
    "venue": "Computational optimization and applications,",
    "year": 2012
  }, {
    "title": "Recovering low-rank matrices from few coefficients in any basis",
    "authors": ["Gross", "David"],
    "venue": "IEEE Transactions on Information Theory,",
    "year": 2011
  }, {
    "title": "A linear-time algorithm for trust region problems",
    "authors": ["Hazan", "Elad", "Koren", "Tomer"],
    "venue": "Mathematical Programming,",
    "year": 2016
  }, {
    "title": "Most tensor problems are np-hard",
    "authors": ["Hillar", "Christopher J", "Lim", "Lek-Heng"],
    "venue": "Journal of the ACM (JACM),",
    "year": 2013
  }, {
    "title": "Variance reduced stochastic gradient descent with neighbors",
    "authors": ["Hofmann", "Thomas", "Lucchi", "Aurelien", "Lacoste-Julien", "Simon", "McWilliams", "Brian"],
    "venue": "In Advances in Neural Information Processing Systems",
    "year": 2015
  }, {
    "title": "Accelerating stochastic gradient descent using predictive variance reduction",
    "authors": ["Johnson", "Rie", "Zhang", "Tong"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2013
  }, {
    "title": "Learning multiple layers of features from tiny images",
    "authors": ["Krizhevsky", "Alex", "Hinton", "Geoffrey"],
    "year": 2009
  }, {
    "title": "Introductory lectures on convex optimization",
    "authors": ["Nesterov", "Yurii"],
    "venue": "applied optimization,",
    "year": 2004
  }, {
    "title": "Cubic regularization of newton method and its global performance",
    "authors": ["Nesterov", "Yurii", "Polyak", "Boris T"],
    "venue": "Mathematical Programming,",
    "year": 2006
  }, {
    "title": "Stochastic variance reduction for nonconvex optimization",
    "authors": ["Reddi", "Sashank J", "Hefny", "Ahmed", "Sra", "Suvrit", "Poczos", "Barnabas", "Smola", "Alex"],
    "venue": "arXiv preprint arXiv:1603.06160,",
    "year": 2016
  }, {
    "title": "Fast incremental method for nonconvex optimization",
    "authors": ["Reddi", "Sashank J", "Sra", "Suvrit", "Póczos", "Barnabás", "Smola", "Alex"],
    "venue": "arXiv preprint arXiv:1603.06159,",
    "year": 2016
  }, {
    "title": "A stochastic gradient method with an exponential convergence rate for finite training sets",
    "authors": ["Roux", "Nicolas L", "Schmidt", "Mark", "Bach", "Francis R"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2012
  }, {
    "title": "When are nonconvex problems not scary",
    "authors": ["Sun", "Ju", "Qu", "Qing", "Wright", "John"],
    "venue": "arXiv preprint arXiv:1510.06096,",
    "year": 2015
  }],
  "id": "SP:6502ff8e9004db8b1d46e8e2be7e28cd0e50da46",
  "authors": [{
    "name": "Jonas Moritz Kohler",
    "affiliations": []
  }, {
    "name": "Aurelien Lucchi",
    "affiliations": []
  }],
  "abstractText": "We consider the minimization of non-convex functions that typically arise in machine learning. Specifically, we focus our attention on a variant of trust region methods known as cubic regularization. This approach is particularly attractive because it escapes strict saddle points and it provides stronger convergence guarantees than firstand second-order as well as classical trust region methods. However, it suffers from a high computational complexity that makes it impractical for large-scale learning. Here, we propose a novel method that uses sub-sampling to lower this computational cost. By the use of concentration inequalities we provide a sampling scheme that gives sufficiently accurate gradient and Hessian approximations to retain the strong global and local convergence guarantees of cubically regularized methods. To the best of our knowledge this is the first work that gives global convergence guarantees for a sub-sampled variant of cubic regularization on non-convex functions. Furthermore, we provide experimental results supporting our theory.",
  "title": "Sub-sampled Cubic Regularization for Non-convex Optimization"
}