{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3698–3707 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n3698"
  }, {
    "heading": "1 Introduction",
    "text": "This paper considers parameter estimation in conditional models of the form\np(y|x; ✓) = exp (s(x, y; ✓)) Z(x; ✓)\n(1)\nwhere s(x, y; ✓) is the unnormalized score of label y in conjunction with input x under parameters ✓, Y is a finite set of possible labels, and Z(x; ✓) = P\ny2Y exp (s(x, y; ✓)) is the partition function for input x under parameters ✓.\nIt is hard to overstate the importance of models of this form in NLP. In log-linear models, including both the original work on maximum-entropy models (Berger et al., 1996), and later work on conditional random fields (Lafferty et al., 2001),\n⇤Part of this work done at Google. †Work done at Google.\nthe scoring function s(x, y; ✓) = ✓ · f(x, y) where f(x, y) 2 Rd is a feature vector, and ✓ 2 Rd are the parameters of the model. In more recent work on neural networks the function s(x, y; ✓) is a nonlinear function. In Word2Vec the scoring function is s(x, y; ✓) = ✓\nx · ✓0 y\nwhere y is a word in the context of word x, and ✓\nx 2 Rd and ✓0 y 2 Rd are “inside” and “outside” word embeddings x and y.\nIn many NLP applications the set Y is large. Maximum likelihood estimation (MLE) of the parameters ✓ requires calculation of Z(x; ✓) or its derivatives at each training step, thereby requiring a summation over all members of Y , which can be computationally expensive. This has led to many authors considering alternative methods, often referred to as “negative sampling methods”, where a modified training objective is used that does not require summation over Y on each example. Instead negative examples are drawn from some distribution, and a objective function is derived based on binary classification or ranking. Prominent examples are the binary objective used in word2vec ((Mikolov et al., 2013), see also (Levy and Goldberg, 2014)), and the Noise Contrastive Estimation methods of (Mnih and Teh, 2012; Jozefowicz et al., 2016) for estimation of language models.\nIn spite of the centrality of negative sampling methods, they are arguably not well understood from a theoretical standpoint. There are clear connections to noise contrastive estimation (NCE) (Gutmann and Hyvärinen, 2012), a negative sampling method for parameter estimation in joint models of the form\np(y) = exp (s(y; ✓))\nZ(✓) ; Z(✓) =\nX y2Y exp (s(y; ✓))\n(2) However there has not been a rigorous theoretical analysis of NCE in the estimation of conditional models of the form in Eq. 1, and we will argue there are subtle but important questions when generalizing NCE to the conditional case. In particular, the joint model in Eq 2 has a single partition function Z(✓) which is estimated as a param-\neter of the model (Gutmann and Hyvärinen, 2012) whereas the conditional model in Eq 1 has a separate partition function Z(x; ✓) for each value of x. This difference is critical.\nWe show the following (throughout we define K 1 to be the number of negative examples sampled per training example): • For any K 1, a binary classification variant of NCE, as used by (Mnih and Teh, 2012; Mikolov et al., 2013), gives consistent parameter estimates under the assumption that Z(x; ✓) is constant with respect to x (i.e., Z(x; ✓) = H(✓) for some function H). Equivalently, the method is consistent under the assumption that the function s(x, y; ✓) is powerful enough to incorporate logZ(x; ✓). • For any K 1, a ranking-based variant of NCE, as used by (Jozefowicz et al., 2016), gives consistent parameter estimates under the much weaker assumption that Z(x; ✓) can vary with x. Equivalently, there is no need for s(x, y; ✓) to be powerful enough to incorporate logZ(x; ✓). • We analyze the statistical efficiency of the ranking-based and classification-based NCE variants. Under respective assumptions, both variants achieve Fisher efficiency (the same asymptotic mean square error as the MLE) as K ! 1. • We discuss application of our results to approaches of (Mnih and Teh, 2012; Mikolov et al., 2013; Levy and Goldberg, 2014; Jozefowicz et al., 2016) giving a unified account of these methods. • We describe experiments on synthetic data and language modeling evaluating the effectiveness of the two NCE variants."
  }, {
    "heading": "2 Basic Assumptions",
    "text": "We assume the following setup throughout: • We have sets X and Y , where X ,Y are finite. • There is some unknown joint distribution\np X,Y (x, y) where x 2 X and y 2 Y . We assume that the marginal distributions satisfy p\nX (x) > 0 for all x 2 X and p\nY (y) > 0 for all y 2 Y . • We have training examples {x(i), y(i)}n\ni=1 drawn I.I.D. from p\nX,Y (x, y). • We have a scoring function s(x, y; ✓) where ✓ are the parameters of the model. For example, s(x, y; ✓) may be defined by a neural network. • We use ⇥ to refer to the parameter space. We assume that ⇥ ✓ Rd for some integer d. • We use p\nN (y) to refer to a distribution from which negative examples are drawn in the NCE approach. We assume that p\nN satisfies p N (y) > 0 for all y 2 Y .\nWe will consider estimation under the following two assumptions:\nAssumption 2.1 There exists some parameter value ✓⇤ 2 ⇥ such that for all (x, y) 2 X ⇥ Y ,\np Y |X(y|x) =\nexp(s(x, y; ✓⇤))\nZ(x; ✓⇤) (3)\nwhere Z(x; ✓⇤) = P y2Y exp(s(x, y; ✓ ⇤ )).\nAssumption 2.2 There exists some parameter value ✓⇤ 2 ⇥, and a constant ⇤ 2 R, such that for all (x, y) 2 X ⇥ Y ,\np Y |X(y|x) = exp (s(x, y; ✓⇤) ⇤) . (4)\nAssumption 2.2 is stronger than Assumption 2.1. It requires logZ(x; ✓⇤) ⌘ ⇤ for all x 2 X , that is, the conditional distribution is perfectly self-normalized. Under Assumption 2.2, it must be the case that 8x 2 X X\ny\np Y |X(y|x) =\nX\ny\nexp{s(x, y; ✓⇤) ⇤} = 1\nThere are |X | constraints but only d + 1 free parameters. Therefore self-normalization is a nontrivial assumption when |X | d. In the case of language modeling, |X | = |V |k d + 1, where |V | is the vocabulary size and k is the length of the context. The number of constraints grows exponentially fast.\nGiven a scoring function s(x, y; ✓) that satisfies assumption 2.1, we can derive a scoring function s0 that satisfies assumption 2.2 by defining\ns0(x, y; ✓, {c x : x 2 X}) = s(x, y; ✓) c x\nwhere c x 2 R is a parameter for history x. Thus we introduce a new parameter c\nx for each possible history x. This is the most straightforward extension of NCE to the conditional case; it is used by (Mnih and Teh, 2012). It has the clear drawback however of introducing a large number of additional parameters to the model."
  }, {
    "heading": "3 Two Estimation Algorithms",
    "text": "Figure 1 shows two NCE-based parameter estimation algorithms, based respectively on binary objective and ranking objective. The input to either algorithm is a set of training examples {x(i), y(i)}n\ni=1, a parameter K specifying the number of negative examples per training example, and\na distribution p N (·) from which negative examples are sampled. The algorithms differ only in the choice of objective function being optimized: Ln\nB\nfor binary objective, and Ln R for ranking objective. Binary objective essentially corresponds to a problem where the scoring function s(x, y; ✓) is used to construct a binary classifier that discriminates between positive and negative examples. Ranking objective corresponds to a problem where the scoring function s(x, y; ✓) is used to rank the true label y(i) above negative examples y(i,1) . . . y(i,K) for the input x(i). Our main result is as follows:\nTheorem 3.1 (Informal: see section 4 for a for-\nmal statement.) For any K 1, the binary classification-based algorithm in figure 1 is con-\nsistent under Assumption 2.2, but is not always\nconsistent under the weaker Assumption 2.1. For\nany K 1, the ranking-based algorithm in figure 1 is consistent under either Assumption 2.1 or\nAssumption 2.2. Both algorithms achieve the same\nstatistical efficiency as the maximum-likelihood estimate as K ! 1.\nThe remainder of this section gives a sketch of the argument underlying consistency, and discusses use of the two algorithms in previous work."
  }, {
    "heading": "3.1 A Sketch of the Consistency Argument",
    "text": "for the Ranking-Based Algorithm\nIn this section, in order to develop intuition underlying the ranking algorithm, we give a proof sketch of the following theorem:\nTheorem 3.2 (First part of theorem 4.1 below.) Define L1 R (✓) = E[Ln R\n(✓)]. Under Assumption 2.1, ¯✓ 2 argmax ✓ L1 R\n(✓) if and only if, for all (x, y) 2 X ⇥ Y ,\np Y |X(y|x) = exp(s(x, y; ¯✓))/Z(x, ¯✓).\nThis theorem is key to the consistency argument. Intuitively as n increases Ln\nR (✓) converges to L1 R\n(✓), and the output to the algorithm converges to ✓0 such that p(y|x; ✓0) = p\nY |X(y|x) for all x, y. Section 4 gives a formal argument.\nWe now give a proof sketch for theorem 3.2. Consider the algorithm in figure 1. For convenience define ȳ(i) to be the vector (y(i,0), y(i,1), . . . , y(i,K)). Define ↵(x, ȳ) =\nP\nK k=0 pX,Y (x, ȳk) Q j 6=k pN (ȳj), and\nq(k|x, ȳ; ✓) = exp(s̄(x, ȳk; ✓)) P\nK k=0 exp(s̄(x, ȳk; ✓)) ,\n(k|x, ȳ) = p X,Y (x, ȳ k )\nQ\nj 6=k pN (ȳj)\n↵(x, ȳ)\n=\np Y |X(ȳk|x)/pN (ȳk)\nP\nN k=0 pY |X(ȳk|x)/pN (ȳk)\nC(x, ȳ; ✓) = K X\nk=0\n(k|x, ȳ) log q(k|x, ȳ; ✓)\nIntuitively, q(·|x, ȳ; ✓) and (·|x, ȳ) are posterior\ndistributions over the true label k 2 {0 . . .K} given an input x, ȳ, under the parameters ✓ and the true distributions p\nX,Ȳ (x, ȳ) respectively; C(x, ȳ; ✓) is the negative cross-entropy between these two distributions.\nThe proof of theorem 3.2 rests on two identities. The first identity states that the objective function is the expectation of the negative crossentropy w.r.t. the density function 1\nK+1↵(x, ȳ) (see Section B.1.1 of the supplementary material for derivation):\nL1 R (✓) = X\nx\nX\nȳ\n1\nK + 1 ↵(x, ȳ)C(x, ȳ; ✓). (5)\nThe second identity concerns the relationship between q(·|x, ȳ; ✓) and (·|x, ȳ). Under assumption 2.1, for all x, ȳ, k 2 {0 . . .K},\nq(k|x, ȳ; ✓⇤)\n=\np Y |X(ȳk|x)Z(x; ✓⇤)/pN (yk)\nP\nK k=0 pY |X(ȳk|x)Z(x; ✓⇤)/pN (yk) = (k|x, ȳ) (6)\nIt follows immediately through the properties of negative cross entropy that\n8x, ȳ, ✓⇤ 2 argmax ✓ C(x, ȳ; ✓) (7)\nThe remainder of the argument is as follows: • Eqs. 7 and 5 imply that ✓⇤ 2 argmax\n✓ L1 R\n(✓). • Assumption 2.1 implies that ↵(x, ȳ) > 0 for\nall x, ȳ. It follows that any ✓0 2 argmax ✓ L1 R\n(✓) satisfies\nfor all x, ȳ, k, (8) q(k|x, ȳ; ✓0) = q(k|x, ȳ; ✓⇤) = (k|x, ȳ)\nOtherwise there would be some x, ȳ such that C(x, ȳ; ✓0) < C(x, ȳ; ✓⇤). • Eq. 8 implies that 8x, y, p(y|x; ✓0) = p(y|x; ✓⇤). See the proof of lemma B.3 in the supplementary material.\nIn summary, the identity in Eq. 5 is key: the objective function in the limit, L1\nR (✓), is related to a negative cross-entropy between the underlying distribution (·|x, ȳ) and a distribution under the parameters, q(·|x, ȳ; ✓). The parameters ✓⇤ maximize this negative cross entropy over the space of all distributions {q(·|x, ȳ; ✓), ✓ 2 ⇥}."
  }, {
    "heading": "3.2 The Algorithms in Previous Work",
    "text": "To motivate the importance of the two algorithms, we now discuss their application in previous work.\nMnih and Teh (2012) consider language modeling, where x = w1w2 . . . wn 1 is a history consisting of the previous n 1 words, and y is a word. The scoring function is defined as\ns(x, y; ✓) = ( n 1 X\ni=1\nC i r w\ni\n) · q y + b y c x\nwhere r w\ni is an embedding (vector of parameters) for history word w\ni , q y is an embedding (vector of parameters) for word y, each C\ni for i = 1 . . . n 1 is a matrix of parameters specifying the contribution of r\nw\ni\nto the history representation, b y is a bias term for word y, and c\nx is a parameter corresponding to the log normalization term for history x. Thus each history x has its own parameter c\nx . The binary objective function is used in the NCE algorithm. The noise distribution p\nN (y) is set to be the unigram distribution over words in the vocabulary.\nThis method is a direct application of the original NCE method to conditional estimation, through introduction of the parameters c\nx corresponding to normalization terms for each history. Interestingly, Mnih and Teh (2012) acknowledge the difficulties in maintaining a separate parameter c\nx for each history, and set c x = 0 for all x, noting that empirically this works well, but without giving justification.\nMikolov et al. (2013) consider an NCE-based method using the binary objective function for estimation of word embeddings. The skip-gram method described in the paper corresponds to a model where x is a word, and y is a word in the context. The vector v\nx is the embedding for word x, and the vector v0\ny is an embedding for word y (separate embeddings are used for x and y). The method they describe uses\ns̄(x, y; ✓) = v0 y · v x\nor equivalently\ns(x, y; ✓) = v0 y · v x + log p N (y)\nThe negative-sampling distribution p N (y) was chosen as the unigram distribution p\nY (y) raised to the power 3/4. The end goal of the method was to learn useful embeddings v\nw and v0 w for each word\nin the vocabulary; however the method gives a consistent estimate for a model of the form\np(y|x) = exp\nv0 y · v x + log p N (y)\nP\ny\nexp v0 y · v x + log p N (y)\n=\np N (y) exp v0 y · v x\nZ(x; ✓)\nassuming that Assumption 2.2 holds, i.e. Z(x; ✓) = P\ny\np N (y) exp v0 y · v x ⌘ H(✓) which does not vary with x.\nLevy and Goldberg (2014) make a connection between the NCE-based method of (Mikolov et al., 2013), and factorization of a matrix of pointwise mutual information (PMI) values of (x, y) pairs. Consistency of the NCE-based method under assumption 2.2 implies a similar result, specifically: if we define p\nN (y) = p Y (y), and define s(x, y; ✓) = v0\ny\n· v x + log p N (y) implying s̄(x, y; ✓) = v0\ny\n· v x , then parameters v0 y and v x\nconverge to values such that\np(y|x) = p Y (y) exp\nv0 y · v x\nH(✓)\nor equivalently\nPMI(x, y) = log p(y|x) p(y) = v0 y · v x logH(✓)\nThat is, following (Levy and Goldberg, 2014), the inner product v0\ny\n· v x is an estimate of the PMI up to a constant offset H(✓).\nFinally, Jozefowicz et al. (2016) introduce the ranking-based variant of NCE for the language modeling problem. This is the same as the ranking-based algorithm in figure 1. They do not, however, make the connection to assumptions 2.2 and 2.1, or derive the consistency or efficiency results in the current paper. Jozefowicz et al. (2016) partially motivate the ranking-based variant throught the importance sampling viewpoint of Bengio and Senécal (2008). However there are two critical differences: 1) the algorithm of Bengio and Senécal (2008) does not lead to the same objective Ln\nR in the ranking-based variant of NCE; instead it uses importance sampling to derive an objective that is similar but not identical; 2) the importance sampling method leads to a biased estimate of the gradients of the log-likelihood function, with the bias going to zero only as K ! 1. In contrast the theorems in the current paper show that the NCE-based methods are consistent for any\nvalue of K. In summary, while it is tempting to view the ranking variant of NCE as an importance sampling method, the NCE-based view gives stronger guarantees for finite values of K."
  }, {
    "heading": "4 Theory",
    "text": "This section states the main theorems. The supplementary material contains proofs. Throughout the paper, we use E\nX [ · ],E Y [ · ],E X,Y [ · ],E Y |X=x[ · ]\nto represent the expectation w.r.t. p X (·), p Y (·), p X,Y (·, ·), p Y |X(·|x). We use k · k to denote either the l2 norm when the operand is a vector or the spectral norm when the operand is a matrix. Finally, we use ) to represent converge in distribution. Recall that we have defined\ns̄(x, y; ✓) = s(x, y; ✓) log p N (y)."
  }, {
    "heading": "4.1 Ranking",
    "text": "In this section, we study noise contrastive estimation with ranking objective under Assumption 2.1. First consider the following function:\nL1 R (✓) = X\nx,y0,··· ,y K\np X,Y (x, y0) K Y\ni=1\np N (y i )\n⇥ log exp(s̄(x, y0; ✓)) P\nK k=0 exp(s̄(x, yk; ✓))\n!\n.\nBy straightforward calculation, one can find that\nL1 R (✓) = E [Ln R (✓)] .\nUnder mild conditions, Ln R (✓) converges to L1 R\n(✓) as n ! 1. Denote the set of maximizers of L1\nR (✓) by ⇥⇤ R , that is\n⇥ ⇤ R = argmax ✓2⇥ L1 R (✓) .\nThe following theorem shows that any parameter vector ¯✓ 2 ⇥⇤\nR if and only if it gives the correct conditional distribution p\nY |X(y|x). Assumption 4.1 (Identifiability). For any ✓ 2 ⇥, if there exists a function c(x) such that s(x, y; ✓) s(x, y; ✓⇤) ⌘ c(x) for all (x, y) 2 X ⇥ Y , then ✓ = ✓⇤ and thus c(x) = 0 for all x.\nTheorem 4.1 Under Assumption 2.1, ¯✓ 2 ⇥⇤ R if and only if, for all (x, y) 2 X ⇥ Y ,\np Y |X(y|x) = exp(s(x, y; ¯✓))/Z(x, ¯✓).\nIn addition, ⇥ ⇤ R is a singleton if and only if As-\nsumption 4.1 holds.\nNext we consider consistency of the estimation algorithm based on the ranking objective under the following regularity assumptions: Assumption 4.2 (Continuity). s(x, y; ✓) is continuous w.r.t. ✓ for all (x, y) 2 X ⇥ Y . Assumption 4.3 ⇥\n⇤ R is contained in the interior\nof a compact set ⇥ ⇢ Rd. For a given estimate bp\nY |X of the conditional distribution p\nY |X , define the error metric d(·, ·) by\nd bp Y |X , pY |X =\nX\nx2X ,y2Y p X,Y (x, y)\n⇥ bp Y |X(y|x) pY |X(y|x)\n2 .\nFor a sequence of IID observations (x(1), y(1)), (x(2), y(2)), . . . , define the sequences of estimates (b✓1\nR , bp1 Y |X), ( b✓2 R , bp2 Y |X), . . . where the\nnth estimate (b✓n R , bpn Y |X) is obtained by optimizing the ranking objective of figure 1 on (x(1), y(1)), (x(2), y(2)), . . . , (x(n), y(n)). Theorem 4.2 (Consistency) Under Assump-\ntions 2.1, 4.2, 4.3, the estimates based on the\nranking objective are strongly consistent in the\nsense that for any fixed K 1,\nP n lim\nn!1 min\n✓ ⇤2⇥⇤ R\nkb✓n R\n✓⇤k = 0 o\n= P n lim n!1 d ⇣ bpn Y |X , pY |X ⌘ = 0 o = 1\nFurther, if Assumption 4.1 holds,\nP n lim\nn!1 b✓n R\n= ✓⇤ o = 1.\nRemark 4.1 Thoughout the paper, all NCE esti-\nmators are defined for some fixed K. We suppress the dependence on K to simplify notation (e.g. b✓n\nR\nshould be interpreted as b✓n,K R )."
  }, {
    "heading": "4.2 Classification",
    "text": "Now we turn to the analysis of NCE with binary objective under Assumption 2.2. First consider the following function,\nL1 B (✓, ) = X\nx,y\nn\np X,Y (x, y) log (g(x, y; ✓, ))\n+Kp X (x)p N\n(y) log (1 g(x, y; ✓, )) o\nOne can find that\nL1 B (✓, ) = E [Ln B (✓, )] .\nDenote the set of maximizers of L1 B (✓, ) by ⌦⇤ B :\n⌦ ⇤ B = arg max ✓2⇥, 2 L1 B (✓, ) .\nParallel results of Theorem 4.1, 4.2 are established as follows. Assumption 4.4 (Identifiability). For any ✓ 2 ⇥, if there exists some constant c such that s(x, y; ✓) s(x, y; ✓⇤) ⌘ c for all (x, y) 2 X⇥Y , then ✓ = ✓⇤ and thus c = 0.\nAssumption 4.5 ⌦ ⇤ B is in the interior of ⇥ ⇥ where ⇥ ⇢ Rd, ⇢ R are compact sets. Theorem 4.3 Under Assumption 2.2, (\n¯✓, ̄) 2 ⌦\n⇤ B if and only if, for all (x, y) 2 X ⇥ Y ,\np Y |X(y|x) = exp(s(x, y; ¯✓) ̄)\nfor all (x, y). ⌦⇤ B is a singleton if and only if As-\nsumption 4.4 holds.\nSimilarly we can define the sequence of estimates (b✓1\nB , b 1 B , bp1 Y |X), ( b✓2 B , b 2 B , bp2 Y |X), . . .\nbased on the binary objective.\nTheorem 4.4 (Consistency) Under Assump-\ntion 2.2, 4.2, 4.5, the estimates defined by the\nbinary objective are strongly consistent in the\nsense that for any K 1,\nP n lim\nn!1 min (✓⇤, ⇤)2⌦⇤ B\nk(b✓n B , b n B\n) (✓⇤, ⇤)k = 0 o\n= P n lim n!1 d ⇣ bpn Y |X , pY |X ⌘ = 0 o = 1\nIf further Assumption 4.4 holds,\nP n lim\nn!1 (\nb✓n B , b n B\n) = (✓⇤, ⇤) o = 1."
  }, {
    "heading": "4.3 Counterexample",
    "text": "In this section, we give a simple example to demonstrate that the binary classification approach fails to be consistent when assumption 2.1 holds but assumption 2.2 fails (i.e. the partition function depends on the input).\nConsider X 2 X = {x1, x2} with marginal distribution\np X (x1) = pX(x2) = 1/2,\nand Y 2 Y = {y1, y2} generated by the conditional model specified in assumption 2.1 with the score function parametrized by ✓ = (✓1, ✓2) and\ns(x1, y1; ✓) = log ✓1,\ns(x1, y2; ✓) = s(x2, y1; ✓) = s(x2, y2; ✓) = log ✓2.\nAssume the true parameter is ✓⇤ = (✓⇤1, ✓⇤2) = (1, 3). By simple calculation,\nZ(✓⇤;x1) = 4, Z(✓ ⇤ ;x2) = 6,\np X,Y (x1, y1) = 1/8, pX,Y (x1, y2) = 3/8, p X,Y (x2, y1) = pX,Y (x2, y2) = 1/4.\nSuppose we choose the negative sampling distribution p\nN (y1) = pN (y2) = 1/2. For any K 1, by the Law of Large Numbers, as n goes to infinity, Ln\nB (✓, ) will converge to L1 B\n(✓, ). Substitute in the parameters above. One can show that\nL1 B (✓, ) = 1\n8\nlog 2✓1 2✓1 +K exp( )\n+\nK\n4\nlog\nK exp( )\n2✓1 +K exp( )\n+\n7\n8\nlog 2✓2 2✓2 +K exp( )\n+\n3K\n4\nlog\nK exp( )\n2✓2 +K exp( ) .\nSetting the derivatives w.r.t. ✓1, ✓2 to zero, one will obtain\n✓1 = 1\n4\nexp( ), ✓2 = 7\n12\nexp( ).\nSo for any (e✓1, e✓2, e ) 2 argmax ✓, L1 B\n(✓, ), (\ne✓1, e✓2, e ) will satisfy the equalities above. Then the estimated distribution ep\nY |X will satisfy\nep Y |X(y1|x1) ep Y |X(y2|x1) = e✓1 e✓2 = 1/4 7/12 = 3 7 ,\nwhich contradicts the fact that\np Y |X(y1|x1) p Y |X(y2|x1) = p X,Y (x1, y1) p X,Y (x1, y2) = 1 3 .\nSo the binary objective does not give consistent estimation of the conditional distribution."
  }, {
    "heading": "4.4 Asymptotic Normality and Statistical",
    "text": "Efficiency\nNoise Contrastive Estimation significantly reduces the computational complexity, especially when the label space |Y| is large. It is natural to ask: does such scalability come at a cost? Classical likelihood theory tells us, under mild conditions, the maximum likelihood estimator (MLE) has nice properties like asymptotic normality and Fisher efficiency. More specifically, as the sample size goes\nto infinity, the distribution of the MLE will converge to a multivariate normal distribution, and the mean square error of the MLE will achieve the Cramer-Rao lower bound (Ferguson, 1996).\nWe have shown the consistency of the NCE estimators in Theorem 4.2 and Theorem 4.4. In this part of the paper, we derive their asymptotic distribution and quantify their statistical efficiency. To this end, we restrict ourselves to the case where ✓⇤ is identifiable (i.e. Assumptions 4.1 or 4.4 hold) and the scoring function s(x, y; ✓) satisfies the following smoothness condition:\nAssumption 4.6 (Smoothness). The scoring func-\ntion s(x, y; ✓) is twice continuous differentiable w.r.t. ✓ for all (x, y) 2 X ⇥ Y .\nWe first introduce the following maximumlikelihood estimator.\nb✓ MLE = argmin ✓ LnMLE(✓)\n:= argmin\n✓\nn\nX\ni=1\nlog\nexp(s(x(i), y(i); ✓)) P\ny2Y exp(s(x (i), y; ✓))\n!\n.\nDefine the matrix\nI ✓ ⇤ = E X\n⇥\nVar Y |X=x [r✓s(x, y; ✓⇤)] ⇤ .\nAs shown below, I ✓ ⇤ is essentially the Fisher information matrix under the conditional model.\nTheorem 4.5 Under Assumption 2.1, 4.1, 4.3, and 4.6, if I ✓ ⇤ is non-singular, as n ! 1\np n(b✓ MLE ✓⇤) ) N (0, I 1\n✓\n⇤ ).\nFor any given estimator b✓, define the scaled asymptotic mean square error by\nMSE1(b✓) = lim n!1\nE \" r n\nd\n⇣ b✓ ✓⇤ ⌘\n2 #\n,\nwhere d is the dimension of the parameter ✓⇤. Theorem 4.5 implies that,\nMSE1(b✓ MLE ) = Tr(I 1 ✓ ⇤ )/d.\nwhere Tr(·) denotes the trace of a matrix. According to classical MLE theory (Ferguson, 1996), under certain regularity conditions, this is the best achievable mean square error. So the next question to answer is: can these NCE estimators approach this limit?\nAssumption 4.7 There exist positive constants c, C such that min(I ✓ ⇤ ) c and\nmax\n(x,y)2X⇥Y\nn\n|s(x, y; ✓⇤)|, kr ✓ s(x, y; ✓⇤)k ,\nr2 ✓ s(x, y; ✓⇤)\no\n C.\nwhere min(·) denotes the smallest singular value.\nTheorem 4.6 (Ranking) Under Assumption 2.1,\n4.1, 4.3, 4.6, 4.7, there exists an integer K0 such that for all K K0, as n ! 1\np n ⇣\nb✓ R\n✓⇤ ⌘\n) N (0, I 1 R,K ), (9)\nfor some matrix I R,K . There exists a constant C such that for all K K0,\n|MSE1(b✓R) MSE1(b✓ MLE)|  C/ p K\nkI 1 R,K I 1 ✓ ⇤ k  C/ p K\nTheorem 4.7 (Binary) Under Assumption 2.2,\n4.4, 4.5, 4.6, 4.7, there exists an integer K0 such that, for any K K0, as n ! 1\np n ⇣\nb✓ B\n✓⇤ ⌘\n) N (0, I 1 B,K ), (10)\nfor some matrix I B,K . There exists a constant C such that for all K K0,\n|MSE1(b✓B) MSE1(b✓ MLE)|  C/K kI 1\nB,K I 1 ✓ ⇤ k  C/K.\nRemark 4.2 Theorem 4.6 and 4.7 reveal that un-\nder respective model assumptions, for any given\nK K0 both NCE estimators are asymptotically normal and p n-consistent. Moreover, both NCE\nestimators approach Fisher efficiency (statistical\noptimality) as K grows."
  }, {
    "heading": "5 Experiments",
    "text": ""
  }, {
    "heading": "5.1 Simulations",
    "text": "Suppose we have a feature space X ⇢ Rd with |X | = m\nx , label space Y = {1, · · · ,m y }, and parameter ✓ = (✓1, · · · , ✓m\ny ) 2 Rmy⇥d. Then for any given sample size n, we can generate observations (x(i), y(i)) by first sampling x(i) uniformly from X and then sampling y(i) 2 Y by the condional model\np(y|x; ✓) = exp(x0✓ y )/\nm\ny\nX\ny=1\nexp(x0✓ y ).\nWe first consider the estimation of ✓ by MLE and NCE-ranking. We fix d = 4,m\nx = 200,m y =\n100 and generate X and the parameter ✓ from separate mixtures of Gaussians. We try different configurations of (n,K) and report the KL divergence between the estimated distribution and true distribution, as summarized in the left panel of figure 2. The observations are: • The NCE estimators are consistent for any fixed K. For a fixed sample size, the NCE estimators become comparable to MLE as K increases. • The larger the sample size, the less sensitive are the NCE estimators to K. A very small value of K seems to suffice for large sample size.\nApparently, under the parametrization above, the model is not self-normalized. To use NCEbinary, we add an extra x-dependent bias parameter b\nx to the score function (i.e. s(x, y; ✓) = x0✓ y +\nb x ) to make the model self-normalized or else the algorithm will not be consistent. Similar patterns to figure 2 are observed when varying sample size and K (see Section A.1 of the supplementary material). However this makes NCE-binary not directly comparable to NCE-ranking/MLE since its performance will be compromised by estimating extra parameters and the number of extra parameters depends on the richness of the feature space X . To make this clear, we fix n = 16000, d = 4,m\ny = 100,K = 32 and experiment with m x = 100, 200, 300, 400. The results are summarized on the right panel of figure 2. As |X | increases, the KL divergence will grow while the performance of NCE-ranking/MLE is independent of |X |. Without the x-dependent bias term for NCE-binary, the KL divergence will be much higher due to lack of consistency (0.19, 0.21, 0.24, 0.26 respectively)."
  }, {
    "heading": "5.2 Language Modeling",
    "text": "We evaluate the performance of the two NCE algorithms on a language modeling problem, using the Penn Treebank (PTB) dataset (Marcus et al., 1993). We choose (Zaremba et al., 2014) as the benchmark where the conditional distribution is modeled by two-layer LSTMs and the parameters are estimated by MLE (note that the current state-of-the-art is (Yang et al., 2018)). Zaremba et al. (2014) implemented 3 model configurations: “Small” , “Medium” and “Large”, which have 200, 650 and 1500 units per layer respectively. We follow their setup (model size, unrolled steps, dropout ratio, etc) but train the model by maximiz-\ning the two NCE objectives. We use the unigram distribution as the negative sampling distribution and consider K = 200, 400, 800, 1600.\nThe results on the test set are summarized in table 1. Similar patterns are observed on the validation set (see Section A.2 of the supplementary material). As shown in the table, the performance of NCE-ranking and NCE-binary improves as the number of negative examples increases, and finally outperforms the MLE.\nAn interesting observation is, without regularization, the binary classification approach outperforms both ranking and MLE. This suggests the model space (two-layer LSTMs) is rich enough as to approximately incorporate the x-dependent partition function Z(✓;x), thus making the model approximately self-normalized. This motivates us to modify the ranking and MLE objectives by adding the following regularization term:\n↵\nn\nn\nX\ni=1\n0\n@\nlog\n0\n@\n1\nm\nm\nX\nj=1\nexp\n⇣ s̄(x(i), ey(i,j); ✓) ⌘\n1\nA\n1\nA\n2\n⇡ ↵E X\nh (logZ(x; ✓))2 i ,\nwhere ey(i,j), 1  j  m are sampled from the noise distribution p\nN\n(·). This regularization\nterm promotes a constant partition function, that is Z(x; ✓) ⇡ 1 for all x 2 X . In our experiments, we fix m to be 1/10 of the vocabulary size, K = 1600 and tune the regularization parameter ↵. As shown in the last three rows of the table, regularization significantly improves the performance of both the ranking approach and the MLE."
  }, {
    "heading": "6 Conclusions",
    "text": "In this paper we have analyzed binary and ranking variants of NCE for estimation of conditional models p(y|x; ✓). The ranking-based variant is consistent for a broader class of models than the binary-based algorithm. Both algorithms achieve Fisher efficiency as the number of negative examples increases. Experiments show that both algorithms outperform MLE on a language modeling task. The ranking-based variant of NCE outperforms the binary-based variant once a regularizer is introduced that encourages self-normalization."
  }, {
    "heading": "Acknowledgments",
    "text": "The authors thank Emily Pitler and Ali Elkahky for many useful conversations about the work, and David Weiss for comments on an earlier draft of the paper."
  }],
  "year": 2018,
  "references": [{
    "title": "Adaptive importance sampling to accelerate training of a neural probabilistic language model",
    "authors": ["Yoshua Bengio", "Jean-Sébastien Senécal."],
    "venue": "IEEE Transactions on Neural Networks, 19(4):713–722.",
    "year": 2008
  }, {
    "title": "A maximum entropy approach to natural language processing",
    "authors": ["Adam L. Berger", "Vincent J. Della Pietra", "Stephen A. Della Pietra."],
    "venue": "Comput. Linguist., 22(1):39–71.",
    "year": 1996
  }, {
    "title": "A course in large sample theory, volume 49",
    "authors": ["Thomas Shelburne Ferguson."],
    "venue": "Chapman & Hall London.",
    "year": 1996
  }, {
    "title": "Noise-contrastive estimation of unnormalized statistical models, with applications to natural image statistics",
    "authors": ["Michael U Gutmann", "Aapo Hyvärinen."],
    "venue": "Journal of Machine Learning Research, 13(Feb):307–361.",
    "year": 2012
  }, {
    "title": "Exploring the limits of language modeling",
    "authors": ["Rafal Jozefowicz", "Oriol Vinyals", "Mike Schuster", "Noam Shazeer", "Yonghui Wu."],
    "venue": "arXiv preprint arXiv:1602.02410.",
    "year": 2016
  }, {
    "title": "Conditional random fields: Probabilistic models for segmenting and labeling sequence data",
    "authors": ["John D. Lafferty", "Andrew McCallum", "Fernando C.N. Pereira."],
    "venue": "Proceedings of the Eighteenth International Conference on Machine Learning, ICML",
    "year": 2001
  }, {
    "title": "Neural word embedding as implicit matrix factorization",
    "authors": ["Omer Levy", "Yoav Goldberg."],
    "venue": "Pro-",
    "year": 2014
  }, {
    "title": "Building a large annotated corpus of english: The penn treebank",
    "authors": ["Mitchell P Marcus", "Mary Ann Marcinkiewicz", "Beatrice Santorini."],
    "venue": "Computational linguistics, 19(2):313–330.",
    "year": 1993
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg Corrado", "Jeffrey Dean."],
    "venue": "Proceedings of the 26th International Con-",
    "year": 2013
  }, {
    "title": "A fast and simple algorithm for training neural probabilistic language models",
    "authors": ["Andriy Mnih", "Yee W Teh."],
    "venue": "Proceedings of the 29th International Conference on Machine Learning (ICML-12), pages 1751–1758.",
    "year": 2012
  }, {
    "title": "Breaking the softmax bottleneck: A high-rank RNN language model",
    "authors": ["Zhilin Yang", "Zihang Dai", "Ruslan Salakhutdinov", "William W. Cohen."],
    "venue": "In",
    "year": 2018
  }, {
    "title": "Recurrent neural network regularization",
    "authors": ["Wojciech Zaremba", "Ilya Sutskever", "Oriol Vinyals."],
    "venue": "arXiv preprint arXiv:1409.2329.",
    "year": 2014
  }],
  "id": "SP:a96467e614b122fa6b65a48a2a3907cbce3463d5",
  "authors": [{
    "name": "Zhuang Ma",
    "affiliations": []
  }],
  "abstractText": "Noise Contrastive Estimation (NCE) is a powerful parameter estimation method for loglinear models, which avoids calculation of the partition function or its derivatives at each training step, a computationally demanding step in many cases. It is closely related to negative sampling methods, now widely used in NLP. This paper considers NCE-based estimation of conditional models. Conditional models are frequently encountered in practice; however there has not been a rigorous theoretical analysis of NCE in this setting, and we will argue there are subtle but important questions when generalizing NCE to the conditional case. In particular, we analyze two variants of NCE for conditional models: one based on a classification objective, the other based on a ranking objective. We show that the rankingbased variant of NCE gives consistent parameter estimates under weaker assumptions than the classification-based method; we analyze the statistical efficiency of the ranking-based and classification-based variants of NCE; finally we describe experiments on synthetic data and language modeling showing the effectiveness and trade-offs of both methods.",
  "title": "Noise Contrastive Estimation and Negative Sampling for Conditional Models: Consistency and Statistical Efficiency"
}