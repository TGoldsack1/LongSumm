{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3719–3728 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n3719"
  }, {
    "heading": "1 Introduction",
    "text": "Many interpretation methods for neural networks explain the model’s prediction as a counterfactual: how does the prediction change when the input is modified? Adversarial examples (Szegedy et al., 2014; Goodfellow et al., 2015) highlight the instability of neural network predictions by showing how small perturbations to the input dramatically change the output.\nA common, non-adversarial form of model interpretation is feature attribution: features that are crucial for predictions are highlighted in a heatmap. One can measure a feature’s importance by input perturbation. Given an input for text classification, a word’s importance can be measured by the difference in model confidence before and after that word is removed from the input—the word is important if confidence decreases significantly. This is the leave-one-out method (Li et al., 2016b). Gradients can also measure feature importance; for example, a feature is influential to the prediction if its gradient is a large positive value. Both perturbation and gradient-based methods can generate heatmaps, implying that the model’s prediction is highly influenced by the highlighted, important words.\nInstead, we study how the model’s prediction is influenced by the unimportant words. We use input reduction, a process that iteratively removes the unimportant words from the input while maintaining the model’s prediction. Intuitively, the words remaining after input reduction should be important for prediction. Moreover, the words\nshould match the leave-one-out method’s selections, which closely align with human perception (Li et al., 2016b; Murdoch et al., 2018). However, rather than providing explanations of the original prediction, our reduced examples more closely resemble adversarial examples. In Figure 1, the reduced input is meaningless to a human but retains the same model prediction with high confidence. Gradient-based input reduction exposes pathological model behaviors that contradict what one expects based on existing interpretation methods.\nIn Section 2, we construct more of these counterintuitive examples by augmenting input reduction with beam search and experiment with three tasks: SQUAD (Rajpurkar et al., 2016) for reading comprehension, SNLI (Bowman et al., 2015) for textual entailment, and VQA (Antol et al., 2015) for visual question answering. Input reduction with beam search consistently reduces the input sentence to very short lengths—often only one or two words—without lowering model confidence on its original prediction. The reduced examples appear nonsensical to humans, which we verify with crowdsourced experiments. In Section 3, we draw connections to adversarial examples and confidence calibration; we explain why the observed pathologies are a consequence of the overconfidence of neural models. This elucidates limitations of interpretation methods that rely on model confidence. In Section 4, we encourage high model uncertainty on reduced examples with entropy regularization. The pathological model behavior under input reduction is mitigated, leading to more reasonable reduced examples."
  }, {
    "heading": "2 Input Reduction",
    "text": "To explain model predictions using a set of important words, we must first define importance. After defining input perturbation and gradient-based approximation, we describe input reduction with these importance metrics. Input reduction drastically shortens inputs without causing the model to change its prediction or significantly decrease its confidence. Crowdsourced experiments confirm that reduced examples appear nonsensical to humans: input reduction uncovers pathological model behaviors."
  }, {
    "heading": "2.1 Importance from Input Gradient",
    "text": "Ribeiro et al. (2016) and Li et al. (2016b) define importance by seeing how confidence changes when a feature is removed; a natural approximation is to use the gradient (Baehrens et al., 2010; Simonyan et al., 2014). We formally define these importance metrics in natural language contexts and introduce the efficient gradient-based approximation. For each word in an input sentence, we measure its importance by the change in the confidence of the original prediction when we remove that word from the sentence. We switch the sign so that when the confidence decreases, the importance value is positive.\nFormally, let x = 〈x1, x2, . . . xn〉 denote the input sentence, f(y |x) the predicted probability of label y, and y = argmaxy′ f(y\n′ |x) the original predicted label. The importance is then\ng(xi | x) = f(y |x)− f(y |x−i). (1)\nTo calculate the importance of each word in a sentence with n words, we need n forward passes of the model, each time with one of the words left out. This is highly inefficient, especially for longer sentences. Instead, we approximate the importance value with the input gradient. For each word in the sentence, we calculate the dot product of its word embedding and the gradient of the output with respect to the embedding. The importance of n words can thus be computed with a single forward-backward pass. This gradient approximation has been used for various interpretation methods for natural language classification models (Li et al., 2016a; Arras et al., 2016); see Ebrahimi et al. (2017) for further details on the derivation. We use this approximation in all our experiments as it selects the same words for removal as an exhaustive search (no approximation)."
  }, {
    "heading": "2.2 Removing Unimportant Words",
    "text": "Instead of looking at the words with high importance values—what interpretation methods commonly do—we take a complementary approach and study how the model behaves when the supposedly unimportant words are removed. Intuitively, the important words should remain after the unimportant ones are removed.\nOur input reduction process iteratively removes the unimportant words. At each step, we remove the word with the lowest importance value until the model changes its prediction. We experi-\nment with three popular datasets: SQUAD (Rajpurkar et al., 2016) for reading comprehension, SNLI (Bowman et al., 2015) for textual entailment, and VQA (Antol et al., 2015) for visual question answering. We describe each of these tasks and the model we use below, providing full details in the Supplement.\nIn SQUAD, each example is a context paragraph and a question. The task is to predict a span in the paragraph as the answer. We reduce only the question while keeping the context paragraph unchanged. The model we use is the DRQA Document Reader (Chen et al., 2017).\nIn SNLI, each example consists of two sentences: a premise and a hypothesis. The task is to predict one of three relationships: entailment, neutral, or contradiction. We reduce only the hypothesis while keeping the premise unchanged. The model we use is Bilateral Multi-Perspective Matching (BIMPM) (Wang et al., 2017).\nIn VQA, each example consists of an image and a natural language question. We reduce only the question while keeping the image unchanged. The model we use is Show, Ask, Attend, and Answer (Kazemi and Elqursh, 2017).\nDuring the iterative reduction process, we ensure that the prediction does not change (exact same span for SQUAD); consequently, the model accuracy on the reduced examples is identical to the original. The predicted label is used for input reduction and the ground-truth is never revealed. We use the validation set for all three tasks.\nMost reduced inputs are nonsensical to humans (Figure 2) as they lack information for any reasonable human prediction. However, models make confident predictions, at times even more confident than the original.\nTo find the shortest possible reduced inputs (potentially the most meaningless), we relax the requirement of removing only the least important word and augment input reduction with beam search. We limit the removal to the k least important words, where k is the beam size, and decrease the beam size as the remaining input is shortened.1 We empirically select beam size five as it produces comparable results to larger beam sizes with reasonable computation cost. The requirement of maintaining model prediction is unchanged.\n1We set beam size to max(1,min(k, L − 3)) where k is maximum beam size and L is the current length of the input sentence.\nWith beam search, input reduction finds extremely short reduced examples with little to no decrease in the model’s confidence on its original predictions. Figure 3 compares the length of input sentences before and after the reduction. For all three tasks, we can often reduce the sentence to only one word. Figure 4 compares the model’s confidence on original and reduced inputs. On SQUAD and SNLI the confidence decreases slightly, and on VQA the confidence even increases."
  }, {
    "heading": "2.3 Humans Confused by Reduced Inputs",
    "text": "On the reduced examples, the models retain their original predictions despite short input lengths. The following experiments examine whether these predictions are justified or pathological, based on how humans react to the reduced inputs.\nFor each task, we sample 200 examples that are correctly classified by the model and generate their reduced examples. In the first setting, we compare the human accuracy on original and reduced examples. We recruit two groups of crowd workers and task them with textual entailment, reading comprehension, or visual question answering. We show one group the original inputs and the other the reduced. Humans are no longer able to give\nthe correct answer, showing a significant accuracy loss on all three tasks (compare Original and Reduced in Table 1).\nThe second setting examines how random the reduced examples appear to humans. For each of the original examples, we generate a version where words are randomly removed until the length matches the one generated by input reduction. We present the original example along with the two reduced examples and ask crowd workers their preference between the two reduced ones. The workers’ choice is almost fifty-fifty (the vs. Random in Table 1): the reduced examples appear almost random to humans.\nThese results leave us with two puzzles: why are the models highly confident on the nonsensical reduced examples? And why, when the leave-oneout method selects important words that appear reasonable to humans, the input reduction process selects ones that are nonsensical?"
  }, {
    "heading": "3 Making Sense of Reduced Inputs",
    "text": "Having established the incongruity of our definition of importance vis-à-vis human judgements, we now investigate possible explanations for these results. We explain why model confidence can empower methods such as leave-one-out to generate reasonable interpretations but also lead to pathologies under input reduction. We attribute these results to two issues of neural models."
  }, {
    "heading": "3.1 Model Overconfidence",
    "text": "Neural models are overconfident in their predictions (Guo et al., 2017). One explanation for overconfidence is overfitting: the model overfits the negative log-likelihood loss during training by learning to output low-entropy distributions over classes. Neural models are also overconfident on examples outside the training data distribution. As Goodfellow et al. (2015) observe for image classification, samples from pure noise can sometimes trigger highly confident predictions. These socalled rubbish examples are degenerate inputs that\na human would trivially classify as not belonging to any class but for which the model predicts with high confidence. Goodfellow et al. (2015) argue that the rubbish examples exist for the same reason that adversarial examples do: the surprising linear nature of neural models. In short, the confidence of a neural model is not a robust estimate of its prediction uncertainty.\nOur reduced inputs satisfy the definition of rubbish examples: humans have a hard time making predictions based on the reduced inputs (Table 1), but models make predictions with high confidence (Figure 4). Starting from a valid example, input reduction transforms it into a rubbish example.\nThe nonsensical, almost random results are best explained by looking at a complete reduction path (Figure 5). In this example, the transition from valid to rubbish happens immediately after the first step: following the removal of “Broncos”, humans can no longer determine which team the question is asking about, but model confidence remains high. Not being able to lower its confidence on rubbish examples—as it is not trained to do so— the model neglects “Broncos” and eventually the process generates nonsensical results.\nIn this example, the leave-one-out method will not highlight “Broncos”. However, this is not a failure of the interpretation method but of the model itself. The model assigns a low importance to “Broncos” in the first step, causing it to be removed—leave-one-out would be able to expose this particular issue by not highlighting “Broncos”. However, in cases where a similar issue only appear after a few unimportant words are removed, the leave-one-out method would fail to expose the unreasonable model behavior.\nInput reduction can expose deeper issues of model overconfidence and stress test a model’s uncertainty estimation and interpretability."
  }, {
    "heading": "3.2 Second-order Sensitivity",
    "text": "So far, we have seen that the output of a neural model is sensitive to small changes in its input. We call this first-order sensitivity, because interpretation based on input gradient is a first-order Taylor expansion of the model near the input (Simonyan et al., 2014). However, the interpretation also shifts drastically with small input changes (Figure 6). We call this second-order sensitivity.\nThe shifting heatmap suggests a mismatch between the model’s first- and second-order sensi-\ntivities. The heatmap shifts when, with respect to the removed word, the model has low first-order sensitivity but high second-order sensitivity.\nSimilar issues complicate comparable interpretation methods for image classification models. For example, Ghorbani et al. (2017) modify image inputs so the highlighted features in the interpretation change while maintaining the same prediction. To achieve this, they iteratively modify the input to maximize changes in the distribution of feature importance. In contrast, the shifting heatmap we observe occurs by only removing the least impactful features without a targeted optimization. They also speculate that the steepest gradient direction for the first- and secondorder sensitivity values are generally orthogonal. Loosely speaking, the shifting heatmap suggests that the direction of the smallest gradient value can sometimes align with very steep changes in second-order sensitivity.\nWhen explaining individual model predictions, the heatmap suggests that the prediction is made based on a weighted combination of words, as in a linear model, which is not true unless the model is indeed taking a weighted sum such as in a DAN (Iyyer et al., 2015). When the model composes representations by a non-linear combination of words, a linear interpretation oblivious to second-order sensitivity can be misleading."
  }, {
    "heading": "4 Mitigating Model Pathologies",
    "text": "The previous section explains the observed pathologies from the perspective of overconfidence: models are too certain on rubbish examples when they should not make any prediction. Human experiments in Section 2.3 confirm that the reduced examples fit the definition of rubbish examples. Hence, a natural way to mitigate the pathologies is to maximize model uncertainty on the reduced examples."
  }, {
    "heading": "4.1 Regularization on Reduced Inputs",
    "text": "To maximize model uncertainty on reduced examples, we use the entropy of the output distribution as an objective. Given a model f trained on a dataset (X ,Y), we generate reduced examples using input reduction for all training examples X . Beam search often yields multiple reduced versions with the same minimum length for each input x, and we collect all of these versions together to form X̃ as the “negative” example set.\nLet H (·) denote the entropy and f(y |x) denote the probability of the model predicting y given x. We fine-tune the existing model to simultaneously maximize the log-likelihood on regular examples and the entropy on reduced examples:∑ (x,y)∈(X ,Y) log(f(y |x)) + λ ∑ x̃∈X̃ H (f(y | x̃)) , (2) where hyperparameter λ controls the trade-off between the two terms. Similar entropy regularization is used by Pereyra et al. (2017), but not in\ncombination with input reduction; their entropy term is calculated on regular examples rather than reduced examples."
  }, {
    "heading": "4.2 Regularization Mitigates Pathologies",
    "text": "On regular examples, entropy regularization does no harm to model accuracy, with a slight increase for SQUAD (Accuracy in Table 2).\nAfter entropy regularization, input reduction produces more reasonable reduced inputs (Figure 7). In the SQUAD example from Figure 1, the reduced question changed from “did” to “spend Astor money on ?” after fine-tuning. The average length of reduced examples also increases across all tasks (Reduced length in Table 2). To verify that model overconfidence is indeed mitigated— that the reduced examples are less “rubbish” compared to before fine-tuning—we repeat the human experiments from Section 2.3.\nHuman accuracy increases across all three tasks (Table 3). We also repeat the vs. Random experiment: we re-generate the random examples to match the lengths of the new reduced examples from input reduction, and find humans now prefer the reduced examples to random ones. The increase in both human performance and preference suggests that the reduced examples are more reasonable; model pathologies have been mitigated.\nWhile these results are promising, it is not clear whether our input reduction method is necessary to achieve them. To provide a baseline, we finetune models using inputs randomly reduced to the same lengths as the ones generated by input reduction. This baseline improves neither the model accuracy on regular examples nor interpretability under input reduction (judged by lengths of reduced examples). Input reduction is effective in generating negative examples to counter model overconfidence."
  }, {
    "heading": "5 Discussion",
    "text": "Rubbish examples have been studied in the image domain (Goodfellow et al., 2015; Nguyen et al., 2015), but to our knowledge not for NLP. Our input reduction process gradually transforms a valid input into a rubbish example. We can often determine which word’s removal causes the transition to occur—for example, removing “Broncos” in Figure 5. These rubbish examples are particularly interesting, as they are also adversarial: the difference from a valid example is small, unlike image rubbish examples generated from pure noise which are far outside the training data distribution.\nThe robustness of NLP models has been studied extensively (Papernot et al., 2016; Jia and Liang, 2017; Iyyer et al., 2018; Ribeiro et al., 2018), and most studies define adversarial examples similar to the image domain: small perturbations to the input lead to large changes in the output. HotFlip (Ebrahimi et al., 2017) uses a gradient-based approach, similar to image adversarial examples, to flip the model prediction by perturbing a few characters or words. Our work and Belinkov and Bisk (2018) both identify cases where noisy\nuser inputs become adversarial by accident: common misspellings break neural machine translation models; we show that incomplete user input can lead to unreasonably high model confidence.\nOther failures of interpretation methods have been explored in the image domain. The sensitivity issue of gradient-based interpretation methods, similar to our shifting heatmaps, are observed by Ghorbani et al. (2017) and Kindermans et al. (2017). They show that various forms of input perturbation—from adversarial changes to simple constant shifts in the image input—cause significant changes in the interpretation. Ghorbani et al. (2017) make a similar observation about secondorder sensitivity, that “the fragility of interpretation is orthogonal to fragility of the prediction”.\nPrevious work studies biases in the annotation process that lead to datasets easier than desired or expected which eventually induce pathological models. We attribute our observed pathologies primarily to the lack of accurate uncertainty estimates in neural models trained with maximum likelihood. SNLI hypotheses contain artifacts that allow training a model without the premises (Gururangan et al., 2018); we apply input reduction at test time to the hypothesis. Similarly, VQA images are surprisingly unimportant for training a model; we reduce the question. The recent SQUAD 2.0 (Rajpurkar et al., 2018) augments the original reading comprehension task with an uncertainty modeling requirement, the goal being to make the task more realistic and challenging.\nSection 3.1 explains the pathologies from the overconfidence perspective. One explanation for overconfidence is overfitting: Guo et al. (2017) show that, late in maximum likelihood training,\nthe model learns to minimize loss by outputting low-entropy distributions without improving validation accuracy. To examine if overfitting can explain the input reduction results, we run input reduction using DRQA model checkpoints from every training epoch. Input reduction still achieves similar results on earlier checkpoints, suggesting that better convergence in maximum likelihood training cannot fix the issues by itself—we need new training objectives with uncertainty estimation in mind."
  }, {
    "heading": "5.1 Methods for Mitigating Pathologies",
    "text": "We use the reduced examples generated by input reduction to regularize the model and improve its interpretability. This resembles adversarial training (Goodfellow et al., 2015), where adversarial examples are added to the training set to improve model robustness. The objectives are different: entropy regularization encourages high uncertainty on rubbish examples, while adversarial training makes the model less sensitive to adversarial perturbations.\nPereyra et al. (2017) apply entropy regularization on regular examples from the start of training to improve model generalization. A similar method is label smoothing (Szegedy et al., 2016). In comparison, we fine-tune a model with entropy regularization on the reduced examples for better uncertainty estimates and interpretations.\nTo mitigate overconfidence, Guo et al. (2017) propose post-hoc fine-tuning a model’s confidence with Platt scaling. This method adjusts the softmax function’s temperature parameter using a small held-out dataset to align confidence with accuracy. However, because the output is calibrated using the entire confidence distribution, not individual values, this does not reduce overconfidence on specific inputs, such as the reduced examples."
  }, {
    "heading": "5.2 Generalizability of Findings",
    "text": "To highlight the erratic model predictions on short examples and provide a more intuitive demonstration, we present paired-input tasks. On these tasks, the short lengths of reduced questions and hypotheses obviously contradict the necessary number of words for a human prediction (further supported by our human studies). We also apply input reduction to single-input tasks including sentiment analysis (Maas et al., 2011) and Quizbowl (BoydGraber et al., 2012), achieving similar results.\nInterestingly, the reduced examples transfer to other architectures. In particular, when we feed fifty reduced SNLI inputs from each class—generated with the BIMPM model (Wang et al., 2017)—through the Decomposable Attention Model (Parikh et al., 2016),2 the same prediction is triggered 81.3% of the time."
  }, {
    "heading": "6 Conclusion",
    "text": "We introduce input reduction, a process that iteratively removes unimportant words from an input while maintaining a model’s prediction. Combined with gradient-based importance estimates often used for interpretations, we expose pathological behaviors of neural models. Without lowering model confidence on its original prediction, an input sentence can be reduced to the point where it appears nonsensical, often consisting of one or two words. Human accuracy degrades when shown the reduced examples instead of the original, in contrast to neural models which maintain their original predictions.\nWe explain these pathologies with known issues of neural models: overconfidence and sensitivity to small input changes. The nonsensical reduced examples are caused by inaccurate uncertainty estimates—the model is not able to lower its confidence on inputs that do not belong to any label. The second-order sensitivity is another issue why gradient-based interpretation methods may fail to align with human perception: a small change in the input can cause, at the same time, a minor change in the prediction but a large change in the interpretation. Input reduction perturbs the input multiple times and can expose deeper issues of model overconfidence and oversensitivity that other methods cannot. Therefore, it can be used to stress test the interpretability of a model.\nFinally, we fine-tune the models by maximizing entropy on reduced examples to mitigate the deficiencies. This improves interpretability without sacrificing model accuracy on regular examples.\nTo properly interpret neural models, it is important to understand their fundamental characteristics: the nature of their decision surfaces, robustness against adversaries, and limitations of their training objectives. We explain fundamental difficulties of interpretation due to pathologies in neural models trained with maximum likelihood. Our\n2http://demo.allennlp.org/ textual-entailment\nwork suggests several future directions to improve interpretability: more thorough evaluation of interpretation methods, better uncertainty and confidence estimates, and interpretation beyond bagof-word heatmap."
  }, {
    "heading": "Acknowledgments",
    "text": "Feng was supported under subcontract to Raytheon BBN Technologies by DARPA award HR0011-15-C-0113. JBG is supported by NSF Grant IIS1652666. Any opinions, findings, conclusions, or recommendations expressed here are those of the authors and do not necessarily reflect the view of the sponsor. The authors would like to thank Hal Daumé III, Alexander M. Rush, Nicolas Papernot, members of the CLIP lab at the University of Maryland, and the anonymous reviewers for their feedback."
  }],
  "year": 2018,
  "references": [{
    "title": "VQA: Visual question answering",
    "authors": ["Stanislaw Antol", "Aishwarya Agrawal", "Jiasen Lu", "Margaret Mitchell", "Dhruv Batra", "C. Lawrence Zitnick", "Devi Parikh."],
    "venue": "International Conference on Computer Vision.",
    "year": 2015
  }, {
    "title": "Explaining predictions of non-linear classifiers in NLP",
    "authors": ["Leila Arras", "Franziska Horn", "Grégoire Montavon", "Klaus-Robert Müller", "Wojciech Samek."],
    "venue": "Workshop on Representation Learning for NLP.",
    "year": 2016
  }, {
    "title": "How to explain individual classification decisions",
    "authors": ["David Baehrens", "Timon Schroeter", "Stefan Harmeling", "Motoaki Kawanabe", "Katja Hansen", "KlausRobert Müller."],
    "venue": "Journal of Machine Learning Research.",
    "year": 2010
  }, {
    "title": "Synthetic and natural noise both break neural machine translation",
    "authors": ["Yonatan Belinkov", "Yonatan Bisk."],
    "venue": "Proceedings of the International Conference on Learning Representations.",
    "year": 2018
  }, {
    "title": "A large annotated corpus for learning natural language inference",
    "authors": ["Samuel R. Bowman", "Gabor Angeli", "Christopher Potts", "Christopher D. Manning."],
    "venue": "Proceedings of Empirical Methods in Natural Language Processing.",
    "year": 2015
  }, {
    "title": "Besting the quiz master: Crowdsourcing incremental classification games",
    "authors": ["Jordan L. Boyd-Graber", "Brianna Satinoff", "He He", "Hal Daumé III."],
    "venue": "Proceedings of Empirical Methods in Natural Language Processing.",
    "year": 2012
  }, {
    "title": "Reading wikipedia to answer opendomain questions",
    "authors": ["Danqi Chen", "Adam Fisch", "Jason Weston", "Antoine Bordes."],
    "venue": "Proceedings of the Association for Computational Linguistics.",
    "year": 2017
  }, {
    "title": "HotFlip: White-box adversarial examples for text classification",
    "authors": ["Javid Ebrahimi", "Anyi Rao", "Daniel Lowd", "Dejing Dou."],
    "venue": "Proceedings of the Association for Computational Linguistics.",
    "year": 2017
  }, {
    "title": "Interpretation of neural networks is fragile",
    "authors": ["Amirata Ghorbani", "Abubakar Abid", "James Y. Zou."],
    "venue": "arXiv preprint arXiv: 1710.10547.",
    "year": 2017
  }, {
    "title": "Explaining and harnessing adversarial examples",
    "authors": ["Ian J. Goodfellow", "Jonathon Shlens", "Christian Szegedy."],
    "venue": "Proceedings of the International Conference on Learning Representations.",
    "year": 2015
  }, {
    "title": "On calibration of modern neural networks",
    "authors": ["Chuan Guo", "Geoff Pleiss", "Yu Sun", "Kilian Q. Weinberger."],
    "venue": "Proceedings of the International Conference of Machine Learning.",
    "year": 2017
  }, {
    "title": "Annotation artifacts in natural language inference data",
    "authors": ["Suchin Gururangan", "Swabha Swayamdipta", "Omer Levy", "Roy Schwartz", "Samuel R. Bowman", "Noah A. Smith."],
    "venue": "Conference of the North American Chapter of the Association for Computa-",
    "year": 2018
  }, {
    "title": "Deep unordered composition rivals syntactic methods for text classification",
    "authors": ["Mohit Iyyer", "Varun Manjunatha", "Jordan Boyd-Graber", "Hal Daumé III."],
    "venue": "Proceedings of the Association for Computational Linguistics.",
    "year": 2015
  }, {
    "title": "Adversarial example generation with syntactically controlled paraphrase networks",
    "authors": ["Mohit Iyyer", "John Wieting", "Kevin Gimpel", "Luke S. Zettlemoyer."],
    "venue": "Conference of the North American Chapter of the Association for Computational Linguistics.",
    "year": 2018
  }, {
    "title": "Adversarial examples for evaluating reading comprehension systems",
    "authors": ["Robin Jia", "Percy Liang."],
    "venue": "Proceedings of Empirical Methods in Natural Language Processing.",
    "year": 2017
  }, {
    "title": "Show, ask, attend, and answer: A strong baseline for visual question answering",
    "authors": ["Vahid Kazemi", "Ali Elqursh."],
    "venue": "arXiv preprint arXiv: 1704.03162.",
    "year": 2017
  }, {
    "title": "The (un)reliability of saliency methods",
    "authors": ["Pieter-Jan Kindermans", "Sara Hooker", "Julius Adebayo", "Maximilian Alber", "Kristof T. Schütt", "Sven Dähne", "Dumitru Erhan", "Been Kim."],
    "venue": "arXiv preprint arXiv: 1711.00867.",
    "year": 2017
  }, {
    "title": "Visualizing and understanding neural models in NLP",
    "authors": ["Jiwei Li", "Xinlei Chen", "Eduard H. Hovy", "Daniel Jurafsky."],
    "venue": "Conference of the North American Chapter of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "Understanding neural networks through representation erasure",
    "authors": ["Jiwei Li", "Will Monroe", "Daniel Jurafsky."],
    "venue": "arXiv preprint arXiv: 1612.08220.",
    "year": 2016
  }, {
    "title": "Learning word vectors for sentiment analysis",
    "authors": ["Andrew Maas", "Raymond Daly", "Peter Pham", "Dan Huang", "Andrew Ng", "Christopher Potts."],
    "venue": "In",
    "year": 2011
  }, {
    "title": "Beyond word importance: Contextual decomposition to extract interactions from lstms",
    "authors": ["W. James Murdoch", "Peter J. Liu", "Bin Yu."],
    "venue": "Proceedings of the International Conference on Learning Representations.",
    "year": 2018
  }, {
    "title": "Deep neural networks are easily fooled: High confidence predictions for unrecognizable images",
    "authors": ["Anh Mai Nguyen", "Jason Yosinski", "Jeff Clune."],
    "venue": "Computer Vision and Pattern Recognition.",
    "year": 2015
  }, {
    "title": "Crafting adversarial input sequences for recurrent neural networks",
    "authors": ["Nicolas Papernot", "Patrick D. McDaniel", "Ananthram Swami", "Richard E. Harang."],
    "venue": "IEEE Military Communications Conference.",
    "year": 2016
  }, {
    "title": "A decomposable attention model for natural language inference",
    "authors": ["Ankur P. Parikh", "Oscar Täckström", "Dipanjan Das", "Jakob Uszkoreit."],
    "venue": "Proceedings of Empirical Methods in Natural Language Processing.",
    "year": 2016
  }, {
    "title": "Regularizing neural networks by penalizing confident output distributions",
    "authors": ["Gabriel Pereyra", "George Tucker", "Jan Chorowski", "Lukasz Kaiser", "Geoffrey E. Hinton."],
    "venue": "Proceedings of the International Conference on Learning Representations.",
    "year": 2017
  }, {
    "title": "Know what you don’t know: Unanswerable questions for squad",
    "authors": ["Pranav Rajpurkar", "Robin Jia", "Percy Liang."],
    "venue": "Proceedings of the Association for Computational Linguistics.",
    "year": 2018
  }, {
    "title": "SQuAD: 100, 000+ questions for machine comprehension of text",
    "authors": ["Pranav Rajpurkar", "Jian Zhang", "Konstantin Lopyrev", "Percy Liang."],
    "venue": "Proceedings of Empirical Methods in Natural Language Processing.",
    "year": 2016
  }, {
    "title": "Why should i trust you?”: Explaining the predictions of any classifier",
    "authors": ["Marco Túlio Ribeiro", "Sameer Singh", "Carlos Guestrin."],
    "venue": "Knowledge Discovery and Data Mining.",
    "year": 2016
  }, {
    "title": "Semantically equivalent adversarial rules for debugging nlp models",
    "authors": ["Marco Tulio Ribeiro", "Sameer Singh", "Carlos Guestrin."],
    "venue": "Proceedings of the Association for Computational Linguistics.",
    "year": 2018
  }, {
    "title": "Deep inside convolutional networks: Visualising image classification models and saliency maps",
    "authors": ["Karen Simonyan", "Andrea Vedaldi", "Andrew Zisserman."],
    "venue": "Proceedings of the International Conference on Learning Representations.",
    "year": 2014
  }, {
    "title": "Rethinking the inception architecture for computer vision",
    "authors": ["Christian Szegedy", "Vincent Vanhoucke", "Sergey Ioffe", "Jon Shlens", "Zbigniew Wojna."],
    "venue": "Computer Vision and Pattern Recognition.",
    "year": 2016
  }, {
    "title": "Intriguing properties of neural",
    "authors": ["Christian Szegedy", "Wojciech Zaremba", "Ilya Sutskever", "Joan Bruna", "Dumitru Erhan", "Ian J. Goodfellow", "Rob Fergus"],
    "year": 2014
  }, {
    "title": "Bilateral multi-perspective matching for natural language sentences",
    "authors": ["Zhiguo Wang", "Wael Hamza", "Radu Florian."],
    "venue": "International Joint Conference on Artificial Intelligence.",
    "year": 2017
  }],
  "id": "SP:831626de0f6cef6742cbee70156243e3e4cdfb28",
  "authors": [{
    "name": "Shi Feng",
    "affiliations": []
  }, {
    "name": "Eric Wallace",
    "affiliations": []
  }, {
    "name": "Alvin Grissom",
    "affiliations": []
  }, {
    "name": "Mohit Iyyer",
    "affiliations": []
  }, {
    "name": "Pedro Rodriguez",
    "affiliations": []
  }, {
    "name": "Jordan Boyd-Graber",
    "affiliations": []
  }],
  "abstractText": "One way to interpret neural model predictions is to highlight the most important input features—for example, a heatmap visualization over the words in an input sentence. In existing interpretation methods for NLP, a word’s importance is determined by either input perturbation—measuring the decrease in model confidence when that word is removed—or by the gradient with respect to that word. To understand the limitations of these methods, we use input reduction, which iteratively removes the least important word from the input. This exposes pathological behaviors of neural models: the remaining words appear nonsensical to humans and are not the ones determined as important by interpretation methods. As we confirm with human experiments, the reduced examples lack information to support the prediction of any label, but models still make the same predictions with high confidence. To explain these counterintuitive results, we draw connections to adversarial examples and confidence calibration: pathological behaviors reveal difficulties in interpreting neural models trained with maximum likelihood. To mitigate their deficiencies, we fine-tune the models by encouraging high entropy outputs on reduced examples. Fine-tuned models become more interpretable under input reduction without accuracy loss on regular examples.",
  "title": "Pathologies of Neural Models Make Interpretations Difficult"
}