{
  "sections": [{
    "heading": "1. Introduction",
    "text": "In knowledge base completion, the learner is given triples (subject, predicate, object) of facts about the world, and has to infer new triples that are likely but not yet known to be true. This problem has attracted a lot of attention (Nickel et al., 2016a; Nguyen, 2017) both as an example application of large-scale tensor factorization, and as a benchmark of learning representations of relational data.\nThe standard completion task is link prediction, which consists in answering queries (subject, predicate, ?) or (?, predicate, object). In that context, the canonical decomposition of tensors (also called CANDECOMP/PARAFAC or CP) (Hitchcock, 1927) is known to perform poorly compared to more specialized methods. For instance, DistMult (Yang\n1Facebook AI Research, Paris, France 2Université Paris-Est, Equipe Imagine, LIGM (UMR8049) Ecole des Ponts ParisTech Marne-la-Vallée, France. Correspondence to: Lacroix Timothee <timothee.lax@gmail.com>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\net al., 2014), a particular case of CP which shares the factors for the subject and object modes, was recently shown to have state-of-the-art results (Kadlec et al., 2017). This result is surprising because DistMult learns a tensor that is symmetric in the subject and object modes, while the datasets contain mostly non-symmetric predicates.\nThe goal of this paper is to study whether and how CP can perform as well as its competitors. To that end, we evaluate three possibilities.\nFirst, as Kadlec et al. (2017) showed that performances for these tasks are sensitive to the loss function and optimization parameters, we re-evaluate CP with a broader parameter search and a multiclass log-loss.\nSecond, since the best performing approaches are less expressive than CP, we evaluate whether regularization helps. On this subject, we show that the standard regularization used in knowledge base completion does not correspond to regularization with a tensor norm. We then propose to use tensor nuclear p-norms (Friedland & Lim, 2018), with the goal of designing more principled regularizers.\nThird, we propose a different formulation of the objective, in which we model separately predicates and their inverse: for each predicate pred, we create an inverse predicate pred−1 and create a triple (obj,pred−1, sub) for each training triple (sub,pred, obj). At test time, queries of the form (?,pred, obj) are answered as (obj,pred−1, ?). Similar formulations were previously used by Shen et al. (2016) and Joulin et al. (2017), but for different models for which there was no clear alternative, so the impact of this reformulation has never been evaluated.\nTo assess whether the results we obtain are specific to CP, we also carry on the same experiments with a state-of-theart model, ComplEx (Trouillon et al., 2016). ComplEx has the same expressivity as CP in the sense that it can represent any tensor, but it implements a specific form of parameter sharing. We perform all our experiments on 5 common benchmark datasets of link prediction in knowledge bases.\nOur results first confirm that within a reasonable time budget, the performance of both CP and ComplEx are highly dependent on optimization parameters. With systematic parameter searches, we obtain better results for ComplEx than what was previously reported, confirming its status as\na state-of-the-art model on all datasets. For CP, the results are still way below its competitors.\nLearning and predicting with the inverse predicates, however, changes the picture entirely. First, with both CP and ComplEx, we obtain significant gains in performance on all the datasets. More precisely, we obtain state-of-the-art results with CP, matching those of ComplEx. For instance, on the benchmark dataset FB15K (Bordes et al., 2013), the mean reciprocal rank of vanilla CP and vanilla ComplEx are 0.40 and 0.80 respectively, and it grows to 0.86 for both approaches when modeling the inverse predicates.\nFinally, the new regularizer we propose based on the nuclear 3-norm, does not dramatically help CP, which leads us to believe that a careful choice of regularization is not crucial for these CP models. Yet, for both CP and ComplEx with inverse predicates, it yields small but significant improvements on the more difficult datasets."
  }, {
    "heading": "2. Tensor Factorization of Knowledge Bases",
    "text": "We describe in this section the formal framework we consider for knowledge base completion and more generally link prediction in relational data, the learning criteria, as well as the approaches that we will discuss."
  }, {
    "heading": "2.1. Link Prediction in Relational Data",
    "text": "We consider relational data that comes in the form of triples (subject, predicate, object), where the subject and the object are from the same set of entities. In knowledge bases, these triples represent facts about entities of the world, such as (Washington, capital_of, USA). A training set S contains triples of indices S = {(i1, j1, k1), ..., (i|S|, j|S|, k|S|)} that represent predicates that are known to hold. The validation and test sets contain queries of the form (?, j, k) and (i, j, ?), created from triples (i, j, k) that are known to hold but heldout from the training set. To give orders of magnitude, the largest datasets we experiment on, FB15K and YAGO3-10, contain respectively 15k/1.3k and 123k/37 entities/predicates."
  }, {
    "heading": "2.2. Tensor Decomposition for Link Prediction",
    "text": "Relational data can be represented as a {0, 1}-valued third order tensor Y ∈ {0, 1}N×P×N , where N is the total number of entities and P the number of predicates, with Yi,j,k = 1 if the relation (i, j, k) is known. In the rest of the paper, the three modes will be called the subject mode, the predicate mode and the object mode respectively. Tensor factorization algorithms can thus be used to infer a predicted tensor X̂ ∈ RN×P×N that approximates Y in a sense that we describe in the next subsection. Val-\nidation/test queries (?, j, k) are answered by ordering entities i′ by decreasing values of X̂i′,j,k, whereas queries (i, j, ?) are answered by ordering entities k′ by decreasing values of X̂i,j,k′ .\nSeveral approaches have considered link prediction as a low-rank tensor decomposition problem. These models then differ only by structural constraints on the learned tensor. Three models of interest are:\nCP. The canonical decomposition of tensors, also called CANDECOM/PARAFAC (Hitchcock, 1927), represents a tensor X ∈ RN1×N2×N3 as a sum of R rank one tensors u (1) r ⊗ u(2)r ⊗ u(3)r (with ⊗ the tensor product) where r ∈ {1, ..., R}, and u(m)r ∈ RNm :\nX = R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(3)r .\nA representation of this decomposition, and the score of a specific triple is given in Figure 1 (a). Given X , the smallest R for which this decomposition holds is called the canonical rank of X .\nDistMult. In the more specific context of link prediction, it has been suggested in Bordes et al. (2011); Nickel et al. (2011) that since both subject and object mode represent the same entities, they should have the same factors. DistMult (Yang et al., 2014) is a version of CP with this additional constraint. It represents a tensor X ∈ RN×P×N as a sum of rank-1 tensors u(1)r ⊗ u(2)r ⊗ u(1)r :\nX = R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(1)r .\nComplEx. By contrast with the first models that proposed to share the subject and object mode factors, DistMult yields a tensor that is symmetric in the object and subject modes. The assumption that the data tensor can be properly approximated by a symmetric tensor for Knowledge base completion is not satisfied in many practical cases (e.g., while (Washington, capital_of, USA) holds, (USA, capital_of,Washington) does not). ComplEx (Trouillon et al., 2016) proposes an alternative where the subject and object modes share the parameters of the factors, but are complex conjugate of each other. More precisely, this approach represents a real-valued tensor X ∈ RN1×N2×N3 as the real part of a sum of R complex-valued rank one tensors u(1)r ⊗ u(2)r ⊗ u(1)r where r ∈ {1, ..., R}, and u(m)r ∈ CNm\nX = Re ( R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(1)r ) ,\nwhere u(1)r is the complex conjugate of u (1) r . This decomposition can represent any real tensor (Trouillon et al., 2016).\nThe good performances of DistMult on notoriously nonsymmetric datasets such as FB15K or WN18 are surprising. First, let us note that for the symmetricity to become an issue, one would have to evaluate queries (i, j, ?) while also trying to answer correctly to queries of the form (?, j, i) for a non-symmetric predicate j. The ranking for these two queries would be identical, and thus, we can expect issues with relations such as capital_of . In FB15K, those type of problematic queries make up only 4% of the test set and thus, have a small impact. On WN18 however, they make up 60% of the test set. We describe in appendix 8.1 a simple strategy for DistMult to have a high filtered MRR on the hierarchical predicates of WN18 despite its symmetricity assumption."
  }, {
    "heading": "2.3. Training",
    "text": "Previous work suggested ranking losses (Bordes et al., 2013), binary logistic regression (Trouillon et al., 2016) or sampled multiclass log-loss (Kadlec et al., 2017). Motivated by the solid results in Joulin et al. (2017), our own experimental results, and with a satisfactory speed of about two minutes per epoch on FB15K, we decided to use the full multiclass log-loss.\nGiven a training triple (i, j, k) and a predicted tensor X , the instantaneous multi-class log-loss ℓi,j,k(X) is\nℓi,j,k(X) = ℓ (1) i,j,k(X) + ℓ (3) i,j,k(X) (1)\nℓ (1) i,j,k(X) = −Xi,j,k + log (∑ k′ exp(Xi,j,k′) )\nℓ (3) i,j,k(X) = −Xi,j,k + log (∑ i′ exp(Xi′,j,k) ) .\nThese two partial losses are represented in Figure 1 (b). For CP, the final tensor is computed by finding a minimizer\nof a regularized empirical risk formulation, where the factors u(d)r are weighted in a data-dependent manner by w (d) S , which we describe below:\nmin (u (d) r )d=1..3\nr=1..R\n∑ (i,j,k)∈S ℓi,j,k ( R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(3)r )\n+ λ R∑ r=1 3∑ d=1 ∥w(d)S ⊙ u (d) r ∥ 2 2 , (2)\nwhere ⊙ is the entry-wise multiplication of vectors. For DistMult and ComplEx, the learning objective is similar, up to the appropriate parameter sharing and computation of the tensor.\nAs discussed in Section 3.2, the weights w(d)S may improve performances when some rows/columns are sampled more than others. They appear naturally in optimization with stochastic gradient descent when the regularizer is applied only to the parameters that are involved in the computation of the instantaneous loss. For instance, in the case of the logistic loss with negative sampling used by Trouillon et al. (2016), denoting by qdi the marginal probability (over S) that index i appears in mode d of a data triple, these weights are w(d)S,i = √ qdi + α for some α > 0 that depends on the negative sampling scheme.\nWe focus on redefining the loss (1) and the regularizer (2)."
  }, {
    "heading": "3. Related Work",
    "text": "We discuss here in more details the work that has been done on link prediction in relational data and on regularizers for tensor completion."
  }, {
    "heading": "3.1. Link Prediction in Relational Data",
    "text": "There has been extensive research on link prediction in relational data, especially in knowledge bases, and we review\nhere only the prior work that is most relevant to this paper. While some approaches explicitly use the graph structure during inference (Lao et al., 2011), we focus here on representation learning and tensor factorization methods, which are the state-of-the-art on the benchmark datasets we use. We also restrict the discussion to approaches that only use relational information, even though some approaches have been proposed to leverage additional types (Krompass et al., 2015; Ma et al., 2017) or external word embeddings (Toutanova & Chen, 2015).\nWe can divide the first type of approaches into two broad categories. First, two-way approaches score a triple (i, j, k) depending only on bigram interaction terms of the form subject-object, subject-predicate, and predicateobject. Even though they are tensor approximation algorithms of limited expressivity, two-way models based on translations TransE, or on bag-of-word representations (Joulin et al., 2017) have proved competitive on many benchmarks. Yet, methods using three-way multiplicative interactions, as described in the previous section, show the strongest performances (Bordes et al., 2011; GarciaDuran et al., 2016; Nickel et al., 2016b; Trouillon et al., 2016). Compared to general-purpose tensor factorization methods such as CP, a common feature of these approaches is to share parameters between objects and subjects modes (Nickel et al., 2011), an idea that has been widely accepted except for the two-way model of Joulin et al. (2017). DistMult (Yang et al., 2014) is the extreme case of this parameter sharing, in which the predicted tensor is symmetric in the subject and object modes."
  }, {
    "heading": "3.2. Regularization for Matrix Completion",
    "text": "Norm-based regularization has been extensively studied in the context of matrix completion. The trace norm (or nuclear norm) has been proposed as a convex relaxation of the rank (Srebro et al., 2005) for matrix completion in the setting of rating prediction, with strong theoretical guarantees (Candès & Recht, 2009). While efficient algorithms to solve the convex problems have been proposed (see e.g. Cai et al., 2010; Jaggi et al., 2010), the practice is still to use the matrix equivalent of the nonconvex formulation (2). For the trace norm (nuclear 2-norm), in the matrix case, the regularizer simply becomes the squared 2-norm of the factors and lends itself to alternating methods or SGD optimization (Rennie & Srebro, 2005; Koren et al., 2009). When the samples are not taken uniformly at random from a matrix, some other norms are preferable to the usual nuclear norm. The weighted trace norm reweights elements of the factors based on the marginal rows and columns sampling probabilities, which can improve sample complexity bounds when sampling is non-uniform (Foygel et al., 2011; Negahban & Wainwright, 2012). Direct SGD implementations on the nonconvex formulation implicitly take this reweighting rule\ninto account and were used by the winners of the Netflix challenge (see Srebro & Salakhutdinov, 2010, Section 5)."
  }, {
    "heading": "3.3. Tensor Completion and Decompositions",
    "text": "There is a large body of literature on low-rank tensor decompositions (see Kolda & Bader, 2009, for a comprehensive review). Closely related to our work is the canonical decomposition of tensor (also called CANDECOMP/PARAFAC or CP) (Hitchcock, 1927), which solves a problem similar to (4) without the regularization (i.e., λ = 0), and usually the square loss.\nSeveral norm-based regularizations for tensors have been proposed. Some are based on unfolding a tensor along each of its modes to obtain matricizations, and either regularize by the sum of trace norms of the matricizations (Tomioka et al., 2010) or write the original tensor as a sum of tensors Tk, regularizing their respective kth matricizations with the trace norm (Wimalawarne et al., 2014). However, in the large-scale setting, even rank-1 approximations of matricizations involve too many parameters to be tractable.\nRecently, the tensor trace norm (nuclear 2-norm) was proposed as a regularizer for tensor completion Yuan & Zhang (2016), and an algorithm based on the generalized conditional gradient has been developed by Cheng et al. (2016). This algorithm requires, in an inner loop, to compute a (constrained) rank-1 tensor that has largest dot-product with the gradient of the data-fitting term (gradient w.r.t. the tensor argument). This algorithm is efficient in our setup only with the square error loss (instead of the multiclass log-loss), because the gradient is then a low-rank + sparse tensor when the argument is low-rank. However, on large-scale knowledge bases, the state of the art is to use a binary log-loss or a multiclass log-loss (Trouillon et al., 2016; Kadlec et al., 2017); in that case, the gradient is not adequately structured, thereby causing the approach of (Cheng et al., 2016) to be too computationally costly.\n4. Nuclear p-Norm Regularization As discussed in Section 3, norm-based regularizers have proved useful for matrices. We aim to reproduce these successes with tensor norms. We use the nuclear p-norms defined by Friedland & Lim (2018). As shown in Equation (2), the community has favored so far a regularizer based on the square Frobenius norms of the factors (Yang et al., 2014; Trouillon et al., 2016). We first show that the unweighted version of this regularizer is not a tensor norm. Then, we propose4 a variational form of the nuclear 3-norm to replace the usual regularization at no additional computational cost when used with SGD. Finally, we discuss a weighting scheme analogous to the weighted trace-norm proposed in Srebro & Salakhutdinov (2010)."
  }, {
    "heading": "4.1. From Matrix Trace-Norm to Tensor Nuclear Norms",
    "text": "To simplify notation, let us introduce the set of CP decompositions of a tensor X of rank at most R:\nUR(X) = { (u(d)r )d=1..3\nr=1..R ∣∣∣ X = R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(3)r ,\n∀r, d, u(d)r ∈ RNd } .\nWe will study the family of regularizers:\nΩαp (u) = 1\n3 R∑ r=1 3∑ d=1 ∥u(d)r ∥ α p .\nNote that with p = α = 2, we recover the familiar squared Frobenius norm regularizer used in (2). Similar to showing that the squared Frobenius norm is a variational form of the trace norm on matrices (i.e., its minimizers realize the trace norm, infM=UV T 12 (∥U∥ 2 F+∥V ∥2F ) = ∥M∥∗), we start with a technical lemma that links our regularizer with a function on the spectrum of our decompositions. Lemma 1.\nmin u∈UR(X)\n1\n3 R∑ r=1 3∑ d=1 ∥u(d)r ∥ α p = min u∈UR(X) R∑ r=1 3∏ d=1 ∥u(d)r ∥ α/3 p .\nMoreover, the minimizers of the left-hand side satisfy:\n∥u(d)r ∥p = 3 √√√√ 3∏ d′=1 ∥u(d ′) r ∥p.\nProof. See Appendix 8.2.\nThis Lemma motivates the introduction of the set of p-norm normalized tensor decompositions:\nUpR(X) = { (σr, (ũr))r=1..R ∣∣∣ σr = 3∏ d=1 ∥u(d)r ∥p,\nũ(d)r = u (d) r\n∥u(d)r ∥p ,∀r, d, u ∈ UR(X)\n} .\nLemma 1, shows that Ωαp behaves as an ℓα/D penalty over the CP spectrum for tensors of order D. We recover the nuclear norm for matrices when α = p = 2.\nUsing Lemma 1, we have :\nmin u∈UR(X) Ω22(u) ≤ η ⇐⇒ min (σ,ũ)∈U2R(X) ∥σ∥2/3≤ η3/2\n(3)\nWe show that the sub-level sets of the term on the right are not convex, which implies that Ω22 is not the variational form of a tensor norm, and hence, is not the tensor analog to the matrix trace norm.\nProposition 1. The function over third order-tensors of RN1×N2×N3 defined as\n|||X||| = min { ∥σ∥2/3 ∣∣∣ (σ, ũ) ∈ U2R(X), R ∈ N} is not convex.\nProof. See Appendix 8.2.\nRemark 1. Cheng et al. (2016, Appendix D) already showed that regularizing with the square Frobenius norm of the factors is not related to the trace norm for tensors of order 3 and above, but their observation is that the regularizer is not positively homogeneous, i.e., minu∈αUR(X) Ω 2 2(u) ̸= |α|minu∈UR(X) Ω22(u). Our result in Proposition 1 is stronger in that we show that this regularizer is not a norm even after the rescaling (3) to make it homogeneous.\nThe nuclear p-norm of X ∈ RN1×N2×N3 for p ∈ [1,+∞], is defined in Friedland & Lim (2018) as\n∥X∥∗,p := min { ∥σ∥1 ∣∣∣ (σ, ũ) ∈ UpR(X), R ∈ N} . Given an estimated upper bound on the optimal R, the original problem (2) can then be re-written as a non-convex problem using the equivalence in Lemma 1:\nmin (u (d) r )d=1..3\nr=1..R\n∑ (i,j,k)∈S ℓi,j,k ( R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(3)r )\n+ λ\n3 R∑ r=1 3∑ d=1 ∥u(d)r ∥ 3 p . (4)\nThis variational form suggests to use p = 3, as a means to make the regularizer separable in each coefficients, given that then ∥u(d)r ∥3p = ∑nd i=1 ∣∣u(d)r,i |3. 4.2. Weighted Nuclear p-Norm\nSimilar to the weighted trace-norm for matrices, the weighted nuclear 3-norm can be easily implemented by keeping the regularization terms corresponding to the sampled triplets only, as discussed in Section 3.2. This leads to a formulation of the form\nmin (u (d) r )d=1..3\nr=1..R\n∑ (i,j,k)∈S [ ℓi,j,k ( R∑ r=1 u(1)r ⊗u(2)r ⊗u(3)r )\n(5)\n+ λ\n3 R∑ r=1 (∣∣u(1)r,i |3 + ∣∣u(2)r,j |3 + ∣∣u(3)r,k|3)]. For an example (i, j, k), only the parameters involved in the computation of X̂i,j,k are regularized. The computational\ncomplexity is thus the same as the currently used weighted Frobenius norm regularizer. With q(1) (resp. q(2), q(3)) the marginal probabilities of sampling a subject (resp. predicate, object), the weighting implied by this regularization scheme is\n∥X∥∗,3,w = ∥( 3 √ q(1) ⊗ 3 √ q(2) ⊗ 3 √ q(3))⊙X∥∗,3\nWe justify this weighting only by analogy with the matrix case discussed by (Srebro & Salakhutdinov, 2010): to make the weighted nuclear 3-norm of the all 1 tensor independent of its dimensions for a uniform sampling (since the nuclear 3-norm grows as 3 √ MNP for an (M,N,P ) tensor).\nComparatively, for the weighted version of the nuclear 2- norm analyzed in Yuan & Zhang (2016), the nuclear 2- norm of the all 1 tensor scales like √ NMP . This would imply a formulation of the form\nmin (u (d) r )d=1..3\nr=1..R\n∑ (i,j,k)∈S ℓi,j,k ( R∑ r=1 u(1)r ⊗ u(2)r ⊗ u(3)r )\n+ λ\n3 R∑ r=1 3∑ d=1 ∥ √ q(d) ⊙ u(d)r ∥ 3 2 . (6)\nContrary to formulation (5), the optimization of formulation (6) with a minibatch SGD leads to an update of every coefficients for each mini-batch considered. Depending on the implementation, and size of the factors, there might be a large difference in speed between the updates of the weighted nuclear {2, 3}-norm. In our implementation, this difference for CP is of about 1.5× in favor of the nuclear 3-norm on FB15K."
  }, {
    "heading": "5. A New CP Objective",
    "text": "Since our evaluation objective is to rank either the lefthand side or right-hand side of the predicates in our dataset, what we are trying to achieve is to model both predicates and their reciprocal. This suggests appending to our input the reciprocals of each predicates, thus factorizing [Y ;2 Ỹ ] rather than Y , where [ ;2 ] is the mode-2 concatenation, and Yi,j,k = Ỹk,j,i. After that, we only need to model the object fibers of this new tensor Y . We represent this transformation in Figure 1 (c). This reformulation has an important side-effect: it makes our algorithm invariant to the arbitrary choice of including a predicate or its reciprocal in the dataset. This property was introduced as \"Semantic Invariance\" in Bailly et al. (2015). Another way of achieving this invariance property would be to find the flipping of predicates that lead to the smallest model. In the case of a CP decomposition, we would try to find the flipping that leads to lowest tensor rank. This seems hopeless, given the NP-hardness of computing the tensor rank.\nMore precisely, the instantaneous loss of a training triple (i, j, k) becomes :\nℓi,j,k(X) =−Xi,j,k + log (∑\nk′\nexp(Xi,j,k′) )\n(7)\n−Xk,j+P,i + log (∑\ni′\nexp(Xk,j+P,i′) ) .\nAt test time we use X̂i,j,: to rank possible right hand sides for query (i, j, ?) and X̂k,j+P,: to rank possible left hand sides for query (?, j, k).\nUsing CP to factor the tensor described in (7), we beat the previous state of the art on many benchmarks, as shown in Table 2. This reformulation seems to help even the ComplEx decomposition, for which parameters are shared between the entity embeddings of the first and third mode."
  }, {
    "heading": "6. Experiments",
    "text": "We conducted all experiments on a Quadro GP 100 GPU. The code is available at https://github.com/ facebookresearch/kbc."
  }, {
    "heading": "6.1. Datasets and Experimental Setup",
    "text": "WN18 and FB15K are popular benchmarks in the Knowledge Base Completion community. The former comes from the WordNet database, was introduced in Bordes et al. (2014) and describes relations between words. The most frequent types of relations are highly hierarchical (e.g., hypernym, hyponym). The latter is a subsampling of Freebase limited to 15k entities, introduced in Bordes et al. (2013). It contains predicates with different characteristics (e.g., oneto-one relations such as capital_of to many-to-many such as actor_in_film).\nToutanova & Chen (2015) and Dettmers et al. (2017) identified train to test leakage in both these datasets, in the form of test triplets, present in the train set for the reciprocal predicates. Thus, both of these authors created two modified datasets: FB15K-237 and WN18RR. These datasets are harder to fit, so we expect regularization to have more impact. Dettmers et al. (2017) also introduced the dataset YAGO3-10, which is larger in scale and doesn’t suffer from leakage. All datasets statistics are shown in Table 1.\nIn all our experiments, we distinguish two settings: Reciprocal, in which we use the loss described in equation (7) and Standard, which uses the loss in equation (1). We compare our implementation of CP and ComplEx with the best published results, then the different performances between the two settings, and finally, the contribution of the regularizer in the reciprocal setting. In the Reciprocal setting, we compare the weighted nuclear 3-norm (N3) against the regularizer described in (2) (FRO). In preliminary experiments, the weighted nuclear 2-norm described in (6) did not seem to perform better than N3 and was slightly slower. We used Adagrad (Duchi et al., 2011) as our optimizer, whereas Kadlec et al. (2017) favored Adam (Kingma & Ba, 2014), because preliminary experiments didn’t show improvements.\nWe ran the same grid for all algorithms and regularizers on the FB15K, FB15K-237, WN18, WN18RR datasets, with a rank set to 2000 for ComplEx, and 4000 for CP. Our grid consisted of two learning rates: 10−1 and 10−2, two batch-sizes: 25 and 100, and regularization coefficients in [0, 10−3, 5.10−3, 10−2, 5.10−2, 10−1, 5.10−1]. On YAGO3-10, we limited our models to rank 1000 and used batch-sizes 500 and 3000, the rest of the grid was identical. We used the train/valid/test splits provided with these datasets and measured the filtered Mean Reciprocal Rank (MRR) and Hits@10 (Bordes et al. (2013)). We used the filtered MRR on the validation set for early stopping and report the corresponding test metrics. In this setting, an epoch for ComplEx with batch-size 100 on FB15K took about 110s and 325s for a batch-size of 25. We trained for 100 epochs to ensure convergence, reported performances were reached within the first 25 epochs.\nAll our results are reported in Table 2 and will be discussed in the next subsections. Besides our implementations of CP and ComplEx, we include the results of ConvE and DistMult in the baselines. The former because Dettmers et al. (2017) includes performances on the WN18RR and YAGO3-10 benchmarks, the latter because of the good performances on FB15K of DistMult and the extensive experiments on WN18 and FB15K reported in Kadlec et al. (2017). The performances of DistMult on FB15K-237, WN18RR and YAGO3-10 may be slightly underestimated, since our baseline CP results are better. To avoid clutter, we did not include in our table of results algorithms that make use of external data such as types (Krompass et al., 2015), external word embeddings (Toutanova & Chen, 2015), or using path queries as regularizers (Guu et al., 2015). The published results corresponding to these methods are subsumed in the \"Best Published\" line of Table 2, which is taken, for every single metric and dataset, as the best published result we were able to find."
  }, {
    "heading": "6.2. Reimplementation of the Baselines",
    "text": "The performances of our reimplementation of CP and ComplEx appear in the middle rows of Table 2 (Standard setting). We only kept the results for the nuclear 3-norm, which didn’t seem to differ from those with the Frobenius norm. Our results are slightly better than their published counterparts, going from 0.33 to 0.46 filtered MRR on FB15K for CP and 0.70 to 0.80 for ComplEx. This might be explained in part by the fact that in the Standard setting (2) we use a multi-class log-loss, whereas Trouillon et al. (2016) used binomial negative log-likelihood. Another reason for this increase can be the large rank of 2000\nthat we chose, where previously published results used a rank of around 200; the more extensive search for optimization/regularization parameters and the use of nuclear 3-norm instead of the usual regularization are also most likely part of the explanation."
  }, {
    "heading": "6.3. Standard vs Reciprocal",
    "text": "In this section, we compare the effect of reformulation (7), that is, the middle and bottom rows of Table 2. The largest differences are obtained for CP, which becomes a state of the art contender going from 0.2 to 0.95 filtered MRR on WN18, or from 0.46 to 0.86 filtered MRR on FB15K.For ComplEx, we notice a weaker, but consistent improvement by using our reformulation, with the biggest improvements observed on FB15K and YAGO3-10. Following the analysis in Bordes et al. (2013), we show in Table 3 the average filtered MRR as a function of the degree of the predicates. We compute the average in and out degrees on the training set, and separate the predicates in 4 categories : 1-1, 1-m, m-1 and m-m, with a cut-off at 1.5 on the average degree. We include reciprocal predicates in these statistics. That is, a predicate with an average in-degree of 1.2 and average out-degree of 3.2 will count as a 1-m when we predict its right-hand side, and as an m-1 when we predict its lefthand side. Most of our improvements come from the 1-m and m-m categories, both on ComplEx and CP."
  }, {
    "heading": "6.4. Frobenius vs Nuclear 3",
    "text": "We focus now on the effect of our norm-based N3 regularizer, compared to the Frobenius norm regularizer favored by the community. Comparing the four last rows of Table 2, we notice a small but consistent performance gain across datasets. The biggest improvements appear on the harder datasets WN18RR, FB15K-237 and YAGO3-10. We checked on WN18RR the significance of that gain with a Signed Rank test on the rank pairs for CP."
  }, {
    "heading": "6.5. Effect of Optimization Parameters",
    "text": "During these experiments, we noticed a heavy influence of optimization hyper-parameters on final results. This influence can account for as much as 0.1 filtered MRR and is illustrated in Figure 2."
  }, {
    "heading": "7. Conclusion and Discussion",
    "text": "The main contribution of this paper is to isolate and systematically explore the effect of different factors for large-scale knowledge base completion. While the impact of optimization parameters was well known already, neither the effect of the formulation (adding reciprocals doubles the mean reciprocal rank on FB15K for CP) nor the impact of the regularization was properly assessed. The conclusion is that the CP model performs nearly as well as the competitors when each model is evaluated in its optimal configuration. We believe this observation is important to assess and prioritize directions for further research on the topic.\nIn addition, our proposal to use nuclear p-norm as regularizers with p ̸= 2 for tensor factorization in general is of independent interest.\nThe results we present leave several questions open. Notably, whereas we give definite evidence that CP itself can perform extremely well on these datasets as long as the problem is formulated correctly, we do not have a strong theoretical justification as to why the differences in performances are so significant."
  }, {
    "heading": "Acknowledgements",
    "text": "The authors thank Armand Joulin and Maximilian Nickel for valuable discussions."
  }],
  "year": 2018,
  "references": [{
    "title": "Learning structured embeddings of knowledge bases",
    "authors": ["A. Bordes", "J. Weston", "R. Collobert", "Y. Bengio"],
    "venue": "In Conference on artificial intelligence,",
    "year": 2011
  }, {
    "title": "A semantic matching energy function for learning with multi-relational data",
    "authors": ["A. Bordes", "X. Glorot", "J. Weston", "Y. Bengio"],
    "venue": "Machine Learning,",
    "year": 2014
  }, {
    "title": "A singular value thresholding algorithm for matrix completion",
    "authors": ["Cai", "J.-F", "E.J. Candès", "Z. Shen"],
    "venue": "SIAM Journal on Optimization,",
    "year": 1956
  }, {
    "title": "Exact matrix completion via convex optimization",
    "authors": ["E.J. Candès", "B. Recht"],
    "venue": "Foundations of Computational mathematics,",
    "year": 2009
  }, {
    "title": "Scalable and sound low-rank tensor learning",
    "authors": ["H. Cheng", "Y. Yu", "X. Zhang", "E. Xing", "D. Schuurmans"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2016
  }, {
    "title": "Convolutional 2d knowledge graph embeddings",
    "authors": ["T. Dettmers", "P. Minervini", "P. Stenetorp", "S. Riedel"],
    "venue": "arXiv preprint arXiv:1707.01476,",
    "year": 2017
  }, {
    "title": "Adaptive subgradient methods for online learning and stochastic optimization",
    "authors": ["J. Duchi", "E. Hazan", "Y. Singer"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2011
  }, {
    "title": "Learning with the weighted trace-norm under arbitrary sampling distributions",
    "authors": ["R. Foygel", "O. Shamir", "N. Srebro", "R.R. Salakhutdinov"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2011
  }, {
    "title": "Nuclear norm of higher-order tensors",
    "authors": ["S. Friedland", "Lim", "L.-H"],
    "venue": "Mathematics of Computation,",
    "year": 2018
  }, {
    "title": "Combining two and three-way embedding models for link prediction in knowledge bases",
    "authors": ["A. Garcia-Duran", "A. Bordes", "N. Usunier", "Y. Grandvalet"],
    "venue": "Journal of Artificial Intelligence Research,",
    "year": 2016
  }, {
    "title": "Traversing knowledge graphs in vector space",
    "authors": ["K. Guu", "J. Miller", "P. Liang"],
    "venue": "In Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing,",
    "year": 2015
  }, {
    "title": "The expression of a tensor or a polyadic as a sum of products",
    "authors": ["F.L. Hitchcock"],
    "venue": "Studies in Applied Mathematics,",
    "year": 1927
  }, {
    "title": "A simple algorithm for nuclear norm regularized problems",
    "authors": ["M. Jaggi", "M. Sulovsk", "others"],
    "venue": "In Proceedings of the 27th international conference on machine learning",
    "year": 2010
  }, {
    "title": "Fast linear model for knowledge graph embeddings",
    "authors": ["A. Joulin", "E. Grave", "P. Bojanowski", "M. Nickel", "T. Mikolov"],
    "venue": "arXiv preprint arXiv:1710.10881,",
    "year": 2017
  }, {
    "title": "Knowledge Base Completion: Baselines Strike Back",
    "authors": ["R. Kadlec", "O. Bajgar", "J. Kleindienst"],
    "venue": "In Proceedings of the 2nd Workshop on Representation Learning for NLP,",
    "year": 2017
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["D.P. Kingma", "J. Ba"],
    "venue": "arXiv preprint arXiv:1412.6980,",
    "year": 2014
  }, {
    "title": "Tensor decompositions and applications",
    "authors": ["T.G. Kolda", "B.W. Bader"],
    "venue": "SIAM review,",
    "year": 2009
  }, {
    "title": "Matrix factorization techniques for recommender systems",
    "authors": ["Y. Koren", "R. Bell", "C. Volinsky"],
    "year": 2009
  }, {
    "title": "Type-constrained representation learning in knowledge graphs",
    "authors": ["D. Krompass", "S. Baier", "V. Tresp"],
    "venue": "In International Semantic Web Conference,",
    "year": 2015
  }, {
    "title": "Random walk inference and learning in a large scale knowledge base",
    "authors": ["N. Lao", "T. Mitchell", "W.W. Cohen"],
    "venue": "In Proceedings of the Conference on Empirical Methods in Natural Language Processing,",
    "year": 2011
  }, {
    "title": "Transt: Type-based multiple embedding representations for knowledge graph completion",
    "authors": ["S. Ma", "J. Ding", "W. Jia", "K. Wang", "M. Guo"],
    "venue": "In Joint European Conference on Machine Learning and Knowledge Discovery in Databases,",
    "year": 2017
  }, {
    "title": "Restricted strong convexity and weighted matrix completion: Optimal bounds with noise",
    "authors": ["S. Negahban", "M.J. Wainwright"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2012
  }, {
    "title": "An overview of embedding models of entities and relationships for knowledge base completion",
    "authors": ["D.Q. Nguyen"],
    "venue": "arXiv preprint arXiv:1703.08098,",
    "year": 2017
  }, {
    "title": "A three-way model for collective learning on multi-relational data",
    "authors": ["M. Nickel", "V. Tresp", "Kriegel", "H.-P"],
    "venue": "In Proceedings of the 28th international conference on machine learning",
    "year": 2011
  }, {
    "title": "A Review of Relational Machine Learning for Knowledge Graphs",
    "authors": ["M. Nickel", "K. Murphy", "V. Tresp", "E. Gabrilovich"],
    "venue": "Proceedings of the IEEE,",
    "year": 2016
  }, {
    "title": "Holographic embeddings of knowledge graphs. 2016b",
    "authors": ["M. Nickel", "L. Rosasco", "Poggio", "T. A"],
    "year": 2016
  }, {
    "title": "Fast maximum margin matrix factorization for collaborative prediction",
    "authors": ["J.D. Rennie", "N. Srebro"],
    "venue": "In Proceedings of the 22nd international conference on Machine learning,",
    "year": 2005
  }, {
    "title": "Implicit reasonet: Modeling large-scale structured relationships with shared memory",
    "authors": ["Y. Shen", "Huang", "P.-S", "Chang", "M.-W", "J. Gao"],
    "year": 2016
  }, {
    "title": "Collaborative filtering in a non-uniform world: Learning with the weighted trace norm",
    "authors": ["N. Srebro", "R.R. Salakhutdinov"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2010
  }, {
    "title": "Maximummargin matrix factorization",
    "authors": ["N. Srebro", "J. Rennie", "T.S. Jaakkola"],
    "venue": "In Advances in neural information processing systems,",
    "year": 2005
  }, {
    "title": "Estimation of low-rank tensors via convex optimization",
    "authors": ["R. Tomioka", "K. Hayashi", "H. Kashima"],
    "venue": "arXiv preprint arXiv:1010.0789,",
    "year": 2010
  }, {
    "title": "Observed versus latent features for knowledge base and text inference",
    "authors": ["K. Toutanova", "D. Chen"],
    "venue": "In Proceedings of the 3rd Workshop on Continuous Vector Space Models and their Compositionality,",
    "year": 2015
  }, {
    "title": "Complex embeddings for simple link prediction",
    "authors": ["T. Trouillon", "J. Welbl", "S. Riedel", "E. Gaussier", "G. Bouchard"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2016
  }, {
    "title": "Multitask learning meets tensor factorization: task imputation via convex optimization",
    "authors": ["K. Wimalawarne", "M. Sugiyama", "R. Tomioka"],
    "venue": "In Advances in neural information processing systems,",
    "year": 2014
  }, {
    "title": "Embedding entities and relations for learning and inference in knowledge bases",
    "authors": ["B. Yang", "Yih", "W.-t", "X. He", "J. Gao", "L. Deng"],
    "venue": "arXiv preprint arXiv:1412.6575,",
    "year": 2014
  }, {
    "title": "On tensor completion via nuclear norm minimization",
    "authors": ["M. Yuan", "Zhang", "C.-H"],
    "venue": "Foundations of Computational Mathematics,",
    "year": 2016
  }],
  "id": "SP:88ddc238a06989a0215ac1b1315e6d41af0c19e0",
  "authors": [{
    "name": "Timothée Lacroix",
    "affiliations": []
  }, {
    "name": "Nicolas Usunier",
    "affiliations": []
  }, {
    "name": "Guillaume Obozinski",
    "affiliations": []
  }],
  "abstractText": "The problem of Knowledge Base Completion can be framed as a 3rd-order binary tensor completion problem. In this light, the Canonical Tensor Decomposition (CP) (Hitchcock, 1927) seems like a natural solution; however, current implementations of CP on standard Knowledge Base Completion benchmarks are lagging behind their competitors. In this work, we attempt to understand the limits of CP for knowledge base completion. First, we motivate and test a novel regularizer, based on tensor nuclear p-norms. Then, we present a reformulation of the problem that makes it invariant to arbitrary choices in the inclusion of predicates or their reciprocals in the dataset. These two methods combined allow us to beat the current state of the art on several datasets with a CP decomposition, and obtain even better results using the more advanced ComplEx model.",
  "title": "Canonical Tensor Decomposition for Knowledge Base Completion"
}