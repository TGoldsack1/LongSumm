{
  "sections": [{
    "heading": "1 Introduction",
    "text": "Sequence labeling tasks in natural language processing (NLP) often have limited annotated data available for model training. In such cases regularization can be important, and it can be helpful to use additional unlabeled data. One approach for both regularization and semi-supervised training is to design latent-variable generative models and then develop neural variational methods for learning and inference (Kingma and Welling, 2014; Rezende and Mohamed, 2015).\nNeural variational methods have been quite successful for both generative modeling and representation learning, and have recently been applied to a variety of NLP tasks (Mnih and Gregor, 2014; Bowman et al., 2016; Miao et al., 2016; Serban et al., 2017; Zhou and Neubig, 2017; Hu et al., 2017). They are also very popular for semisupervised training; when used in such scenarios, they typically have an additional task-specific prediction loss (Kingma et al., 2014; Maale et al.,\n2016; Zhou and Neubig, 2017; Yang et al., 2017b). However, it is still unclear how to use such methods in the context of sequence labeling.\nIn this paper, we apply neural variational methods to sequence labeling by combining a latentvariable generative model and a discriminativelytrained labeler. We refer to this family of procedures as variational sequential labelers (VSLs). Learning maximizes the conditional probability of each word given its context and minimizes the classification loss given the latent space. We explore several models within this family that use different kinds of conditional independence structure among the latent variables within each time step. Intuitively, the multiple latent variables can disentangle information pertaining to labeloriented and word-specific properties.\nWe study VSLs in the context of named entity recognition (NER) and several part-of-speech (POS) tagging tasks, both on English Twitter data and on data from six additional languages. Without unlabeled data, our models consistently show 0.5-0.8% accuracy improvements across tagging datasets and 0.8 F1 improvement for NER. Adding unlabeled data further improves the model performance by 0.1-0.3% accuracy or 0.2 F1 score. We obtain the best results with a hierarchical structure using two latent variables at each time step.\nOur models, like generative latent variable models in general, have the ability to naturally combine labeled and unlabeled data. We obtain small but consistent performance improvements by adding unlabeled data. In the absence of unlabeled data, the variational loss acts as regularizer on the learned representation of the supervised sequence prediction model. Our results demonstrate that this regularization improves performance even when only labeled data is used. We also compare different ways of applying the classification loss when using a latent variable hierar-\nar X\niv :1\n90 6.\n09 53\n5v 1\n[ cs\n.C L\n] 2\n3 Ju\nn 20\n19\nchy, and find that the most effective structure also provides the cleanest separation of information in the latent space."
  }, {
    "heading": "2 Related Work",
    "text": "There is a growing amount of work applying neural variational methods to NLP tasks, including document modeling (Mnih and Gregor, 2014; Miao et al., 2016; Serban et al., 2017), machine translation (Zhang et al., 2016), text generation (Bowman et al., 2016; Serban et al., 2017; Hu et al., 2017), language modeling (Bowman et al., 2016; Yang et al., 2017b), and sequence transduction (Zhou and Neubig, 2017), but we are not aware of any such work for sequence labeling. Before the advent of neural variational methods, there were several efforts in latent variable modeling for sequence labeling (Quattoni et al., 2007; Sun and Tsujii, 2009).\nThere has been a great deal of work on using variational autoencoders in semi-supervised settings (Kingma et al., 2014; Maale et al., 2016; Zhou and Neubig, 2017; Yang et al., 2017b). Semi-supervised sequence labeling has a rich history (Altun et al., 2006; Jiao et al., 2006; Mann and McCallum, 2008; Subramanya et al., 2010; Søgaard, 2011). The simplest methods, which are also popular currently, use representations learned from large amounts of unlabeled data (Miller et al., 2004; Owoputi et al., 2013; Peters et al., 2017). Recently, Zhang et al. (2017) proposed a structured neural autoencoder that can be jointly trained on both labeled and unlabeled data.\nOur work involves multi-task losses and is therefore also related to the rich literature on multi-task learning for sequence labeling (Plank et al., 2016; Augenstein and Søgaard, 2017; Bingel and Søgaard, 2017; Rei, 2017, inter alia).\nAnother related thread of work is learning interpretable latent representations. Zhou and Neubig (2017) factorize an inflected word into lemma and morphology labels, using continuous and categorical latent variables. Hu et al. (2017) interpret a sentence as a combination of an unstructured latent code and a structured latent code, which can represent attributes of the sentence.\nThere have been several efforts in combining variational autoencoders and recurrent networks (Gregor et al., 2015; Chung et al., 2015; Fraccaro et al., 2016). While the details vary, these models typically contain latent variables at\neach time step in a sequence. This prior work mainly focused on ways of parameterizing the time dependence between the latent variables, which gives them more power in modeling distributions over observation sequences. In this paper, we similarly use latent variables at each time step, but we adopt stronger independence assumptions which leads to simpler models and inference procedures. Also, the models cited above were developed for modeling data distributions, rather than for supervised or semi-supervised learning, which is our focus here.\nThe key novelties in our work compared to the prior work mentioned above are the proposed sequential variational labelers and the investigation of latent variable hierarchies within these models. The empirical effectiveness of latent hierarchical structure in variational modeling is a key contribution of this paper and may be applicable to the other applications discussed above. Recent work, contemporaneous with this submission, similarly showed the advantages of combining hierarchical latent variables and variational learning for conversational modeling, in the context of a non-sequential model (Park et al., 2018)."
  }, {
    "heading": "3 Proposed Methods",
    "text": "We begin by describing variational autoencoders and the notation we will use in the following sections. We denote the input word sequence by x1:T , the corresponding label sequence by l1:T , the input words other than the word at position t by x−t, the generative model by pθ(·), and the posterior inference model by qφ(·)."
  }, {
    "heading": "3.1 Background: Variational Autoencoders",
    "text": "We review variational autoencoders (VAEs) by describing a VAE for an input sequence x1:T . When using a VAE, we assume a generative model that generates an input using a latent variable z, typically assumed to follow a multivariate Gaussian distribution. We seek to maximize the marginal likelihood of inputs x1:T when marginalizing out the latent variable z. Since this is typically intractable, especially when using continuous latent variables, we instead maximize a lower bound on the marginal log-likelihood (Kingma and Welling,\n2014):\nlog pθ(x1:T ) ≥\nE z∼qφ(·|x1:T )\n[ log pθ(x1:T |z)− log\nqφ(z| x1:T ) pθ(z)\n] =\nE z∼qφ(·|x1:T ) [log pθ(x1:T |z)]︸ ︷︷ ︸ Reconstruction Loss −KL(qφ(z|x1:T )‖pθ(z))︸ ︷︷ ︸ KL divergence\n(1) where we have introduced the variational posterior q parametrized by new parameters φ. q is referred to as an “inference model” as it encodes an input into the latent space. We also have the generative model probabilities p parametrized by θ. The parameters are trained in a way that reflects a classical autoencoder framework: encode the input into a latent space, decode the latent space to reconstruct the input. These models are therefore referred to as “variational autoencoders”.\nThe lower bound consists of two terms: reconstruction loss and KL divergence. The KL divergence term provides a regularizing effect during learning by ensuring that the learned posterior remains close to the prior over the latent variables."
  }, {
    "heading": "3.2 Variational Sequential Labelers",
    "text": "We now introduce variational sequential labelers (VSLs) and propose several variants for se-\nquence labeling tasks. Although the latent structure varies, a VSL maximizes the conditional probability of pθ(xt|x−t) and minimizes a classification loss using the latent variables as the input to the classifier. Unlike VAEs, VSLs do not autoencode the input, so they are more similar to recent conditional variational formulations (Sohn et al., 2015; Miao et al., 2016; Zhou and Neubig, 2017). Intuitively, the VSL variational objective is to find the information that is useful for predicting the word xt from its surrounding context, which has similarities to objectives for learning word embeddings (Collobert et al., 2011; Mikolov et al., 2013). This objective serves as regularization for the labeled data and as an unsupervised objective for the unlabeled data.\nAll of our models use latent variables for each position in the sequence. These characteristics are shown in the visual depictions of our models in Figure 1. We consider variants with multiple latent variables per time step and attach the classifier to only particular variables. This causes the different latent variables to capture different characteristics.\nIn the following sections, we will describe various latent variable configurations that we will evaluate empirically in subsequent sections."
  }, {
    "heading": "3.3 Single Latent Variable",
    "text": "We begin by defining a basic VSL and corresponding parametrization, which will also be used in other variants. This first model (which we call VSL-G and show in Figure 1a) has a Gaussian latent variable at each time step. VSL-G uses two training objectives; the first is similar to the lower bound on log-likelihood used by VAEs:\nlog pθ(xt|x−t) ≥ E zt∼qφ(·| x1:T ,t) [log pθ(xt| zt)− log qφ(zt| x1:T , t) pθ(zt| x−t) ] = E zt∼qφ(·| x1:T ,t) [log pθ(xt| zt)]\n−KL(qφ(zt| x1:T , t)‖ pθ(zt| x−t)) = U0(x1:T , t) (2)\nVSL-G additionally uses a classifier f on the latent variable zt which is trained with the following objective:\nC0(x1:T , lt) = E zt∼qφ(·|x1:T ,t) [− log f(lt|zt)] (3)\nThe final loss is\nL(x1:T , l1:T ) = T∑ t=1 [C0(x1:T , lt)− αU0(x1:T , t)]\nwhere α is a trade-off hyperparameter. α is set to zero during supervised training but it is tuned based on development set performance during semi-supervised training. The same procedure is adopted for the other VSL models below.\nFor the generative model, we parametrize pθ(xt|zt) as a feedforward neural network with two hidden layers and ReLU (Nair and Hinton, 2010) as activation function. As reconstruction loss, we use cross-entropy over the words in the vocabulary. We defer the descriptions of the parametrization of pθ(zt| x−t) to Section 3.6.\nWe now discuss how we parametrize the inference model qφ(zt|x1:T , t). We use a bidirectional gated recurrent unit (BiGRU; Chung et al., 2014) network to produce a hidden vector ht at position t. The BiGRU is run over the input x1:T , where each xt is the concatenation of a word embedding and the concatenated final hidden states from a character-level BiGRU. The inference model qφ(zt|x1:T , t) is then a single layer feedforward neural network that uses ht as input. When parametrizing the posterior over latent variables in the following models below, we use this same procedure to produce hidden vectors with a BiGRU and then use them as input to feedforward networks. The structure of our inference model is similar to those used in previous state-of-the-art models for sequence labeling (Lample et al., 2016; Yang et al., 2017a).\nIn order to focus more on the effect of our variational objective, the classifier we use is always the same as our baseline model (see Section 4.3), which is a one layer feedforward neural network without a hidden layer, and it is also used in testtime prediction."
  }, {
    "heading": "3.4 Flat Latent Variables",
    "text": "We next consider ways of factorizing the functionality of the latent variable into label-specific and other word-specific information. We introduce VSL-GG-Flat (shown in Figure 1b), which has two conditionally independent Gaussian latent variables at each time step, denote zt and yt for time step t.\nThe variational lower bound is derived as fol-\nlows:\nlog pθ(xt|x−t) ≥ E\nzt,yt∼qφ(·|x1:T ,t) [log pθ(xt| zt, yt) − log qφ(zt|x1:T , t) pθ(zt|x−t) − log qφ(yt|x1:T , t) pθ(yt|x−t) ]\n= E zt,yt∼qφ(·|x1:T ,t) [log pθ(xt|zt, yt)]\n−KL(qφ(zt|x1:T , t)‖pθ(zt|x−t)) −KL(qφ(yt|x1:T , t)‖pθ(yt|x−t)) = U1(x1:T , t)\n(4) The classifier f is on the latent variable yt and its loss is\nC1(x1:T , lt) = E yt∼qφ(·|x1:T ,t) [− log f(lt|yt)] (5)\nThe final loss for the model is L(x1:T , l1:T ) = T∑ t=1 [C1(x1:T , lt)− αU1(x1:T , t)] (6) Where α is a trade-off hyperparameter.\nSimilarly to the VSL-G model, qφ(zt|x1:T , t) and qφ(yt|x1:T , t) are parametrized by single layer feedforward neural networks using the hidden state ht as input."
  }, {
    "heading": "3.5 Hierarchical Latent Variables",
    "text": "We also explore hierarchical relationships among the latent variables. In particular, we introduce the VSL-GG-Hier model which has two Gaussian latent variables with the hierarchical structure shown in Figure 1c. This model encodes the intuition that the word-specific latent information zt may differ depending on the class-specific information of yt.\nFor this model, the derivations are similar to Equations (4) and (5). The first is:\nlog pθ(xt|x−t) ≥ E\nzt,yt∼qφ(·|x1:T ,t) [log pθ(xt|zt) − log qφ(zt|yt, x1:T , t) pθ(zt|yt, x−t) − log qφ(yt|x1:T , t) pθ(yt|x−t) ]\n= E zt,yt∼qφ(·|x1:T ,t) [log pθ(xt|zt)]\n−KL(qφ(zt|yt, x1:T , t)‖pθ(zt|yt, x−t)) −KL(qφ(yt|x1:T , t)‖pθ(yt|x−t)) = U2(x1:T , t)\n(7)\nThe classifier f uses yt as input and is trained with the following loss:\nC2(x1:T , lt) = E yt∼qφ(·|x1:T ,t) [− log f(lt|yt)] (8)\nNote thatC1 andC2 have the same form. The final loss is L(x1:T , l1:T ) = T∑ t=1 [C2(x1:T , lt)− α U2(x1:T , t)] (9) Where α is a trade-off hyperparameter.\nThe hierarchical posterior qφ(zt|yt, x1:T , t) is parametrized by concatenating the hidden vector ht and the random variable yt and then using them as input to a single layer feedforward network."
  }, {
    "heading": "3.6 Parametrization of Priors",
    "text": "Traditional variational models assume extremely simple priors (e.g., multivariate standard Gaussian distributions). Recently there have been efforts to learn the prior and posterior jointly during training (Fraccaro et al., 2016; Serban et al., 2017; Tomczak and Welling, 2018). In this paper, we follow this same idea but we do not explicitly parametrize the prior pθ(zt|x−t). This is partially due to the lack of computationally-efficient parametrization options for pθ(zt|x−t). In addition, since we are not seeking to do generation with our learned models, we can let part of the generative model be parametrized implicitly.\nMore specifically, the approach we use is to learn the priors by updating them iteratively. During training, we first initialize the priors of all examples as multivariate standard Gaussian distributions. As training proceeds, we use the last optimized posterior as our current prior based on a particular “update frequency” (see supplementary material for more details).\nOur learned priors are implicitly modeled as\npkθ(zt|x−t) ≈∑ x qk−1φ (zt|Xt = x, x−t, t)pdata(Xt = x|x−t)\n(10) where pdata is the empirical data distribution,Xt is a random variable corresponding to the observation at position t, and k is the prior update time step. The intuition here is that the prior is obtained by marginalizing over values for the missing observation represented by the random variable Xt.\nThe posterior qk−1φ is as defined in our latent variable models. We assume pdata(Xt = x|x−t) = 0 for x1:T /∈ training set. For context x−t that can pair with multiple values of Xt, its prior is the data-dependent weighted average posterior. For simplicity of implementation and efficient computation, however, if context x−t can pair with multiple values in our training data, we ignore this fact and simply use instance-dependent posteriors. Another way to view this is as conditioning on the index of the training examples while parametrizing the above. That is\npk,iθ (zt|x−t)← q k−1,i φ (zt|x1:T , t) (11)\nwhere i is the index of the instance."
  }, {
    "heading": "3.7 Training",
    "text": "In this subsection, we introduce techniques we have used to address difficulties during training.\nReparametrization Trick. It is challenging to use gradient descent for a random variable as it involves a non-differentiable sampling procedure. Kingma and Welling (2014) introduced a reparametrization trick to tackle this problem. They parametrize a Gaussian random variable z as uϕ(x) + gψ(x) ◦ where ∼ N (0, I) and uϕ(x), gψ(x) are deterministic and differentiable functions, so the gradient can go through uϕ(·) and gψ(·). In our experiments, we use one sample for each time step during training. For evaluation at test time, we use the mean value uϕ(x).\nKL Divergence Weight Annealing. Although the use of prior updating\nlets us avoid tuning the weight of the KL divergence, the simple priors can still hinder learning during the initial stages of training. To address this, we follow the method described by Bowman et al. (2016) to add weights to all KL divergence terms and anneal the weights from a small value to 1."
  }, {
    "heading": "4 Experiments",
    "text": "We describe key details of our experimental setup in the subsections below but defer details about hyperparameter tuning to the supplementary material. Our implementation is available at https: //github.com/mingdachen/vsl"
  }, {
    "heading": "4.1 Datasets",
    "text": "We evaluate our model on the CoNLL 2003 English NER dataset (Tjong Kim Sang and De Meulder, 2003) and 7 POS tagging datasets: the Twitter tagging dataset of Gimpel et al. (2011) and Owoputi et al. (2013), and 6 languages from the Universal Dependencies (UD) 1.4 dataset (McDonald et al., 2013).\nTwitter POS Dataset. The Twitter dataset has 25 tags. We use OCT27TRAIN and OCT27DEV as the training set, OCT27TEST as the development set, and DAILY547 as the test set. We randomly sample {1k, 2k, 3k, 4k, 5k, 10k, 20k, 30k, 60k} tweets from 56 million English tweets as our unlabeled data and tune the amount of unlabeled data based on development set accuracy.\nUD POS Datasets. The UD datasets have 17 tags. We use French, German, Spanish, Russian, Indonesian and Croatian. We follow the same setup as Zhang et al. (2017), randomly sampling 20% of the original training set as our labeled data and 50% as unlabeled data. There is no overlap between the labeled and unlabeled data. See Zhang et al. (2017) for more details about the setup.\nNER Dataset. We use the BIOES labeling scheme and report micro-averaged F1. We preprocessed the text by replacing all digits with 0. We randomly sample 10% of the original training set as our labeled data and 50% as unlabeled data. We also ensure there is no overlap between the labeled and unlabeled data."
  }, {
    "heading": "4.2 Pretrained Word Embeddings",
    "text": "For all experiments, we use pretrained 100- dimensional word embeddings. For Twitter, we trained skip-gram embeddings (Mikolov et al., 2013) on a dataset of 56 million English tweets. For the UD datasets, we trained skip-gram embeddings on Wikipedia for each of the six languages. For NER, we use 100-dimensional pretrained GloVe (Pennington et al., 2014) embeddings. Our models perform better with word embeddings kept fixed during training while for the baselines the word embeddings are fine tuned as this improves the baseline performance."
  }, {
    "heading": "4.3 Baselines",
    "text": "Our primary baseline is a BiGRU tagger where the input consists of the concatenation of a word embedding and the concatenation of the final hidden\nstates of a character-level BiGRU. This BiGRU architecture is identical to that used in the inference networks in our VSL models. Predictions are made based on a linear transformation given the current hidden state. The output dimensionality of the transformation is task-dependent (e.g., 25 for Twitter tagging). We use the standard per-position cross entropy loss for training.\nWe also report results from the best systems from Zhang et al. (2017), namely the NCRF and NCRF-AE models. Both use feedforward networks as encoders and conditional random field layers for capturing sequential information. The NCRF-AE model additionally can benefit from unlabeled data."
  }, {
    "heading": "5 Results",
    "text": "Table 1a shows results on the Twitter development and test sets. All of our VSL models outperform the baseline and our best VSL models outperform the BiGRU baseline by 0.8–1% absolute. When comparing different latent variable configurations, we find that a hierarchical structure performs best. Without unlabeled data, our models already outperform the BiGRU baseline. Adding unlabeled data enlarges the gap between the baseline and our models by up to 0.1–0.3% absolute.\nTable 1b shows results on the CoNLL 2003\nNER development and test sets. We observe similar trends as in the Twitter data, except that the model does not show improvement on the test set when adding unlabeled data.\nTable 2 shows our results on the UD datasets. The trends are broadly consistent with those of Table 1a and 1b. The best performing models use hierarchical structure in the latent variables. There are some differences across languages. For French, German, Indonesian and Russian, VSLG does not show improvement when using unlabeled data. This may be resolved with better tuning, since the model actually shows improvement on the dev set.\nNote that results reported by Zhang et al. (2017) and ours are not strictly comparable as their word embeddings were only pretrained on the UD training sets while ours were pretrained on Wikipedia. Nonetheless, they also mentioned that using embeddings pretrained on larger unlabeled data did not help. We include these results to show that our baselines are indeed strong compared to prior results reported in the literature."
  }, {
    "heading": "6 Discussion",
    "text": ""
  }, {
    "heading": "6.1 Effect of Position of Classification Loss",
    "text": "We investigate the effect of attaching the classifier to different latent variables. In particular, for the VSL-GG-Hier model, we compare the attachment of the classifier between z and y. See Figure 2. The results in Table 3 suggest that attaching the reconstruction and classification losses to the same latent variable (z) harms accuracy although attaching the classifier to z effectively gives the classifier an extra layer. We can observe why this occurs by looking at the latent variable visualizations in Figure 3d. Compared with Figure 3e, where the two variables are more clearly disentangled, the latent variables in Figure 3d appear to be capturing highly similar information."
  }, {
    "heading": "6.2 Effect of Latent Hierarchy",
    "text": "To verify our assumption of the latent structure, we visualize the latent space for Gaussian models using t-SNE (Maaten and Hinton, 2008) in Figure 3. The BiGRU baseline (Figure 3a) and the VSL-G (Figure 3b) do not show significant dif-\nferences. However, when using multiple latent variables, the different latent variables capture different characteristics. In the VSL-GG-Flat model (Figure 3c), the y variable (the upper plot) reflects the clustering of the tagging space much more closely than the z variable (the lower plot). Since both variables are used to reconstruct the word, but only the y variable is trained to predict the tag, it appears that z is capturing other information useful for reconstructing the word. However, since they are both used for reconstruction, the two spaces show signs of alignment; that is, the “tag” latent variable y does not show as clean a separation into tag clusters as the y variable in the VSLGG-Hier model in Figure 3e.\nIn Figure 3e (VSL-GG-Hier), the clustering of words with respect to the tag is clearest. This may account for the consistently better performance of\nthis model relative to the others. The z variable reflects a space that is conditioned on y but that diverges from it, presumably in order to better reconstruct the word. The closer the latent variable is to the decoder output, the weaker the tagging information becomes while other word-specific information becomes more salient.\nFigure 3d shows that VSL-GG-Hier with classification loss on z, which consistently underperforms both the VSL-GG-Flat and VSL-GG-Hier models in our experiments, appears to be capturing the same latent space in both variables. Since the z variable is used to both predict the tag and reconstruct the word, it must capture both the tag and word reconstruction spaces, and may be limited by capacity in doing so. The y variable does not seem to be contributing much modeling power, as its space is closely aligned to that of z."
  }, {
    "heading": "6.3 Effect of Variational Regularization",
    "text": "We investigate the beneficial effects of variational frameworks (“variational regularization”) by replacing our variational components in VSLs with their deterministic counterparts, which do not have randomness in the latent space and do not use the KL divergence term during optimization. Note that these BiGRU encoders share the same architectures as their variational posterior counterparts and still use both the classification and reconstruction losses. While other subsets of losses could be considered in this comparison, our motivation is to compare two settings that correspond to wellknown frameworks. The “no VR” setting corresponds roughly to the combination of a classifier and a traditional autoencoder.\nWe note that these experiments do not use any unlabeled data.\nThe results in Table 4 demonstrate that compared to the baseline BiGRU, adding the recon-\nstruction loss (“VSL-G, no VR”) yields only 0.1 improvement for both Twitter and NER. Although adding hierarchical structure further improves performance, the improvements are small (+0.1 and +0.2 for Twitter and NER respectively). For VSLGG-Hier, variational regularization accounts for relatively large differences of 0.6 for Twitter and 0.5 for NER. These results show that the improvements do not come solely from adding a reconstruction objective to the learning procedure. In limited preliminary experiments, we did not find a benefit from adding unlabeled data under the “no VR” setting."
  }, {
    "heading": "6.4 Effect of Unlabeled Data",
    "text": "In order to examine the effect of unlabeled data, we report our Twitter dev accuracies when varying the unlabeled data size. We choose VSL-GG-Hier as the model for this experiment since it benefits the most from unlabeled data. As Figure 4 shows, gradually adding unlabeled data helps a little at the beginning. Further adding unlabeled data boosts the accuracy of the model. The improvements that come from unlabeled data quickly plateau after the amount of unlabeled data goes beyond 10,000. This suggests that with little unlabeled data, the model is incapable of fully utilizing the information in the unlabeled data. However if the amount of unlabeled data is too large, the supervised training signal becomes too weak to extract something useful from the unlabeled data.\nWe also notice that when there is a large amount of unlabeled data, it is always better to pretrain the prior first using a small α (e.g., 0.1) and then use it as a warm start to train a new model using a larger α (e.g., 1.0).\nTuning the weight of the KL divergence could achieve a similar effect, but it may require tuning the weight for labeled data and unlabeled data sep-\narately. We prefer to pretrain the prior as it is simpler and involves less hyperparameter tuning."
  }, {
    "heading": "7 Conclusion",
    "text": "We introduced variational sequential labelers for semi-supervised sequence labeling. They consist of latent-variable generative models with flexible parametrizations for the variational posterior (using RNNs over the entire input sequence) and a classifier at each time step. Our best models use multiple latent variables arranged in a hierarchical structure.\nWe demonstrate systematic improvements in NER and POS tagging accuracy across 8 datasets over a strong baseline.\nWe also find small, but consistent, improvements by using unlabeled data."
  }, {
    "heading": "Acknowledgments",
    "text": "We would like to thank NVIDIA for donating GPUs used in this research, the anonymous reviewers for their comments that improved this paper, and Google for a faculty research award to K. Gimpel that partially supported this research. This research was funded by NSF grant 1433485."
  }],
  "year": 2019,
  "references": [{
    "title": "Maximum margin semi-supervised learning for structured variables",
    "authors": ["Y. Altun", "D. McAllester", "M. Belkin."],
    "venue": "Y. Weiss, B. Schölkopf, and J. C. Platt, editors, Advances in Neural Information Processing Systems 18, pages 33–40. MIT Press.",
    "year": 2006
  }, {
    "title": "Multitask learning of keyphrase boundary classification",
    "authors": ["Isabelle Augenstein", "Anders Søgaard."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers), pages 341–346. Association for",
    "year": 2017
  }, {
    "title": "Identifying beneficial task relations for multi-task learning in deep neural networks",
    "authors": ["Joachim Bingel", "Anders Søgaard."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume 2, Short",
    "year": 2017
  }, {
    "title": "Generating sentences from a continuous space",
    "authors": ["Samuel R. Bowman", "Luke Vilnis", "Oriol Vinyals", "Andrew Dai", "Rafal Jozefowicz", "Samy Bengio."],
    "venue": "Proceedings of The 20th SIGNLL Conference on Computational Natural Language Learning,",
    "year": 2016
  }, {
    "title": "Empirical evaluation of gated recurrent neural networks on sequence modeling",
    "authors": ["Junyoung Chung", "Caglar Gulcehre", "Kyunghyun Cho", "Yoshua Bengio."],
    "venue": "NIPS 2014 Workshop on Deep Learning, December 2014.",
    "year": 2014
  }, {
    "title": "A recurrent latent variable model for sequential data",
    "authors": ["Junyoung Chung", "Kyle Kastner", "Laurent Dinh", "Kratarth Goel", "Aaron C Courville", "Yoshua Bengio."],
    "venue": "C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances in",
    "year": 2015
  }, {
    "title": "Natural language processing (almost) from scratch",
    "authors": ["Ronan Collobert", "Jason Weston", "Léon Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa."],
    "venue": "Journal of Machine Learning Research, 12(Aug):2493–2537.",
    "year": 2011
  }, {
    "title": "Sequential neural models with stochastic layers",
    "authors": ["Marco Fraccaro", "Søren Kaae Sø nderby", "Ulrich Paquet", "Ole Winther."],
    "venue": "D. D. Lee, M. Sugiyama, U. V. Luxburg, I. Guyon, and R. Garnett, editors, Advances in Neural Information Processing Systems",
    "year": 2016
  }, {
    "title": "Part-of-speech tagging for twitter: Annotation, features, and experiments",
    "authors": ["Kevin Gimpel", "Nathan Schneider", "Brendan O’Connor", "Dipanjan Das", "Daniel Mills", "Jacob Eisenstein", "Michael Heilman", "Dani Yogatama", "Jeffrey Flanigan", "Noah A. Smith"],
    "year": 2011
  }, {
    "title": "Draw: A recurrent neural network for image generation",
    "authors": ["Karol Gregor", "Ivo Danihelka", "Alex Graves", "Danilo Rezende", "Daan Wierstra."],
    "venue": "Proceedings of the 32nd International Conference on Machine Learning, volume 37 of Proceedings",
    "year": 2015
  }, {
    "title": "Toward controlled generation of text",
    "authors": ["Zhiting Hu", "Zichao Yang", "Xiaodan Liang", "Ruslan Salakhutdinov", "Eric P. Xing."],
    "venue": "Proceedings of the 34th International Conference on Machine Learning, volume 70 of Proceedings of Machine Learning Re-",
    "year": 2017
  }, {
    "title": "Semisupervised conditional random fields for improved sequence segmentation and labeling",
    "authors": ["Feng Jiao", "Shaojun Wang", "Chi-Hoon Lee", "Russell Greiner", "Dale Schuurmans."],
    "venue": "Proceedings of the 21st International Conference on Compu-",
    "year": 2006
  }, {
    "title": "Semisupervised learning with deep generative models",
    "authors": ["Diederik P Kingma", "Shakir Mohamed", "Danilo Jimenez Rezende", "Max Welling"],
    "year": 2014
  }, {
    "title": "Autoencoding variational bayes",
    "authors": ["Diederik P. Kingma", "Max Welling."],
    "venue": "Proceedings of the Second International Conference on Learning Representations (ICLR 2014).",
    "year": 2014
  }, {
    "title": "Neural architectures for named entity recognition",
    "authors": ["Guillaume Lample", "Miguel Ballesteros", "Sandeep Subramanian", "Kazuya Kawakami", "Chris Dyer."],
    "venue": "Proceedings of NAACL-HLT, pages 260–270.",
    "year": 2016
  }, {
    "title": "Auxiliary deep generative models",
    "authors": ["Lars Maale", "Casper Kaae Snderby", "Sren Kaae Snderby", "Ole Winther."],
    "venue": "Proceedings of The 33rd International Conference on Machine Learning, volume 48 of Proceedings of Machine Learning Research, pages",
    "year": 2016
  }, {
    "title": "Visualizing data using t-sne",
    "authors": ["Laurens van der Maaten", "Geoffrey Hinton."],
    "venue": "Journal of machine learning research, 9(Nov):2579–2605.",
    "year": 2008
  }, {
    "title": "Generalized expectation criteria for semi-supervised learning of conditional random fields",
    "authors": ["Gideon S. Mann", "Andrew McCallum."],
    "venue": "Proceedings of ACL-08: HLT, pages 870–878. Association for Computational Linguistics.",
    "year": 2008
  }, {
    "title": "Neural variational inference for text processing",
    "authors": ["Yishu Miao", "Lei Yu", "Phil Blunsom."],
    "venue": "Proceedings of The 33rd International Conference on Machine Learning, volume 48 of Proceedings of Machine Learning Research, pages 1727–1736,",
    "year": 2016
  }, {
    "title": "Efficient estimation of word representations in vector space",
    "authors": ["Tomas Mikolov", "Kai Chen", "Greg Corrado", "Jeffrey Dean."],
    "venue": "arXiv preprint arXiv:1301.3781.",
    "year": 2013
  }, {
    "title": "Name tagging with word clusters and discriminative training",
    "authors": ["Scott Miller", "Jethran Guinness", "Alex Zamanian."],
    "venue": "HLT-NAACL 2004: Main Proceedings, pages 337–342, Boston, Massachusetts, USA. Association for Computational Linguistics.",
    "year": 2004
  }, {
    "title": "Neural variational inference and learning in belief networks",
    "authors": ["Andriy Mnih", "Karol Gregor."],
    "venue": "Proceedings of the 31st International Conference on Machine Learning, volume 32 of Proceedings of Machine Learning Research, pages 1791–1799, Be-",
    "year": 2014
  }, {
    "title": "Rectified linear units improve restricted boltzmann machines",
    "authors": ["Vinod Nair", "Geoffrey E Hinton."],
    "venue": "Proceedings of the 27th international conference on machine learning (ICML-10), pages 807–814.",
    "year": 2010
  }, {
    "title": "Improved part-of-speech tagging for online conversational text with word clusters",
    "authors": ["Olutobi Owoputi", "Brendan O’Connor", "Chris Dyer", "Kevin Gimpel", "Nathan Schneider", "Noah A. Smith"],
    "venue": "In Proceedings of the 2013 Conference of the North",
    "year": 2013
  }, {
    "title": "A hierarchical latent structure for variational conversation modeling",
    "authors": ["Yookoon Park", "Jaemin Cho", "Gunhee Kim."],
    "venue": "Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Lan-",
    "year": 2018
  }, {
    "title": "Glove: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher Manning."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1532–1543. Associa-",
    "year": 2014
  }, {
    "title": "Semi-supervised sequence tagging with bidirectional language models",
    "authors": ["Matthew Peters", "Waleed Ammar", "Chandra Bhagavatula", "Russell Power."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume",
    "year": 2017
  }, {
    "title": "Multilingual part-of-speech tagging with bidirectional long short-term memory models and auxiliary loss",
    "authors": ["Barbara Plank", "Anders Søgaard", "Yoav Goldberg."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Lin-",
    "year": 2016
  }, {
    "title": "Hidden conditional random fields",
    "authors": ["Ariadna Quattoni", "Sybor Wang", "Louis-Philippe Morency", "Morency Collins", "Trevor Darrell."],
    "venue": "IEEE transactions on pattern analysis and machine intelligence, 29(10).",
    "year": 2007
  }, {
    "title": "Semi-supervised multitask learning for sequence labeling",
    "authors": ["Marek Rei."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 2121–2130. Association for Computational Linguis-",
    "year": 2017
  }, {
    "title": "Variational inference with normalizing flows",
    "authors": ["Danilo Rezende", "Shakir Mohamed."],
    "venue": "Proceedings of the 32nd International Conference on Machine Learning, volume 37 of Proceedings of Machine Learning Research, pages 1530–1538, Lille,",
    "year": 2015
  }, {
    "title": "Piecewise latent variables for neural variational text processing",
    "authors": ["Iulian Vlad Serban", "Alexander G. Ororbia", "Joelle Pineau", "Aaron Courville."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages",
    "year": 2017
  }, {
    "title": "Semi-supervised condensed nearest neighbor for part-of-speech tagging",
    "authors": ["Anders Søgaard."],
    "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies, pages 48–52, Portland, Oregon,",
    "year": 2011
  }, {
    "title": "Learning structured output representation using deep conditional generative models",
    "authors": ["Kihyuk Sohn", "Honglak Lee", "Xinchen Yan."],
    "venue": "C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances in Neural Information",
    "year": 2015
  }, {
    "title": "Efficient graph-based semisupervised learning of structured tagging models",
    "authors": ["Amarnag Subramanya", "Slav Petrov", "Fernando Pereira."],
    "venue": "Proceedings of the 2010 Conference on Empirical Methods in Natural Language Processing, pages",
    "year": 2010
  }, {
    "title": "Sequential labeling with latent variables: An exact inference algorithm and its efficient approximation",
    "authors": ["Xu Sun", "Jun’ichi Tsujii"],
    "venue": "In Proceedings of the 12th Conference of the European Chapter of the ACL (EACL",
    "year": 2009
  }, {
    "title": "Introduction to the conll-2003 shared task: Language-independent named entity recognition",
    "authors": ["Erik F Tjong Kim Sang", "Fien De Meulder."],
    "venue": "Proceedings of the seventh conference on Natural language learning at HLT-NAACL 2003-Volume 4,",
    "year": 2003
  }, {
    "title": "Vae with a vampprior",
    "authors": ["Jakub Tomczak", "Max Welling."],
    "venue": "Proceedings of the Twenty-First International Conference on Artificial Intelligence and Statistics, volume 84 of Proceedings of Machine Learning Research, pages 1214–1223, Playa",
    "year": 2018
  }, {
    "title": "Transfer learning for sequence tagging with hierarchical recurrent networks",
    "authors": ["Zhilin Yang", "Ruslan Salakhutdinov", "William W Cohen."],
    "venue": "Proceedings of the 5th International Conference on Learning Representations (ICLR 2017).",
    "year": 2017
  }, {
    "title": "Improved variational autoencoders for text modeling using dilated convolutions",
    "authors": ["Zichao Yang", "Zhiting Hu", "Ruslan Salakhutdinov", "Taylor Berg-Kirkpatrick."],
    "venue": "Proceedings of the 34th International Conference on Machine Learning, vol-",
    "year": 2017
  }, {
    "title": "Variational neural machine translation",
    "authors": ["Biao Zhang", "Deyi Xiong", "jinsong su", "Hong Duan", "Min Zhang"],
    "venue": "In Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing,",
    "year": 2016
  }, {
    "title": "Semi-supervised structured prediction with neural crf autoencoder",
    "authors": ["Xiao Zhang", "Yong Jiang", "Hao Peng", "Kewei Tu", "Dan Goldwasser."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 1701–1711.",
    "year": 2017
  }, {
    "title": "Multispace variational encoder-decoders for semisupervised labeled sequence transduction",
    "authors": ["Chunting Zhou", "Graham Neubig."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume",
    "year": 2017
  }],
  "id": "SP:1294c8ab3a5c72457c5c3e205308fd0b01abe0ff",
  "authors": [{
    "name": "Mingda Chen",
    "affiliations": []
  }, {
    "name": "Qingming Tang",
    "affiliations": []
  }, {
    "name": "Karen Livescu",
    "affiliations": []
  }, {
    "name": "Kevin Gimpel",
    "affiliations": []
  }],
  "abstractText": "We introduce a family of multitask variational methods for semi-supervised sequence labeling. Our model family consists of a latentvariable generative model and a discriminative labeler. The generative models use latent variables to define the conditional probability of a word given its context, drawing inspiration from word prediction objectives commonly used in learning word embeddings. The labeler helps inject discriminative information into the latent space. We explore several latent variable configurations, including ones with hierarchical structure, which enables the model to account for both label-specific and word-specific information. Our models consistently outperform standard sequential baselines on 8 sequence labeling datasets, and improve further with unlabeled data.",
  "title": "Variational Sequential Labelers for Semi-Supervised Learning"
}