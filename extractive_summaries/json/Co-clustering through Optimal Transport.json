{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Cluster analysis aims to gather data instances into groups, called clusters, where instances within one group are similar among themselves while instances in different groups are as dissimilar as possible. Clustering methods have become more and more popular recently due to their ability to provide new insights into unlabeled data that may be difficult or even impossible to capture for a human being.\n1CNRS, LIPN, Université Paris 13 - Sorbonne Paris Cité, France 2CNRS UMR 5220 - INSERM U1206, Univ. Lyon 1, INSA Lyon, F-69621 Villeurbanne, France 3CNRS, LJK, Univ. Grenoble-Alpes, France. Correspondence to: Charlotte Laclau <charlotte.laclauc@univ-grenoble-alpes.fr>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\n0The first author of this paper is now a post-doc in CNRS, LIG, Univ. Grenoble-Alpes, France\nClustering methods, however, do not take into account the possible existing relationships between the features that describe the data instances. For example, one may consider a data matrix extracted from text corpus where each document is described by the terms appearing in it. In this case, clustering documents may benefit from the knowledge about the correlation that exists between different terms revealing their probability of appearing in the same documents. This idea is the cornerstone of co-clustering (Hartigan, 1972; Mirkin, 1996) where the goal is to perform clustering of both data points and features simultaneously. The obtained latent structure of data is composed of blocks usually called co-clusters. Applications of co-clustering include but are not limited to recommendation systems (George & Merugu, 2005; Deodhar & Ghosh, 2010; Xu et al., 2012), gene expression analysis (Cheng et al., 2008; Hanisch et al., 2002) and text mining (Dhillon et al., 2003a; Wang et al., 2009). As a result, these methods are of an increasing interest to the data mining community.\nCo-clustering methods are often distinguished into probabilistic methods (e.g., (Dhillon et al., 2003b; Banerjee et al., 2007; Nadif & Govaert, 2008; Wang et al., 2009; Shan & Banerjee, 2010)) and metric based (e.g., (Rocci & Vichi, 2008; Ding et al., 2006)) methods. Probabilistic methods usually make an assumption that data was generated as a mixture of probability density functions where each one of them corresponds to one co-cluster. The goal then is to estimate the parameters of the underlying distributions and the posterior probabilities of each co-cluster given the data. Metric based approaches proceed in a different way and rely on introducing and optimizing a criterion commonly taking into account intra- and inter-block variances. This criterion, in its turn, is defined using some proper metric function that describes the geometry of data in the most precise way possible. Both metric and probabilistic approaches are known to have their own advantages and limitations: despite being quite efficient in modeling the data distribution, probabilistic methods are computationally demanding and hardly scalable; metric methods are less computationally demanding but present the need to choose the “right” distance that uncovers the underlying latent co-clusters’ structure based on available data. Furthermore, the vast majority of co-clustering methods require the number of co-clusters to be set in advance. This is usu-\nally done using the computationally expensive exhaustive search over a large number of possible pairs of row and column clusters as in (Keribin et al., 2015; Wyse & Friel, 2012; Wyse et al., 2014).\nIn this paper, we address the existing issues of co-clustering methods described above by proposing a principally new approach that efficiently solves the co-clustering problem from both qualitative and computational points of view and allows the automatic detection of the number of coclusters. We pose the co-clustering problem as the task of transporting the empirical measure defined on the data instances to the empirical measure defined on the data features. The intuition behind this process is very natural to co-clustering and consists in capturing the associations between instances and features of the data matrix. The solution of optimal transportation problem is given by a doublystochastic coupling matrix which can be considered as the approximated joint probability distribution of the original data. Furthermore, the coupling matrix can be factorized into three terms where one of them reflects the posterior distribution of data given co-clusters while two others represent the approximated distributions of data instances and features. We use these approximated distributions to obtain the final partitions. We also derive a kernelized version of our method that contrary to the original case, is based on an optimal transportation metric defined on the space of dissimilarity functions.\nThe main novelty of our work is two-fold. To the best of our knowledge, the proposed approach is a first attempt to apply entropy regularized optimal transport for coclustering and to give its solution a co-clustering interpretation. While Wasserstein distance has already been adapted to design clustering algorithms (Cuturi & Doucet, 2014; Irpino et al., 2014), our idea is to concentrate our attention on the solution of the optimal transport given by the coupling matrix and not to minimize the quantization error with respect to (w.r.t.) Wasserstein distance. We also note that using entropy regularization leads to a very efficient algorithm that can be easily parallelized (Cuturi, 2013). Second, we show that under some plausible assumptions the density estimation procedure appearing from the use of the optimal transport results in the variational inference problem with the minimization of the reversed Kullback-Leibler divergence. The important implications of this difference w.r.t. other existing methods are explained in Section 3.\nThe rest of this paper is organized as follows. In Section 2, we briefly present the discrete version of the optimal transportation problem and its entropy regularized version. Section 3 proceeds with the description of the proposed approach, its theoretical analysis and algorithmic implementation. In Section 4, we evaluate our approach on synthetic and real-world data sets and show that it is accurate and\nsubstantially more efficient than the other state-of-the-art methods. Last section concludes the paper and gives a couple of hints for possible future research."
  }, {
    "heading": "2. Background and notations",
    "text": "In this section, we present the formalization of the MongeKantorovich (Kantorovich, 1942) optimization problem and its entropy regularized version."
  }, {
    "heading": "2.1. Optimal transport",
    "text": "Optimal transportation theory was first introduced in (Monge, 1781) to study the problem of resource allocation. Assuming that we have a set of factories and a set of mines, the goal of optimal transportation is to move the ore from mines to factories in an optimal way, i.e., by minimizing the overall transport cost.\nMore formally, given two empirical probability measures1 µ̂S = 1 NS ∑NS i=1 δxSi and µ̂T = 1 NT ∑NT i=1 δxTi defined as uniformly weighted sums of Dirac with mass at locations supported on two point sets XS = {xSi ∈ Rd} NS i=1 and XT = {xTi ∈ Rd} NT i=1, the Monge-Kantorovich problem consists in finding a probabilistic coupling γ defined as a joint probability measure over XS × XT with marginals µ̂S and µ̂T that minimizes the cost of transport w.r.t. some metric l : Xs ×Xt → R+:\nmin γ∈Π(µ̂S ,µ̂T )\n〈M,γ〉F\nwhere 〈·,·〉F is the Frobenius dot product, Π(µ̂S , µ̂T ) = {γ ∈ RNS×NT+ |γ1 = µ̂S , γT1 = µ̂T } is a set of doubly stochastic matrices and M is a dissimilarity matrix, i.e., Mij = l(x S i ,x T j ), defining the energy needed to move a probability mass from xSi to x T j . This problem admits a unique solution γ∗ and defines a metric on the space of probability measures (called the Wasserstein distance) as follows:\nW (µ̂S , µ̂T ) = min γ∈Π(µ̂S ,µ̂T )\n〈M,γ〉F .\nThe Wasserstein distance has been successfully used in various applications, for instance: computer vision (Rubner et al., 2000), texture analysis (Rabin et al., 2011), tomographic reconstruction (I. Abraham & Carlier, 2016), domain adaptation (Courty et al., 2014), metric learning (Cuturi & Avis, 2014) and clustering (Cuturi & Doucet, 2014; Irpino et al., 2014). This latter application is of a particular interest as Wasserstein distance is known to be a very efficient metric due to its capability of taking into account the\n1Due space limitation, we present only the discrete version of optimal transport. For more details on the general continuous case and the convergence of empirical measures, we refer the interested reader to the excellent monograph by (Villani, 2009).\ngeometry of data through the pairwise distances between samples. The success of algorithms based on this distance is also due to (Cuturi, 2013) who introduced an entropy regularized version of optimal transport that can be optimized efficiently using matrix scaling algorithm. We present this regularization below."
  }, {
    "heading": "2.2. Entropic regularization",
    "text": "The idea of using entropic regularization dates back to (Schrödinger, 1931). In (Cuturi, 2013), it found its application to the optimal transportation problem through the following objective function:\nmin γ∈Π(µ̂S ,µ̂T )\n〈M,γ〉F − 1\nλ E(γ).\nSecond term E(γ) = − ∑NS ,NT i,j γi,j log(γi,j) in this equation allows to obtain smoother and more numerically stable solutions compared to the original case and converges to it at the exponential rate (Benamou et al., 2015). Another advantage of entropic regularization is that it allows to solve optimal transportation problem efficiently using Sinkhorn-Knopp matrix scaling algorithm (Sinkhorn & Knopp, 1967).\nIn the next section, we explain the main underlying idea of our approach that consists in associating data instances with features through regularized optimal transport."
  }, {
    "heading": "3. Co-clustering through optimal transport",
    "text": "In this section we show how the co-clustering problem can be casted in a principally new way and then solved using the ideas from the optimal transportation theory."
  }, {
    "heading": "3.1. Problem setup",
    "text": "Let us denote by X and Y two random variables taking values in the sets {xr}nr=1 and {yc}dc=1, respectively, where subscripts r and c correspond to rows (instances) and columns (features). Similar to (Dhillon et al., 2003b), we assume that the joint probability distribution between X and Y denoted by p(X,Y ) is estimated from the data matrix A ∈ Rn×d. We further assume that X and Y consist of instances that are distributed w.r.t. probability measures µr, µc supported on Ωr,Ωc where Ωr ⊆ Rd and Ωr ⊆ Rn, respectively.\nThe problem of co-clustering consists in jointly grouping the set of features and the set of instances into homogeneous blocks by finding two assignment functions Cr and Cc that map as follows: Cr : {x1, . . . ,xn} → {x̂1, . . . , x̂g}, Cc : {y1, . . . ,yd} → {ŷ1, . . . , ŷm} where g and m denote the number of row and columns clusters, and discrete random variables X̂ and Ŷ represent the partitions induced byX and Y , i.e., X̂ = Cr(X) = and Ŷ = Cc(Y ).\nTo use discrete optimal transport, we also define two empirical measures µ̂r and µ̂c based on X and Y as follows: µ̂r = 1 n ∑n i=1 δxi and µ̂c = 1 m ∑m i=1 δyi . We are now ready to present our method."
  }, {
    "heading": "3.2. Proposed approach",
    "text": "The main underlying idea of our approach is to use the optimal transportation presented above to find a probabilistic coupling of the empirical measures defined based on rows and columns of a given data matrix. More formally, for some fixed λ > 0 we solve the co-clustering problem through the following optimization procedure:\nγ∗λ = argminγ∈Π(µ̂r,µ̂c)〈M, γ〉F − 1\nλ E(γ), (1)\nwhere the matrix M is computed using the Euclidean distance, i.e., Mij = ‖xi − yj‖2. The elements of the resulting matrix γ∗λ provides us with the weights of associations between instances and features: similar instances and features correspond to higher values in γ∗λ. Our intuition is to use these weights to identify the most similar sets of rows and columns that should be grouped together to form coclusters.\nFollowing (Benamou et al., 2015), this optimization problem can be equivalently rewritten in the following way:\nmin γ∈Π(µ̂r,µ̂c)\n〈M,γ〉F − 1\nλ E(γ) =\n1 λ min γ∈Π(µ̂r,µ̂c) KL(γ‖ξλ),\nwhere ξλ = e−λM is the Gibbs kernel.\nFinally, we can rewrite the last expression as follows:\nmin γ∈Π(µ̂r,µ̂c) KL(γ‖ξλ) = min γ∈C KL(γ‖ξλ),\nwhere C = C1 ∩ C2 is the intersection of closed convex subsets given by C1 = {γ ∈ Rd×d|γ1 = µ̂r} and C2 = {γ ∈ Rd×d|γT1 = µ̂c}. The solution of the entropy regularized optimal transport can be obtained using Sinkhorn-Knopp algorithm and has the following form (Benamou et al., 2015):\nγ∗λ = diag(α)ξλdiag(β), (2)\nwhere α and β are the scaling coefficients of the Gibbs kernel ξλ.\nIn what follows, we show that under some plausible assumptions, we can interpret these two vectors as approximated rows and columns probability density functions."
  }, {
    "heading": "3.3. Connection to variational inference",
    "text": "In order to justify our approach from the theoretical point of view, we first explain how the obtained solution γ∗\ncan be used for co-clustering. As mentioned in (Dhillon et al., 2003b) and later in (Banerjee et al., 2007), the co-clustering can be seen as a density estimation problem where the goal is to approximate the real density p(X,Y ) by a simpler one depending on the obtained co-clustering in a way that it preserves the loss in the mutual information given by I(X,Y ) − I(X̂, Ŷ ) where I(X,Y ) = ∫ XY\np(x, y) log p(x,y)p(x)p(y)dxdy is the mutual information. This quantity is further shown to be equal to the Kullback-Leibler divergence between the original distribution p(X,Y ) and q(X,Y ) where the latter has the following form:\nq(x, y) = p(y|ŷ)p(x̂, ŷ)p(x|x̂).\nFrom this point, one may instantly see that the solution of the optimal transport problem γ∗ has a very similar form as it also represents the joint probability distribution that approximates the original probability distribution p(x, y) given by the Gibbs measure ξλ and also factorizes into three terms. The most important difference, however, lies in the asymmetry of the KL divergence: while (Dhillon et al., 2003b) and (Banerjee et al., 2007) concentrate on minimizing KL(p(X,Y )‖q(X,Y )), our idea is different and consists in minimizing KL(q(X,Y )‖p(X,Y )). This approach is known in the literature as the variational inference (Bishop, 2006) and exhibits a totally different behaviour compared to the minimization of KL(p(X,Y )‖q(X,Y )). As shown by (Bishop, 2006), in variational inference the estimated distribution q(X,Y ) concentrates on the modes of data and remains compact, while the minimizer of KL(p(X,Y )‖q(X,Y )) tends to cover the whole surface of the original density and to overestimate its support. As X , Y and X̂ and Ŷ represent the observed and unobserved variables, respectively, the natural goal is to try to estimate the distribution p(X,Y |X̂, Ŷ ) of the data given the obtained co-clusters by the simpler variational distribution q(X,Y ). However, as the maximisation of p(X,Y |X̂, Ŷ ) is computationally impossible, it is common to introduce a free distribution q(·, ·) on the parameters X̂ and Ŷ in order to obtain the following decomposition:\nlog p(X,Y )=L(q(X̂, Ŷ ))+KL(q(X̂, Ŷ )‖p(X̂, Ŷ |X,Y )),\nwhere the lower bound L(q(X̂, Ŷ )) = ∫ x̂∈X̂ ∫ ŷ∈Ŷ q(x̂, ŷ) log p(x, y, x̂, ŷ) q(x̂, ŷ) dx̂dŷ\nis maximized when the KL divergence is minimized.\nNow, if we assume that p(X̂, Ŷ |X,Y ) follows the Gibbs distribution, i.e. p(X̂, Ŷ |X,Y ) ∝ e−λM(x,y), we can consider the original formulation of the regularized optimal transport as the variational inference problem:\nmin q KL(q(X̂, Ŷ )‖p(X̂, Ŷ |X,Y )) = min γ KL(γ‖ξλ),\nwhere the optimal coupling γ equals to the estimated joint probability q(X̂, Ŷ ).\nAt this point, we know that the coupling matrix can be seen as an approximation to the original unknown posterior density function but the question how one can use it to obtain the clustering of rows and columns has not been answered yet. In order to solve the variational inference problem, it is usually assumed that the variables x̂, ŷ are independent and thus the variational distribution q(x̂, ŷ) factorizes as q(x̂, ŷ) = q(x̂)q(ŷ). This assumption, however, goes against the whole idea of co-clustering that relies on the existence of a deep connection between these two variables.\nTo this end, we propose to consider the factorization of q(x̂, ŷ) that has the following form\nq(x̂, ŷ) = q(x)q(x̂, ŷ|x, y)q(y).\nThis particular form follows the idea of structured stochastic variational inference proposed in (Hoffman & Blei, 2015) where a term depicting the conditional distribution between hidden and observed variables is added to the fully factorized traditional setting presented above. As stated in (Hoffman & Blei, 2015), this term allows arbitrary dependencies between observed and hidden variables which can increase the fidelity of the approximation.\nFollowing (Bishop, 2006), the optimal estimated densities q(x) and q(y) are controlled by the direction of the smallest variance of p(x) and p(y) respectively. Furthermore, q(x) and q(y) are proportional to the joint densities p(ŷ, y) and p(x̂, x), i.e., q(x) ∝ p(ŷ, y) and q(y) ∝ p(x̂, x). Bearing in mind the equivalence between γ∗λ and q(x̂, ŷ), this brings us to the following important conclusions: (1) the matrices diag(α) and diag(β) can be seen as the approximated densities p(Ŷ , Y ) and p(X̂,X); (2) vectors α and β represent the approximated densities p(X) and p(Y ) obtained by summing X and Y out of p(X̂,X) and p(Ŷ , Y ), respectively.\nAccording to (Laird, 1978), the non-parametric estimate of the mixing distribution is a piecewise step function where the number of steps depend on the number of components in the mixture. In the cluster analysis, we can assume that p(X) and p(Y ) consist of g and m components, respectively. Then, our goal is to detect these steps based on the estimates given byα and β to obtain the desired partitions."
  }, {
    "heading": "3.4. Kernelized version and Gromov-Wasserstein distance",
    "text": "In this part, we introduce the kernelized version of our method and compare it to the original formulation of our algorithm. In order to proceed, we first define two similarity matrices Kr ∈ Rn×n and Kc ∈ Rd×d associated to empirical measures µ̂r, µ̂c thus forming metric-measure\nspaces as in (Mémoli, 2011). Matrices Kr and Kc are defined by calculating the pairwise distances or similarities between rows and columns, respectively, without the restriction of them being positive or calculated based on a proper distance function satisfying the triangle inequality. The entropic Gromov-Wasserstein discrepancy in this case is defined as follows (Peyré et al., 2016):\nGW(Kr,Kc, µ̂r, µ̂c) = min γ∈Πµ̂r,µ̂c ΓKr,Kc(γ)− λE(γ)\n= min T∈Πµ̂r,µ̂c ∑ i,j,k,l L(Kri,j ,Kck,l)γi,jγk,l − λE(γ).\nwhere γ is a coupling matrix between two similarity matrices and L : R × R → R+ is an arbitrary lost-function, usually the quadratic-loss or Kullback-Leibler divergence.\nBased on this definition, one may define the problem of the entropic Gromov-Wasserstein barycenters for similarity or distance matrices Kr and Kc as follows:\nmin K,γr,γc ∑ i={r,c} εiΓK,Ki(γi)− λE(γi) (3)\nwhere K is the computed barycenter and γr ∈ Πµ̂,µ̂r , γc ∈ Πµ̂,µ̂c are the coupling matrices that align it with Kr and Kc, respectively. εi are the weighting coefficients summing to one, i.e., ∑ i={r,c} εi = 1 that determine our interest in more accurate alignment between Kr and K or Kc and K.\nThe intuition behind this optimization procedure for coclustering with respect to original formulation given in (1) is the following: while in (1) we align rows with columns directly, in (3) our goal is to do it via an intermediate representation given by the barycenter K that is optimally aligned with both Kr and Kc. In this case, we obtain the solutions γr and γc that, similar to (2), can be decomposed as follows:\nγ∗r = diag(αr)ξrdiag(βr), γ ∗ c = diag(αc)ξcdiag(βc)\nwhere ξr = e−λMr and ξc = e−λMc are Gibbs kernels calculated between the barycenter and row and column similarity matrices using any arbitrary loss-function L as explained before. Finally, based on the analysis presented above, we further use vectors βr and βc to derive row and column partitions."
  }, {
    "heading": "3.5. Detecting the number of clusters",
    "text": "In order to detect the steps (or jumps) in the approximated marginals, we propose to adapt a procedure introduced in (Matei & Meignen, 2012) for multiscale denoising of piecewise smooth signals. This method is of particular interest for us as it determines the significant jumps in the vectors α and β without knowing their number and location, nor a specific threshold to decide the significance\nof a jump. As the proposed procedure deals with nondecreasing functions, we first sort the values of α and β in the ascending order. Since the procedure is identical for both vectors, we only describe it for the vector α.\nWe consider that the elements {αi}ni=1 of α are the local averages of a piecewise continuous function v : [0, 1[⊂ R → R on the intervals Ini = [i/n, (i + 1)/n[ defined by the uniform subdivision of step 1/n of the interval [0, 1[. More precisely: αni = n ∫ Ini v(t)dt, i = 0, . . . , n− 1. The detection strategy is based on the following cost function: F (Ini ) = ∑i l=i−1 |αnl+1 − αnl | defined for each interval. Therefore, we get the list of the interval suspicious to contain a jump for the subdivision of order n as follows:\nLn = {i∗; i∗ = argmaxiF(Ini )}.\nThis detection should be refined in order to get only significant jumps in our vector α. To this end we use the multiscale representation of α as in (Harten, 1989) and we perform this detection on each scale. On the first scale, we get a coarse version of α by averaging:\nα n/2 i =\n1 2 (αn2i + α n 2i+1), i = 0, . . . , n/2− 1.\nNow, by considering the coarse version of α, we obtain a second list Ln/2 of suspicious intervals as before. After that, these two lists merge in the list Ljumps as follows: a jump will be considered in the interval In2i or I n 2i+1 if the interval In/2i is also detected as suspicious at the coarse scale. This procedure is iterated [log2 n] times and a jump is observed if a chain of detection exists from fine to coarse scales. Finally, the number of clusters is obtained by g = |Ljumps|+ 1."
  }, {
    "heading": "3.6. Algorithmic implementation",
    "text": "We now briefly summarize the main steps of both CCOT and CCOT-GW methods and discuss their peculiarities with respect to each other. The pseudocode of both approaches in Matlab are presented in Algorithm 1 and Algorithm 2, respectively.\nCCOT First step of our algorithm consists in calculating the cost matrix M and using it to obtain the optimal coupling matrix γ∗λ by applying the regularized optimal transport. In order to calculate M , row and column instances should both lie in a space of the same dimension. This condition, however, is verified only if the matrix A is squared which occurs rarely in the real-world applications. To overcome this issue, we first subsample the original data set A in a way that allows us to equalize the number of rows and columns and operate with two sets of the same dimension. If we assume that n > d then this new reduced data set is denoted by D ∈ Rd×d. We repeat the sampling procedure until every individual is picked at least once.\nThe next step is to perform for each i = 1, . . . , ns the jump detection on the sorted vectorsαi and βi to obtain two lists of the jumps locations Lαijumps and L βi jumps and to define the number of row and column clusters g and m. By using them, we obtain the resulting row partition:\nCir(xr) =  1, r ≤ Lαijumps(1) . . . k, Lαijumps(k − 1) < r ≤ L αi jumps(k)\n. . . |Lαijumps|+ 1, r > L αi jumps(|L αi jumps|).\nThe partition for columns Cic(yc) is obtained in the same way. Finally, we apply the majority vote over all samples partitions to obtain Cr and Cc. Regarding complexity, both Sinkhorn-Knopp algorithm used to solve the regularized optimal transport (Knight, 2008) and the proposed jump detection techniques are known to converge at the linear rate multiplied by the number of samples, i.e.,O(nsd). On the other hand, the calculation of modes of the clustering obtained on the generated samples for both features and data instances has the complexityO(ns(n+d)). In the end, the complexity of the whole algorithm is O(ns(n + d)). We also note that in the real-world applications, we usually deal with scenarios where n d (“big data”) or d n (“small” data) thus reducing the overall complexity to O(nsn) and O(nsd), respectively. This makes our approach even more computationally attractive.\nAlgorithm 1 Co-clustering through Optimal Transport (CCOT) Input : A - data matrix, λ - regularization parameter, ns - number of sampling Output: Cr, Cc - partition matrices for rows and columns, g,m - number of row and column clusters [n, d] = size(Z) for i = 1 to ns do\nDi = datasample(Z, d) Mi ← pdist2(Di, DTi) [αi,βi, γ\n∗]← optimal transport(Mi, λ) [Lαijumps, C i r, g]← jump detection(sort(αi)) [Lβijumps, C i c, m]← jump detection(sort(βi))\nCr ← mode(Cir) Cc ← mode(Cic)\nCCOT-GW As it can be seen from Algorithm 2, CCOT-GW allows to overcome the important disadvantage of CCOT that consists in the need to perform sampling to cluster all data objects. On the other hand, the computational complexity of CCOT is only O(nsd), while for CCOT-GW it scales as O(n2d + d2n). We also note that CCOT-GW offers a great flexibility in terms of the possible data representation used at its input. One may easily consider using any arbitrary kernel function to calculate similarity matrices or even learn them beforehand using multiple-kernel learning approaches.\nAlgorithm 2 Co-clustering through Optimal Transport with Gromov-Wasserstein barycenters (CCOT-GW) Input : A - data matrix, λ - regularization parameter, εr , εc - weights for barycenter calculation Output: Cr, Cc - partition matrices for rows and columns, g,m - number of row and column clusters Kr ← pdist2(Z, Z) Kc ← pdist2(ZT, ZT) [βr,βc, γ ∗ r , γ ∗ c ]← gw barycenter(Kr, Kc, λ, εr, εc) [Lβrjumps, Cr, g]← jump detection(sort(βr)) [Lβcjumps, Cc, m]← jump detection(sort(βc))"
  }, {
    "heading": "4. Experimental evaluations",
    "text": "In this section, we provide empirical evaluation for the proposed algorithms."
  }, {
    "heading": "4.1. Synthetic data",
    "text": "Simulation setting We simulate data following the generative process of the Gaussian Latent Block Models (for details see (Govaert & Nadif, 2013)) and we consider four scenarios with different number of co-clusters, degree of separation and size. Table 1 and Figure 1 present the characteristics of theta simulated data sets and their visualization showing the different co-clustering structures.\nWe use several state-of-the-art co-clustering algorithms as baselines including ITCC (Dhillon et al., 2003b), Double K-Means (DKM) (Rocci & Vichi, 2008), Orthogonal Nonnegative Matrix Tri-Factorizations (ONTMF) (Ding et al., 2006), the Gaussian Latent Block Models (GLBM) (Nadif & Govaert, 2008; Govaert & Nadif, 2013) and Residual Bayesian Co-Clustering (RBC) (Shan & Banerjee, 2010).\nWe also report the results of K-means and NMF, run on both modes of the data matrix, as clustering baseline. To assess the performance of all compared methods, we compute the co-clustering error (CCE) (Patrikainen & Meila, 2006) defined as follows:\nCCE((z,w), (ẑ, ŵ)) = e(z, ẑ)+e(w, ŵ)−e(z, ẑ)×e(w, ŵ),\nwhere ẑ and ŵ are the partitions of instances and variables estimated by the algorithm; z and w are the true partitions and e(z, ẑ) (resp. e(w, ŵ)) denotes the error rate, i.e., the proportion of misclassified instances (resp. features).\nFor all configurations, we generate 100 data sets and compute the mean and standard deviation of the CCE over all sets. As all the approaches we compared with are very sensitive to the initialization, we run them 50 times with random initializations and retain the best result according to the corresponding criterion. RBC is initialized with Kmeans. Regarding CCOT we set ns to 1000 for all configurations except D4 which has the same number of rows and columns, and therefore does not require any sampling. For CCOT-GW, we use Gaussian kernels for both rows and columns with σ computed as the mean of all pairwise Euclidean distances between vectors (Kar & Jain, 2011). Finally, we let both CCOT and CCOT-GW detect automatically the number of co-clusters, while for all other algorithms we set the number of clusters to its true value.\nCo-clustering performance We report the mean (and standard deviation) of co-clustering errors obtained in Table 2. Based on these results, we observe that on D1, which has a clear block structure, all algorithms perform equally well, however CCOT-GW gives the best results, closely followed by CCOT and K-means. Regarding D2, D3 and D4, which have more complicated structure than D1, both CCOT and CCOT-GW significantly outperform all other algorithms and this difference is all the more important on D3 and D4 where some of the compared algorithms are unable to find a partition with the desired number of clusters.\nFurthermore, we argued that one of the strengths of our method is its ability to detect automatically the number of co-clusters by applying a jump detection algorithm on α and β. From Figure 2 one can observe that the plots\nof these vectors, obtained with CCOT, with their elements sorted in the ascending order reveal clear steps that correspond to the correct number of clusters and also illustrate their proportions and the degree of overlapping. The same observation is valid for CCOT-GW. Both approaches correctly identified the number of clusters in most cases and CCOT is slightly more accurate than CCOT-GW when the proportions of co-clusters are unbalanced.\nTo summarize, CCOT and CCOT-GW outperform all the other baselines for the considered data structures and present two important advantages: (1) they do not suffer from the initialization issues, (2) they are able to detect automatically the number co-clusters."
  }, {
    "heading": "4.2. MovieLens",
    "text": "Data and setting MOVIELENS-100K2 is a popular benchmark data set that consists of user-movie ratings, on a scale of one to five, collected from a movie recommendation service gathering 100,000 ratings from 943 users on 1682 movies. In the context of co-clustering, our goal is to find homogeneous subgroups of users and films in order to further recommend previously unseen movies that were\n2https://grouplens.org/datasets/movielens/100k/\nhighly rated by the users from the same group.\nWe set the regularization parameters for CCOT and CCOT-GW using the cross-validation; the number of samplings for CCOT is set to 500 (as the dimensions of the data set are quite balanced); the weights for the barycenter in CCOT-GW are set to ε = (0.5, 0.5).\nResults In what follows we only present figures and results obtained by CCOT-GW as both algorithms return the same number of blocks and the partitions are almost identical (with a normalized mutual information between partitions above 0.8). CCOT-GW automatically detects a structure consisting of 9× 15 blocks, that corresponds to 9 user clusters and 15 movie clusters. From Figure 3, one can observe that the users and the movies are almost equally distributed across clusters, except for two user and three movie clusters which have a larger size than others.\nFigure 4 shows the original data set as well as a summarized version where each block is represented by its mean rating value (the lighter the block, the higher the ratings), revealing a structure into homogeneous groups. One can observe that the first movie cluster consists of films for which all users agree on giving high ratings (most popular movies) while the last movie cluster consists of the movies with very low ratings. We also report the 5 best rated movies in those two clusters in Table 3. One can easily see that popular movies, such that both Star Wars episodes are in M1 while M5 is composed of movies that were less critically acclaimed.\nWe can make similar observations for the interpretation of user clusters. For instance, the last two user clusters include users that tend to give less good ratings to movies than the average population. Also, we note that block (6, 10) cor-\nresponds to users who liked movies from M10 better than the rest of the users. These observations are also very similar to the results reported by (Banerjee et al., 2007), where the authors proposed a detailed study of a 10 × 20 blocks structure for this data set. Additional results can be found in the Supplementary material."
  }, {
    "heading": "5. Conclusions and future perspectives",
    "text": "In this paper we presented a novel approach for coclustering based on the entropy regularized optimal transport. Our method is principally different from other coclustering methods and consists in finding a probabilistic coupling of the empirical measures defined based on the data instances and features. We showed how this procedure can be seen as the variational inference problem and that the inferred distribution can be used to obtain the row and feature partitions. The resulting algorithm is not only more accurate than other state-of-the-art methods but also fast and capable of automatically detecting the number of co-clusters. We also presented an extended version of our algorithm that makes use of the optimal transportation distance defined on similarity matrices associated to the rows’ and columns’ empirical measures.\nIn the future, our work can be continued in multiple directions. First, we would like to extend our method in order to deal with the online setting where the goal is to classify a new previously unseen observation without the need to do the co-clustering of the data set that includes it. This can be done using a recent approach proposed in (Perrot et al., 2016) that allows to update the learned coupling matrix using the out-of-sample observations without recomputing it using all the data. We believe that this extension will make our algorithm attractive for the exploitation in real-time industrial recommendation systems due to its computational efficiency. We would also like to study the generalization properties of our algorithm in a spirit similar to the results obtained in (Maurer & Pontil, 2010). This latter work presents a rare case where the generalization bounds are derived for some famous unsupervised learning algorithms."
  }, {
    "heading": "Acknowledgements",
    "text": "This work has been supported by the ANR project COCLICO, ANR-12-MONU-0001."
  }],
  "year": 2017,
  "references": [{
    "title": "A generalized maximum entropy approach to bregman co-clustering and matrix approximation",
    "authors": ["Banerjee", "Arindam", "Dhillon", "Inderjit", "Ghosh", "Joydeep", "Merugu", "Srujana", "Modha", "Dharmendra S"],
    "venue": "Journal of Machine Learning Research,",
    "year": 1919
  }, {
    "title": "Iterative Bregman Projections for Regularized Transportation Problems",
    "authors": ["Benamou", "Jean-David", "Carlier", "Guillaume", "Cuturi", "Marco", "Nenna", "Luca", "Peyré", "Gabriel"],
    "venue": "SIAM Journal on Scientific Computing,",
    "year": 2015
  }, {
    "title": "Pattern Recognition and Machine Learning (Information Science and Statistics)",
    "authors": ["Bishop", "Christopher M"],
    "year": 2006
  }, {
    "title": "Identification of coherent patterns in gene expression data using an efficient biclustering algorithm and parallel coordinate visualization",
    "authors": ["Cheng", "Kin-On", "Law", "Ngai-Fong", "Siu", "Wan-Chi", "Liew", "Alan W"],
    "venue": "BMC Bioinformatics,",
    "year": 2008
  }, {
    "title": "Domain adaptation with regularized optimal transport",
    "authors": ["Courty", "Nicolas", "Flamary", "Rémi", "Tuia", "Devis"],
    "venue": "In Proceedings ECML/PKDD",
    "year": 2014
  }, {
    "title": "Sinkhorn distances: Lightspeed computation of optimal transport",
    "authors": ["Cuturi", "Marco"],
    "venue": "In Proceedings NIPS, pp. 2292–2300,",
    "year": 2013
  }, {
    "title": "Ground metric learning",
    "authors": ["Cuturi", "Marco", "Avis", "David"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2014
  }, {
    "title": "Fast computation of wasserstein barycenters",
    "authors": ["Cuturi", "Marco", "Doucet", "Arnaud"],
    "venue": "In Proceedings ICML,",
    "year": 2014
  }, {
    "title": "Scoal: A framework for simultaneous co-clustering and learning from complex data",
    "authors": ["M. Deodhar", "J. Ghosh"],
    "venue": "ACM Transactions on Knowledge Discovery from Data,",
    "year": 2010
  }, {
    "title": "A divisive information theoretic feature clustering algorithm for text classification",
    "authors": ["Dhillon", "Inderjit S", "Mallela", "Subramanyam", "Kumar", "Rahul"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2003
  }, {
    "title": "Information-theoretic co-clustering",
    "authors": ["Dhillon", "Inderjit S", "Mallela", "Subramanyam", "Modha", "Dharmendra S"],
    "venue": "In Proceedings ACM SIGKDD, pp",
    "year": 2003
  }, {
    "title": "Orthogonal nonnegative matrix tri-factorizations for clustering",
    "authors": ["C. Ding", "T. Li", "W. Peng", "H. Park"],
    "venue": "In Proceedings ACM SIGKDD,",
    "year": 2006
  }, {
    "title": "A scalable collaborative filtering framework based on co-clustering",
    "authors": ["T. George", "S. Merugu"],
    "venue": "In Proceedings ICDM, pp",
    "year": 2005
  }, {
    "title": "Co-clustering of biological networks and gene expression data",
    "authors": ["Hanisch", "Daniel", "Zien", "Alexander", "Zimmer", "Ralf", "Lengauer", "Thomas"],
    "venue": "BMC Bioinformatics,",
    "year": 2002
  }, {
    "title": "Eno schemes with subcell resolution",
    "authors": ["Harten", "Amiram"],
    "venue": "Journal of Computational Physics,",
    "year": 1989
  }, {
    "title": "Direct Clustering of a Data Matrix",
    "authors": ["J.A. Hartigan"],
    "venue": "Journal of the American Statistical Association,",
    "year": 1972
  }, {
    "title": "Stochastic structured variational inference",
    "authors": ["Hoffman", "Matthew D", "Blei", "David M"],
    "venue": "In Proceedings AISTATS,",
    "year": 2015
  }, {
    "title": "Tomographic reconstruction from a few views: a multimarginal optimal transport approach",
    "authors": ["I. Abraham", "R. Abraham", "M. Bergounioux", "G. Carlier"],
    "venue": "Applied Mathematics and Optimization,",
    "year": 2016
  }, {
    "title": "Dynamic clustering of histogram data based on adaptive squared wasserstein distances",
    "authors": ["Irpino", "Antonio", "Verde", "Rosanna", "De Carvalho", "Francisco de A.T"],
    "venue": "Expert Systems with Applications,",
    "year": 2014
  }, {
    "title": "On the translocation of masses",
    "authors": ["Kantorovich", "Leonid"],
    "venue": "In C.R. (Doklady) Acad. Sci. URSS(N.S.),",
    "year": 1942
  }, {
    "title": "Similarity-based learning via data driven embeddings",
    "authors": ["Kar", "Purushottam", "Jain", "Prateek"],
    "venue": "In NIPS,",
    "year": 2006
  }, {
    "title": "Estimation and selection for the latent block model on categorical data",
    "authors": ["Keribin", "Christine", "Brault", "Vincent", "Celeux", "Gilles", "Govaert", "Gérard"],
    "venue": "Statistics and Computing,",
    "year": 2015
  }, {
    "title": "The sinkhorn-knopp algorithm: Convergence and applications",
    "authors": ["Knight", "Philip A"],
    "venue": "SIAM Journal on Matrix Analysis and Applications,",
    "year": 2008
  }, {
    "title": "Nonparametric maximum likelihood estimation of a mixing distribution",
    "authors": ["N. Laird"],
    "venue": "Journal of the American Statistical Association,",
    "year": 1978
  }, {
    "title": "Nonlinear cellaverage multiscale signal representations: Application to signal denoising",
    "authors": ["Matei", "Basarab", "Meignen", "Sylvain"],
    "venue": "Signal Processing,",
    "year": 2012
  }, {
    "title": "K -dimensional coding schemes in hilbert spaces",
    "authors": ["Maurer", "Augusto", "Pontil", "Massimiliano"],
    "venue": "IEEE Trans. Information Theory,",
    "year": 2010
  }, {
    "title": "Gromov-wasserstein distances and the metric approach to object matching",
    "authors": ["Mémoli", "Facundo"],
    "venue": "Foundations of Computational Mathematics,",
    "year": 2011
  }, {
    "title": "Mathematical classification and clustering. Nonconvex optimization and its applications",
    "authors": ["Mirkin", "Boris Grigorievitch"],
    "venue": "Kluwer academic publ,",
    "year": 1996
  }, {
    "title": "Algorithms for model-based block gaussian clustering",
    "authors": ["M. Nadif", "G. Govaert"],
    "venue": "In DMIN’08, the 2008 International Conference on Data Mining,",
    "year": 2008
  }, {
    "title": "Comparing subspace clusterings",
    "authors": ["A. Patrikainen", "M. Meila"],
    "venue": "IEEE Transactions on Knowledge and Data Engineering,",
    "year": 2006
  }, {
    "title": "Mapping estimation for discrete optimal transport",
    "authors": ["Perrot", "Michaël", "Courty", "Nicolas", "Flamary", "Rémi", "Habrard", "Amaury"],
    "venue": "In NIPS,",
    "year": 2016
  }, {
    "title": "Gromov-wasserstein averaging of kernel and distance matrices",
    "authors": ["Peyré", "Gabriel", "Cuturi", "Marco", "Solomon", "Justin"],
    "venue": "In Proceedings of the 33nd International Conference on Machine Learning,",
    "year": 2016
  }, {
    "title": "Wasserstein barycenter and its application to texture mixing",
    "authors": ["Rabin", "Julien", "Peyré", "Gabriel", "Delon", "Julie", "Bernot", "Marc"],
    "venue": "In Proceedings SSVM,",
    "year": 2011
  }, {
    "title": "Two-mode multi-partitioning",
    "authors": ["R. Rocci", "M. Vichi"],
    "venue": "Computational Statistics and Data Analysis,",
    "year": 1984
  }, {
    "title": "The earth mover’s distance as a metric for image retrieval",
    "authors": ["Rubner", "Yossi", "Tomasi", "Carlo", "Guibas", "Leonidas J"],
    "venue": "International Journal on Computer Vision,",
    "year": 2000
  }, {
    "title": "Residual bayesian co-clustering for matrix approximation",
    "authors": ["Shan", "Hanhuai", "Banerjee", "Arindam"],
    "venue": "In Proceedings of the SIAM International Conference on Data Mining, SDM 2010, April",
    "year": 2010
  }, {
    "title": "Concerning nonnegative matrices and doubly stochastic matrices",
    "authors": ["Sinkhorn", "Richard", "Knopp", "Paul"],
    "venue": "Pacific Journal of Mathematics,",
    "year": 1967
  }, {
    "title": "Optimal transport : old and new",
    "authors": ["Villani", "Cédric"],
    "venue": "Grundlehren der mathematischen Wissenschaften. Springer, Berlin,",
    "year": 2009
  }, {
    "title": "Latent dirichlet bayesian co-clustering",
    "authors": ["Wang", "Pu", "Domeniconi", "Carlotta", "Laskey", "Kathryn"],
    "venue": "Machine Learning and Knowledge Discovery in Databases,",
    "year": 2009
  }, {
    "title": "Individual Comparisons by Ranking Methods",
    "authors": ["F. Wilcoxon"],
    "venue": "Biometrics Bulletin,",
    "year": 1945
  }, {
    "title": "Block clustering with collapsed latent block models",
    "authors": ["Wyse", "Jason", "Friel", "Nial"],
    "venue": "Statistics and Computing,",
    "year": 2012
  }, {
    "title": "Inferring structure in bipartite networks using the latent block model and exact ICL",
    "authors": ["Wyse", "Jason", "Friel", "Nial", "Latouche", "Pierre"],
    "venue": "ArXiv e-prints,",
    "year": 2014
  }, {
    "title": "An exploration of improving collaborative recommender systems via user-item subgroups",
    "authors": ["Xu", "Bin", "Bu", "Jiajun", "Chen", "Chun", "Cai", "Deng"],
    "venue": "In Proceedings WWW,",
    "year": 2012
  }],
  "id": "SP:b024fabc27dcce9391bfb64c1cb4800a448fd09a",
  "authors": [{
    "name": "Charlotte Laclau",
    "affiliations": []
  }, {
    "name": "Ievgen Redko",
    "affiliations": []
  }, {
    "name": "Basarab Matei",
    "affiliations": []
  }, {
    "name": "Younès Bennani",
    "affiliations": []
  }, {
    "name": "Vincent Brault",
    "affiliations": []
  }],
  "abstractText": "In this paper, we present a novel method for co-clustering, an unsupervised learning approach that aims at discovering homogeneous groups of data instances and features by grouping them simultaneously. The proposed method uses the entropy regularized optimal transport between empirical measures defined on data instances and features in order to obtain an estimated joint probability density function represented by the optimal coupling matrix. This matrix is further factorized to obtain the induced row and columns partitions using multiscale representations approach. To justify our method theoretically, we show how the solution of the regularized optimal transport can be seen from the variational inference perspective thus motivating its use for co-clustering. The algorithm derived for the proposed method and its kernelized version based on the notion of Gromov-Wasserstein distance are fast, accurate and can determine automatically the number of both row and column clusters. These features are vividly demonstrated through extensive experimental evaluations.",
  "title": "Co-clustering through Optimal Transport"
}