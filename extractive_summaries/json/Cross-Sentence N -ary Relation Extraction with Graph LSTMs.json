{
  "sections": [{
    "heading": "1 Introduction",
    "text": "Relation extraction has made great strides in newswire and Web domains. Recently, there has\n∗ This research was conducted when the authors were at Microsoft Research.\nbeen increasing interest in applying relation extraction to high-value domains such as biomedicine. The advent of $1000 human genome1 heralds the dawn of precision medicine, but progress in personalized cancer treatment has been hindered by the arduous task of interpreting genomic data using prior knowledge. For example, given a tumor sequence, a molecular tumor board needs to determine which genes and mutations are important, and what drugs are available to treat them. Already the research literature has a wealth of relevant knowledge, and it is growing at an astonishing rate. PubMed2, the online repository of biomedical articles, adds two new papers per minute, or one million each year. It is thus imperative to advance relation extraction for machine reading.\nIn the vast literature on relation extraction, past work focused primarily on binary relations in single sentences, limiting the available information. Consider the following example: “The deletion mutation on exon-19 of EGFR gene was present in 16 patients, while the L858E point mutation on exon-21 was noted in 10. All patients were treated with gefitinib and showed a partial response.”. Collectively, the two sentences convey the fact that there is a ternary interaction between the three entities in bold, which is not expressed in either sentence alone. Namely, tumors with L858E mutation in EGFR gene can be treated with gefitinib. Extracting such knowledge clearly requires moving beyond binary relations and single sentences. N -ary relations and cross-sentence extraction have received relatively little attention in the past. Prior\n1http://www.illumina.com/systems/ hiseq-x-sequencing-system.html\n2https://www.ncbi.nlm.nih.gov/pubmed\n101\nTransactions of the Association for Computational Linguistics, vol. 5, pp. 101–115, 2017. Action Editor: Mark Johnson. Submission batch: 10/2016; Revision batch: 4/2017; Published 4/2017.\nc©2017 Association for Computational Linguistics. Distributed under a CC-BY 4.0 license.\nwork on n-ary relation extraction focused on single sentences (Palmer et al., 2005; McDonald et al., 2005) or entity-centric attributes that can be extracted largely independently (Chinchor, 1998; Surdeanu and Heng, 2014). Prior work on cross-sentence extraction often used coreference to gain access to arguments in a different sentence (Gerber and Chai, 2010; Yoshikawa et al., 2011), without truly modeling inter-sentential relational patterns. (See Section 7 for a more detailed discussion.) A notable exception is Quirk and Poon (2017), which applied distant supervision to general cross-sentence relation extraction, but was limited to binary relations.\nIn this paper, we explore a general framework for cross-sentence n-ary relation extraction, based on graph long short-term memory networks (graph LSTMs). By adopting the graph formulation, our framework subsumes prior approaches based on chain or tree LSTMs, and can incorporate a rich set of linguistic analyses to aid relation extraction. Relation classification takes as input the entity representations learned from the entire text, and can be easily extended for arbitrary relation arity n. This approach also facilitates joint learning with kindred relations where the supervision signal is more abundant.\nWe conducted extensive experiments on two important domains in precision medicine. In both distant supervision and supervised learning settings, graph LSTMs that encode rich linguistic knowledge outperformed other neural network variants, as well as a well-engineered feature-based classifier. Multitask learning with sub-relations led to further improvement. Syntactic analysis conferred a significant benefit to the performance of graph LSTMs, especially when syntax accuracy was high.\nIn the molecular tumor board domain, PubMedscale extraction using distant supervision from a\nsmall set of known interactions produced orders of magnitude more knowledge, and cross-sentence extraction tripled the yield compared to single-sentence extraction. Manual evaluation verified that the accuracy is high despite the lack of annotated examples.\n2 Cross-sentence n-ary relation extraction\nLet e1, · · · , em be entity mentions in text T . Relation extraction can be formulated as a classification problem of determining whether a relation R holds for e1, · · · , em in T . For example, given a cancer patient with mutation v in gene g, a molecular tumor board seeks to find if this type of cancer would respond to drug d. Literature with such knowledge has been growing rapidly; we can help the tumor board by checking if the Respond relation holds for the (d, g, v) triple.\nTraditional relation extraction methods focus on binary relations where all entities occur in the same sentence (i.e., m = 2 and T is a sentence), and cannot handle the aforementioned ternary relations. Moreover, as we focus on more complex relations and n increases, it becomes increasingly rare that the related entities will be contained entirely in a single sentence. In this paper, we generalize extraction to cross-sentence, n-ary relations, where m > 2 and T can contain multiple sentences. As will be shown in our experiments section, n-ary relations are crucial for high-value domains such as biomedicine, and expanding beyond the sentence boundary enables the extraction of more knowledge.\nIn the standard binary-relation setting, the dominant approaches are generally defined in terms of the shortest dependency path between the two entities in question, either by deriving rich features from the path or by modeling it using deep neural\nnetworks. Generalizing this paradigm to the n-ary setting is challenging, as there are ( n 2 ) paths. One apparent solution is inspired by Davidsonian semantics: first, identify a single trigger phrase that signifies the whole relation, then reduce the n-ary relation to n binary relations between the trigger and an argument. However, challenges remain. It is often hard to specify a single trigger, as the relation is manifested by several words, often not contiguous. Moreover, it is expensive and time-consuming to annotate training examples, especially if triggers are required, as is evident in prior annotation efforts such as GENIA (Kim et al., 2009). The realistic and widely adopted paradigm is to leverage indirect supervision, such as distant supervision (Craven and Kumlien, 1999; Mintz et al., 2009), where triggers are not available.\nAdditionally, lexical and syntactic patterns signifying the relation will be sparse. To handle such sparsity, traditional feature-based approaches require extensive engineering and large data. Unfortunately, this challenge becomes much more severe in crosssentence extraction when the text spans multiple sentences.\nTo overcome these challenges, we explore a general relation extraction framework based on graph LSTMs. By learning a continuous representation for words and entities, LSTMs can handle sparsity effectively without requiring intense feature engineering. The graph formulation subsumes prior LSTM approaches based on chains or trees, and can incorporate rich linguistic analyses.\nThis approach also opens up opportunities for joint learning with related relations. For example, the Response relation over d, g, v also implies a binary sub-relation over drug d and mutation v, with the gene underspecified. Even with distant supervision, the supervision signal for n-ary relations will likely be sparser than their binary sub-relations. Our approach makes it very easy to use multi-task learning over both the n-ary relations and their sub-relations."
  }, {
    "heading": "3 Graph LSTMs",
    "text": "Learning a continuous representation can be effective for dealing with lexical and syntactic sparsity. For sequential data such as text, recurrent neural networks (RNNs) are quite popular. They resemble hidden\nMarkov models (HMMs), except that discrete hidden states are replaced with continuous vectors, and emission and transition probabilities with neural networks. Conventional RNNs with sigmoid units suffer from gradient diffusion or explosion, making training very difficult (Bengio et al., 1994; Pascanu et al., 2013). Long short-term memory (LSTMs) (Hochreiter and Schmidhuber, 1997) combats these problems by using a series of gates (input, forget and output) to avoid amplifying or suppressing gradients during backpropagation. Consequently, LSTMs are much more effective in capturing long-distance dependencies, and have been applied to a variety of NLP tasks. However, most approaches are based on linear chains and only explicitly model the linear context, which ignores a variety of linguistic analyses, such as syntactic and discourse dependencies.\nIn this section, we propose a general framework that generalizes LSTMs to graphs. While there is some prior work on learning tree LSTMs (Tai et al., 2015; Miwa and Bansal, 2016), to the best of our knowledge, graph LSTMs have not been applied to any NLP task yet. Figure 2 shows the architecture of this approach. The input layer is the word embedding of input text. Next is the graph LSTM which learns a contextual representation for each word. For the entities in question, their contextual representations are concatenated and become the input to the relation classifiers. For a multi-word entity, we simply used the average of its word representations and leave the exploration of more sophisticated aggregation approaches to future work. The layers are trained jointly with backpropagation. This framework is\nagnostic to the choice of classifiers. Jointly designing classifiers with graph LSTMs would be interesting future work.\nAt the core of the graph LSTM is a document graph that captures various dependencies among the input words. By choosing what dependencies to include in the document graph, graph LSTMs naturally subsumes linear-chain or tree LSTMs.\nCompared to conventional LSTMs, the graph formulation presents new challenges. Due to potential cycles in the graph, a straightforward implementation of backpropagation might require many iterations to reach a fixed point. Moreover, in the presence of a potentially large number of edge types (adjacent-word, syntactic dependency, etc.), parametrization becomes a key problem.\nIn the remainder of this section, we first introduce the document graph and show how to conduct backpropagation in graph LSTMs. We then discuss two strategies for parametrizing the recurrent units. Finally, we show how to conduct multi-task learning with this framework."
  }, {
    "heading": "3.1 Document Graph",
    "text": "To model various dependencies from linguistic analysis at our disposal, we follow Quirk and Poon (2017) and introduce a document graph to capture intra- and inter-sentential dependencies. A document graph consists of nodes that represent words and edges that represent various dependencies such as linear context (adjacent words), syntactic dependencies, and discourse relations (Lee et al., 2013; Xue et al., 2015). Figure 1 shows the document graph for our running example; this instance suggests that tumors with L858E mutation in EGFR gene responds to the drug gefitinib.\nThis document graph acts as the backbone upon which a graph LSTM is constructed. If it con-\ntains only edges between adjacent words, we recover linear-chain LSTMs. Similarly, other prior LSTM approaches can be captured in this framework by restricting edges to those in the shortest dependency path or the parse tree."
  }, {
    "heading": "3.2 Backpropagation in Graph LSTMs",
    "text": "Conventional LSTMs are essentially very deep feedforward neural networks. For example, a left-to-right linear LSTM has one hidden vector for each word. This vector is generated by a neural network (recurrent unit) that takes as input the embedding of the given word and the hidden vector of the previous word. In discriminative learning, these hidden vectors then serve as input for the end classifiers, from which gradients are backpropagated through the whole network.\nGeneralizing such a strategy to graphs with cycles typically requires unrolling recurrence for a number of steps (Scarselli et al., 2009; Li et al., 2016; Liang et al., 2016). Essentially, a copy of the graph is created for each step that serves as input for the next. The result is a feed-forward neural network through time, and backpropagation is conducted accordingly.\nIn principle, we could adopt the same strategy. Effectively, gradients are backpropagated in a manner similar to loopy belief propagation (LBP). However, this makes learning much more expensive as each update step requires multiple iterations of backpropagation. Moreover, loopy backpropagation could suffer from the same problems encountered to in LBP, such as oscillation or failure to converge.\nWe observe that dependencies such as coreference and discourse relations are generally sparse, so the backbone of a document graph consists of the linear chain and the syntactic dependency tree. As in belief propagation, such structures can be leveraged to make backpropagation more efficient by replac-\ning synchronous updates, as in the unrolling strategy, with asynchronous updates, as in linear-chain LSTMs. This opens up opportunities for a variety of strategies in ordering backpropagation updates.\nIn this paper, we adopt a simple strategy that performed quite well in preliminary experiments, and leave further exploration to future work. Specifically, we partition the document graph into two directed acyclic graphs (DAGs). One DAG contains the left-to-right linear chain, as well as other forwardpointing dependencies. The other DAG covers the right-to-left linear chain and the backward-pointing dependencies. Figure 3 illustrates this strategy. Effectively, we partition the original graph into the forward pass (left-to-right), followed by the backward pass (right-to-left), and construct the LSTMs accordingly. When the document graph only contains linear chain edges, the graph LSTMs is exactly a bi-directional LSTMs (BiLSTMs)."
  }, {
    "heading": "3.3 The Basic Recurrent Propagation Unit",
    "text": "A standard LSTM unit consists of an input vector (word embedding), a memory cell and an output vector (contextual representation), as well as several gates. The input gate and output gate control the information flowing into and out of the cell, whereas the forget gate can optionally remove information from the recurrent connection to a precedent unit.\nIn linear-chain LSTMs, each unit contains only one forget gate, as it has only one direct precedent (i.e., the adjacent-word edge pointing to the previous word). In graph LSTMs, however, a unit may have several precedents, including connections to the same word via different edges. We thus introduce a forget gate for each precedent, similar to the approach taken by Tai et al. (2015) for tree LSTMs.\nEncoding rich linguistic analysis introduces many distinct edge types besides word adjacency, such as syntactic dependencies, which opens up many possibilities for parametrization. This was not considered in prior syntax-aware LSTM approaches (Tai et al., 2015; Miwa and Bansal, 2016). In this paper, we explore two schemes that introduce more fined-grained parameters based on the edge types.\nFull Parametrization Our first proposal simply introduces a different set of parameters for each edge type, with computation specified below.\nit = σ(Wixt + ∑\nj∈P (t) U\nm(t,j) i hj + bi)\not = σ(Woxt + ∑\nj∈P (t) Um(t,j)o hj + bo)\nc̃t = tanh(Wcxt + ∑\nj∈P (t) Um(t,j)c hj + bc)\nftj = σ(Wfxt + U m(t,j) f hj + bf )\nct = it c̃t + ∑\nj∈P (t) ftj cj\nht = ot tanh(ct) As in standard chain LSTMs, xt is the input word vector for node t, ht is the hidden state vector for node t, W ’s are the input weight matrices, and b’s are the bias vectors. σ, tanh, and represent the sigmoid function, the hyperbolic tangent function, and the Hadamard product (pointwise multiplication), respectively. The main differences lie in the recurrence terms. In graph LSTMs, a unit might have multiple predecessors (P (t)), for each of which (j) there is a forget gate ftj , and a typed weight matrix Um(t,j), where m(t, j) signifies the connection type between t and j. The input and output gates (it, ot) depend on all predecessors, whereas the forget gate (ftj) only depends on the predecessor with which the gate is associated. ct and c̃t represent intermediate computation results within the memory cell, which take into account the input and forget gates, and will be combined with output gate to produce the hidden representation ht.\nFull parameterization is straightforward, but it requires a large number of parameters when there are many edge types. For example, there are dozens of syntactic edge types, each corresponding to a Stanford dependency label. As a result, in our experiments we resort to using only the coarse-grained types: word adjacency, syntactic dependency, etc. Next, we will consider a more fine-grained approach by learning an edge-type embedding.\nEdge-Type Embedding To reduce the number of parameters and leverage potential correlation among fine-grained edge types, we learned a lowdimensional embedding of the edge types, and conducted an outer product of the predecessor’s hidden vector and the edge-type embedding to generate a “typed hidden representation”, which is a matrix. The new computation is as follows:\nit = σ(Wixt + ∑\nj∈P (t) Ui ×T (hj ⊗ ej) + bi)\nftj = σ(Wfxt + Uf ×T (hj ⊗ ej) + bf ) ot = σ(Woxt + ∑ j∈P (t) Uo ×T (hj ⊗ ej) + bo)\nc̃t = tanh(Wcxt + ∑\nj∈P (t) Uc ×T (hj ⊗ ej) + bc)\nct = it c̃t + ∑\nj∈P (t) ftj cj\nht = ot tanh(ct)\nU ’s are now l × l × d tensors (l is the dimension of the hidden vector and d is the dimension for edgetype embedding), and hj ⊗ ej is a tensor product that produces an l × d matrix. ×T denotes a tensor dot product defined as T ×T A = ∑ d(T:,:,d · A:,d), which produces an l-dimensional vector. The edgetype embedding ej is jointly trained with the other parameters."
  }, {
    "heading": "3.4 Comparison with Prior LSTM Approaches",
    "text": "The main advantages of a graph formulation are its generality and flexibility. As seen in Section 3.1, linear-chain LSTMs are a special case when the document graph is the linear chain of adjacent words. Similarly, Tree LSTMs (Tai et al., 2015) are a special case when the document graph is the parse tree.\nIn graph LSTMs, the encoding of linguistic knowledge is factored from the backpropagation strategy (Section 3.2), making it much more flexible, including introducing cycles. For example, Miwa and Bansal (2016) conducted joint entity and binary relation extraction by stacking a LSTM for relation extraction on top of another LSTM for entity recognition. In graph LSTMs, the two can be combined seamlessly using a document graph comprising both the word-adjacency chain and the dependency path between the two entities.\nThe document graph can also incorporate other linguistic information. For example, coreference and discourse parsing are intuitively relevant for cross-sentence relation extraction. Although existing systems have not yet been shown to improve crosssentence relation extraction (Quirk and Poon, 2017), it remains an important future direction to explore incorporating such analyses, especially after adapting them to the biomedical domains (Bell et al., 2016)."
  }, {
    "heading": "3.5 Multi-task Learning with Sub-relations",
    "text": "Multi-task learning has been shown to be beneficial in training neural networks (Caruana, 1998; Collobert and Weston, 2008; Peng and Dredze, 2016). By learning contextual entity representations, our framework makes it straightforward to conduct multi-task learning. The only change is to add a separate classifier for each related auxiliary relation. All classifiers share the same graph LSTMs representation learner and word embeddings, and can potentially help each other by pooling their supervision signals.\nIn the molecular tumor board domain, we applied this paradigm to joint learning of both the ternary relation (drug-gene-mutation) and its binary sub-relation (drug-mutation). Experiment results show that this provides significant gains in both tasks."
  }, {
    "heading": "4 Implementation Details",
    "text": "We implemented our methods using the Theano library (Theano Development Team, 2016). We used logistic regression for our relation classifiers. Hyper parameters were set based on preliminary experiments on a small development dataset. Training was done using mini-batched stochastic gradient descent (SGD) with batch size 8. We used a learning rate of 0.02 and trained for at most 30 epochs, with early stopping based on development data (Caruana et al., 2001; Graves et al., 2013). The dimension for the hidden vectors in LSTM units was set to 150, and the dimension for the edge-type embedding was set to 3. The word embeddings were initialized with the publicly available 100-dimensional GloVe word vectors trained on 6 billion words from Wikipedia and web text3 (Pennington et al., 2014). Other model parameters were initialized with random samples drawn uniformly from the range [−1, 1].\nIn multi-task training, we alternated among all tasks, each time passing through all data for one task4, and updating the parameters accordingly. This was repeated for 30 epochs.\n3http://nlp.stanford.edu/projects/glove/ 4However, drug-gene pairs have much more data, so we subsampled the instances down to the same size as the main n-ary relation task."
  }, {
    "heading": "5 Domain: Molecular Tumor Boards",
    "text": "Our main experiments focus on extracting ternary interactions over drugs, genes and mutations, which is important for molecular tumor boards. A druggene-mutation interaction is broadly construed as an association between the drug efficacy and the mutation in the given gene. There is no annotated dataset for this problem. However, due to the importance of such knowledge, oncologists have been painstakingly curating known relations from reading papers. Such a manual approach cannot keep up with the rapid growth of the research literature, and the coverage is generally sparse and not up to date. However, the curated knowledge can be used for distant supervision."
  }, {
    "heading": "5.1 Datasets",
    "text": "We obtained biomedical literature from PubMed Central5, consisting of approximately one million fulltext articles as of 2015. Note that only a fraction of papers contain knowledge about drug-gene-mutation interactions. Extracting such knowledge from the vast body of biomedical papers is exactly the challenge. As we will see in later subsections, distant supervision enables us to generate a sizable training set from a small number of manually curated facts, and the learned model was able to extract orders of magnitude more facts. In future work, we will explore incorporating more known facts for distant supervision and extracting from more full-text articles.\nWe conducted tokenization, part-of-speech tagging, and syntactic parsing using SPLAT (Quirk et al., 2012), and obtained Stanford dependencies (de Marneffe et al., 2006) using Stanford CoreNLP (Manning et al., 2014). We used the entity taggers from Literome (Poon et al., 2014) to identify drug, gene and mutation mentions.\nWe used the Gene Drug Knowledge Database (GDKD) (Dienstmann et al., 2015) and the Clinical Interpretations of Variants In Cancer (CIVIC) knowledge base6 for distant supervision. The knowledge bases distinguish fine-grained interaction types, which we do not use in this paper.\n5http://www.ncbi.nlm.nih.gov/pmc/ 6http://civic.genome.wustl.edu"
  }, {
    "heading": "5.2 Distant Supervision",
    "text": "After identifying drug, gene and mutation mentions in the text, co-occurring triples with known interactions were chosen as positive examples. However, unlike the single-sentence setting in standard distant supervision, care must be taken in selecting the candidates. Since the triples can reside in different sentences, an unrestricted selection of text spans would risk introducing many obviously wrong examples. We thus followed Quirk and Poon (2017) in restricting the candidates to those occurring in a minimal span, i.e., we retain a candidate only if is no other co-occurrence of the same entities in an overlapping text span with a smaller number of consecutive sentences. Furthermore, we avoid picking unlikely candidates where the triples are far apart in the document. Specifically, we considered entity triples within K consecutive sentences, ignoring paragraph boundaries. K = 1 corresponds to the baseline of extraction within single sentences. We explored K ≤ 3, which captured a large fraction of candidates without introducing many unlikely ones.\nOnly 59 distinct drug-gene-mutation triples from the knowledge bases were matched in the text. Even from such a small set of unique triples, we obtained 3,462 ternary relation instances that can serve as positive examples. For multi-task learning, we also considered drug-gene and drug-mutation sub-relations, which yielded 137,469 drug-gene and 3,192 drugmutation relation instances as positive examples.\nWe generate negative examples by randomly sampling co-occurring entity triples without known interactions, subject to the same restrictions above. We sampled the same number as positive examples to obtain a balanced dataset7."
  }, {
    "heading": "5.3 Automatic Evaluation",
    "text": "To compare the various models in our proposed framework, we conducted five-fold cross-validation, treating the positive and negative examples from distant supervision as gold annotation. To avoid traintest contamination, all examples from a document were assigned to the same fold. Since our datasets are balanced by construction, we simply report average test accuracy on held-out folds. Obviously, the\n7We will release the dataset at http://hanover.azurewebsites.net.\nresults could be noisy (e.g., entity triples not known to have an interaction might actually have one), but this evaluation is automatic and can quickly evaluate the impact of various design choices.\nWe evaluated two variants of graph LSTMs: “Graph LSTM-FULL” with full parametrization and “Graph LSTM-EMBED” with edge-type embedding. We compared graph LSTMs with three strong baseline systems: a well-engineered feature-based classifier (Quirk and Poon, 2017), a convolutional neural network (CNN) (Zeng et al., 2014; Santos et al., 2015; Wang et al., 2016), and a bi-directional LSTM (BiLSTM). Following Wang et al. (2016), we used input attention for the CNN and a input window size of 5. Quirk and Poon (2017) only extracted binary relations. We extended it to ternary relations by deriving features for each entity pair (with added annotation to signify the two entity types), and pooling the features\nfrom all pairs. For binary relation extraction, prior syntax-aware approaches are directly applicable. So we also compared with a state-of-the-art tree LSTM system (Miwa and Bansal, 2016) and a BiLSTM on the shortest dependency path between the two entities (BiLSTM-Shortest-Path) (Xu et al., 2015b).\nTable 1 shows the results for cross-sentence, ternary relation extraction. All neural-network based models outperformed the feature-based classifier, illustrating their advantage in handling sparse linguistic patterns without requiring intense feature engineering. All LSTMs significantly outperformed CNN in the cross-sentence setting, verifying the importance in capturing long-distance dependencies.\nThe two variants of graph LSTMs perform on par with each other, though Graph LSTM-FULL has a small advantage, suggesting that further exploration of parametrization schemes could be beneficial. In particular, the edge-type embedding might improve by pretraining on unlabeled text with syntactic parses.\nBoth graph variants significantly outperformed BiLSTMs (p < 0.05 by McNemar’s chi-square test), though the difference is small. This result is intriguing. In Quirk and Poon (2017), the best system incorporated syntactic dependencies and outperformed the linear-chain variant (Base) by a large margin. So why didn’t graph LSTMs make an equally substantial gain by modeling syntactic dependencies?\nOne reason is that linear-chain LSTMs can already captured some of the long-distance dependencies available in syntactic parses. BiLSTMs substantially outperformed the feature-based classifier, even without explicit modeling of syntactic dependencies. The gain cannot be entirely attributed to word embedding as LSTMs also outperformed CNNs.\nAnother reason is that syntactic parsing is less accurate in the biomedical domain. Parse errors confuse the graph LSM learner, limiting the potential for gain. In Section 6, we show supporting evidence in a domain when gold parses are available.\nWe also reported accuracy on instances within single sentences, which exhibited a broadly similar set of trends. Note that single-sentence and crosssentence accuracies are not directly comparable, as the test sets are different (one subsumes the other).\nWe conducted the same experiments on the binary sub-relation between drug-mutation pairs. Table 2\nshows the results, which are similar to the ternary case: Graph LSTM-FULL consistently performed the best for both single sentence and cross-sentence instances. BiLSTMs on the shortest path substantially underperformed BiLSTMs or graph LSTMs, losing between 4-5 absolute points in accuracy, which could be attributed to the lower parsing quality in the biomedical domain. Interestingly, the state-of-the-art tree LSTMs (Miwa and Bansal, 2016) also underperformed graph LSTMs, even though they encoded essentially the same linguistic structures (word adjacency and syntactic dependency). We attributed the gain to the fact that Miwa and Bansal (2016) used separate LSTMs for the linear chain and the dependency tree, whereas graph LSTMs learned a single representation for both.\nTo evaluate whether joint learning with subrelations can help, we conducted multi-task learning using Graph LSTM-FULL to jointly train extractors for both the ternary interaction and the drug-mutation, drug-gene sub-relations. Table 3 shows the results. Multi-task learning resulted in a significant gain for both the ternary interaction and the drug-mutation interaction. Interestingly, the advantage of graph LSTMs over BiLSTMs is reduced with multi-task learning, suggesting that with more supervision signal, even linear-chain LSTMs can learn to capture long-range dependencies that are were made evident by parse features in graph LSTMs. Note that there are many more instances for drug-gene interaction than others, so we only sampled a subset of comparable size. Therefore, we do not evaluate the performance gain for drug-gene interaction, as in practice, one would simply learn from all available data, and the sub-sampled results are not competitive.\nWe included coreference and discourse relations in our document graph. However, we didn’t observe any significant gains, similar to the observation in\nQuirk and Poon (2017). We leave further exploration to future work."
  }, {
    "heading": "5.4 PubMed-Scale Extraction",
    "text": "Our ultimate goal is to extract all knowledge from available text. We thus retrained our model using the best system from automatic evaluation (i.e., Graph LSTM-FULL) on all available data. The resulting model was then used to extract relations from all PubMed Central articles.\nTable 4 shows the number of candidates and extracted interactions. With as little as 59 unique druggene-mutation triples from the two databases8, we learned to extract orders of magnitude more unique interactions. The results also highlight the benefit of cross-sentence extraction, which yields 3 to 5 times more relations than single-sentence extraction.\nTable 5 conducts a similar comparison on unique number of drugs, genes, and mutations. Again, machine reading covers far more unique entities, especially with cross-sentence extraction."
  }, {
    "heading": "5.5 Manual Evaluation",
    "text": "Our automatic evaluations are useful for comparing competing approaches, but may not reflect the true classifier precision as the labels are noisy. Therefore, we randomly sampled extracted relation instances and asked three researchers knowledgeable in precision medicine to evaluate their correctness. For each instance, the annotators were presented with the provenance: sentences with the drug, gene, and mutation highlighted. The annotators determined in\n8There are more in the databases, but these are the only ones for which we found matching instances in the text. In future work, we will explore various ways to increase the number, e.g., by matching underspecified drug classes to specific drugs.\neach case whether this instance implied that the given entities were related. Note that evaluation does not attempt to identify whether the relationships are true or replicated in follow-up papers; rather, it focuses on whether the relationships are entailed by the text.\nWe focused our evaluation efforts on the crosssentence ternary-relation setting. We considered three probability thresholds: 0.9 for a high-precision but potentially low-recall setting, 0.5, and a random sample of all candidates. In each case, 150 instances were selected for a total of 450 annotations. A subset of 150 instances were reviewed by two annotators, and the inter-annotator agreement was 88%.\nTable 6 shows that the classifier indeed filters out a large portion of potential candidates, with estimated instance accuracy of 64% at the threshold of 0.5, and 75% at 0.9. Interestingly, LSTMs are effective at screening out many entity mention errors, presumably because they include broad contextual features."
  }, {
    "heading": "6 Domain: Genetic Pathways",
    "text": "We also conducted experiments on extracting genetic pathway interactions using the GENIA Event Extraction dataset (Kim et al., 2009). This dataset contains gold syntactic parses for the sentences, which offered a unique opportunity to investigate the impact of syntactic analysis on graph LSTMs. It also allowed us to test our framework in supervised learning.\nThe original shared task evaluated on complex, nested events for nine event types, many of which are unary relations (Kim et al., 2009). Following Poon et al. (2015), we focused on gene regulation and reduced it to binary-relation classification for headto-head comparison. We followed their experimental protocol by sub-sampling negative examples to be about three times of positive examples.\nSince the dataset is not entirely balanced, we reported precision, recall, and F1. We used our best performing graph LSTM from the previous experiments. By default, automatic parses were used in the document graphs, whereas in Graph LSTM (GOLD), gold parses were used instead. Table 7 shows the results. Once again, despite the lack of intense feature engineering, linear-chain LSTMs performed on par with the feature-based classifier (Poon et al., 2015). Graph LSTMs exhibited a more commanding advantage over linear-chain LSTMs in this domain, substantially outperforming the latter (p < 0.01 by McNemar’s chi-square test). Most interestingly, graph LSTMs using gold parses significantly outperformed that using automatic parses, suggesting that encoding high-quality analysis is particularly beneficial."
  }, {
    "heading": "7 Related Work",
    "text": "Most work on relation extraction has been applied to binary relations of entities in a single sentence. We first review relevant work on the single-sentence bi-\nnary relation extraction task, and then review related work on n-ary and cross-sentence relation extraction.\nBinary relation extraction The traditional featurebased methods rely on carefully designed features to learn good models, and often integrate diverse sources of evidence such as word sequences and syntax context (Kambhatla, 2004; GuoDong et al., 2005; Boschee et al., 2005; Suchanek et al., 2006; Chan and Roth, 2010; Nguyen and Grishman, 2014). The kernel-based methods design various subsequence or tree kernels (Mooney and Bunescu, 2005; Bunescu and Mooney, 2005; Qian et al., 2008) to capture structured information. Recently, models based on neural networks have advanced the state of the art by automatically learning powerful feature representations (Xu et al., 2015a; Zhang et al., 2015; Santos et al., 2015; Xu et al., 2015b; Xu et al., 2016).\nMost neural architectures resemble Figure 2, where there is a core representation learner (blue) that takes word embeddings as input and produces contextual entity representations. Such representations are then taken by relation classifiers to produce the final predictions. Effectively representing sequences of words, both convolutional (Zeng et al., 2014; Wang et al., 2016; Santos et al., 2015) and RNN-based architectures (Zhang et al., 2015; Socher et al., 2012; Cai et al., 2016) have been successful. Most of these have focused on modeling either the surface word sequences or the hierarchical syntactic structure. Miwa and Bansal (2016) proposed an architecture that benefits from both types of information, using a surface sequence layer, followed by a dependency-tree sequence layer.\nN -ary relation extraction Early work on extracting relations between more than two arguments has been done in MUC-7, with a focus on fact/event extraction from news articles (Chinchor, 1998). Semantic role labeling in the Propbank (Palmer et al., 2005) or FrameNet (Baker et al., 1998) style are also instances of n-ary relation extraction, with extraction of events expressed in a single sentence. McDonald et al. (2005) extract n-ary relations in a biomedical domain, by first factoring the n-ary relation into pair-wise relations between all entity pairs, and then constructing maximal cliques of related entities. Recently, neural models have been applied to semantic role labeling (FitzGerald et al., 2015; Roth\nand Lapata, 2016). These works learned neural representations by effectively decomposing the n-ary relation into binary relations between the predicate and each argument, by embedding the dependency path between each pair, or by combining features of the two using a feed-forward network. Although some re-ranking or joint inference models have been employed, the representations of the individual arguments do not influence each other. In contrast, we propose a neural architecture that jointly represents n entity mentions, taking into account long-distance dependencies and inter-sentential information.\nCross-sentence relation extraction Several relation extraction tasks have benefited from crosssentence extraction, including MUC fact and event extraction (Swampillai and Stevenson, 2011), record extraction from web pages (Wick et al., 2006), extraction of facts for biomedical domains (Yoshikawa et al., 2011), and extensions of semantic role labeling to cover implicit inter-sentential arguments (Gerber and Chai, 2010). These prior works have either relied on explicit co-reference annotation, or on the assumption that the whole document refers to a single coherent event, to simplify the problem and reduce the need for powerful representations of multi-sentential contexts of entity mentions. Recently, cross-sentence relation extraction models have been learned with distant supervision, and used integrated contextual evidence of diverse types without reliance on these assumptions (Quirk and Poon, 2017), but that work focused on binary relations only and explicitly engineered sparse indicator features.\nRelation extraction using distant supervision Distant supervision has been applied to extraction of binary (Mintz et al., 2009; Poon et al., 2015) and n-ary (Reschke et al., 2014; Li et al., 2015) relations, traditionally using hand-engineered features. Neural architectures have recently been applied to distantly supervised extraction of binary relations (Zeng et al., 2015). Our work is the first to propose a neural architecture for n-ary relation extraction, where the representation of a tuple of entities is not decomposable into independent representations of the individual entities or entity pairs, and which integrates diverse information from multi-sentential context. To utilize training data more effectively, we show how multitask learning for component binary sub-relations can\nimprove performance. Our learned representation combines information sources within a single sentence in a more integrated and generalizable fashion than prior approaches, and can also improve performance on single-sentence binary relation extraction."
  }, {
    "heading": "8 Conclusion",
    "text": "We explore a general framework for cross-sentence nary relation extraction based on graph LSTMs. The graph formulation subsumes linear-chain and tree LSTMs and makes it easy to incorporate rich linguistic analysis. Experiments on biomedical domains showed that extraction beyond the sentence boundary produced far more knowledge, and encoding rich linguistic knowledge provided consistent gain.\nWhile there is much room to improve in both recall and precision, our results indicate that machine reading can already be useful in precision medicine. In particular, automatically extracted facts (Section 5.4) can serve as candidates for manual curation. Instead of scanning millions of articles to curate from scratch, human curators would just quickly vet thousands of extractions. The errors identified by curators offer direct supervision to the machine reading system for continuous improvement. Therefore, the most important goal is to attain high recall and reasonable precision. Our current models are already quite capable.\nFuture directions include: interactive learning with user feedback; improving discourse modeling in graph LSTMs; exploring other backpropagation strategies; joint learning with entity linking; applications to other domains."
  }, {
    "heading": "Acknowledgements",
    "text": "We thank Daniel Fried and Ming-Wei Chang for useful discussions, as well as the anonymous reviewers and editor-in-chief Mark Johnson for their helpful comments."
  }],
  "year": 2017,
  "references": [{
    "title": "The Berkeley FrameNet project",
    "authors": ["Collin Baker", "Charles Fillmore", "John Lowe."],
    "venue": "Proceedings of the Thirty-Sixth Annual Meeting of the Association for Computational Linguistics and Seventeenth International Conference on Computational Linguistics.",
    "year": 1998
  }, {
    "title": "An investigation of coreference phenomena in the biomedical domain",
    "authors": ["Dane Bell", "Gustave Hahn-Powell", "Marco A. ValenzuelaEscarcega", "Mihai Surdeanu."],
    "venue": "Proceedings of the Tenth Edition of the Language Resources and Evaluation Conference.",
    "year": 2016
  }, {
    "title": "Learning long-term dependencies with gradient descent is difficult",
    "authors": ["Yoshua Bengio", "Patrice Simard", "Paolo Frasconi."],
    "venue": "IEEE transactions on neural networks, 5(2).",
    "year": 1994
  }, {
    "title": "Automatic information extraction",
    "authors": ["Elizabeth Boschee", "Ralph Weischedel", "Alex Zamanian."],
    "venue": "Proceedings of the International Conference on Intelligence Analysis.",
    "year": 2005
  }, {
    "title": "A shortest path dependency kernel for relation extraction",
    "authors": ["Razvan C Bunescu", "Raymond J Mooney."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.",
    "year": 2005
  }, {
    "title": "Bidirectional recurrent convolutional neural network for relation classification",
    "authors": ["Rui Cai", "Xiaodong Zhang", "Houfeng Wang."],
    "venue": "Proceedings of the FiftyFourth Annual Meeting of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "Overfitting in neural nets: Backpropagation, conjugate gradient, and early stopping",
    "authors": ["Rich Caruana", "Steve Lawrence", "Lee Giles."],
    "venue": "Proceedings of The Fifteenth Annual Conference on Neural Information Processing Systems.",
    "year": 2001
  }, {
    "title": "Multitask learning",
    "authors": ["Rich Caruana."],
    "venue": "Learning to learn. Springer.",
    "year": 1998
  }, {
    "title": "Exploiting background knowledge for relation extraction",
    "authors": ["Yee Seng Chan", "Dan Roth."],
    "venue": "Proceedings of the Twenty-Third International Conference on Computational Linguistics.",
    "year": 2010
  }, {
    "title": "Overview of MUC-7/MET-2",
    "authors": ["Nancy Chinchor."],
    "venue": "Technical report, Science Applications International Corporation, San Diego, CA.",
    "year": 1998
  }, {
    "title": "A unified architecture for natural language processing: Deep neural networks with multitask learning",
    "authors": ["Ronan Collobert", "Jason Weston."],
    "venue": "Proceedings of the Twenty-Fifth International Conference on Machine learning.",
    "year": 2008
  }, {
    "title": "Constructing biological knowledge bases by extracting information from text sources",
    "authors": ["Mark Craven", "Johan Kumlien."],
    "venue": "Proceedings of the Seventh International Conference on Intelligent Systems for Molecular Biology.",
    "year": 1999
  }, {
    "title": "Generating typed dependency parses from phrase structure parses",
    "authors": ["Marie-Catherine de Marneffe", "Bill MacCartney", "Christopher D. Manning."],
    "venue": "Proceedings of the Fifth International Conference on Language Resources and Evaluation.",
    "year": 2006
  }, {
    "title": "Database of genomic biomarkers for cancer drugs and clinical targetability in solid tumors",
    "authors": ["Rodrigo Dienstmann", "In Sock Jang", "Brian Bot", "Stephen Friend", "Justin Guinney."],
    "venue": "Cancer Discovery, 5. 112",
    "year": 2015
  }, {
    "title": "Semantic role labeling with neural network factors",
    "authors": ["Nicholas FitzGerald", "Oscar Täckström", "Kuzman Ganchev", "Dipanjan Das."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.",
    "year": 2015
  }, {
    "title": "Beyond NomBank: A study of implicit arguments for nominal predicates",
    "authors": ["Matthew Gerber", "Joyce Y. Chai."],
    "venue": "Proceedings of the Forty-Eighth Annual Meeting of the Association for Computational Linguistics.",
    "year": 2010
  }, {
    "title": "Speech recognition with deep recurrent neural networks",
    "authors": ["Alan Graves", "Abdel-rahman Mohamed", "Geoffrey Hinton."],
    "venue": "Proceedings of The Thirty-Eighth IEEE International Conference on Acoustics, Speech and Signal Processing.",
    "year": 2013
  }, {
    "title": "Exploring various knowledge in relation extraction",
    "authors": ["Zhou GuoDong", "Su Jian", "Zhang Jie", "Zhang Min."],
    "venue": "Proceedings of the Forty-Third Annual Meeting of the Association for Computational Linguistics.",
    "year": 2005
  }, {
    "title": "Long short-term memory",
    "authors": ["Sepp Hochreiter", "Jürgen Schmidhuber."],
    "venue": "Neural computation, 9(8).",
    "year": 1997
  }, {
    "title": "Combining lexical, syntactic, and semantic features with maximum entropy models for extracting relations",
    "authors": ["Nanda Kambhatla."],
    "venue": "Proceedings of the FortySecond Annual Meeting of the Association for Computational Linguistics, Demonstration Sessions.",
    "year": 2004
  }, {
    "title": "Overview of BioNLP’09 shared task on event extraction",
    "authors": ["Jin-Dong Kim", "Tomoko Ohta", "Sampo Pyysalo", "Yoshinobu Kano", "Jun’ichi Tsujii"],
    "venue": "In Proceedings of the Workshop on Current Trends in Biomedical Natural Language Processing: Shared Task",
    "year": 2009
  }, {
    "title": "Deterministic coreference resolution based on entitycentric, precision-ranked rules",
    "authors": ["Heeyoung Lee", "Angel Chang", "Yves Peirsman", "Nathanael Chambers", "Mihai Surdeanu", "Dan Jurafsky."],
    "venue": "Computational Linguistics, 39(4).",
    "year": 2013
  }, {
    "title": "Improvement of n-ary relation extraction by adding lexical semantics to distant-supervision rule learning",
    "authors": ["Hong Li", "Sebastian Krause", "Feiyu Xu", "Andrea Moro", "Hans Uszkoreit", "Roberto Navigli."],
    "venue": "Proceedings of the Seventh International Conference on Agents and",
    "year": 2015
  }, {
    "title": "Gated graph sequence neural networks",
    "authors": ["Yujia Li", "Daniel Tarlow", "Marc Brockschmidt", "Richard Zemel."],
    "venue": "Proceedings of the Fourth International Conference on Learning Representations.",
    "year": 2016
  }, {
    "title": "Semantic object parsing with graph LSTM",
    "authors": ["Xiaodan Liang", "Xiaohui Shen", "Jiashi Feng", "Liang Lin", "Shuicheng Yan."],
    "venue": "Proceedings of European Conference on Computer Vision.",
    "year": 2016
  }, {
    "title": "The Stanford CoreNLP natural language processing toolkit",
    "authors": ["Christopher D. Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J. Bethard", "David McClosky."],
    "venue": "Proceedings of the Fifty-Second",
    "year": 2014
  }, {
    "title": "Simple algorithms for complex relation extraction with applications to biomedical IE",
    "authors": ["Ryan McDonald", "Fernando Pereira", "Seth Kulick", "Scott Winters", "Yang Jin", "Pete White."],
    "venue": "Proceedings of the Forty-Third Annual Meeting on Association for Computational Lin-",
    "year": 2005
  }, {
    "title": "Distant supervision for relation extraction without labeled data",
    "authors": ["Mike Mintz", "Steven Bills", "Rion Snow", "Dan Jurafsky."],
    "venue": "Proceedings of the Joint Conference of the Forty-Seventh Annual Meeting of the Association for Computational Linguistics and the Fourth",
    "year": 2009
  }, {
    "title": "End-to-end relation extraction using LSTMs on sequences and tree structures",
    "authors": ["Makoto Miwa", "Mohit Bansal."],
    "venue": "Proceedings of the Fifty-Fourth Annual Meeting of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "Subsequence kernels for relation extraction",
    "authors": ["Raymond J Mooney", "Razvan C Bunescu."],
    "venue": "Proceedings of The Nineteen Annual Conference on Neural Information Processing Systems.",
    "year": 2005
  }, {
    "title": "Employing word representations and regularization for domain adaptation of relation extraction",
    "authors": ["Thien Huu Nguyen", "Ralph Grishman."],
    "venue": "Proceedings of the Fifty-Second Annual Meeting of the Association for Computational Linguistics.",
    "year": 2014
  }, {
    "title": "The Proposition Bank: An annotated corpus of semantic roles",
    "authors": ["Martha Palmer", "Daniel Gildea", "Paul Kingsbury."],
    "venue": "Computational Linguistics, 31(1).",
    "year": 2005
  }, {
    "title": "On the difficulty of training recurrent neural networks",
    "authors": ["Razvan Pascanu", "Tomas Mikolov", "Yoshua Bengio."],
    "venue": "Proceedings of The Thirtieth International Conference on Machine Learning.",
    "year": 2013
  }, {
    "title": "Improving named entity recognition for chinese social media with word segmentation representation learning",
    "authors": ["Nanyun Peng", "Mark Dredze."],
    "venue": "Proceedings of the Fifty-Fourth Annual Meeting of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "GloVe: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.",
    "year": 2014
  }, {
    "title": "Literome: PubMed-scale genomic knowledge base in the cloud",
    "authors": ["Hoifung Poon", "Chris Quirk", "Charlie DeZiel", "David Heckerman."],
    "venue": "Bioinformatics, 30(19).",
    "year": 2014
  }, {
    "title": "Distant supervision for cancer pathway extraction from text",
    "authors": ["Hoifung Poon", "Kristina Toutanova", "Chris Quirk."],
    "venue": "Pacific Symposium on Biocomputing.",
    "year": 2015
  }, {
    "title": "Distant supervision for relation extraction beyond the sentence boundary",
    "authors": ["Chris Quirk", "Hoifung Poon."],
    "venue": "Proceedings of the Fifteenth Conference on European chapter of the Association for Computational Linguistics.",
    "year": 2017
  }, {
    "title": "MSR SPLAT, a language analysis toolkit",
    "authors": ["Chris Quirk", "Pallavi Choudhury", "Jianfeng Gao", "Hisami Suzuki", "Kristina Toutanova", "Michael Gamon", "Wen-tau Yih", "Lucy Vanderwende."],
    "venue": "Proceedings of the Conference of the North American Chapter of the Association",
    "year": 2012
  }, {
    "title": "Event extraction using distant supervision",
    "authors": ["Kevin Reschke", "Martin Jankowiak", "Mihai Surdeanu", "Christopher D Manning", "Daniel Jurafsky."],
    "venue": "Proceedings of Eighth edition of the Language Resources and Evaluation Conference.",
    "year": 2014
  }, {
    "title": "Neural semantic role labeling with dependency path embeddings",
    "authors": ["Michael Roth", "Mirella Lapata."],
    "venue": "Proceedings of the Fifty-Fourth Annual Meeting of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "Classifying relations by ranking with convolutional neural networks",
    "authors": ["Cicero Nogueira dos Santos", "Bing Xiang", "Bowen Zhou."],
    "venue": "Proceedings of the Fifty-Third Annual Meeting of the Association for Computational Linguistics.",
    "year": 2015
  }, {
    "title": "The graph neural network model",
    "authors": ["Franco Scarselli", "Marco Gori", "Ah Chung Tsoi", "Markus Hagenbuchner", "Gabriele Monfardini."],
    "venue": "IEEE Transactions on Neural Networks, 20(1).",
    "year": 2009
  }, {
    "title": "Semantic compositionality through recursive matrix-vector spaces",
    "authors": ["Richard Socher", "Brody Huval", "Christopher D Manning", "Andrew Y Ng."],
    "venue": "Proceedings of the Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural",
    "year": 2012
  }, {
    "title": "Combining linguistic and statistical analysis to extract relations from web documents",
    "authors": ["Fabian M Suchanek", "Georgiana Ifrim", "Gerhard Weikum."],
    "venue": "Proceedings of the Twelfth International Conference on Knowledge Discovery and Data Mining.",
    "year": 2006
  }, {
    "title": "Overview of the english slot filling track at the TAC2014 knowledge base population evaluation",
    "authors": ["Mihai Surdeanu", "Ji Heng."],
    "venue": "Proceedings of the U.S. National Institute of Standards and Technology Knowledge Base Population 2014 Workshop.",
    "year": 2014
  }, {
    "title": "Extracting relations within and across sentences",
    "authors": ["Kumutha Swampillai", "Mark Stevenson."],
    "venue": "Proceedings of the Conference on Recent Advances in Natural Language Processing.",
    "year": 2011
  }, {
    "title": "Improved semantic representations from tree-structured long short-term memory networks",
    "authors": ["Kai Sheng Tai", "Richard Socher", "Christopher D Manning."],
    "venue": "Proceedings of the Fifty-Third Annual Meeting of the Association for Computational Linguistics.",
    "year": 2015
  }, {
    "title": "Theano: A Python framework for fast computation of mathematical expressions",
    "authors": ["Theano Development Team."],
    "venue": "arXiv e-prints, abs/1605.02688.",
    "year": 2016
  }, {
    "title": "Relation classification via multi-level attention CNNs",
    "authors": ["Linlin Wang", "Zhu Cao", "Gerard de Melo", "Zhiyuan Liu."],
    "venue": "Proceedings of the Fifty-Fourth Annual Meeting of the Association for Computational Linguistics.",
    "year": 2016
  }, {
    "title": "Learning field compatibilities to extract database records from unstructured text",
    "authors": ["Michael Wick", "Aron Culotta", "Andrew McCallum."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.",
    "year": 2006
  }, {
    "title": "Semantic relation classification via convolutional neural networks with simple negative sampling",
    "authors": ["Kun Xu", "Yansong Feng", "Songfang Huang", "Dongyan Zhao."],
    "venue": "Proceedings of Conference on Empirical Methods in Natural Language Processing.",
    "year": 2015
  }, {
    "title": "Classifying relations via long short term memory networks along shortest dependency paths",
    "authors": ["Yan Xu", "Lili Mou", "Ge Li", "Yunchuan Chen", "Hao Peng", "Zhi Jin."],
    "venue": "Proceedings of Conference on Empirical Methods in Natural Language Processing.",
    "year": 2015
  }, {
    "title": "Improved relation classification by deep recurrent neural networks with data augmentation",
    "authors": ["Yan Xu", "Ran Jia", "Lili Mou", "Ge Li", "Yunchuan Chen", "Yangyang Lu", "Zhi Jin."],
    "venue": "Proceedings of the Twenty-Sixth International Conference on Computational Linguis-",
    "year": 2016
  }, {
    "title": "The CoNLL-2015 shared task on shallow discourse parsing",
    "authors": ["Nianwen Xue", "Hwee Tou Ng", "Sameer Pradhan", "Rashmi Prasad", "Christopher Bryant", "Attapol Rutherford."],
    "venue": "Proceedings of the Conference on Computational Natural Language Learning, Shared",
    "year": 2015
  }, {
    "title": "Coreference based event-argument relation extraction on biomedical text",
    "authors": ["Katsumasa Yoshikawa", "Sebastian Riedel", "Tsutomu Hirao", "Masayuki Asahara", "Yuji Matsumoto."],
    "venue": "Journal of Biomedical Semantics, 2(5).",
    "year": 2011
  }, {
    "title": "Relation classification via convolutional deep neural network",
    "authors": ["Daojian Zeng", "Kang Liu", "Siwei Lai", "Guangyou Zhou", "Jun Zhao"],
    "venue": "In Proceedings of the Twenty-Sixth International Conference on Computational Linguistics",
    "year": 2014
  }, {
    "title": "Distant supervision for relation extraction via piecewise convolutional neural networks",
    "authors": ["Daojian Zeng", "Kang Liu", "Yubo Chen", "Jun Zhao."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing.",
    "year": 2015
  }, {
    "title": "Bidirectional long short-term memory networks for relation classification",
    "authors": ["Shu Zhang", "Dequan Zheng", "Xinchen Hu", "Ming Yang."],
    "venue": "Proceedings of TwentyNinth Pacific Asia Conference on Language, Information and Computation.",
    "year": 2015
  }],
  "id": "SP:4a365b4e7dcb102f02054ac4484923355490b7cc",
  "authors": [{
    "name": "Nanyun Peng",
    "affiliations": []
  }, {
    "name": "Hoifung Poon",
    "affiliations": []
  }, {
    "name": "Chris Quirk",
    "affiliations": []
  }, {
    "name": "Kristina Toutanova",
    "affiliations": []
  }, {
    "name": "Wen-tau Yih",
    "affiliations": []
  }],
  "abstractText": "Past work in relation extraction has focused on binary relations in single sentences. Recent NLP inroads in high-value domains have sparked interest in the more general setting of extracting n-ary relations that span multiple sentences. In this paper, we explore a general relation extraction framework based on graph long short-term memory networks (graph LSTMs) that can be easily extended to cross-sentence n-ary relation extraction. The graph formulation provides a unified way of exploring different LSTM approaches and incorporating various intra-sentential and intersentential dependencies, such as sequential, syntactic, and discourse relations. A robust contextual representation is learned for the entities, which serves as input to the relation classifier. This simplifies handling of relations with arbitrary arity, and enables multi-task learning with related relations. We evaluate this framework in two important precision medicine settings, demonstrating its effectiveness with both conventional supervised learning and distant supervision. Cross-sentence extraction produced larger knowledge bases. and multi-task learning significantly improved extraction accuracy. A thorough analysis of various LSTM approaches yielded useful insight the impact of linguistic analysis on extraction accuracy.",
  "title": "Cross-Sentence N -ary Relation Extraction with Graph LSTMs"
}