{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 4785–4790 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n4785"
  }, {
    "heading": "1 Introduction",
    "text": "Recently, end-to-end Neural Machine Translation (NMT) models (Sutskever et al., 2014; Bahdanau et al., 2015) have achieved notable success. A remarkable characteristic of NMT is that the decoder, which is typically implemented using Recurrent Neural Network (RNN), can capture the features of the entire decoding history. This model\n∗Zhisong Zhang was a graduate student at SJTU and a research intern at NICT when conducting this work. This work is partially supported by the program “Promotion of Global Communications Plan: Research, Development, and Social Demonstration of Multilingual Speech Translation Technology” of MIC, Japan. Hai Zhao was partially supported by National Key Research and Development Program of China (No. 2017YFB0304100), National Natural Science Foundation of China (No. 61672343 and No. 61733011), Key Project of National Society Science Foundation of China (No. 15-ZDA041), The Art and Science Interdisciplinary Funds of Shanghai Jiao Tong University (No. 14JCRZ04). Thanks a lot for the helpful discussions with Kehai Chen.\n†Co-corresponding authors\nwith “cities” correspond to the nodes box ed in Figure 1 (only three hypotheses are listed for brevity). The negative log probabilities calculated by the model for the words predicted after “cities” are given in parentheses.\nnodes inside the box represent the hidden features of partial hypotheses ending with “cities”.\ndoes not depend on any independence assumptions and treats sequences with different prefixes as totally different hypotheses. However, many of the NMT output sequences are quite similar and they typically contain only local differences that do not influence future decoding significantly.\nTable 1 and Figure 1 present an example of such pattern of local differences in NMT decoding. As shown in Table 1, the three partial hypotheses that\nAlgorithm 1 Merging for Beam Search. Require: list of sorted candidates C; beam size k;\nequivalence function Eq. Ensure: list of candidates surviving in the beam: C′.\n1: C′ = [ ] 2: # Scan according to the sorted order. 3: for c in C: 4: merge flag = False 5: # Check previous surviving states for merging. 6: for s in C′: 7: # Check with candidate merger states. 8: for s′ in sequence(s): 9: if Eq(c, s′) and score(c)<score(s′):\n10: merge flag = True 11: # Pruning by the merger. 12: if not merge flag: 13: C′.append(c) 14: # Pruning by the beam size. 15: if len(C′) >= k: 16: break 17: return C′\nend with “cities” share similar patterns. Firstly, as shown in Figure 1, their hidden layer features are close in the latent space. Moreover, for future predictions, the model predicts identical sequences and gives similar scores for them. Although going through different paths, these partial hypotheses appear to be similar or likely equivalent.\nIntuitively, for efficiency, we do not need to expand all of these partial hypotheses (states) since they have similar future predictions. In fact, this corresponds to the idea of hypothesis recombination (also known as state merging, which will be used interchangeably) from traditional PhraseBased Statistical Machine Translation (PBSMT) (Koehn et al., 2003). Given a method to find mergeable states, we can employ recombination in NMT decoding as well.\nIn this paper, we adopt the mechanism of recombination in NMT decoding based on the definition of “equivalence” of partial hypotheses. Heuristically, we try a simple n-gram suffix based equivalence function and apply it to beam search without adding any neural computation cost. Through experiments on two large-scale translation tasks, we show that it can help to make the decoding more efficient.\nMost recent NMT studies have focused on model improvement (Luong et al., 2015; Tu et al., 2016b; Gehring et al., 2017; Vaswani et al., 2017), and only a few have studied the search problem directly. For example, Khayrallah et al. (2017) and Stahlberg et al. (2016) explored searching on lattices generated by traditional Statistical Machine Translation (SMT). In addition, Freitag and Al-\nOnaizan (2017) investigated different beam search pruning strategies; however, they primarily focused on pruning candidates locally. (Niehues et al., 2017) analyzed the effects of modeling and searching, but focused on re-ranking analysis. Rather than considering candidates from other model’s k-best lists, we focus on the own exploration space of a single NMT model and provide a method for more efficient searching."
  }, {
    "heading": "2 Method",
    "text": "For state merging, “equivalence” should be defined from the aspect of future predictions: states with the same predictions in the future decoding process can be regarded as equivalent. We use an equivalence function Eq(s1, s2) to denote that the two states s1 and s2 can be regarded as equivalent.\nWith the concept of equivalence, we can build the method of recombination over it. There are mainly two problems to solve: 1. How to merge states given function Eq? (§2.1) 2. How to obtain this equivalence function? (§2.2)"
  }, {
    "heading": "2.1 Search with Merging",
    "text": "To adopt an equivalence function Eq(s1, s2) to merge states in a search process, we need to specify the logic of the merging mechanism. Here, without loss of generality, we specifically focus on the typical beam search.\nWe adopt merging in NMT beam search with a simple method: retaining the word-level search process and adding a state merger when pruning the beam at each time step. Algorithm 1 shows the proposed merging-enhanced pruning method.\nOrdinary beam search only prunes candidates based on beam size (Lines 15-16), while the proposed method adds a merger to prune extra equivalent states (Lines 6-10). To manage the merging process, candidate list C are ordered1 by model score and considered in turn. When checking equivalence for one candidate state c, we consider all current-step surviving states and their previous-step antecedences. We include previousstep states, because equivalent states may have different sequence lengths and thus not be in the same beam-search step. In Line 8, we define “sequence” as a function of obtaining the possible states that\n1In plain beam search, the candidates may not need to be sorted. We use a local selector to make the sorting efficient: a local k-best selector is first applied on each previous-step candidate states, making the size of the candidate list at most k ∗ k rather than k ∗ |V |, where |V | is the vocabulary size.\ncan merge the current candidate c. If a candidate state c is not merged with any higher-ranked state, it is added to the surviving list C ′ (Line 13) and can possibly merge the lower-ranked ones later.\nWhen deciding whether to merge, we also consider a criterion on model scores: we only merge state c when its score is lower than s′. Since we also consider previous-step states with different sequence lengths, a length reward λ is added for this comparison of partial hypotheses: score(s) =∑\ny∈s λ+ log p(y). We also attempted length normalization, but found it performed slightly worse.\nThe merged partial hypotheses can be stored, and by assuming that their future predictions will be the same as their mergers, a lattice-like translation graph can be obtained. We can further extract k-best list from this structure using another beam-search on the lattice (also with length reward when comparing partial hypotheses). Note that this beam search process can be fast, since we reuse the model scores from previous search and no extra neural computations will be included."
  }, {
    "heading": "2.2 Equivalence Function",
    "text": "Finding an exact equivalence function for NMT is difficult, because future predictions relies on the features from the entire previous sequence and any different sequences are not the same according to the NMT model. Here, we consider a n-gram suffix based heuristic approximation for this problem.\nWe adopt an approximate equivalence function:\nEq′(s1, s2) ≡ s1.suffix(n) = s2.suffix(n) ∧ |s1.length− s2.length| < r\nHere, suffix(n) represents the n-gram suffix of the sequence of a state, and r is the threshold for the length different of the two states.\nThis definition of equivalence only considers a subset of state features, which are inspired by PBSMT. In PBSMT, different sequences could lead to states with identical features based on n-gram suffix, and these states are exactly equivalent. Although this is not the case for NMT, the subset may encodes important and relevant features.\nAlthough this function is simple and brings extra approximation, it has the merit of efficiency. In Algorithm 1, we can store the n-gram features of the surviving states in a hash-map and replace the for-loop checking (Line 6-10) with hashing, making the extra time-complexity O(1) for each state. During experiments, we found the extra cost\nbrought by feature matching is far less than the cost of original neural computation."
  }, {
    "heading": "3 Experiments and Analysis",
    "text": "The proposed method was evaluated on two translation tasks: NIST Chinese-English (Zh-En) and WMT English-German (En-De). For Zh-En, the training set comprised 1.4M sentences pairs from LDC corpora. NIST 02 was selected as the development set and NIST 03 to 06 were used for testing. For En-De, 4.5M WMT training data were utilized, the concatenation of newstest 2012 and 2013 was adopted as the development set, and newstest 2014 to 2016 were adopted as the test set.\nWe implemented2 an attentional RNN-based NMT model and its decoder in Python with the DyNet toolkit (Neubig et al., 2017). All the experiments were carried out on one P100 GPU. For Zh-En, we set the vocabulary size of both sides to 30K, and for En-De, we adopted 50K BPE operations (Sennrich et al., 2016). The evaluation metric was tokenized BLEU (Papineni et al., 2002) calculated by multi-bleu.perl. Detailed settings can be found in the supplementary material.\nWe added a local threshold pruner to exclude unlikely words whose probabilities were less than 10% of the highest and adopted length normalization for final hypotheses ranking. For comparing partial hypotheses, the length reward λ was set to 1.0 and 0.4 for Zh-En and En-De, respectively. For the equivalence function, we utilized a suffix of 4- gram and a length difference threshold r of 2.\nThese hyper-parameters were set by preliminary experiments. For the length difference threshold r, we found that relatively small r like 1 or 2 was better than larger ones, which is reasonable since if the merged hypotheses differs too much in length, there are higher chances that they covered different information. For n-gram suffix, we found smaller n-grams made more bad merges and 4-gram is a reasonably good choice, slightly larger ones gave slightly worse results and also less chances of recombination."
  }, {
    "heading": "3.1 Results",
    "text": "Figure 2 show the results of various beam sizes on the concatenation of all test sets. Separate results are given in the supplementary material.\nAs shown by the speed curves, merging adds little extra cost (less than 10%) to decoding at\n2https://github.com/zzsfornlp/znmt-merge\nthe same beam size. Moreover, since bringing no extra neural computations, the proposed merging mechanism is transparent to neural architectures and easy to adopt. In our experiments, we used batched decoding on GPU and merging did not influence the efficiency of this implementation.\nFor translation quality, the results indicate that the proposed methods can yield improvements at various beam sizes for Zh-En and small beam sizes for En-De. Moreover, in some way, merging can make the search more efficient. For example, in both datasets, merge-enhanced searchers with beam-size 6 can obtain comparable or better results compared to those of ordinary searchers with beam-size 12 (on BLEU, 37.17 vs. 37.11 for ZhEn, 24.64 vs. 24.67 for En-De). As for decoding speed, the one of beam-size 6 can be more than twice of the one of beam-size 12 (over 200 tokens/second vs. around 100 tokens/second). That is to say, with merging, we can achieve similar translation quality with a smaller beam size, which leads to higher decoding speed.\nThe results show that for large beam sizes, expanding explored search space by increasing beam size or adopting merging helps more in Zh-En than En-De. A possible explanation for this is that in NIST Zh-En dataset, each source sentences has four references for evaluation, which encourages the diversity brought by expanding reached search space. In Table 2, we compare the BLEU scores with multiple and single references on several beam sizes, and the single-reference results does not always increase along the beam size like the multiple ones. The En-De dataset also has only one reference and is similar to this case.\nThe results also show that expanding explored search space does not always bring improvements. This concerns more on modeling than searching and corresponds with previous findings on the relations between NMT searching and modeling (Tu et al., 2016a; Niehues et al., 2017; Li et al., 2018).\nThe potential of the proposed method might be better realized with improved NMT models."
  }, {
    "heading": "3.2 Analysis",
    "text": "We further analyzed the merge-enhanced search process. For these analyses, we mainly checked decoding with a beam size of 10 on Zh-En dataset.\nFrequency of Merging First, we investigated how often recombination occurs and how much it expands the explored output space. For a beam size of 10, with influences from the local pruner and the proposed merger, the average expanding size is 7.60 for each step, and the average number of merger-pruned partial hypotheses is 0.61 per step (22.5 per sentence). This indicates that a partial hypothesis is recombined in every two steps. The output translation graph can hold much more output space than the original k-best list, and we found that on average the possible output sequences were averagely 200 times the beam size. Figure 3 shows an example of the output translation graph.\nMerging and Similarity of Hidden States It is nearly impossible to explore such a large space with an exact NMT model; thus, we depend on the assumption that merged hypotheses have nearly the same features. To evaluate this assumption, we calculated the similarity between the hidden layers of the merged partial hypotheses. Among the 122772 merge points in 5453 Zh-En sentences, the average cosine similarity (in range [−1, 1]) was 0.986, which indicates that the recombinations are reasonable. In addition, we tried adding simple cosine similarity constraints (using another\nthreshold) in the equivalence function, however, we found that this does not bring obvious additional benefits.\nEffects of Merging We further conducted comparisons between the predictions of ordinary and merge-enhanced beam search. First, we investigated the model scores of their predictions. As shown in Table 3, we selected “Beam=10, no merge” as the basic setting, and compared the predictions of other settings with it. Overall, the merge-enhanced searcher can obtain higher model score predictions, which suggests its stronger search ability, because the goal of searching is to return hypotheses with higher model scores.\nMoreover, we tried a re-ranking experiment on 100-best lists with 4-checkpoint-model-ensemble, and only found similar slight improvements for plain and merge-enhanced search. Nevertheless, since merge-enhanced search can obtain a output translation graph, we expect that the graph can contain more diverse hypotheses.\nTo verify this, we compared the oracle BLEU scores within the reached space. To extract or-\nacle hypotheses from the translation graphs, we simply adopted approximate Partial BLEU Oracle (Dreyer et al., 2007; Sokolov et al., 2012). Merge-based searcher could obtain an oracle score of 47.83, while ordinary beam searcher could only get 42.57. Only by increasing the beam size up to 100 could the ordinary beam searcher achieve a better result of 48.74. This indicates that recombination helps to touch more output space."
  }, {
    "heading": "4 Conclusion and Discussion",
    "text": "In this work, 1) we show that decoding with heuristic recombination can obtain similar translation qualities with smaller beam sizes, thus increasing efficiency, and, 2) we empirically explore the decoding process and analyze the influences of recombination from various aspects.\nAlthough the improvements brought by recombination depend on careful refinements of the model, this concerns more on modeling, since the goal of decoding is to find hypotheses with higher model scores. The potential of recombination may be further realized by improving how the output sequences are modeled. Another interesting topic will be the combination with SMT or extra larger language models (Wang et al., 2013, 2014).\nFor the equivalence function, there can also be extensions. For example, a model-based equivalence function can be trained by using the neural features (hidden layers in RNN). However, modelbased equivalence functions may bring extra neural computation cost and be harder to efficiently implemented. In this work, we focus on the merging mechanism and leave the study of equivalence function for future work."
  }],
  "year": 2018,
  "references": [{
    "title": "Neural machine translation by jointly learning to align and translate",
    "authors": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."],
    "venue": "ICLR.",
    "year": 2015
  }, {
    "title": "Comparing reordering constraints for smt using efficient bleu oracle computation",
    "authors": ["Markus Dreyer", "Keith Hall", "Sanjeev Khudanpur."],
    "venue": "Proceedings of SSST, NAACL-HLT 2007 / AMTA Workshop on Syntax and Structure in Statistical Translation,",
    "year": 2007
  }, {
    "title": "Beam search strategies for neural machine translation",
    "authors": ["Markus Freitag", "Yaser Al-Onaizan."],
    "venue": "Proceedings of the First Workshop on Neural Machine Translation, pages 56–60, Vancouver.",
    "year": 2017
  }, {
    "title": "A convolutional encoder model for neural machine translation",
    "authors": ["Jonas Gehring", "Michael Auli", "David Grangier", "Yann Dauphin."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 123–135, Van-",
    "year": 2017
  }, {
    "title": "Neural lattice search for domain adaptation in machine translation",
    "authors": ["Huda Khayrallah", "Gaurav Kumar", "Kevin Duh", "Matt Post", "Philipp Koehn."],
    "venue": "Proceedings of IJCNLP, pages 20–25, Taipei, Taiwan.",
    "year": 2017
  }, {
    "title": "Statistical phrase-based translation",
    "authors": ["Philipp Koehn", "Franz Josef Och", "Daniel Marcu."],
    "venue": "Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics on Human Language Technology, pages",
    "year": 2003
  }, {
    "title": "A simple and effective approach to coverage-aware neural machine translation",
    "authors": ["Yanyang Li", "Tong Xiao", "Yinqiao Li", "Qiang Wang", "Changming Xu", "Jingbo Zhu."],
    "venue": "Proceedings of the 56th Annual Meeting of the Association for Computational Lin-",
    "year": 2018
  }, {
    "title": "Effective approaches to attention-based neural machine translation",
    "authors": ["Thang Luong", "Hieu Pham", "Christopher D. Manning."],
    "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1412–1421, Lisbon,",
    "year": 2015
  }, {
    "title": "Visualizing data using t-SNE",
    "authors": ["Laurens van der Maaten", "Geoffrey Hinton."],
    "venue": "Journal of machine learning research, 9(Nov):2579–2605.",
    "year": 2008
  }, {
    "title": "Dynet: The dynamic neural network toolkit",
    "authors": ["Graham Neubig", "Chris Dyer", "Yoav Goldberg", "Austin Matthews", "Waleed Ammar", "Antonios Anastasopoulos", "Miguel Ballesteros", "David Chiang", "Daniel Clothiaux", "Trevor Cohn"],
    "year": 2017
  }, {
    "title": "Analyzing neural mt search and model performance",
    "authors": ["Jan Niehues", "Eunah Cho", "Thanh-Le Ha", "Alex Waibel."],
    "venue": "Proceedings of the First",
    "year": 2017
  }, {
    "title": "BLEU: a method for automatic evaluation of machine translation",
    "authors": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "WeiJing Zhu."],
    "venue": "Proceedings of 40th Annual Meeting of the Association for Computational Linguistics, pages 311–318, Philadelphia,",
    "year": 2002
  }, {
    "title": "Neural machine translation of rare words with subword units",
    "authors": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, pages 1715–1725, Berlin, Germany.",
    "year": 2016
  }, {
    "title": "Computing lattice bleu oracle scores for machine translation",
    "authors": ["Artem Sokolov", "Guillaume Wisniewski", "Francois Yvon."],
    "venue": "Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 120–129,",
    "year": 2012
  }, {
    "title": "Syntactically guided neural machine translation",
    "authors": ["Felix Stahlberg", "Eva Hasler", "Aurelien Waite", "Bill Byrne."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, pages 299–305, Berlin, Germany.",
    "year": 2016
  }, {
    "title": "Sequence to sequence learning with neural networks",
    "authors": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V Le."],
    "venue": "NIPS, pages 3104–3112.",
    "year": 2014
  }, {
    "title": "Neural machine translation with reconstruction",
    "authors": ["Zhaopeng Tu", "Yang Liu", "Lifeng Shang", "Xiaohua Liu", "Hang Li."],
    "venue": "Proceedings of AAAI.",
    "year": 2016
  }, {
    "title": "Modeling coverage for neural machine translation",
    "authors": ["Zhaopeng Tu", "Zhengdong Lu", "Yang Liu", "Xiaohua Liu", "Hang Li."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, pages 76–85, Berlin, Germany.",
    "year": 2016
  }, {
    "title": "Attention is all you need",
    "authors": ["Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N Gomez", "Ł ukasz Kaiser", "Illia Polosukhin."],
    "venue": "NIPS, pages 6000–6010.",
    "year": 2017
  }, {
    "title": "Converting continuous-space language models into n-gram language models for statistical machine translation",
    "authors": ["Rui Wang", "Masao Utiyama", "Isao Goto", "Eiichro Sumita", "Hai Zhao", "Bao-Liang Lu."],
    "venue": "Proceedings of the 2013 Conference on Empirical",
    "year": 2013
  }, {
    "title": "Neural network based bilingual language model growing for statistical machine translation",
    "authors": ["Rui Wang", "Hai Zhao", "Bao-Liang Lu", "Masao Utiyama", "Eiichiro Sumita."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language",
    "year": 2014
  }],
  "id": "SP:5f0c801a72675327c80a9c2beaa971564f578818",
  "authors": [{
    "name": "Zhisong Zhang",
    "affiliations": []
  }, {
    "name": "Rui Wang",
    "affiliations": []
  }, {
    "name": "Masao Utiyama",
    "affiliations": []
  }, {
    "name": "Eiichiro Sumita",
    "affiliations": []
  }, {
    "name": "Hai Zhao",
    "affiliations": []
  }, {
    "name": "Kehai Chen",
    "affiliations": []
  }],
  "abstractText": "In Neural Machine Translation (NMT), the decoder can capture the features of the entire prediction history with neural connections and representations. This means that partial hypotheses with different prefixes will be regarded differently no matter how similar they are. However, this might be inefficient since some partial hypotheses can contain only local differences that will not influence future predictions. In this work, we introduce recombination in NMT decoding based on the concept of the “equivalence” of partial hypotheses. Heuristically, we use a simple n-gram suffix based equivalence function and adapt it into beam search decoding. Through experiments on large-scale Chinese-to-English and English-to-Germen translation tasks, we show that the proposed method can obtain similar translation quality with a smaller beam size, making NMT decoding more efficient.",
  "title": "Exploring Recombination for Efficient Decoding of Neural Machine Translation"
}