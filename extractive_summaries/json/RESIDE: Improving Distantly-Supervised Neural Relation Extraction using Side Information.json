{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1257–1266 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n1257"
  }, {
    "heading": "1 Introduction",
    "text": "The construction of large-scale Knowledge Bases (KBs) like Freebase (Bollacker et al., 2008) and Wikidata (Vrandečić and Krötzsch, 2014) has proven to be useful in many natural language processing (NLP) tasks like question-answering, web search, etc. However, these KBs are not exhaustive. Relation Extraction (RE) attempts to fill this gap by extracting semantic relationships between entity pairs from plain text. This task can be modeled as a simple classification problem after the entity pairs are specified. Formally, given an entity pair (e1,e2) from the KB and an entity annotated sentence (or instance), we aim to predict the\n∗Research internship at Indian Institute of Science.\nrelation r, from a predefined relation set, that exists between e1 and e2. If no relation exists, we simply label it NA.\nMost supervised relation extraction methods require large labeled training data which is expensive to construct. Distant Supervision (DS) (Mintz et al., 2009) helps with the construction of this dataset automatically, under the assumption that if two entities have a relationship in a KB, then all sentences mentioning those entities express the same relation. While this approach works well in generating large amounts of training instances, the DS assumption does not hold in all cases. Riedel et al. (2010); Hoffmann et al. (2011); Surdeanu et al. (2012) propose multi-instance based learning to relax this assumption. However, they use NLP tools to extract features, which can be noisy.\nRecently, neural models have demonstrated promising performance on RE. Zeng et al. (2014, 2015) employ Convolutional Neural Networks (CNN) to learn representations of instances. For alleviating noise in distant supervised datasets, attention has been utilized by (Lin et al., 2016; Jat et al., 2018). Syntactic information from dependency parses has been used by (Mintz et al., 2009; He et al., 2018) for capturing long-range dependencies between tokens. Recently proposed Graph Convolution Networks (GCN) (Defferrard et al., 2016) have been effectively employed for encoding this information (Marcheggiani and Titov, 2017; Bastings et al., 2017). However, all the above models rely only on the noisy instances from distant supervision for RE.\nRelevant side information can be effective for improving RE. For instance, in the sentence, Microsoft was started by Bill Gates., the type information of Bill Gates (person) and Microsoft (organization) can be helpful in predicting the correct relation founderOfCompany. This is because every relation constrains the type of its target en-\ntities. Similarly, relation phrase “was started by” extracted using Open Information Extraction (Open IE) methods can be useful, given that the aliases of relation founderOfCompany, e.g., founded, co-founded, etc., are available. KBs used for DS readily provide such information which has not been completely exploited by current models.\nIn this paper, we propose RESIDE, a novel distant supervised relation extraction method which utilizes additional supervision from KB through its neural network based architecture. RESIDE makes principled use of entity type and relation alias information from KBs, to impose soft constraints while predicting the relation. It uses encoded syntactic information obtained from Graph Convolution Networks (GCN), along with embedded side information, to improve neural relation extraction. Our contributions can be summarized as follows:\n• We propose RESIDE, a novel neural method which utilizes additional supervision from KB in a principled manner for improving distant supervised RE. • RESIDE uses Graph Convolution Networks\n(GCN) for modeling syntactic information and has been shown to perform competitively even with limited side information. • Through extensive experiments on benchmark\ndatasets, we demonstrate RESIDE’s effectiveness over state-of-the-art baselines.\nRESIDE’s source code and datasets used in the paper are available at http://github.com/ malllabiisc/RESIDE."
  }, {
    "heading": "2 Related Work",
    "text": "Distant supervision: Relation extraction is the task of identifying the relationship between two entity mentions in a sentence. In supervised paradigm, the task is considered as a multi-class classification problem but suffers from lack of large labeled training data. To address this limitation, (Mintz et al., 2009) propose distant supervision (DS) assumption for creating large datasets, by heuristically aligning text to a given Knowledge Base (KB). As this assumption does not always hold true, some of the sentences might be wrongly labeled. To alleviate this shortcoming, Riedel et al. (2010) relax distant supervision for multi-instance single-label learning. Subsequently, for handling overlapping relations between entities (Hoffmann et al., 2011; Surdeanu et al., 2012) propose multi-instance multi-label learning paradigm.\nNeural Relation Extraction: The performance of the above methods strongly rely on the quality of hand engineered features. Zeng et al. (2014)\npropose an end-to-end CNN based method which could automatically capture relevant lexical and sentence level features. This method is further improved through piecewise max-pooling by (Zeng et al., 2015). Lin et al. (2016); Nagarajan et al. (2017) use attention (Bahdanau et al., 2014) for learning from multiple valid sentences. We also make use of attention for learning sentence and bag representations.\nDependency tree based features have been found to be relevant for relation extraction (Mintz et al., 2009). He et al. (2018) use them for getting promising results through a recursive tree-GRU based model. In RESIDE, we make use of recently proposed Graph Convolution Networks (Defferrard et al., 2016; Kipf and Welling, 2017), which have been found to be quite effective for modelling syntactic information (Marcheggiani and Titov, 2017; Nguyen and Grishman, 2018; Vashishth et al., 2018a).\nSide Information in RE: Entity description from KB has been utilized for RE (Ji et al., 2017), but such information is not available for all entities. Type information of entities has been used by Ling and Weld (2012); Liu et al. (2014) as features in their model. Yaghoobzadeh et al. (2017) also attempt to mitigate noise in DS through their joint entity typing and relation extraction model. However, KBs like Freebase readily provide reliable type information which could be directly utilized. In our work, we make principled use of entity type and relation alias information obtained from KB. We also use unsupervised Open Information Extraction (Open IE) methods (Mausam et al., 2012; Angeli et al., 2015), which automatically discover possible relations without the need of any predefined ontology, which is used as a side information as defined in Section 5.2."
  }, {
    "heading": "3 Background: Graph Convolution Networks (GCN)",
    "text": "In this section, we provide a brief overview of Graph Convolution Networks (GCN) for graphs with directed and labeled edges, as used in (Marcheggiani and Titov, 2017)."
  }, {
    "heading": "3.1 GCN on Labeled Directed Graph",
    "text": "For a directed graph, G = (V, E), where V and E represent the set of vertices and edges respectively, an edge from node u to node v with label luv is represented as (u, v, luv). Since, informa-\ntion in directed edge does not necessarily propagate along its direction, following (Marcheggiani and Titov, 2017) we define an updated edge set E ′ which includes inverse edges (v, u, l−1uv ) and selfloops (u, u,>) along with the original edge set E , where > is a special symbol to denote self-loops. For each node v in G, we have an initial representation xv ∈ Rd, ∀v ∈ V . On employing GCN, we get an updated d-dimensional hidden representation hv ∈ Rd, ∀v ∈ V , by considering only its immediate neighbors (Kipf and Welling, 2017). This can be formulated as:\nhv = f  ∑ u∈N (v) (Wluvxu + bluv)  . Here, Wluv ∈ Rd×d and bluv ∈ Rd are label dependent model parameters which are trained based on the downstream task. N (v) refers to the set of neighbors of v based on E ′ and f is any non-linear activation function. In order to capture multihop neighborhood, multiple GCN layers can be stacked. Hidden representation of node v in this case after kth GCN layer is given as:\nhk+1v = f  ∑ u∈N (v) ( W kluvh k u + b k luv ) ."
  }, {
    "heading": "3.2 Integrating Edge Importance",
    "text": "In automatically constructed graphs, some edges might be erroneous and hence need to be discarded. Edgewise gating in GCN by (Bastings et al., 2017; Marcheggiani and Titov, 2017) allows us to alleviate this problem by subduing the noisy edges. This is achieved by assigning a relevance score to each edge in the graph. At kth layer, the importance of an edge (u, v, luv) is computed as:\ngkuv = σ ( hku · ŵkluv + b̂ k luv ) , (1)\nHere, ŵkluv ∈ R m and b̂kluv ∈ R are parameters which are trained and σ(·) is the sigmoid function. With edgewise gating, the final GCN embedding for a node v after kth layer is given as:\nhk+1v = f  ∑ u∈N (v) gkuv × ( W kluvh k u + b k luv ) . (2)"
  }, {
    "heading": "4 RESIDE Overview",
    "text": "In multi-instance learning paradigm, we are given a bag of sentences (or instances) {s1, s2, ...sn} for a given entity pair, the task is to predict the relation between them. RESIDE consists of three components for learning a representation of a given bag, which is fed to a softmax classifier. We briefly present the components of RESIDE below. Each component will be described in detail in the subsequent sections. The overall architecture of RESIDE is shown in Figure 1.\n1. Syntactic Sentence Encoding: RESIDE uses a Bi-GRU over the concatenated positional and word embedding for encoding the local context of each token. For capturing long-range dependencies, GCN over dependency tree is employed and its encoding is appended to the representation of each token. Finally, attention over tokens is used to subdue irrelevant tokens and get an embedding for the entire sentence. More details in Section 5.1.\n2. Side Information Acquisition: In this module, we use additional supervision from KBs and utilize Open IE methods for getting relevant side information. This information is later utilized by the model as described in Section 5.2.\n3. Instance Set Aggregation: In this part, sentence representation from syntactic sentence encoder is concatenated with the matched relation embedding obtained from the previous step. Then, using attention over sentences, a representation for the entire bag is learned. This is then concatenated with entity type embedding before feeding into the softmax classifier for relation prediction. Please refer to Section 5.3 for more details."
  }, {
    "heading": "5 RESIDE Details",
    "text": "In this section, we provide the detailed description of the components of RESIDE."
  }, {
    "heading": "5.1 Syntactic Sentence Encoding",
    "text": "For each sentence in the bag si with m tokens {w1, w2, ...wm}, we first represent each token by k-dimensional GloVe embedding (Pennington et al., 2014). For incorporating relative position of tokens with respect to target entities, we use p-dimensional position embeddings, as used by\n(Zeng et al., 2014). The combined token embeddings are stacked together to get the sentence representationH ∈ Rm×(k+2p). Then, using Bi-GRU (Cho et al., 2014) over H, we get the new sentence representationHgru ∈ Rm×dgru , where dgru is the hidden state dimension. Bi-GRUs have been found to be quite effective in encoding the context of tokens in several tasks (Sutskever et al., 2014; Graves et al., 2013).\nAlthough Bi-GRU is capable of capturing local context, it fails to capture long-range dependencies which can be captured through dependency edges. Prior works (Mintz et al., 2009; He et al., 2018) have exploited features from syntactic dependency trees for improving relation extraction. Motivated by their work, we employ Syntactic Graph Convolution Networks for encoding this information. For a given sentence, we generate its dependency tree using Stanford CoreNLP (Manning et al., 2014). We then run GCN over the dependency graph and use Equation 2 for updating the embeddings, taking Hgru as the input. Since dependency graph has 55 different edge labels, incorporating all of them overparameterizes the model significantly. Therefore, following (Marcheggiani and Titov, 2017; Nguyen and Grishman, 2018; Vashishth et al., 2018a) we use only three edge labels based on the direction of the edge {forward (→), backward (←), selfloop (>)}. We define the new edge label Luv for an edge (u, v, luv) as follows:\nLuv =  → if edge exists in dependency parse ← if edge is an inverse edge > if edge is a self-loop\nFor each token wi, GCN embedding h gcn ik+1 ∈ Rdgcn after kth layer is defined as:\nhgcnik+1 = f ( ∑ u∈N (i) gkiu × ( W kLiuh gcn uk + bkLiu )) .\nHere, gkiu denotes edgewise gating as defined in Equation 1 and Liu refers to the edge label defined above. We use ReLU as activation function f , throughout our experiments. The syntactic graph encoding from GCN is appended to Bi-GRU output to get the final token representation, hconcati as [hgrui ;h gcn ik+1\n]. Since, not all tokens are equally relevant for RE task, we calculate the degree of relevance of each token using attention as used in\n(Jat et al., 2018). For token wi in the sentence, attention weight αi is calculated as:\nαi = exp(ui)∑m j=1 exp(uj) where, ui = hconcati · r.\nwhere r is a random query vector and ui is the relevance score assigned to each token. Attention values {αi} are calculated by taking softmax over {ui}. The representation of a sentence is given as a weighted sum of its tokens, s =∑m\nj=1 αih concat i ."
  }, {
    "heading": "5.2 Side Information Acquisition",
    "text": "Relevant side information has been found to improve performance on several tasks (Ling and Weld, 2012; Vashishth et al., 2018b). In distant supervision based relation extraction, since the entities are from a KB, knowledge about them can be utilized to improve relation extraction. Moreover, several unsupervised relation extraction methods (Open IE) (Angeli et al., 2015; Mausam et al., 2012) allow extracting relation phrases between target entities without any predefined ontology and thus can be used to obtain relevant side information. In RESIDE, we employ Open IE methods and additional supervision from KB for improving neural relation extraction.\nRelation Alias Side Information RESIDE uses Stanford Open IE (Angeli et al., 2015) for extracting relation phrases between target entities, which we denote by P . As shown in Figure 2, for the sentence Matt Coffin, executive of\nlowermybills, a company.., Open IE methods extract “executive of” between Matt Coffin and lowermybills. Further, we extend P by including tokens at one hop distance in dependency path from target entities. Such features from dependency parse have been exploited in the past by (Mintz et al., 2009; He et al., 2018). The degree of match between the extracted phrases in P and aliases of a relation can give important clues about the relevance of that relation for the sentence. Several KBs like Wikidata provide such relation aliases, which can be readily exploited. In RESIDE, we further expand the relation alias set using Paraphrase database (PPDB) (Pavlick et al., 2015). We note that even for cases when aliases for relations are not available, providing only the names of relations give competitive performance. We shall explore this point further in Section 7.3.\nFor matching P with the PPDB expanded relation alias setR, we project both in a d-dimensional space using GloVe embeddings (Pennington et al., 2014). Projecting phrases using word embeddings helps to further expand these sets, as semantically similar words are closer in embedding space (Mikolov et al., 2013; Pennington et al., 2014). Then, for each phrase p ∈ P , we calculate its cosine distance from all relation aliases inR and take the relation corresponding to the closest relation alias as a matched relation for the sentence. We use a threshold on cosine distance to remove noisy aliases. In RESIDE, we define a kr-dimensional embedding for each relation which we call as matched relation embedding (hrel). For a given sentence, hrel is concatenated with its representa-\ntion s, obtained from syntactic sentence encoder (Section 5.1) as shown in Figure 1. For sentences with |P| > 1, we might get multiple matched relations. In such cases, we take the average of their embeddings. We hypothesize that this helps in improving the performance and find it to be true as shown in Section 7.\nEntity Type Side Information Type information of target entities has been shown to give promising results on relation extraction (Ling and Weld, 2012; Yaghoobzadeh et al., 2017). Every relation puts some constraint on the type of entities which can be its subject and object. For example, the relation person/place of birth can only occur between a person and a location. Sentences in distance supervision are based on entities in KBs, where the type information is readily available.\nIn RESIDE, we use types defined by FIGER (Ling and Weld, 2012) for entities in Freebase. For each type, we define a kt-dimensional embedding which we call as entity type embedding (htype). For cases when an entity has multiple types in different contexts, for instance, Paris may have types government and location, we take the average over the embeddings of each type. We concatenate the entity type embedding of target entities to the final bag representation before using it for relation classification. To avoid over-parameterization, instead of using all fine-grained 112 entity types, we use 38 coarse types which form the first hierarchy of FIGER types."
  }, {
    "heading": "5.3 Instance Set Aggregation",
    "text": "For utilizing all valid sentences, following (Lin et al., 2016; Jat et al., 2018), we use attention over sentences to obtain a representation for the entire bag. Instead of directly using the sentence representation si from Section 5.1, we concatenate the embedding of each sentence with matched relation embedding hreli as obtained from Section 5.2. The attention score αi for ith sentence is formulated as:\nαi = exp(ŝi · q)∑n j=1 exp(ŝj · q) where, ŝi = [si;hreli ].\nhere q denotes a random query vector. The bag representation B, which is the weighted sum of its sentences, is then concatenated with the entity type embeddings of the subject (htypesub ) and object\n(htypeobj ) from Section 5.2 to obtain B̂.\nB̂ = [B;htypesub ;h type obj ] where, B = n∑ i=1 αiŝi.\nFinally, B̂ is fed to a softmax classifier to get the probability distribution over the relations.\np(y) = Softmax(W · B̂ + b)."
  }, {
    "heading": "6 Experimental Setup",
    "text": ""
  }, {
    "heading": "6.1 Datasets",
    "text": "In our experiments, we evaluate the models on Riedel and Google Distant Supervision (GIDS) dataset. Statistics of the datasets is summarized in Table 1. Below we described each in detail1.\n1. Riedel: The dataset is developed by (Riedel et al., 2010) by aligning Freebase relations with New York Times (NYT) corpus, where sentences from the year 2005-2006 are used for creating the training set and from the year 2007 for the test set. The entity mentions are annotated using Stanford NER (Finkel et al., 2005) and are linked to Freebase. The dataset has been widely used for RE by (Hoffmann et al., 2011; Surdeanu et al., 2012) and more recently by (Lin et al., 2016; Feng et al.; He et al., 2018).\n2. GIDS: Jat et al. (2018) created Google Distant Supervision (GIDS) dataset by extending the Google relation extraction corpus2 with additional instances for each entity pair. The dataset assures that the at-least-one assumption of multi-instance learning, holds. This makes automatic evaluation more reliable and thus removes the need for manual verification.\n1Data splits and hyperparameters are in supplementary. 2https://research.googleblog.com/2013/04/50000-\nlessons-on-how-to-read-relation.html"
  }, {
    "heading": "6.2 Baselines",
    "text": "For evaluating RESIDE, we compare against the following baselines:\n• Mintz: Multi-class logistic regression model proposed by (Mintz et al., 2009) for distant supervision paradigm. • MultiR: Probabilistic graphical model for multi\ninstance learning by (Hoffmann et al., 2011) • MIMLRE: A graphical model which jointly\nmodels multiple instances and multiple labels. More details in (Surdeanu et al., 2012). • PCNN: A CNN based relation extraction model\nby (Zeng et al., 2015) which uses piecewise max-pooling for sentence representation. • PCNN+ATT: A piecewise max-pooling over\nCNN based model which is used by (Lin et al., 2016) to get sentence representation followed by attention over sentences. • BGWA: Bi-GRU based relation extraction\nmodel with word and sentence level attention (Jat et al., 2018). • RESIDE: The method proposed in this paper,\nplease refer Section 5 for more details."
  }, {
    "heading": "6.3 Evaluation Criteria",
    "text": "Following the prior works (Lin et al., 2016; Feng et al.), we evaluate the models using held-out evaluation scheme. This is done by comparing the relations discovered from test articles with those in Freebase. We evaluate the performance of models with Precision-Recall curve and top-N precision (P@N) metric in our experiments."
  }, {
    "heading": "7 Results",
    "text": "In this section we attempt to answer the following questions:\nQ1. Is RESIDE more effective than existing approaches for distant supervised RE? (7.1)\nQ2. What is the effect of ablating different components on RESIDE’s performance? (7.2)\nQ3. How is the performance affected in the absence of relation alias information? (7.3)"
  }, {
    "heading": "7.1 Performance Comparison",
    "text": "For evaluating the effectiveness of our proposed method, RESIDE, we compare it against the baselines stated in Section 6.2. We use only the neural baselines on GIDS dataset. The Precision-Recall curves on Riedel and GIDS are presented in Figure 3. Overall, we find that RESIDE achieves higher precision over the entire recall range on both the datasets. All the non-neural baselines could not perform well as the features used by them are mostly derived from NLP tools which can be erroneous. RESIDE outperforms PCNN+ATT and BGWA which indicates that incorporating side information helps in improving the performance of the model. The higher performance of BGWA and PCNN+ATT over PCNN shows that attention helps in distant supervised RE. Following (Lin et al., 2016; Liu et al., 2017), we also evaluate our method with different number of sentences. Results summarized in Table 2, show the improved precision of RESIDE in all test settings, as compared to the neural baselines, which demonstrates\nthe efficacy of our model."
  }, {
    "heading": "7.2 Ablation Results",
    "text": "In this section, we analyze the effect of various components of RESIDE on its performance. For this, we evaluate various versions of our model with cumulatively removed components. The experimental results are presented in Figure 4. We observe that on removing different components from RESIDE, the performance of the model degrades drastically. The results validate that GCNs are effective at encoding syntactic information. Further, the improvement from side information shows that it is complementary to the features extracted from text, thus validating the central thesis of this paper, that inducing side information leads to improved relation extraction."
  }, {
    "heading": "7.3 Effect of Relation Alias Side Information",
    "text": "In this section, we test the performance of the model in setting where relation alias information is not readily available. For this, we evaluate the performance of the model on four different settings: • None: Relation aliases are not available.\n• One: The name of relation is used as its alias. • One+PPDB: Relation name extended using\nParaphrase Database (PPDB). • All: Relation aliases from Knowledge Base3\nThe overall results are summarized in Figure 5. We find that the model performs best when aliases are provided by the KB itself. Overall, we find that RESIDE gives competitive performance even when very limited amount of relation alias information is available. We observe that performance improves further with the availability of more alias information."
  }, {
    "heading": "8 Conclusion",
    "text": "In this paper, we propose RESIDE, a novel neural network based model which makes principled use of relevant side information, such as entity type and relation alias, from Knowledge Base, for improving distant supervised relation extraction. RESIDE employs Graph Convolution Networks for\n3Each relation in Riedel dataset is manually mapped to corresponding Wikidata property for getting relation aliases. Few examples are presented in supplementary material.\nencoding syntactic information of sentences and is robust to limited side information. Through extensive experiments on benchmark datasets, we demonstrate RESIDE’s effectiveness over stateof-the-art baselines. We have made RESIDE’s source code publicly available to promote reproducible research."
  }, {
    "heading": "Acknowledgements",
    "text": "We thank the anonymous reviewers for their constructive comments. This work is supported in part by the Ministry of Human Resource Development (Government of India), CAIR (DRDO) and by a gift from Google."
  }],
  "year": 2018,
  "references": [{
    "title": "Leveraging linguistic structure for open domain information extraction",
    "authors": ["Gabor Angeli", "Melvin Jose Johnson Premkumar", "Christopher D. Manning."],
    "venue": "ACL (1), pages 344–354. The Association for Computer Linguistics.",
    "year": 2015
  }, {
    "title": "Neural machine translation by jointly learning to align and translate",
    "authors": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."],
    "venue": "arXiv e-prints, abs/1409.0473.",
    "year": 2014
  }, {
    "title": "Graph convolutional encoders for syntax-aware neural machine translation",
    "authors": ["Joost Bastings", "Ivan Titov", "Wilker Aziz", "Diego Marcheggiani", "Khalil Simaan."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language",
    "year": 2017
  }, {
    "title": "Freebase: A collaboratively created graph database for structuring human knowledge",
    "authors": ["Kurt Bollacker", "Colin Evans", "Praveen Paritosh", "Tim Sturge", "Jamie Taylor."],
    "venue": "Proceedings of the 2008 ACM SIGMOD International Conference on Man-",
    "year": 2008
  }, {
    "title": "Learning phrase representations using rnn encoder–decoder for statistical machine translation",
    "authors": ["Kyunghyun Cho", "Bart van Merrienboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio."],
    "venue": "Proceedings of",
    "year": 2014
  }, {
    "title": "Convolutional neural networks on graphs with fast localized spectral filtering",
    "authors": ["Michaël Defferrard", "Xavier Bresson", "Pierre Vandergheynst."],
    "venue": "Proceedings of the 30th International Conference on Neural Information Processing Systems, NIPS’16,",
    "year": 2016
  }, {
    "title": "Incorporating non-local information into information extraction systems by gibbs sampling",
    "authors": ["Jenny Rose Finkel", "Trond Grenager", "Christopher Manning."],
    "venue": "Proceedings of the 43rd annual meeting on association for computational linguistics,",
    "year": 2005
  }, {
    "title": "Speech recognition with deep recurrent neural networks",
    "authors": ["A. Graves", "A. r. Mohamed", "G. Hinton."],
    "venue": "2013 IEEE International Conference on Acoustics, Speech and Signal Processing, pages 6645–6649.",
    "year": 2013
  }, {
    "title": "2018. See: Syntax-aware entity embedding for neural relation extraction",
    "authors": ["Zhengqiu He", "Wenliang Chen", "Zhenghua Li", "Meishan Zhang", "Wei Zhang", "Min Zhang"],
    "year": 2018
  }, {
    "title": "Knowledgebased weak supervision for information extraction of overlapping relations",
    "authors": ["Raphael Hoffmann", "Congle Zhang", "Xiao Ling", "Luke Zettlemoyer", "Daniel S Weld."],
    "venue": "Proceedings of the 49th Annual Meeting of the Association for Computa-",
    "year": 2011
  }, {
    "title": "Improving Distantly Supervised Relation Extraction using Word and Entity Based Attention",
    "authors": ["S. Jat", "S. Khandelwal", "P. Talukdar."],
    "venue": "ArXiv e-prints.",
    "year": 2018
  }, {
    "title": "Distant supervision for relation extraction with sentence-level attention and entity descriptions",
    "authors": ["Guoliang Ji", "Kang Liu", "Shizhu He", "Jun Zhao."],
    "venue": "AAAI.",
    "year": 2017
  }, {
    "title": "Semisupervised classification with graph convolutional networks",
    "authors": ["Thomas N. Kipf", "Max Welling."],
    "venue": "International Conference on Learning Representations (ICLR).",
    "year": 2017
  }, {
    "title": "Neural relation extraction with selective attention over instances",
    "authors": ["Yankai Lin", "Shiqi Shen", "Zhiyuan Liu", "Huanbo Luan", "Maosong Sun."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Pa-",
    "year": 2016
  }, {
    "title": "Fine-grained entity recognition",
    "authors": ["Xiao Ling", "Daniel S. Weld."],
    "venue": "Proceedings of the TwentySixth AAAI Conference on Artificial Intelligence, AAAI’12, pages 94–100. AAAI Press.",
    "year": 2012
  }, {
    "title": "A soft-label method for noisetolerant distantly supervised relation extraction",
    "authors": ["Tianyu Liu", "Kexiang Wang", "Baobao Chang", "Zhifang Sui."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages",
    "year": 2017
  }, {
    "title": "Exploring fine-grained entity type constraints for distantly supervised relation extraction",
    "authors": ["Yang Liu", "Kang Liu", "Liheng Xu", "Jun Zhao."],
    "venue": "COLING.",
    "year": 2014
  }, {
    "title": "The Stanford CoreNLP natural language processing toolkit",
    "authors": ["Christopher D. Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J. Bethard", "David McClosky."],
    "venue": "Association for Computational Linguistics (ACL) System Demonstrations,",
    "year": 2014
  }, {
    "title": "Encoding sentences with graph convolutional networks for semantic role labeling",
    "authors": ["Diego Marcheggiani", "Ivan Titov."],
    "venue": "CoRR, abs/1703.04826.",
    "year": 2017
  }, {
    "title": "Open language learning for information extraction",
    "authors": ["Mausam", "Michael Schmitz", "Robert Bart", "Stephen Soderland", "Oren Etzioni."],
    "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational",
    "year": 2012
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg Corrado", "Jeffrey Dean."],
    "venue": "Proceedings of the 26th International Conference on Neural Information Processing Systems -",
    "year": 2013
  }, {
    "title": "Distant supervision for relation extraction without labeled data",
    "authors": ["Mike Mintz", "Steven Bills", "Rion Snow", "Dan Jurafsky."],
    "venue": "Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on",
    "year": 2009
  }, {
    "title": "Candis: Coupled & attention-driven neural distant supervision",
    "authors": ["Tushar Nagarajan", "Sharmistha Jat", "Partha Talukdar."],
    "venue": "CoRR, abs/1710.09942.",
    "year": 2017
  }, {
    "title": "Graph convolutional networks with argument-aware pooling for event detection",
    "authors": ["Thien Nguyen", "Ralph Grishman"],
    "year": 2018
  }, {
    "title": "PPDB 2.0: Better paraphrase ranking, finegrained entailment relations, word embeddings, and style classification",
    "authors": ["Ellie Pavlick", "Pushpendre Rastogi", "Juri Ganitkevitch", "Benjamin Van Durme", "Chris Callison-Burch"],
    "year": 2015
  }, {
    "title": "Glove: Global vectors for",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning"],
    "year": 2014
  }, {
    "title": "Modeling relations and their mentions without labeled text",
    "authors": ["Sebastian Riedel", "Limin Yao", "Andrew McCallum."],
    "venue": "Joint European Conference on Machine Learning and Knowledge Discovery in Databases, pages 148–163. Springer.",
    "year": 2010
  }, {
    "title": "Multi-instance multi-label learning for relation extraction",
    "authors": ["Mihai Surdeanu", "Julie Tibshirani", "Ramesh Nallapati", "Christopher D Manning."],
    "venue": "Proceedings of the 2012 joint conference on empirical methods in natural language processing and compu-",
    "year": 2012
  }, {
    "title": "Sequence to sequence learning with neural networks",
    "authors": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V. Le."],
    "venue": "Proceedings of the 27th International Conference on Neural Information Processing Systems - Volume 2, NIPS’14, pages 3104–3112, Cam-",
    "year": 2014
  }, {
    "title": "Dating documents using graph convolution networks",
    "authors": ["Shikhar Vashishth", "Shib Sankar Dasgupta", "Swayambhu Nath Ray", "Partha Talukdar."],
    "venue": "56th Annual Meeting of the Association for Computational Linguistics (ACL 2018),",
    "year": 2018
  }, {
    "title": "Cesi: Canonicalizing open knowledge bases using embeddings and side information",
    "authors": ["Shikhar Vashishth", "Prince Jain", "Partha Talukdar."],
    "venue": "Proceedings of the 2018 World Wide Web Conference, WWW ’18, pages 1317–1327, Republic and Canton",
    "year": 2018
  }, {
    "title": "Wikidata: A free collaborative knowledgebase",
    "authors": ["Denny Vrandečić", "Markus Krötzsch."],
    "venue": "Commun. ACM, 57(10):78–85.",
    "year": 2014
  }, {
    "title": "Noise mitigation for neural entity typing and relation extraction",
    "authors": ["Yadollah Yaghoobzadeh", "Heike Adel", "Hinrich Schütze."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume",
    "year": 2017
  }, {
    "title": "Distant supervision for relation extraction via piecewise convolutional neural networks",
    "authors": ["Daojian Zeng", "Kang Liu", "Yubo Chen", "Jun Zhao."],
    "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1753–",
    "year": 2015
  }, {
    "title": "Relation classification via convolutional deep neural network",
    "authors": ["Daojian Zeng", "Kang Liu", "Siwei Lai", "Guangyou Zhou", "Jun Zhao."],
    "venue": "Proceedings of COLING 2014, the 25th International Conference on Computational Linguistics: Technical Papers,",
    "year": 2014
  }],
  "id": "SP:ccd127b676d805fcdcefeb0e42c8f55acbaf7fe3",
  "authors": [{
    "name": "Shikhar Vashishth",
    "affiliations": []
  }, {
    "name": "Rishabh Joshi",
    "affiliations": []
  }, {
    "name": "Sai Suman Prayaga",
    "affiliations": []
  }, {
    "name": "Chiranjib Bhattacharyya",
    "affiliations": []
  }, {
    "name": "Partha Talukdar",
    "affiliations": []
  }],
  "abstractText": "Distantly-supervised Relation Extraction (RE) methods train an extractor by automatically aligning relation instances in a Knowledge Base (KB) with unstructured text. In addition to relation instances, KBs often contain other relevant side information, such as aliases of relations (e.g., founded and co-founded are aliases for the relation founderOfCompany). RE models usually ignore such readily available side information. In this paper, we propose RESIDE, a distantly-supervised neural relation extraction method which utilizes additional side information from KBs for improved relation extraction. It uses entity type and relation alias information for imposing soft constraints while predicting relations. RESIDE employs Graph Convolution Networks (GCN) to encode syntactic information from text and improves performance even when limited side information is available. Through extensive experiments on benchmark datasets, we demonstrate RESIDE’s effectiveness. We have made RESIDE’s source code available to encourage reproducible research.",
  "title": "RESIDE: Improving Distantly-Supervised Neural Relation Extraction using Side Information"
}