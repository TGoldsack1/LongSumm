{
  "sections": [{
    "text": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 659–669 Copenhagen, Denmark, September 7–11, 2017. c©2017 Association for Computational Linguistics"
  }, {
    "heading": "1 Introduction",
    "text": "Distributed word embeddings represent words as dense, low-dimensional and real-valued vectors that can capture their semantic and syntactic properties. These embeddings are used abundantly by machine learning algorithms in tasks such as text classification and clustering. Traditional bagof-word models that represent words as indices into a vocabulary don’t account for word ordering and long-distance semantic relations. Representations based on neural network language models\n*Represents equal contribution\n(Mikolov et al., 2013b) can overcome these flaws and further reduce the dimensionality of the vectors. The success of the method is recently mathematically explained using the random walk on discourses model (Arora et al., 2016a). However, there is a need to extend word embeddings to entire paragraphs and documents for tasks such as document and short-text classification.\nRepresenting entire documents in a dense, lowdimensional space is a challenge. A simple weighted average of the word embeddings in a large chunk of text ignores word ordering, while a parse tree based combination of embeddings (Socher et al., 2013) can only extend to sentences. (Le and Mikolov, 2014) trains word and paragraph vectors to predict context but shares wordembeddings across paragraphs. However, words can have different semantic meanings in different contexts. Hence, vectors of two documents that contain the same word in two distinct senses need to account for this distinction for an accurate semantic representation of the documents. (Ling et al., 2015), (Liu et al., 2015a) map word embeddings to a latent topic space to capture different senses in which words occur. However, they represent complex documents in the same space as words, reducing their expressive power. These methods are also computationally intensive.\nIn this work, we propose the Sparse Composite Document Vector(SCDV) representation learning technique to address these challenges and create efficient, accurate and robust semantic representations of large texts for document classification tasks. SCDV combines syntax and semantics learnt by word embedding models together with a latent topic model that can handle different senses of words, thus enhancing the expressive power of document vectors. The topic space is learnt efficiently using a soft clustering technique over embeddings and the final document vectors are made\n659\nsparse for reduced time and space complexity in tasks that consume these vectors.\nThe remaining part of the paper is organized as follows. Section 2 discusses related work in document representations. Section 3 introduces and explains SCDV in detail. This is followed by extensive and rigorous experiments together with analysis in section 4 and 5 respectively."
  }, {
    "heading": "2 Related Work",
    "text": "(Le and Mikolov, 2014) proposed two models for distributional representation of a document, namely, Distributed Memory Model Paragraph Vectors (PV-DM) and Distributed BoWs paragraph vectors (PV-DBoW). In PV-DM, the model is learned to predict the next context word using word and paragraph vectors. In PV-DBoW, the paragraph vector is directly learned to predict randomly sampled context words. In both models, word vectors are shared across paragraphs. While word vectors capture semantics across different paragraphs of the text, documents vectors are learned over context words generated from the same paragraph and potentially capture only local semantics (Singh and Mukerjee, 2015). Moreover, a paragraph vector is embedded in the same space as word vectors though it can contain multiple topics and words with multiple senses. As a result, doc2vec (Le and Mikolov, 2014) doesn’t perform well on Information Retrieval as described in (Ai et al., 2016a) and (Roy et al., 2016). Consequently, we expect a paragraph vector to be embedded in a higher dimensional space.\nA paragraph vector also assumes all words contribute equally, both quantitatively (weight) and qualitatively (meaning). They ignore the importance and distinctiveness of a word across all documents (Singh and Mukerjee, 2015). Mukerjee et al. (Singh and Mukerjee, 2015) proposed idfweighted averaging of word vectors to form document vectors. This method tries to address the above problem. However, it assumes that all words within a document belong to the same semantic topic. Intuitively, a paragraph often has words originating from several semantically different topics. In fact, Latent Dirichlet Allocation (Blei et al., 2003) models a document as a distribution of multiple topics.\nThese shortcomings are addressed in three novel composite document representations called Topical word embedding (TWE-1,TWE-2 and\nTWE-3) by (Liu et al., 2015a). TWE-1 learns word and topic embeddings by considering each topic as a pseudo word and builds the topical word embedding for each word-topic assignment. Here, the interaction between a word and the topic to which it is assigned is not considered. TWE-2 learns a topical word embedding for each word-topic assignment directly, by considering each word- topic pair as a pseudo word. Here, the interaction between a word and its assigned topic is considered but the vocabulary of pseudo-words blows up. For each word and each topic, TWE-3 builds distinct embeddings for the topic and word and concatenates them for each word-topic assignment. Here, the word embeddings are influenced by the corresponding topic embeddings, making words in the same topic less discriminative.\n(Liu et al., 2015a) proposed an architecture called Neural tensor skip-gram model (NTSG-1, NTSG-2, NTSG-3, NTSG-4), that learns multiprototype word embeddings and uses a tensor layer to model the interaction of words and topics to capture different senses. NTSG outperforms other embedding methods like TWE−1 on the 20 newsgroup data-set by modeling contextsensitive embeddings in addition to topical-word embeddings. LTSG (Law et al., 2017) builds on NTSG by jointly learning the latent topic space and context-sensitive word embeddings. All three, TWE, NTSG and LTSG use LDA and suffer from computational issues like large training time, prediction time and storage space. They also embed document vectors in the same space as terms. Other works that harness topic modeling likeWTM (Fu et al., 2016),w2v−LDA (Nguyen et al., 2015), TV + MeanWV (Li et al., 2016a), LTSG (Law et al., 2017), Gaussian − LDA (Das et al., 2015), Topic2V ec (Niu et al., 2015), (Moody, 2016) andMvTM (Li et al., 2016b) also suffer from similar issues.\n(Gupta et al., 2016) proposed a method to form a composite document vector using word embeddings and tf-idf values, called the Bag of Words Vector (BoWV). In BoWV , each document is represented by a vector of dimensionD = K ∗d+K, where K is the number of clusters and d is the dimension of the word embeddings. The core idea behind BoWV is that semantically different words belong to different topics and their word vectors should not be averaged. Further, BoWV computes inverse cluster frequency of each clus-\nter (icf) by averaging the idf values of its member terms to capture the importance of words in the corpus. However,BoWV does hard clustering using K-means algorithm, assigning each word to only one cluster or semantic topic but a word can belong to multiple topics. For example, the word apple belongs to topic food as a fruit, and belongs to topic Information Technology as an IT company. Moreover, BoWV is a non-sparse, high dimensional continuous vector and suffers from computational problems like large training time, prediction time and storage requirements."
  }, {
    "heading": "3 Sparse Composite Document Vectors",
    "text": "In this section, we present the proposed Sparse Composite Document Vector (SCDV) representation as a novel document vector learning algorithm. The feature formation algorithm can be divided into three steps."
  }, {
    "heading": "3.1 Word Vector Clustering",
    "text": "We begin by learning d dimensional word vector representations for every word in the vocabulary V using the skip-gram algorithm with negative sampling (SGNS) (Mikolov et al., 2013a). We then cluster these word embeddings using the Gaussian Mixture Models(GMM) (Reynolds, 2015) soft clustering technique. The number of clusters, K, to be formed is a parameter of the SCDV model. By inducing soft clusters, we ensure that each word belongs to every cluster with some probability P (ck|wi).\np(ck = 1) = πk\np(ck = 1|w) = πkN (w|µk,Σk)ΣKj=1πjN (w|µj ,Σj)"
  }, {
    "heading": "3.2 Document Topic-vector Formation",
    "text": "For each word wi, we create K different wordcluster vectors of d dimensions ( ~wcvik) by weighting the word’s embedding with its probability distribution in the kth cluster, P (ck|wi). We then concatenate all K word-cluster vectors ( ~wcvik) into a K×d dimensional embedding and weight it with inverse document frequency of wi to form a word-topics vector ( ~wtvi). Finally, for all words appearing in document Dn, we sum their wordtopic vectors ~wtvi to obtain the document vector ~dvDn .\n~wcvik = ~wvi × P (ck|wi)\nAlgorithm 1: Sparse Composite Document Vector Data: Documents Dn, n = 1 . . . N Result: Document vectors ~SCDVDn , n = 1\n. . . N 1 Obtain word vector ( ~wvi), for each word wi; 2 Calculate idf values, idf(wi), i = 1..|V | ;\n/* |V | is vocabulary size */ 3 Cluster word vectors ~wv using GMM\nclustering into K clusters; 4 Obtain soft assignment P (ck|wi) for word wi\nand cluster ck; /* Loop 5-10 can be\npre-computed */ 5 for each word wi in vocabulary V do 6 for each cluster ck do 7 ~wcvik = ~wvi × P (ck|wi); 8 end 9 ~wtvi = idf(wi) × ⊕K k=1 ~wcvik ;\n/* ⊕ is concatenation */\n10 end 11 for n ∈ (1..N) do 12 Initialize document vector ~dvDn = ~0; 13 for word wi in Dn do 14 ~dvDn += ~wtvi; 15 end 16 ~SCDVDn = make-sparse( ~dvDn);\n/* as mentioned in sec 3 */\n17 end\n~wtvi = idf(wi)× K⊕\nk=1\n~wcvik\nwhere, ⊕ is concatenation"
  }, {
    "heading": "3.3 Sparse Document Vectors",
    "text": "After normalizing the vector, we observed that most values in ~dvDn are very close to zero. Figure 3 verifies this observation. We utilize this fact to make the document vector ~dvDn sparse by zeroing attribute values whose absolute value is close to a threshold (specified as a parameter), which results in the Sparse Composite Document Vector ~SCDVDn . In particular, let p be percentage sparsity threshold parameter, ai the value of the ith attribute of the non-Sparse Composite Document Vector and n represent the nth document in the training set:\nai = { ai if |ai| ≥ p100 ∗ t 0 otherwise\nt = |amin|+ |amax|\n2\namin = avgn(mini(ai))\namax = avgn(maxi(ai))\nFlowcharts depicting the formation of wordtopics vector and Sparse Composite Document Vectors are shown in figure 1 and figure 2 respectively. Algorithm 1 describes SCDV in detail."
  }, {
    "heading": "4 Experiments",
    "text": "We perform multiple experiments to show the effectiveness of SCDV representations for multiclass and multi-label text classification. For all experiments and baselines, we use Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz, 40 working cores, 128GB RAM machine with Linux Ubuntu 14.4. However, we utilize multiple cores only during Word2Vec training and when we run the one-vsrest classifier for Reuters."
  }, {
    "heading": "4.1 Baselines",
    "text": "We consider the following baselines: Bag-ofWords (BoW) model (Harris, 1954), Bag of Word Vector (BoWV) (Gupta et al., 2016) model, paragraph vector models (Le and Mikolov, 2014), Topical word embeddings (TWE-1) (Liu et al., 2015b), Neural Tensor Skip-Gram Model (NTSG1 to NTSG-3) (Liu et al., 2015a), tf-idf weighted average word-vector model (Singh and Mukerjee, 2015) and weighted Bag of Concepts (weightBoC) (Kim et al., 2017), where we build topicdocument vectors by counting the member words in each topic.\nWe use the best parameter settings as reported in all our baselines to generate their results. We use 200 dimensions for tf-idf weighted word-vector model, 400 for paragraph vector model, 80 topics and 400 dimensional vectors for TWE, NTSG, LTSG and 60 topics and 200 dimensional word vectors for BOWV. We also compare our results with reported results of other topic modeling based document embedding methods like WTM (Fu et al., 2016), w2v − LDA (Nguyen et al., 2015), LDA (Chen and Liu, 2014), TV + MeanWV (Li et al., 2016a), LTSG (Law et al., 2017), Gaussian−LDA (Das et al., 2015), Topic2V ec (Niu et al., 2015), (Moody, 2016) andMvTM (Li et al., 2016b). Implementation of SCDV and related experiments is available here 1."
  }, {
    "heading": "4.2 Text Classification",
    "text": "We run multi-class experiments on 20NewsGroup dataset 2 and multi-label classification experiments on Reuters-21578 dataset 3. We use the script4 for preprocessing the Reuters-21578 dataset. We use LinearSVM for multi-class classi-\n1https://github.com/dheeraj7596/SCDV 2http://qwone.com/∼jason/20Newsgroups/ 3https://goo.gl/NrOfu 4 https://gist.github.com/herrfz/7967781\nfication and Logistic regression with OneVsRest setting for multi-label classification in baselines and SCDV.\nFor SCDV, we set the dimension of wordembeddings to 200 and the number of mixture components in GMM to 60. All mixture components share the same spherical co-variance matrix. We learn word vector embedding using SkipGram with window size of 10, Negative Sampling (SGNS) of 10 and minimum word frequency as 20. We use 5-fold cross-validation on F1 score to tune parameter C of SVM and the sparsity threshold for SCDV."
  }, {
    "heading": "4.2.1 Multi-class classification",
    "text": "We evaluate classifier performance using standard metrics like accuracy, macro-averaging precision, recall and F-measure. Table 1 shows a comparison with the current state-of-art (NTSG) document representations on the 20Newsgroup dataset. We observe that SCDV outperforms all other current models by fair margins. We also present the classwise precision and recall for 20Newsgroup on an almost balanced dataset with SVM over Bag of Words model and the SCDV embeddings in Table 2 and observe that SCDV improves consistently over all classes."
  }, {
    "heading": "4.2.2 Multi-label classification",
    "text": "We evaluate multi-label classification performance using Precision@K, nDCG@k (Bhatia et al., 2015), Coverage error, Label ranking average precision score (LRAPS)5 and F1-score. All measures are extensively used for the multilabel classification task. However, F1-score is an appropriate metric for multi-label classification as it considers label biases when train-test splits are random. Table 3 show evaluation results for multi-label text classification on the Reuters21578 dataset."
  }, {
    "heading": "4.2.3 Effect of Hyper-Parameters",
    "text": "SCDV has three parameters: the number of clusters, word vector dimension and sparsity threshold parameter. We vary one parameter by keeping the other two constant. Performance on varying all three parameters in shown in Figure 4. We observe that performance improves as we increase the number of clusters and saturates at 60. The performance improves until a word vector dimension of 300 after which it saturates. Similarly, we observe that the performance improves as we increase p till 4 after which it declines. At 4% thresholding, we reduce the storage space by 80% compared to the dense vectors. We observe that SCDV is robust to variations in training Word2Vec\n5Section 3.3.3.2 of https://goo.gl/4GrR3M\nand GMM. The performance metrics reported in Tables 1, 3 are the average values obtained across 5 separate runs of SCDV , each run training a different Word2Vec and GMM model with identical hyper-parameters."
  }, {
    "heading": "4.3 Topic Coherence",
    "text": "We evaluate the topics generated by GMM clustering on 20NewsGroup for quantitative and qualitative analysis. Instead of using perplexity (Chang et al., 2011), which doesn’t correlate with semantic coherence and human judgment of individual topics, we used the popular topic coherence (Mimno et al., 2011), (Arora et al., 2013), (Chen and Liu, 2014) measure. A higher topic coherence score indicates a more coherent topic.\nWe used Bayes rule to compute the P (wk|ci) for a given topic ci and given word wj and compute the score of the top 10 words for each topic.\nP (wk|ci) = P (ci|wk)P (wk) P (ci)\nwhere,\nP (ci) = K∑\ni=1\nP (ci|wk)P (wk)\nP (wk) = #(wk)∑V i=1 #(wi)\nHere, #(wk) denotes the number of times word wk appears in the corpus and V represents vocabulary size.\nWe calculated the topic coherence score for all topics for SCDV , LDA and LTSG (Law et al., 2017). Averaging the score of all 80 topics, GMM clustering scores -85.23 compared to -108.72 of\nLDA and -92.23 of LTSG. Thus, SCDV creates more coherent topics than both LDA and LTSG.\nTable 4 shows top 10 words of 3 topics from GMM clustering, LDAmodel and LTSGmodel on 20NewsGroup and SCDV shows higher topic coherence. Words are ranked based on their probability distribution in each topic. Our results also support the qualitative results of (Randhawa et al., 2016), (Sridhar, 2015) paper, where kmeans, GMM was used respectively over word vectors to find topics."
  }, {
    "heading": "4.4 Context-Sensitive Learning",
    "text": "In order to demonstrate the effects of soft clustering (GMM) during SCDV formation, we select some words (wj) with multiple senses from 20Newsgroup and their soft cluster assignments to find the dominant clusters. We also select top scoring words (wk) from each cluster (ci) to represent the meaning of that cluster. Table 5 shows polysemic words and their dominant clusters with assignment probabilities. This indicates that using soft clustering to learn word vectors helps combine multiple senses into a single embedding vector. (Arora et al., 2016b) also reported similar results for polysemous words."
  }, {
    "heading": "4.5 Information Retrieval",
    "text": "(Ai et al., 2016b) used (Mikolov et al., 2013b)’s paragraph vectors to enhance the basic language model based retrieval model. The language model(LM) probabilities are estimated from the corpus and smoothed using a Dirichlet prior (Zhai and Lafferty, 2004). In (Ai et al., 2016b), this language model is then interpolated with the paragraph vector (PV) language model as follows.\nP (w|d) = (1− λ)PLM (w|d) + λPPV (w|d)\nwhere,\nPPV (w|d) = exp(~w. ~d)∑V\ni=1 exp( ~wi.~d)\nand the score for document d and query string Q is given by\nscore(q, d) = ∑ w∈Q P (w)P (w|d)\nwhere P (w) is obtained from the unigram query model and score(q, d) is used to rank documents. (Ai et al., 2016b) do not directly make use of paragraph vectors for the retrieval task, but improve the document language model. To directly make use of paragraph vectors and make computations more tractable, we directly interpolate the language model query-document score score(q, d) with the similarity score between the normalized query and document vectors to generate scorePV (q, d), which is then used to rank documents.\nscorePV (q, d) = (1− λ)score(q, d) + λ~q.~d\nDirectly evaluating the document similarity score with the query paragraph vector rather than collecting similarity scores for individual words in the query helps avoid confusion amongst distinct query topics and makes the interpolation operation faster. In Table 6, we report Mean Average Precision(MAP) values for four datasets, Associated Press 88-89 (topics 51-200), Wall Street Journal (topics 51-200), San Jose Mercury (topics 51-150) and Disks 4 & 5 (topics 301-450) in the TREC collection. We learn λ on a held out set of topics. We observe consistent improvement in MAP for all datasets. We marginally improve the MAP reported by (Ai et al., 2016b) on the Robust04 task. In addition, we also report the improvements in MAP score when Model based relevance feedback (Zhai and Lafferty, 2001) is applied over the initially retrieved results from both models. Again, we notice a consistent improvement in MAP."
  }, {
    "heading": "5 Analysis and Discussion",
    "text": "SCDV overcomes several challenges encountered while training document vectors, which we had mentioned above.\n3. It is well-known that in higher dimensions, structural regularizers such as sparsity help overcome the curse of dimensionality (Wainwright, 2014).Figure 3 demonstrates this, since majority of the features are close to zero. Sparsity also enables linear SVM to scale to large dimensions. On 20NewsGroups, BoWV model takes up 1.1 GB while SCDV takes up only 236MB( 80% decrease). Since GMM assigns a non-zero probability to every topic in the word embedding, noise can accumulate when document vectors are created and tip the scales in favor of an unrelated topic. Sparsity helps to reduce this by zeroing out very small values of probability.\n4. SCDV uses Gaussian Mixture Model (GMM) while TWE, NTSG and LTSG use LDA for finding semantic topics respectively. GMM time complexity is O(V NT 2) while that of LDA is O(V 2NT ). Here, V = Vocabulary size, N = number of documents and T = number of topics. Since number of topics T < vocabulary size V, GMM is faster. Empirically, compared to TWE, SCDV reduces document vector formation, training and prediction time significantly. Table 7 shows training and prediction times for BoWV, SCDV and TWE models."
  }, {
    "heading": "6 Conclusion",
    "text": "In this paper, we propose a document feature formation technique for topic-based document representation. SCDV outperforms state-of-the-art models in multi-class and multi-label classification tasks. SCDV introduces sparsity in document vectors to handle high dimensionality. Table 7 in-\nTable 6: Mean average precision (MAP) for IR on four IR datasets\nDataset LM LM+SCDV MB MB + SCDV AP 0.2742 0.2856 0.3283 0.3395\nSJM 0.2052 0.2105 0.2341 0.2409 WSJ 0.2618 0.2705 0.3027 0.3126 Robust04 0.2516 0.2684 0.2819 0.2933\ndicates that SCDV shows considerable improvements in feature formation, training and prediction times for the 20NewsGroups dataset. We show that fuzzy GMM clustering on word-vectors lead to more coherent topic than LDA and can also be used to detect Polysemic words. SCDV embeddings also provide a robust estimation of the query and document language models, thus improving the MAP of language model based retrieval systems. In conclusion, SCDV is simple, efficient and creates a more accurate semantic representation of documents."
  }, {
    "heading": "Acknowledgments",
    "text": "The authors want to thank Nagarajan Natarajan (Post-Doc, Microsoft Research, India), Praneeth Netrapalli (Researcher, Microsoft Research, India), Raghavendra Udupa (Researcher, Microsoft Research, India), Prateek Jain (Researcher, Microsoft Research, India) for encouraging and valuable feedback ."
  }],
  "year": 2017,
  "references": [{
    "title": "Analysis of the paragraph vector model for information retrieval",
    "authors": ["Qingyao Ai", "Liu Yang", "Jiafeng Guo", "W Bruce Croft."],
    "venue": "Proceedings of the 2016 ACM on International Conference on the Theory of Information Retrieval, pages 133–142.",
    "year": 2016
  }, {
    "title": "Improving language estimation with the paragraph vector model for ad-hoc retrieval",
    "authors": ["Qingyao Ai", "Liu Yang", "Jiafeng Guo", "W Bruce Croft."],
    "venue": "In",
    "year": 2016
  }, {
    "title": "A practical algorithm for topic modeling with provable guarantees",
    "authors": ["Sanjeev Arora", "Rong Ge", "Yonatan Halpern", "David Mimno", "Ankur Moitra", "David Sontag", "Yichen Wu", "Michael Zhu."],
    "venue": "International Conference on Machine Learning, pages",
    "year": 2013
  }, {
    "title": "A latent variable model approach to pmi-based word embeddings",
    "authors": ["Sanjeev Arora", "Yuanzhi Li", "Yingyu Liang", "Tengyu Ma", "Andrej Risteski."],
    "venue": "Transactions of the Association for Computational Linguistics, 4:385–399.",
    "year": 2016
  }, {
    "title": "Linear algebraic structure of word senses, with applications to polysemy",
    "authors": ["Sanjeev Arora", "Yuanzhi Li", "Yingyu Liang", "Tengyu Ma", "Andrej Risteski."],
    "venue": "arXiv preprint arXiv:1601.03764.",
    "year": 2016
  }, {
    "title": "Sparse local embeddings for extreme multi-label classification",
    "authors": ["Kush Bhatia", "Himanshu Jain", "Purushottam Kar", "Manik Varma", "Prateek Jain."],
    "venue": "Advances in Neural Information Processing Systems, pages 730–738.",
    "year": 2015
  }, {
    "title": "Latent dirichlet allocation",
    "authors": ["David M. Blei", "David M. Ng", "Michael I. Jordan", "John Lafferty."],
    "venue": "Journal of Machine Learning Research, 3:2003.",
    "year": 2003
  }, {
    "title": "Reading tea leaves: How humans interpret topic models",
    "authors": ["Jonathan Chang", "Jordan L Boyd-Graber", "Sean Gerrish", "Chong Wang", "David M Blei."],
    "venue": "pages 262–272.",
    "year": 2011
  }, {
    "title": "Topic modeling using topics from many domains, lifelong learning and big data",
    "authors": ["Zhiyuan Chen", "Bing Liu."],
    "venue": "International Conference on Machine Learning, pages 703–711.",
    "year": 2014
  }, {
    "title": "Gaussian lda for topic models with word embeddings",
    "authors": ["Rajarshi Das", "Manzil Zaheer", "Chris Dyer."],
    "venue": "Proceedings of The 53th Annual Meeting of the Association of Computational Linguistic (ACL), pages 795–804. Association of Compu-",
    "year": 2015
  }, {
    "title": "Improving distributed word representation and topic model by word-topic mixture model",
    "authors": ["Xianghua Fu", "Ting Wang", "Jing Li", "Chong Yu", "Wangwang Liu."],
    "venue": "Proceedings of The 8th Asian Conference on Machine Learning, pages 190–205.",
    "year": 2016
  }, {
    "title": "Product classification in ecommerce using distributional semantics",
    "authors": ["Vivek Gupta", "Harish Karnick", "Ashendra Bansal", "Pradhuman Jhala."],
    "venue": "Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Techni-",
    "year": 2016
  }, {
    "title": "Distributional structure",
    "authors": ["Zellig Harris."],
    "venue": "Word, 10:146–162.",
    "year": 1954
  }, {
    "title": "Bag-of-concepts: Comprehending document representation through clustering words in distributed representation",
    "authors": ["Han Kyul Kim", "Hyunjoong Kim", "Sungzoon Cho."],
    "venue": "Neurocomputing.",
    "year": 2017
  }, {
    "title": "Ltsg: Latent topical skip-gram for mutually learning topic model and vector representations",
    "authors": ["Jarvan Law", "Hankz Hankui Zhuo", "Junhua He", "Erhu Rong."],
    "venue": "arXiv preprint arXiv:1702.07117.",
    "year": 2017
  }, {
    "title": "Distributed representations of sentences and documents",
    "authors": ["Quoc V Le", "Tomas Mikolov."],
    "venue": "ICML, volume 14, pages 1188–1196.",
    "year": 2014
  }, {
    "title": "Generative topic embedding: a continuous representation of documents",
    "authors": ["Shaohua Li", "Tat-Seng Chua", "Jun Zhu", "Chunyan Miao."],
    "venue": "Proceedings of The 54th Annual Meeting of the Association for Computational Linguistics (ACL). Association of",
    "year": 2016
  }, {
    "title": "Integrating topic modeling with word embeddings by mixtures of vmfs",
    "authors": ["Ximing Li", "Jinjin Chi", "Changchun Li", "Jihong Ouyang", "Bo Fu."],
    "venue": "Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical Pa-",
    "year": 2016
  }, {
    "title": "Two/too simple adaptations of wordvec for syntax problems",
    "authors": ["Wand Ling", "Chris Dyer", "Alan Black", "Isabel Trancoso."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human",
    "year": 2015
  }, {
    "title": "Learning context-sensitive word embeddings with neural tensor skip-gram model",
    "authors": ["Pengfei Liu", "Xipeng Qiu", "Xuanjing Huang."],
    "venue": "Proceedings of IJCAI 2014, the 24th International Joint Conference on Artificial Intelligence, pages 1284–1290.",
    "year": 2015
  }, {
    "title": "Topical word embeddings",
    "authors": ["Yang Liu", "Zhiyuan Liu", "Tat-Seng Chua", "Maosong Sun."],
    "venue": "Proceedings of AAAI 2015, the 29th Twenty-Ninth Association for the Advancement of Artificial Intelligence, pages 2418–2424.",
    "year": 2015
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean."],
    "venue": "Advances in Neural Information Processing Systems, pages 3111–3119.",
    "year": 2013
  }, {
    "title": "Linguistic regularities in continuous space word representations",
    "authors": ["Tomas Mikolov", "Wen-tau Yih", "Geoffrey Zweig."],
    "venue": "HLT-NAACL, pages 746– 751.",
    "year": 2013
  }, {
    "title": "Optimizing semantic coherence in topic models",
    "authors": ["David Mimno", "Hanna M Wallach", "Edmund Talley", "Miriam Leenders", "Andrew McCallum."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 262–",
    "year": 2011
  }, {
    "title": "Mixing dirichlet topic models and word embeddings to make lda2vec",
    "authors": ["Christopher E Moody."],
    "venue": "arXiv preprint arXiv:1605.02019.",
    "year": 2016
  }, {
    "title": "Improving topic models with latent feature word representations",
    "authors": ["Dat Quoc Nguyen", "Richard Billingsley", "Lan Du", "Mark Johnson."],
    "venue": "Transactions of the Association for Computational Linguistics, 3:299–313.",
    "year": 2015
  }, {
    "title": "Topic2vec: learning distributed representations of topics",
    "authors": ["Liqiang Niu", "Xinyu Dai", "Jianbing Zhang", "Jiajun Chen."],
    "venue": "2015 International Conference on Asian Language Processing (IALP), pages 193–196. IEEE.",
    "year": 2015
  }, {
    "title": "Topic modeling using distributed word embeddings",
    "authors": ["Ramandeep S Randhawa", "Parag Jain", "Gagan Madan."],
    "venue": "arXiv preprint arXiv:1603.04747.",
    "year": 2016
  }, {
    "title": "Gaussian mixture models",
    "authors": ["Douglas Reynolds."],
    "venue": "Encyclopedia of biometrics, pages 827–832.",
    "year": 2015
  }, {
    "title": "Representing documents and queries as sets of word embedded vectors for information retrieval",
    "authors": ["Dwaipayan Roy", "Debasis Ganguly", "Mandar Mitra", "Gareth JF Jones."],
    "venue": "arXiv preprint arXiv:1606.07869.",
    "year": 2016
  }, {
    "title": "Words are not equal: Graded weighting model for building composite document vectors",
    "authors": ["Pranjal Singh", "Amitabha Mukerjee."],
    "venue": "Proceedings of the twelfth International Conference on Natural Language Processing (ICON-2015).",
    "year": 2015
  }, {
    "title": "Recursive deep models for semantic compositionality over a sentiment treebank",
    "authors": ["Richard Socher", "Alex Perelygin", "Jean Y Wu", "Jason Chuang", "Christopher D Manning", "Andrew Y Ng", "Christopher Potts"],
    "venue": "In Proceedings of the conference on",
    "year": 2013
  }, {
    "title": "Unsupervised topic modeling for short texts using distributed representations of words",
    "authors": ["Vivek Kumar Rangarajan Sridhar."],
    "venue": "VS@ HLT-NAACL, pages 192–200.",
    "year": 2015
  }, {
    "title": "Structured regularizers for high-dimensional problems: Statistical and computational issues",
    "authors": ["Martin J Wainwright."],
    "venue": "Annual Review of Statistics and Its Application, 1:233–253.",
    "year": 2014
  }, {
    "title": "Modelbased feedback in the language modeling approach to information retrieval",
    "authors": ["Chengxiang Zhai", "John Lafferty."],
    "venue": "Proceedings of the tenth international conference on Information and knowledge management, pages 403–410. ACM.",
    "year": 2001
  }, {
    "title": "A study of smoothing methods for language models applied to information retrieval",
    "authors": ["Chengxiang Zhai", "John Lafferty."],
    "venue": "ACM Transactions on Information Systems (TOIS), 22(2):179–214. 669",
    "year": 2004
  }],
  "id": "SP:a24800c3e7e63d18dfcf4cc3120160a9ebc2882a",
  "authors": [{
    "name": "Dheeraj Mekala",
    "affiliations": []
  }, {
    "name": "Vivek Gupta",
    "affiliations": []
  }, {
    "name": "Bhargavi Paranjape",
    "affiliations": []
  }, {
    "name": "Harish Karnick",
    "affiliations": []
  }],
  "abstractText": "We present a feature vector formation technique for documents Sparse Composite Document Vector (SCDV) which overcomes several shortcomings of the current distributional paragraph vector representations that are widely used for text representation. In SCDV, word embeddings are clustered to capture multiple semantic contexts in which words occur. They are then chained together to form document topic-vectors that can express complex, multi-topic documents. Through extensive experiments on multi-class and multi-label classification tasks, we outperform the previous state-of-the-art method, NTSG (Liu et al., 2015a). We also show that SCDV embeddings perform well on heterogeneous tasks like Topic Coherence, context-sensitive Learning and Information Retrieval. Moreover, we achieve significant reduction in training and prediction times compared to other representation methods. SCDV achieves best of both worlds better performance with lower time and space complexity.",
  "title": "SCDV : Sparse Composite Document Vectors using soft clustering over distributional representations"
}