{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 856–861 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n856\nIn this work, we examine methods for data augmentation for text-based tasks such as neural machine translation (NMT). We formulate the design of a data augmentation policy with desirable properties as an optimization problem, and derive a generic analytic solution. This solution not only subsumes some existing augmentation schemes, but also leads to an extremely simple data augmentation strategy for NMT: randomly replacing words in both the source sentence and the target sentence with other random words from their corresponding vocabularies. We name this method SwitchOut. Experiments on three translation datasets of different scales show that SwitchOut yields consistent improvements of about 0.5 BLEU, achieving better or comparable performances to strong alternatives such as word dropout (Sennrich et al., 2016a). Code to implement this method is included in the appendix."
  }, {
    "heading": "1 Introduction and Related Work",
    "text": "Data augmentation algorithms generate extra data points from the empirically observed training set to train subsequent machine learning algorithms. While these extra data points may be of lower quality than those in the training set, their quantity and diversity have proven to benefit various learning algorithms (DeVries and Taylor, 2017; Amodei et al., 2016). In image processing, simple augmentation techniques such as flipping, cropping, or increasing and decreasing the contrast of the image are both widely utilized and highly effective (Huang et al., 2016; Zagoruyko and Komodakis, 2016).\nHowever, it is nontrivial to find simple equivalences for NLP tasks like machine translation, because even slight modifications of sentences can result in significant changes in their semantics, or\n*: Equal contributions.\nrequire corresponding changes in the translations in order to keep the data consistent. In fact, indiscriminate modifications of data in NMT can introduce noise that makes NMT systems brittle (Belinkov and Bisk, 2018).\nDue to such difficulties, the literature in data augmentation for NMT is relatively scarce. To our knowledge, data augmentation techniques for NMT fall into two categories. The first category is based on back-translation (Sennrich et al., 2016b; Poncelas et al., 2018), which utilizes monolingual data to augment a parallel training corpus. While effective, back-translation is often vulnerable to errors in initial models, a common problem of self-training algorithms (Chapelle et al., 2009). The second category is based on word replacements. For instance, Fadaee et al. (2017) propose to replace words in the target sentences with rare words in the target vocabulary according to a language model, and then modify the aligned source words accordingly. While this method generates augmented data with relatively high quality, it requires several complicated preprocessing steps, and is only shown to be effective for low-resource datasets. Other generic word replacement methods include word dropout (Sennrich et al., 2016a; Gal and Ghahramani, 2016), which uniformly set some word embeddings to 0 at random, and Reward Augmented Maximum Likelihood (RAML; Norouzi et al. (2016)), whose implementation essentially replaces some words in the target sentences with other words from the target vocabulary.\nIn this paper, we derive an extremely simple and efficient data augmentation technique for NMT. First, we formulate the design of a data augmentation algorithm as an optimization problem, where we seek the data augmentation policy that maximizes an objective that encourages two desired properties: smoothness and diversity. This optimization problem has a tractable analytic solution,\nwhich describes a generic framework of which both word dropout and RAML are instances. Second, we interpret the aforementioned solution and propose a novel method: independently replacing words in both the source sentence and the target sentence by other words uniformly sampled from the source and the target vocabularies, respectively. Experiments show that this method, which we name SwitchOut, consistently improves over strong baselines on datasets of different scales, including the large-scale WMT 15 English-German dataset, and two medium-scale datasets: IWSLT 2016 German-English and IWSLT 2015 EnglishVietnamese."
  }, {
    "heading": "2 Method",
    "text": ""
  }, {
    "heading": "2.1 Notations",
    "text": "We use uppercase letters, such as X , Y , etc., to denote random variables and lowercase letters such as x, y, etc., to denote the corresponding actual values. Additionally, since we will discuss a data augmentation algorithm, we will use a hat to denote augmented variables and their values, e.g. bX , bY , bx, by, etc. We will also use boldfaced characters, such as p, q, etc., to denote probability distributions."
  }, {
    "heading": "2.2 Data Augmentation",
    "text": "We facilitate our discussion with a probabilistic framework that motivates data augmentation algorithms. With X , Y being the sequences of words in the source and target languages (e.g. in machine translation), the canonical MLE framework maximizes the objective\nJMLE(✓) = E x,y⇠bp(X,Y ) [logp✓(y|x)] .\nHere bp(X,Y ) is the empirical distribution over all training data pairs (x, y) and p\n✓ (y|x) is a parameterized distribution that we aim to learn, e.g. a neural network. A potential weakness of MLE is the mismatch between bp(X,Y ) and the true data distribution p(X,Y ). Specifically, bp(X,Y ) is usually a bootstrap distribution defined only on the observed training pairs, while p(X,Y ) has a much larger support, i.e. the entire space of valid pairs. This issue can be dramatic when the empirical observations are insufficient to cover the data space.\nIn practice, data augmentation is often used to remedy this support discrepancy by supplying additional training pairs. Formally, let q( bX, bY ) be the augmented distribution defined on a larger support than the empirical distribution bp(X,Y ). Then,\nMLE training with data augmentation maximizes\nJAUG(✓) = Ebx,by⇠q( bX,bY ) [logp✓(by|bx)] .\nIn this work, we focus on a specific family of q, which depends on the empirical observations by\nq( bX, bY ) = E x,y⇠bp(x,y)\nh q( bX, bY |x, y) i .\nThis particular choice follows the intuition that an augmented pair (bx, by) that diverges too far from any observed data is more likely to be invalid and thus harmful for training. The reason will be more evident later."
  }, {
    "heading": "2.3 Diverse and Smooth Augmentation",
    "text": "Certainly, not all q are equally good, and the more similar q is to p, the more desirable q will be. Unfortunately, we only have access to limited observations captured by bp. Hence, in order to use q to bridge the gap between bp and p, it is necessary to utilize some assumptions about p. Here, we exploit two highly generic assumptions, namely:\n• Diversity: p(X,Y ) has a wider support set, which includes samples that are more diverse than those in the empirical observation set.\n• Smoothness: p(X,Y ) is smooth, and similar (x, y) pairs will have similar probabilities.\nTo formalize both assumptions, let s(bx, by;x, y) be a similarity function that measures how similar an augmented pair (bx, by) is to an observed data pair (x, y). Then, an ideal augmentation policy q( bX, bY |x, y) should have two properties. First, based on the smoothness assumption, if an augmented pair (bx, by) is more similar to an empirical pair (x, y), it is more likely that (bx, by) is sampled under the true data distribution p(X,Y ), and thus q( bX, bY |x, y) should assign a significant amount of probability mass to (bx, by). Second, to quantify the diversity assumption, we propose that the entropy H[q( bX, bY |x, y)] should be large, so that the support of q( bX, bY ) is larger than the support of bp and thus is closer to the support p(X,Y ). Combining these assumptions implies that q( bX, bY |x, y) should maximize the objective\nJ(q;x, y) = Ebx,by⇠q( bX,bY |x,y) ⇥ s(bx, by;x, y) ⇤\n+ ⌧H(q( bX, bY |x, y)), (1)\nwhere ⌧ controls the strength of the diversity objective. The first term in (1) instantiates the smoothness assumption, which encourages q to draw samples that are similar to (x, y). Meanwhile, the second term in (1) encourages more diverse samples from q. Together, the objective J(q;x, y) extends the information in the “pivotal” empirical sample (x, y) to a diverse set of similar cases. This echoes our particular parameterization of q in Section 2.2.\nThe objective J(q;x, y) in (1) is the canonical maximum entropy problem that one often encounters in deriving a max-ent model (Berger et al., 1996), which has the analytic solution:\nq⇤(bx, by|x, y) = exp {s(bx, by;x, y)/⌧}P bx0,by0 exp {s(bx0, by0;x, y)/⌧}\n(2) Note that (2) is a fairly generic solution which is agnostic to the choice of the similarity measure s. Obviously, not all similarity measures are equally good. Next, we will show that some existing algorithms can be seen as specific instantiations under our framework. Moreover, this leads us to propose a novel and effective data augmentation algorithm."
  }, {
    "heading": "2.4 Existing and New Algorithms",
    "text": "Word Dropout. In the context of machine translation, Sennrich et al. (2016a) propose to randomly choose some words in the source and/or target sentence, and set their embeddings to 0 vectors. Intuitively, it regards every new data pair generated by this procedure as similar enough and then includes them in the augmented training set. Formally, word dropout can be seen as an instantiation of our framework with a particular similarity function s(x̂, ŷ;x, y) (see Appendix A.1).\nRAML. From the perspective of reinforcement learning, Norouzi et al. (2016) propose to train the model distribution to match a target distribution proportional to an exponentiated reward. Despite the difference in motivation, it can be shown (c.f. Appendix A.2) that RAML can be viewed as an instantiation of our generic framework, where the similarity measure is s(bx, by;x, y) = r(by; y) if bx = x and 1 otherwise. Here, r is a task-specific reward function which measures the similarity between by and y. Intuitively, this means that RAML only exploits the smoothness property on the target side while keeping the source side intact.\nSwitchOut. After reviewing the two existing augmentation schemes, there are two immediate\ninsights. Firstly, augmentation should not be restricted to only the source side or the target side. Secondly, being able to incorporate prior knowledge, such as the task-specific reward function r in RAML, can lead to a better similarity measure.\nMotivated by these observations, we propose to perform augmentation in both source and target domains. For simplicity, we separately measure the similarity between the pair (bx, x) and the pair (by, y) and then sum them together, i.e.\ns(bx, by;x, y)/⌧ ⇡ r x (bx, x)/⌧ x + r y (by, y)/⌧ y , (3)\nwhere r x and r y are domain specific similarity functions and ⌧\nx , ⌧ y are hyper-parameters that absorb the temperature parameter ⌧ . This allows us to factor q⇤(bx, by|x, y) into:\nq⇤(bx, by|x, y) = exp {rx(bx, x)/⌧x}P bx0 exp {rx(bx0, x)/⌧x}\n⇥ exp {ry(by, y)/⌧y}P by0 exp {ry(by0, y)/⌧y}\n(4)\nIn addition, notice that this factored formulation allows bx and by to be sampled independently.\nSampling Procedure. To complete our method, we still need to define r\nx and r y , and then design a practical sampling scheme from each factor in (4). Though non-trivial, both problems have been (partially) encountered in RAML (Norouzi et al., 2016; Ma et al., 2017). For simplicity, we follow previous work to use the negative Hamming distance for both r\nx and r y . For a more parallelized implementation, we sample an augmented sentence bs from a true sentence s as follows:\n1. Sample bn 2 {0, 1, ..., |s|} by p(bn) / e bn/⌧ .\n2. For each i 2 {1, 2, ..., |s|}, with probability bn/ |s|, we can replace s\ni by a uniform bs i 6= s i .\nThis procedure guarantees that any two sentences bs1 and bs2 with the same Hamming distance to s have the same probability, but slightly changes the relative odds of sentences with different Hamming distances to s from the true distribution by negative Hamming distance, and thus is an approximation of the actual distribution. However, this efficient sampling procedure is much easier to implement while achieving good performance.\nAlgorithm 1 illustrates this sampling procedure, which can be applied independently and in parallel for each batch of source sentences and target\nsentences. Additionally, we open source our implementation in TensorFlow and in PyTorch (respectively in Appendix A.5 and A.6).\nAlgorithm 1: Sampling with SwitchOut. Input : s: a sentence represented by vocab integral ids,\n⌧ : the temperature, V : the vocabulary Output : bs: a sentence with words replaced\n1 Function HammingDistanceSample(s, ⌧ , |V |): 2 Let Z(⌧) P|s| n=0 e\nn/⌧ be the partition function. 3 Let p(n) e n/⌧/Z(⌧) for n = 0, 1, ..., |s|. 4 Sample bn ⇠ p(n). 5 In parallel, do: 6 Sample a\ni ⇠ Bernoulli(bn/ |s|). 7 if a\ni = 1 then 8 bs\ni Uniform(V \\{s i }). 9 else\n10 bs i s i . 11 end 12 return bs"
  }, {
    "heading": "3 Experiments",
    "text": "Datasets. We benchmark SwitchOut on three translation tasks of different scales: 1) IWSLT 2015 English-Vietnamese (en-vi); 2) IWSLT 2016 German-English (de-en); and 3) WMT 2015 English-German (en-de). All translations are wordbased. These tasks and pre-processing steps are standard, used in several previous works. Detailed statistics and pre-processing schemes are in Appendix A.3.\nModels and Experimental Procedures. Our translation model, i.e. p\n✓ (y|x), is a Transformer network (Vaswani et al., 2017). For each dataset, we first train a standard Transformer model without SwitchOut and tune the hyper-parameters on the dev set to achieve competitive results. (w.r.t. Luong and Manning (2015); Gu et al. (2018); Vaswani et al. (2017)). Then, fixing all hyper-parameters, and fixing ⌧\ny = 0, we tune the ⌧ x rate, which controls how far we are willing to let bx deviate from x. Our hyper-parameters are listed in Appendix A.4.\nBaselines. While the Transformer network without SwitchOut is already a strong baseline, we also compare SwitchOut against two other baselines that further use existing varieties of data augmentation: 1) word dropout on the source side with the dropping probability of word = 0.1; and 2) RAML on the target side, as in Section 2.4. Additionally, on the en-de task, we compare SwitchOut against back-translation (Sennrich et al., 2016b).\nSwitchOut vs. Word Dropout and RAML. We report the BLEU scores of SwitchOut, word dropout, and RAML on the test sets of the tasks in Table 1. To account for variance, we run each experiment multiple times and report the median BLEU. Specifically, each experiment without SwitchOut is run for 4 times, while each experiment with SwitchOut is run for 9 times due to its inherently higher variance. We also conduct pairwise statistical significance tests using paired bootstrap (Clark et al., 2011), and record the results in Table 1. For 4 of the 6 settings, SwitchOut delivers significant improvements over the best baseline without SwitchOut. For the remaining two settings, the differences are not statistically significant. The gains in BLEU with SwitchOut over the best baseline on WMT 15 en-de are all significant (p < 0.0002). Notably, SwitchOut on the source demonstrates as large gains as these obtained by RAML on the target side, and SwitchOut delivers further improvements when combined with RAML.\nSwitchOut vs. Back Translation. Traditionally, data-augmentation is viewed as a method to enlarge the training datasets (Krizhevsky et al., 2012; Szegedy et al., 2014). In the context of neural MT, Sennrich et al. (2016b) propose to use artificial data generated from a weak back-translation model, effectively utilizing monolingual data to enlarge the bilingual training datasets. In connection, we compare SwitchOut against back translation. We only compare SwitchOut against back translation on the en-de task, where the amount of bilingual training data is already sufficiently large2. The\n2We add the extra monolingual data from http://data.statmt.org/rsennrich/wmt16_ backtranslations/en-de/\nBLEU scores with back-translation are reported in Table 2. These results provide two insights. First, the gain delivered by back translation is less significant than the gain delivered by SwitchOut. Second, SwitchOut and back translation are not mutually exclusive, as one can additionally apply SwitchOut on the additional data obtained from back translation to further improve BLEU scores.\nEffects of ⌧ x and ⌧ y . We empirically study the effect of these temperature parameters. During the tuning process, we translate the dev set of the tasks and report the BLEU scores in Figure 1. We observe that when fixing ⌧\ny , the best performance is always achieved with a non-zero ⌧\n.\nWhere does SwitchOut Help the Most? Intuitively, because SwitchOut is expanding the support of the training distribution, we would expect that it would help the most on test sentences that are far from those in the training set and would thus benefit most from this expanded support. To test this hypothesis, for each test sentence we find its most similar training sample (i.e. nearest neighbor), then bucket the instances by the distance to their\nnearest neighbor and measure the gain in BLEU afforded by SwitchOut for each bucket. Specifically, we use (negative) word error rate (WER) as the similarity measure, and plot the bucket-by-bucket performance gain for each group in Figure 2. As we can see, SwitchOut improves increasingly more as the WER increases, indicating that SwitchOut is indeed helping on examples that are far from the sentences that the model sees during training. This is the desirable effect of data augmentation techniques."
  }, {
    "heading": "4 Conclusion",
    "text": "In this paper, we propose a method to design data augmentation algorithms by solving an optimization problem. These solutions subsume a few existing augmentation schemes and inspire a novel augmentation method, SwitchOut. SwitchOut delivers improvements over translation tasks at different scales. Additionally, SwitchOut is efficient and easy to implement, and thus has the potential for wide application."
  }, {
    "heading": "Acknowledgements",
    "text": "We thank Quoc Le, Minh-Thang Luong, Qizhe Xie, and the anonymous EMNLP reviewers, for their suggestions to improve the paper.\nThis material is based upon work supported in part by the Defense Advanced Research Projects Agency Information Innovation Office (I2O) Low Resource Languages for Emergent Incidents (LORELEI) program under Contract No. HR0011-15-C0114. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of the U.S. Government. The U.S. Government is authorized to reproduce and distribute reprints for Government purposes notwithstanding any copyright notation here on."
  }],
  "year": 2018,
  "references": [{
    "title": "Synthetic and natural noise both break neural machine translation",
    "authors": ["Yonatan Belinkov", "Yonatan Bisk."],
    "venue": "ICLR.",
    "year": 2018
  }, {
    "title": "A maximum entropy approach to natural language processing",
    "authors": ["Adam L Berger", "Vincent J Della Pietra", "Stephen A Della Pietra."],
    "venue": "Computational linguistics, 22(1):39–71.",
    "year": 1996
  }, {
    "title": "Semi-supervised learning (chapelle, o",
    "authors": ["Olivier Chapelle", "Bernhard Scholkopf", "Alexander Zien."],
    "venue": "et al., eds.; 2006)[book reviews]. IEEE Transactions on Neural Networks, 20(3):542–542.",
    "year": 2009
  }, {
    "title": "Better hypothesis testing for statistical machine translation: Controlling for optimizer instability",
    "authors": ["Jonathan Clark", "Chris Dyer", "Alon Lavie", "Noah Smith."],
    "venue": "ACL.",
    "year": 2011
  }, {
    "title": "Improved regularization of convolutional neural networks with cutout",
    "authors": ["Terrance DeVries", "Graham W. Taylor."],
    "venue": "Arxiv, 1708.04552.",
    "year": 2017
  }, {
    "title": "Data augmentation for low-resource neural machine translation",
    "authors": ["Marzieh Fadaee", "Arianna Bisazza", "Christof Monz."],
    "venue": "ACL.",
    "year": 2017
  }, {
    "title": "A theoretically grounded application of dropout in recurrent neural networks",
    "authors": ["Yarin Gal", "Zoubin Ghahramani."],
    "venue": "NIPS.",
    "year": 2016
  }, {
    "title": "Nonautoregressive neural machine translation",
    "authors": ["Jiatao Gu", "James Bradbury", "Caiming Xiong", "Victor O.K. Li", "Richard Socher."],
    "venue": "ICLR.",
    "year": 2018
  }, {
    "title": "Densely connected convolutional networks",
    "authors": ["Gao Huang", "Zhuang Liu", "Laurens van der Maaten", "Kilian Q. Weinberger."],
    "venue": "CVPR.",
    "year": 2016
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Diederik P. Kingma", "Jimmy Lei Ba."],
    "venue": "ICLR.",
    "year": 2015
  }, {
    "title": "Imagenet classification with deep convolutional neural networks",
    "authors": ["Alex Krizhevsky", "Ilya Sutskever", "Geoffrey E. Hinton."],
    "venue": "NIPS.",
    "year": 2012
  }, {
    "title": "Stanford neural machine translation systems for spoken language domain",
    "authors": ["Minh-Thang Luong", "Christopher D. Manning."],
    "venue": "IWLST.",
    "year": 2015
  }, {
    "title": "Effective approaches to attentionbased neural machine translation",
    "authors": ["Minh-Thang Luong", "Hieu Pham", "Christopher D. Manning."],
    "venue": "EMNLP.",
    "year": 2015
  }, {
    "title": "Softmax q-distribution estimation for structured prediction: A theoretical interpretation for raml",
    "authors": ["Xuezhe Ma", "Pengcheng Yin", "Jingzhou Liu", "Graham Neubig", "Eduard Hovy."],
    "venue": "Arxiv, 1705.07136.",
    "year": 2017
  }, {
    "title": "Reward augmented maximum likelihood for neural structured prediction",
    "authors": ["Mohammad Norouzi", "Samy Bengio", "Zhifeng Chen", "Navdeep Jaitly", "Mike Schuster", "Yonghui Wu", "Dale Schuurmans."],
    "venue": "NIPS.",
    "year": 2016
  }, {
    "title": "Investigating backtranslation in neural machine translation",
    "authors": ["Alberto Poncelas", "Dimitar Shterionov", "Andy Way", "Gideon Maillette de Buy Wenniger", "Peyman Passban."],
    "venue": "Arxiv, 1804.06189.",
    "year": 2018
  }, {
    "title": "Sequence level training with recurrent neural networks. In ICLR",
    "authors": ["Marc’Aurelio Ranzato", "Sumit Chopra", "Michael Auli", "Wojciech Zaremba"],
    "year": 2016
  }, {
    "title": "Edinburgh neural machine translation systems for wmt 16",
    "authors": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."],
    "venue": "WMT.",
    "year": 2016
  }, {
    "title": "Improving neural machine translation models with monolingual data",
    "authors": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."],
    "venue": "ACL.",
    "year": 2016
  }, {
    "title": "Going deeper with convolutions",
    "authors": ["Christian Szegedy", "Wei Liu", "Yangqing Jia", "Pierre Sermanet", "Scott Reed", "Dragomir Anguelov", "Dumitru Erhan", "Vincent Vanhoucke", "Andrew Rabinovich."],
    "venue": "CVPR.",
    "year": 2014
  }, {
    "title": "Attention is all you need",
    "authors": ["Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N. Gomez", "Lukasz Kaiser", "Illia Polosukhin."],
    "venue": "NIPS.",
    "year": 2017
  }, {
    "title": "Wide residual networks",
    "authors": ["Sergey Zagoruyko", "Nikos Komodakis."],
    "venue": "BMVC.",
    "year": 2016
  }],
  "id": "SP:0ee468b9b709a2610c4b574d67218e7960350224",
  "authors": [{
    "name": "Xinyi Wang",
    "affiliations": []
  }, {
    "name": "Hieu Pham",
    "affiliations": []
  }, {
    "name": "Zihang Dai",
    "affiliations": []
  }, {
    "name": "Graham Neubig",
    "affiliations": []
  }],
  "abstractText": "In this work, we examine methods for data augmentation for text-based tasks such as neural machine translation (NMT). We formulate the design of a data augmentation policy with desirable properties as an optimization problem, and derive a generic analytic solution. This solution not only subsumes some existing augmentation schemes, but also leads to an extremely simple data augmentation strategy for NMT: randomly replacing words in both the source sentence and the target sentence with other random words from their corresponding vocabularies. We name this method SwitchOut. Experiments on three translation datasets of different scales show that SwitchOut yields consistent improvements of about 0.5 BLEU, achieving better or comparable performances to strong alternatives such as word dropout (Sennrich et al., 2016a). Code to implement this method is included in the appendix.",
  "title": "SwitchOut: an Efficient Data Augmentation Algorithm for Neural Machine Translation"
}