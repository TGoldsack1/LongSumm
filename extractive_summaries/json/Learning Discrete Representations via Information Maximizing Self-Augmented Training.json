{
  "sections": [{
    "heading": "1. Introduction",
    "text": "The task of unsupervised discrete representation learning is to obtain a function that maps similar (resp. dissimilar) data into similar (resp. dissimilar) discrete representations, where the similarity of data is defined according to applications of interest. It is a central machine learning task because of the compactness of the representations and ease\n1University of Tokyo, Japan 2RIKEN AIP, Japan 3Preferred Networks, Inc., Japan 4ATR Cognitive Mechanism Laboratories, Japan. Correspondence to: Weihua Hu <hu@ms.k.utokyo.ac.jp>, Takeru Miyato <takeru.miyato@gmail.com>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nof interpretation. The task includes two important machine learning tasks as special cases: clustering and unsupervised hash learning. Clustering is widely applied to data-driven application domains (Berkhin, 2006), while hash learning is popular for an approximate nearest neighbor search for large scale information retrieval (Wang et al., 2016).\nDeep neural networks are promising to be used thanks to their scalability and flexibility of representing complicated, non-linear decision boundaries. However, their model complexity is huge, and therefore, regularization of the networks is crucial to learn meaningful representations of data. Particularly, in unsupervised representation learning, target representations are not provided and hence, are unconstrained. Therefore, we need to carefully regularize the networks in order to learn useful representations that exhibit intended invariance for applications of interest (e.g., invariance to small perturbations or affine transformation). Naı̈ve regularization to use is a weight decay (Erin Liong et al., 2015). Such regularization, however, encourages global smoothness of the function prediction; thus, may not necessarily impose the intended invariance on the predicted discrete representations.\nInstead, in this paper, we use data augmentation to model the invariance of learned data representations. More specifically, we map data points into their discrete representations by a deep neural network and regularize it by encouraging its prediction to be invariant to data augmentation. The predicted discrete representations then exhibit the invariance specified by the augmentation. Our proposed regularization method is illustrated as red arrows in Figure 1. As depicted, we encourage the predicted representations of augmented data points to be close to those of the original data points in an end-to-end fashion. We term such regularization Self-Augmented Training (SAT). SAT is inspired by the recent success in regularization of neural networks in semi-supervised learning (Bachman et al., 2014; Miyato et al., 2016; Sajjadi et al., 2016). SAT is flexible to impose various types of invariances on the representations predicted by neural networks. For example, it is generally preferred for data representations to be locally invariant, i.e., remain unchanged under local perturbations on data points. Using SAT, we can impose the local invariance on the representations by pushing the predictions of perturbed data points to be close to those of the original data points. For image data, it may also be preferred for data representations to be invariant under affine distortion, e.g., rotation, scaling and parallel movement. We can similarly impose the invariance via SAT by using the affine distortion for the data augmentation.\nWe then combine the SAT with the Regularized Information Maximization (RIM) for clustering (Gomes et al., 2010; Bridle et al., 1991), and arrive at our Information Maximizing Self-Augmented Training (IMSAT), an information-theoretic method for learning discrete representations using deep neural networks. We illustrate the basic idea of IMSAT in Figure 1. Following the RIM, we maximize information theoretic dependency between inputs and their mapped outputs, while regularizing the mapping function. IMSAT differs from the original RIM in two ways. First, IMSAT deals with a more general setting of learning discrete representations; thus, is also applicable to hash learning. Second, it uses a deep neural network for the mapping function and regularizes it in an end-to-end fashion via SAT. Learning with our method can be performed by stochastic gradient descent (SGD); thus, scales well to large datasets.\nIn summary, our contributions are: 1) an informationtheoretic method for unsupervised discrete representation learning using deep neural networks with the end-to-end regularization, and 2) adaptations of the method to clustering and hash learning to achieve the state-of-the-art performance on several benchmark datasets.\nThe rest of the paper is organized as follows. Related work is summarized in Section 2, while our method, IMSAT, is\npresented in Section 3. Experiments are provided in Section 4 and conclusions are drawn in Section 5."
  }, {
    "heading": "2. Related Work",
    "text": "Various methods have been proposed for clustering and hash learning. The representative ones include K-means clustering and hashing (He et al., 2013), Gaussian mixture model clustering, iterative quantization (Gong et al., 2013), and minimal-loss hashing (Norouzi & Blei, 2011). However, these methods can only model linear boundaries between different representations; thus, cannot fit to non-linear structures of data. Kernel-based (Xu et al., 2004; Kulis & Darrell, 2009) and spectral (Ng et al., 2001; Weiss et al., 2009) methods can model the non-linearity of data, but they are difficult to scale to large datasets.\nRecently, clustering and hash learning using deep neural networks have attracted much attention. In clustering, Xie et al. (2016) proposed to use deep neural networks to simultaneously learn feature representations and cluster assignments, while Dilokthanakul et al. (2016) and Zheng et al. (2016) proposed to model the data generation process by using deep generative models with Gaussian mixture models as prior distributions.\nRegarding hashing learning, a number of studies have used deep neural networks for supervised hash learning and achieved state-of-the-art results on image and text retrievals (Xia et al., 2014; Lai et al., 2015; Zhang et al., 2015; Xu et al., 2015; Li et al., 2015). Relatively few studies have focused on unsupervised hash learning using deep neural networks. The pioneering work is semantic hashing, which uses stacked RBM models to learn compact binary representations (Salakhutdinov & Hinton, 2009). Erin Liong et al. (2015) recently proposed to use deep neural networks for the mapping function and achieved stateof-the-art results. These unsupervised methods, however, did not explicitly intended impose the invariance on the learned representations. Consequently, the predicted representations may not be useful for applications of interest.\nIn supervised and semi-supervised learning scenarios, data augmentation has been widely used to regularize neural networks. Leen (1995) showed that applying data augmentation to a supervised learning problem is equivalent to adding a regularization to the original cost function. Bachman et al. (2014); Miyato et al. (2016); Sajjadi et al. (2016) showed that such regularization can be adapted to semi-supervised learning settings to achieve state-of-theart performance.\nIn unsupervised representation learning scenarios, Dosovitskiy et al. (2014) proposed to use data augmentation to model the invariance of learned representations. Our IMSAT is different from Dosovitskiy et al. (2014)\nin two important aspects: 1) IMSAT directly imposes the invariance on the learned representations, while Dosovitskiy et al. (2014) imposes invariance on surrogate classes, not directly on the learned representations. 2) IMSAT focuses on learning discrete representations that are directly usable for clustering and hash learning, while Dosovitskiy et al. (2014) focused on learning continuous representations that are then used for other tasks such as classification and clustering. Relation of our work to denoising and contractive auto-encoders (Vincent et al., 2008; Rifai et al., 2011) is discussed in Appendix A."
  }, {
    "heading": "3. Method",
    "text": "Let X and Y denote the domains of inputs and discrete representations, respectively. Given training samples, {x1, x2, . . . , xN}, the task of discrete representation learning is to obtain a function, f : X → Y , that maps similar inputs into similar discrete representations. The similarity of data is defined according to applications of interest.\nWe organize Section 3 as follows. In Section 3.1, we review the RIM for clustering (Gomes et al., 2010). In Section 3.2, we present our proposed method, IMSAT, for discrete representation learning. In Sections 3.3 and 3.4, we adapt IMSAT to the tasks of clustering and hash learning, respectively. In Section 3.5, we discuss an approximation technique for scaling up our method."
  }, {
    "heading": "3.1. Review of Regularized Information Maximization for Clustering",
    "text": "The RIM (Gomes et al., 2010) learns a probabilistic classifier pθ(y|x) such that mutual information (Cover & Thomas, 2012) between inputs and cluster assignments is maximized. At the same time, it regularizes the complexity of the classifier. Let X ∈ X and Y ∈ Y ≡ {0, . . . ,K − 1} denote random variables for data and cluster assignments, respectively, where K is the number of clusters. The RIM minimizes the objective:\nR(θ)− λI(X;Y ), (1)\nwhere R(θ) is the regularization penalty, and I(X;Y ) is mutual information between X and Y , which depends on θ through the classifier, pθ(y|x). Mutual information measures the statistical dependency between X and Y , and is 0 iff they are independent. Hyper-parameter λ ∈ R trades off the two terms."
  }, {
    "heading": "3.2. Information Maximizing Self-Augmented Training",
    "text": "Here, we present two components that make up our IMSAT. We present the Information Maximization part in Section 3.2.1 and the SAT part in Section 3.2.2 ."
  }, {
    "heading": "3.2.1. INFORMATION MAXIMIZATION FOR LEARNING DISCRETE REPRESENTATIONS",
    "text": "We extend the RIM and consider learning M -dimensional discrete representations of data. Let the output domain be Y = Y1× · · ·×YM , where Ym ≡ {0, 1, . . . , Vm−1}, 1 ≤ m ≤ M . Let Y = (Y1, . . . , YM ) ∈ Y be a random variable for the discrete representation. Our goal is to learn a multioutput probabilistic classifier pθ(y1, . . . , yM |x) that maps similar inputs into similar representations. For simplicity, we model the conditional probability pθ(y1, . . . , yM |x) by using the deep neural network depicted in Figure 1. Under the model, {y1, . . . , yM} are conditionally independent given x:\npθ(y1, . . . , yM |x) = M∏\nm=1\npθ(ym|x). (2)\nFollowing the RIM (Gomes et al., 2010), we maximize the mutual information between inputs and their discrete representations, while regularizing the multi-output probabilistic classifier. The resulting objective to minimize looks exactly the same as Eq. (1), except that Y is multi-dimensional in our setting."
  }, {
    "heading": "3.2.2. REGULARIZATION OF DEEP NEURAL NETWORKS",
    "text": "VIA SELF-AUGMENTED TRAINING\nWe present an intuitive and flexible regularization objective, termed Self-Augmented Training (SAT). SAT uses data augmentation to impose the intended invariance on the data representations. Essentially, SAT penalizes representation dissimilarity between the original data points and augmented ones. Let T : X → X denote a pre-defined data augmentation under which the data representations should be invariant. The regularization of SAT made on data point x is\nRSAT(θ;x, T (x))\n= − M∑\nm=1\nVm−1∑\nym=0\npθ̂(ym|x) log pθ(ym|T (x)), (3)\nwhere pθ̂(ym|x) is the prediction of original data point x, and θ̂ is the current parameter of the network. In Eq. (3), the representations of the augmented data are pushed to be close to those of the original data. Since probabilistic classifier pθ(y|x) is modeled using a deep neural network, it is flexible enough to capture a wide range of invariances specified by the augmentation function T . The regularization by SAT is then the average of RSAT(θ;x, T (x)) over all the training data points:\nRSAT(θ;T ) = 1\nN\nN∑\nn=1\nRSAT(θ;xn, T (xn)). (4)\nThe augmentation function T can either be stochastic or deterministic. It can be designed specifically for the applications of interest. For example, for image data, affine distortion such as rotation, scaling and parallel movement can be used for the augmentation function.\nAlternatively, more general augmentation functions that do not depend on specific applications can be considered. A representative example is local perturbations, in which the augmentation function is\nT (x) = x+ r, (5)\nwhere r is a small perturbation that does not alter the meaning of the data point. The use of local perturbations in SAT encourages the data representations to be locally invariant. The resulting decision boundaries between different representations tend to lie in low density regions of a data distribution. Such boundaries are generally preferred and follow the low-density separation principle (Grandvalet et al., 2004).\nThe two representative regulariztion methods based on local perturbations are: Random Perturbation Training (RPT) (Bachman et al., 2014) and Virtual Adversarial Training (VAT) (Miyato et al., 2016). In RPT, perturbation r is sampled randomly from hyper-sphere ||r||2 = ϵ, where ϵ is a hyper-parameter that controls the range of the local perturbation. On the other hand, in VAT, perturbation r is chosen to be an adversarial direction:\nr = argmax r′\n{RSAT(θ̂;x, x+ r′); ||r′||2 ≤ ϵ}. (6)\nThe solution of Eq. (6) can be approximated efficiently by a pair of forward and backward passes. For further details, refer to Miyato et al. (2016)."
  }, {
    "heading": "3.3. IMSAT for Clustering",
    "text": "In clustering, we can directly apply the RIM (Gomes et al., 2010) reviewed in Section 3.1. Unlike the original RIM, however, our method, IMSAT, uses deep neural networks for the classifiers and regularizes them via SAT. By representing mutual information as the difference between marginal entropy and conditional entropy (Cover & Thomas, 2012), we have the objective to minimize:\nRSAT(θ;T )− λ [H(Y )−H(Y |X)] , (7)\nwhere H(·) and H(·|·) are entropy and conditional entropy, respectively. The two entropy terms can be calculated as\nH(Y ) ≡ h(pθ(y)) = h ( 1\nN\nN∑\ni=1\npθ(y|x) ) , (8)\nH(Y |X) ≡ 1 N\nN∑\ni=1\nh(pθ(y|xi)), (9)\nwhere h(p(y)) ≡ − ∑\ny′ p(y ′) log p(y′) is the entropy\nfunction. Increasing the marginal entropy H(Y ) encourages the cluster sizes to be uniform, while decreasing the conditional entropy H(Y |X) encourages unambiguous cluster assignments (Bridle et al., 1991).\nIn practice, we can incorporate our prior knowledge on cluster sizes by modifying H(Y ) (Gomes et al., 2010). Note that H(Y ) = logK − KL[pθ(y)|| U ], where K is the number of clusters, KL[·||·] is the Kullback-Leibler divergence, and U is a uniform distribution. Hence, maximization of H(Y ) is equivalent to minimization of KL[pθ(y)|| U ], which encourages predicted cluster distribution pθ(y) to be close to U . Gomes et al. (2010) replaced U in KL[pθ(y)|| U ] with any specified class prior q(y) so that pθ(y) is encouraged to be close to q(y). In our preliminary experiments, we found that the resulting pθ(y) could still be far apart from pre-specified q(y). To ensure that pθ(y) is actually close to q(y), we consider the following constrained optimization problem:\nmin θ RSAT(θ;T ) + λH(Y |X),\nsubject to KL[pθ(y)|| q(y)] ≤ δ, (10)\nwhere δ > 0 is a tolerance hyper-parameter that is set sufficiently small so that predicted cluster distribution pθ(y) is the same as class prior q(y) up to δ-tolerance. Eq. (10) can be solved by using the penalty method (Bertsekas, 1999), which turns the original constrained optimization problem into a series of unconstrained optimization problems. Refer to Appendix B for the detail."
  }, {
    "heading": "3.4. IMSAT for Hash Learning",
    "text": "In hash learning, each data point is mapped into a D-bitbinary code. Hence, the original RIM is not directly applicable. Instead, we apply our method for discrete representation learning presented in Section 3.2.1.\nThe computation of mutual information I(Y1, . . . , YD;X), however, is intractable for large D because it involves a summation over an exponential number of terms, each of which corresponds to a different configuration of hash bits.\nBrown (2009) showed that mutual information I(Y1, . . . , YD;X) can be expanded as the sum of interaction information (McGill, 1954):\nI(Y1, . . . , YD;X) = ∑\nC⊆SY\nI(C ∪X), |C| ≥ 1, (11)\nwhere SY ≡ {Y1, . . . , YD}. Note that I denotes interaction information when its argument is a set of random variables. Interaction information is a generalization of mutual information and can take a negative value. When the argument is a set of two random variables, the interaction information reduces to mutual information between the two\nrandom variables. Following Brown (2009), we only retain terms involving pairs of output dimensions in Eq. (11), i.e., all terms where |C| ≤ 2. This gives us\nD∑\nd=1\nI(Yd;X) + ∑\n1≤d ̸=d′≤D I({Yd, Yd′ , X}). (12)\nThis approximation ignores the interactions among hash bits beyond the pairwise interactions. It is related to the orthogonality constraint that is widely used in the literature to remove redundancy among hash bits (Wang et al., 2016). In fact, the orthogonality constraint encourages the covariance between a pair of hash bits to 0. Thus, it also takes into account the pairwise interactions.\nIt follows from the definition of interaction information and the conditional independence in Eq. (2) that\nI({Yd, Yd′ , X}) ≡ I(Yd;Yd′ |X)− I(Yd;Yd′) = −I(Yd;Yd′). (13)\nIn summary, our approximated objective to minimize is\nRSAT(θ;T )− λ\n⎛ ⎝ D∑\nd=1\nI(X;Yd)− ∑\n1≤d ̸=d′≤D I(Yd;Yd′)\n⎞\n⎠ .\n(14)\nThe first term regularizes the neural network. The second term maximizes the mutual information between data and each hash bit, and the third term removes the redundancy among the hash bits."
  }, {
    "heading": "3.5. Approximation of the Marginal Distribution",
    "text": "To scale up our method to large datasets, we would like the objective in Eq. (1) to be amenable to optimization based on mini-batch SGD. For the regularization term, we use the SAT in Eq. (4), which is the sum of per sample penalties and can be readily adapted to mini-batch computation. For the approximated mutual information in Eq. (14), we can decompose it into three parts: (i) conditional entropy H(Yd|X), (ii) marginal entropy H(Yd), and (iii) mutual information between a pair of output dimensions I(Yd;Yd′). The conditional entropy only consists of a sum over per example entropies (see Eq. (9)); thus, can be easily adapted to mini-batch computation. However, the marginal entropy (see Eq. (8)) and the mutual information involve the marginal distribution over a subset of target dimensions, i.e., pθ(c) ≡ 1N ∑N n=1 pθ(c|xn), where c ⊆ {y1, . . . , yM}. Hence, the marginal distribution can only be calculated using the entire dataset and is not amenable to the mini-batch setting. Following Springenberg (2015), we approximate the marginal distributions using mini-batch data:\npθ(c) ≈ 1 |B| ∑\nx∈B pθ(c|x) ≡ p̂θ(B)(c), (15)\nwhere B is a set of data in the mini-batch. In the case of clustering, the approximated objective that we actually minimize is an upper bound of the exact objective that we try to minimize. Refer to Appendix C of the supplementary material for the detailed discussion."
  }, {
    "heading": "4. Experiments",
    "text": "In this section, we evaluate IMSAT for clustering and hash learning using benchmark datasets."
  }, {
    "heading": "4.1. Implementation",
    "text": "In unsupervised learning, it is not straightforward to determine hyper-parameters by cross-validation. Therefore, in all the experiments with benchmark datasets, we used commonly reported parameter values for deep neural networks and avoided dataset-specific tuning as much as possible. Specifically, inspired by Hinton et al. (2012), we set the network dimensionality to d-1200-1200-M for clustering across all the datasets, where d and M are input and output dimensionality, respectively. For hash learning, we used smaller network sizes to ensure fast computation of mapping data into hash codes. We used rectified linear units (Jarrett et al., 2009; Nair & Hinton, 2010; Glorot et al., 2011) for all the hidden activations and applied batch normalization (Ioffe & Szegedy, 2015) to each layer to accelerate training. For the output layer, we used the softmax for clustering and the sigmoids for hash learning. Regarding optimization, we used Adam (Kingma & Ba, 2015) with the step size 0.002. Refer to Appendix D for further details. Our implementation based on Chainer (Tokui et al., 2015) is available at https://github.com/weihua916/imsat."
  }, {
    "heading": "4.2. Clustering",
    "text": ""
  }, {
    "heading": "4.2.1. DATASETS AND COMPARED METHODS",
    "text": "We evaluated our method for clustering presented in Section 3.3 on eight benchmark datasets. We performed experiments with two variants of the RIM and three variants of IMSAT, each of which uses different classifiers and regularization. Table 1 summarizes these variants. We also compared our IMSAT with existing clustering methods including K-means, DEC (Xie et al., 2016), denoising AutoEncoder (dAE)+K-means (Xie et al., 2016).\nA brief summary of dataset statistics is given in Table 2. In the experiments, our goal was to discover clusters that correspond well with the ground-truth categories. For the STL, CIFAR10 and CIFAR100 datasets, raw pixels are not suited for our goal because color information is dominant. We therefore applied 50-layer pre-trained deep residual networks (He et al., 2016) to extract features and used them for clustering. Note that since the residual network was trained on ImageNet, each class of the STL dataset (which is a subset of ImageNet) was expected to be well-separated in the feature space. For Omniglot, 100 types of characters were sampled, each containing 20 data points. Each data point was augmented 20 times by the stochastic affine distortion described in Appendix F. For SVHN, each image was represented as a 960-dimensional GIST feature (Oliva & Torralba, 2001). For Reuters and 20news, we removed stop words and retained the 2000 most frequent words. We then used tf-idf features. Refer to Appendix E of the supplementary material for further details."
  }, {
    "heading": "4.2.2. EVALUATION METRIC",
    "text": "Following Xie et al. (2016), we set the number of clusters to the number of ground-truth categories and evaluated clustering performance with unsupervised clustering accuracy (ACC):\nACC = max m\n∑N n=1 1{ln = m(cn)}\nN , (16)\nwhere ln and cn are the ground-truth label and cluster assignment produced using the algorithm for xn, respectively. The m ranges over all possible one-to-one mappings between clusters and labels. The best mapping can be efficiently computed using the Hungarian algorithm (Kuhn, 1955)."
  }, {
    "heading": "4.2.3. HYPER-PARAMETER SELECTION",
    "text": "In unsupervised learning, it is not straightforward to determine hyper-parameters by cross-validation. Hence, we fixed hyper-parameters across all the datasets unless there was an objective way to select them. For K-means, we tried 12 different initializations and reported the results with the best objectives. For dAE+K-means and DEC (Xie et al., 2016), we used the recommended hyperparameters for the network dimensionality and annealing speed.\nInspired by the automatic kernel width selection in spectral clustering (Zelnik-Manor & Perona, 2004), we set the perturbation range, ϵ, on data point x in VAT and RPT as\nϵ(x) = α · σt(x), (17)\nwhere α is a scalar and σt(x) is the Euclidian distance to the t-th neighbor of x. In our experiments, we fixed t = 10. For Linear IMSAT (VAT), IMSAT (RPT) and IMSAT (VAT), we fixed α = 0.4, 2.5 and 0.25, respectively, which performed well across the datasets.\nFor the methods shown in Table 1, we varied one hyperparameter and chose the best one that performed well across the datasets. More specifically, for Linear RIM and Deep RIM, we varied the decay rate over 0.0025 · 2i, i = 0, 1, . . . , 7. For the three variants of IMSAT, we varied λ in Eq. (19) for 0.025 · 2i, i = 0, 1, . . . , 7. We set q to be the uniform distribution and let δ = 0.01 · h(q(y)) in Eq. (10) for the all experiments.\nConsequently, we chose 0.005 for decay rates in both Linear RIM and Deep RIM. Also, we set λ = 1.6, 0.05 and 0.1 for Linear IMSAT (VAT), IMSAT (RPT) and IMSAT (VAT), respectively. We hereforth fixed these hyperparameters throughout the experiments for both clustering and hash learning. In Appendix G, we report all the experimental results and the criteria to choose the parameters."
  }, {
    "heading": "4.2.4. EXPERIMENTAL RESULTS",
    "text": "In Table 3, we compare clustering performance across eight benchmark datasets. We see that IMSAT (VAT) performed well across the datasets. The fact that our IMSAT outperformed Linear RIM, Deep RIM and Linear IMSAT (VAT) for most datasets suggests the effectiveness of using deep neural networks with an end-to-end regularization via SAT. Linear IMSAT (VAT) did not perform well even with the end-to-end regularization probably because the linear classifier was not flexible enough to model the intended invariance of the representations. We also see from Table 3 that IMSAT (VAT) consistently outperformed IMSAT (RPT) in our experiments. This suggests that VAT is an effective regularization method in unsupervised learning scenarios.\nWe further conducted experiments on the Omniglot dataset to demonstrate that clustering performance can be improved by incorporating domain-specific knowledge in the augmentation function of SAT. Specifically, we used the affine distortion in addition to VAT for the augmented function of SAT. We compared the clustering accuracy of IMSAT with three different augmentation functions: VAT, affine distortion, and the combination of VAT & affine distortion, in which we simply set the regularization to be\n1 2 · RSAT(θ;TVAT) + 1 2 · RSAT(θ;Taffine), (18)\nwhere TVAT and Taffine are augmentation functions of VAT and affine distortion, respectively. For Taffine, we used the stochastic affine distortion function defined in Appendix F.\nWe report the clustering accuracy of Omniglot in Table 4. We see that including affine distortion in data augmentation significantly improved clustering accuracy. Figure 2 shows ten randomly selected clusters of the Omniglot dataset that were found using IMSAT (VAT) and IMSAT (VAT & affine distortion). We observe that IMSAT (VAT & affine distortion) was able to discover cluster assignments that are invariant to affine distortion as we intended. These results suggest that our method successfully captured the invariance in the hand-written character recognition in an unsupervised way."
  }, {
    "heading": "4.3. Hash Learning",
    "text": ""
  }, {
    "heading": "4.3.1. DATASETS AND COMPARED METHODS",
    "text": "We evaluated our method for hash learning presented in Section 3.4 on two benchmark datasets: MNIST and CIFAR10 datasets. Each data sample of CIFAR10 is represented as a 512-dimensional GIST feature (Oliva & Torralba, 2001). Our method was compared against several unsupervised hash learning methods: spectral hashing (Weiss et al., 2009), PCA-ITQ (Gong et al., 2013), and Deep Hash (Erin Liong et al., 2015). We also compared our method to the hash versions of Linear RIM and Deep RIM. For our IMSAT, we used VAT for the regularization. We used the same hyper-parameters as in Section 4.2.3."
  }, {
    "heading": "4.3.2. EVALUATION METRIC",
    "text": "Following Erin Liong et al. (2015), we used three evaluation metrics to measure the performance of the different methods: 1) mean average precision (mAP); 2) precision at N = 500 samples; and 3) Hamming look-up result where the hamming radius is set as r = 2. We used the class labels to define the neighbors. We repeated the experiments ten times and took the average as the final result."
  }, {
    "heading": "4.3.3. EXPERIMENTAL RESULTS",
    "text": "The MNIST and CIFAR10 datasets both have 10 classes, and contain 70000 and 60000 data points, respectively. Following Erin Liong et al. (2015), we randomly sampled 1000 samples, 100 per class, as the query data and used the remaining data as the gallery set.\nWe tested performance for 16 and 32-bit hash codes. In practice, fast computation of hash codes is crucial for fast information retrieval. Hence, small networks are preferable. We therefore tested our method on three different network sizes: the same ones as Deep Hash (Erin Liong et al., 2015), d-200-200-M , and d-400-400-M . Note that Deep Hash used d-60-30-M and d-80-50-M for learning 16 and 32-bit hash codes, respectively.\nTable 5 lists the results for 16-bit hash. Due to the space\nconstraint, we report the results for 32-bit hash codes in Appendix H, but the results showed a similar tendency as that of 16-bit hash codes. We see from Table 5 that IMSAT with the largest network sizes (400-400) achieved competitive performance in both datasets. The performance of IMSAT improved significantly when slightly bigger networks (200-200) were used, while the performance of Deep RIM did not improve much with the larger networks. We deduce that this is because we can better model the local invariance by using more flexible networks. Deep RIM, on the other hand, did not significantly benefit from the larger networks, because the additional flexibility of the networks was not used by the global function regularization via weight-decay.1 In Appendix I, our deduction is supported using a toy dataset.\n1Hence, we deduce that Deep Hash, which is only regularized by weight-decay, would not benefit much by using larger networks."
  }, {
    "heading": "5. Conclusion & Future Work",
    "text": "In this paper, we presented IMSAT, an informationtheoretic method for unsupervised discrete representation learning using deep neural networks. Through extensive experiments, we showed that intended discrete representations can be obtained by directly imposing the invariance to data augmentation on the prediction of neural networks in an end-to-end fashion. For future work, it is interesting to apply our method to structured data, i.e., graph or sequential data, by considering appropriate data augmentation."
  }, {
    "heading": "Acknowledgements",
    "text": "We thank Brian Vogel for helpful discussions and insightful reviews on the paper. This paper is based on results obtained from Hu’s internship at Preferred Networks, Inc."
  }],
  "year": 2017,
  "references": [{
    "title": "Learning with pseudo-ensembles",
    "authors": ["Bachman", "Philip", "Alsharif", "Ouais", "Precup", "Doina"],
    "venue": "In NIPS,",
    "year": 2014
  }, {
    "title": "A survey of clustering data mining techniques",
    "authors": ["Berkhin", "Pavel"],
    "venue": "In Grouping multidimensional data,",
    "year": 2006
  }, {
    "title": "Unsupervised classifiers, mutual information and ’phantom targets",
    "authors": ["Bridle", "John S", "Heading", "Anthony J. R", "MacKay", "David J. C"],
    "venue": "In NIPS,",
    "year": 1991
  }, {
    "title": "A new perspective for information theoretic feature selection",
    "authors": ["Brown", "Gavin"],
    "venue": "In AISTATS,",
    "year": 2009
  }, {
    "title": "An analysis of single-layer networks in unsupervised feature learning",
    "authors": ["Coates", "Adam", "Lee", "Honglak", "Ng", "Andrew Y"],
    "venue": "Ann Arbor,",
    "year": 2010
  }, {
    "title": "Elements of information theory",
    "authors": ["Cover", "Thomas M", "Thomas", "Joy A"],
    "year": 2012
  }, {
    "title": "Deep unsupervised clustering with gaussian mixture variational autoencoders",
    "authors": ["Dilokthanakul", "Nat", "Mediano", "Pedro AM", "Garnelo", "Marta", "Lee", "Matthew CH", "Salimbeni", "Hugh", "Arulkumaran", "Kai", "Shanahan", "Murray"],
    "venue": "arXiv preprint arXiv:1611.02648,",
    "year": 2016
  }, {
    "title": "Discriminative unsupervised feature learning with convolutional neural networks",
    "authors": ["Dosovitskiy", "Alexey", "Springenberg", "Jost Tobias", "Riedmiller", "Martin", "Brox", "Thomas"],
    "venue": "In NIPS,",
    "year": 2014
  }, {
    "title": "Deep hashing for compact binary codes learning",
    "authors": ["Erin Liong", "Venice", "Lu", "Jiwen", "Wang", "Gang", "Moulin", "Pierre", "Zhou", "Jie"],
    "venue": "In CVPR,",
    "year": 2015
  }, {
    "title": "Deep sparse rectifier neural networks",
    "authors": ["Glorot", "Xavier", "Bordes", "Antoine", "Bengio", "Yoshua"],
    "venue": "In AISTATS,",
    "year": 2011
  }, {
    "title": "Discriminative clustering by regularized information maximization",
    "authors": ["Gomes", "Ryan", "Krause", "Andreas", "Perona", "Pietro"],
    "venue": "In NIPS,",
    "year": 2010
  }, {
    "title": "Iterative quantization: A procrustean approach to learning binary codes for large-scale image retrieval",
    "authors": ["Gong", "Yunchao", "Lazebnik", "Svetlana", "Gordo", "Albert", "Perronnin", "Florent"],
    "venue": "IEEE Transactions on Pattern Analysis and Machine Intelligence,",
    "year": 2013
  }, {
    "title": "Semi-supervised learning by entropy minimization",
    "authors": ["Grandvalet", "Yves", "Bengio", "Yoshua"],
    "venue": "In NIPS,",
    "year": 2004
  }, {
    "title": "K-means hashing: An affinity-preserving quantization method for learning binary compact codes",
    "authors": ["He", "Kaiming", "Wen", "Fang", "Sun", "Jian"],
    "venue": "In CVPR,",
    "year": 2013
  }, {
    "title": "Delving deep into rectifiers: Surpassing humanlevel performance on imagenet classification",
    "authors": ["He", "Kaiming", "Zhang", "Xiangyu", "Ren", "Shaoqing", "Sun", "Jian"],
    "venue": "In CVPR,",
    "year": 2015
  }, {
    "title": "Deep residual learning for image recognition",
    "authors": ["He", "Kaiming", "Zhang", "Xiangyu", "Ren", "Shaoqing", "Sun", "Jian"],
    "year": 2016
  }, {
    "title": "Improving neural networks by preventing co-adaptation of feature detectors",
    "authors": ["Hinton", "Geoffrey E", "Srivastava", "Nitish", "Krizhevsky", "Alex", "Sutskever", "Ilya", "Salakhutdinov", "Ruslan R"],
    "venue": "arXiv preprint arXiv:1207.0580,",
    "year": 2012
  }, {
    "title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
    "authors": ["Ioffe", "Sergey", "Szegedy", "Christian"],
    "venue": "In ICML,",
    "year": 2015
  }, {
    "title": "What is the best multi-stage architecture for object recognition",
    "authors": ["Jarrett", "Kevin", "Kavukcuoglu", "Koray", "Ranzato", "Marc’Aurelio", "LeCun", "Yann"],
    "venue": "In ICCV,",
    "year": 2009
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Kingma", "Diederik", "Ba", "Jimmy"],
    "venue": "In ICLR,",
    "year": 2015
  }, {
    "title": "Siamese neural networks for one-shot image recognition",
    "authors": ["Koch", "Gregory"],
    "venue": "PhD thesis, University of Toronto,",
    "year": 2015
  }, {
    "title": "The hungarian method for the assignment problem",
    "authors": ["Kuhn", "Harold W"],
    "venue": "Naval research logistics quarterly,",
    "year": 1955
  }, {
    "title": "Learning to hash with binary reconstructive embeddings",
    "authors": ["Kulis", "Brian", "Darrell", "Trevor"],
    "venue": "In NIPS,",
    "year": 2009
  }, {
    "title": "Simultaneous feature learning and hash coding with deep neural networks",
    "authors": ["Lai", "Hanjiang", "Pan", "Yan", "Liu", "Ye", "Shuicheng"],
    "venue": "In CVPR,",
    "year": 2015
  }, {
    "title": "One shot learning of simple visual concepts",
    "authors": ["Lake", "Brenden M", "Salakhutdinov", "Ruslan", "Gross", "Jason", "Tenenbaum", "Joshua B"],
    "venue": "In CogSci,",
    "year": 2011
  }, {
    "title": "Newsweeder: Learning to filter netnews",
    "authors": ["Lang", "Ken"],
    "venue": "In ICML, pp",
    "year": 1995
  }, {
    "title": "Gradient-based learning applied to document recognition",
    "authors": ["LeCun", "Yann", "Bottou", "Léon", "Bengio", "Yoshua", "Haffner", "Patrick"],
    "venue": "Proceedings of the IEEE,",
    "year": 1998
  }, {
    "title": "From data distributions to regularization in invariant learning",
    "authors": ["Leen", "Todd K"],
    "venue": "Neural Computation,",
    "year": 1995
  }, {
    "title": "Rcv1: A new benchmark collection for text categorization research",
    "authors": ["Lewis", "David D", "Yang", "Yiming", "Rose", "Tony G", "Li", "Fan"],
    "venue": "Journal of machine learning research,",
    "year": 2004
  }, {
    "title": "Feature learning based deep supervised hashing with pairwise labels",
    "authors": ["Li", "Wu-Jun", "Wang", "Sheng", "Kang", "Wang-Cheng"],
    "venue": "In IJCAI,",
    "year": 2015
  }, {
    "title": "Multivariate information transmission",
    "authors": ["McGill", "William J"],
    "venue": "Psychometrika, 19(2):97–116,",
    "year": 1954
  }, {
    "title": "Distributional smoothing with virtual adversarial training",
    "authors": ["Miyato", "Takeru", "Maeda", "Shin-ichi", "Koyama", "Masanori", "Nakae", "Ken", "Ishii", "Shin"],
    "venue": "In ICLR,",
    "year": 2016
  }, {
    "title": "Rectified linear units improve restricted boltzmann machines",
    "authors": ["Nair", "Vinod", "Hinton", "Geoffrey E"],
    "venue": "In ICML,",
    "year": 2010
  }, {
    "title": "Reading digits in natural images with unsupervised feature learning",
    "authors": ["Netzer", "Yuval", "Wang", "Tao", "Coates", "Adam", "Bissacco", "Alessandro", "Wu", "Bo", "Ng", "Andrew Y"],
    "venue": "In NIPS workshop on deep learning and unsupervised feature learning,",
    "year": 2011
  }, {
    "title": "On spectral clustering: Analysis and an algorithm",
    "authors": ["Ng", "Andrew Y", "Jordan", "Michael I", "Weiss", "Yair"],
    "venue": "In NIPS,",
    "year": 2001
  }, {
    "title": "Minimal loss hashing for compact binary codes",
    "authors": ["Norouzi", "Mohammad", "Blei", "David M"],
    "venue": "In ICML,",
    "year": 2011
  }, {
    "title": "Modeling the shape of the scene: A holistic representation of the spatial envelope",
    "authors": ["Oliva", "Aude", "Torralba", "Antonio"],
    "venue": "International journal of computer vision,",
    "year": 2001
  }, {
    "title": "Contractive auto-encoders: Explicit invariance during feature extraction",
    "authors": ["Rifai", "Salah", "Vincent", "Pascal", "Muller", "Xavier", "Glorot", "Bengio", "Yoshua"],
    "venue": "In ICML,",
    "year": 2011
  }, {
    "title": "Regularization with stochastic transformations and perturbations for deep semi-supervised learning",
    "authors": ["Sajjadi", "Mehdi", "Javanmardi", "Mehran", "Tasdizen", "Tolga"],
    "venue": "In NIPS,",
    "year": 2016
  }, {
    "title": "Unsupervised and semisupervised learning with categorical generative adversarial networks",
    "authors": ["Springenberg", "Jost Tobias"],
    "venue": "In ICLR,",
    "year": 2015
  }, {
    "title": "80 million tiny images: A large data set for nonparametric object and scene recognition",
    "authors": ["Torralba", "Antonio", "Fergus", "Rob", "Freeman", "William T"],
    "venue": "IEEE transactions on pattern analysis and machine intelligence,",
    "year": 1970
  }, {
    "title": "Extracting and composing robust features with denoising autoencoders",
    "authors": ["Vincent", "Pascal", "Larochelle", "Hugo", "Bengio", "Yoshua", "Manzagol", "Pierre-Antoine"],
    "venue": "In ICML,",
    "year": 2008
  }, {
    "title": "Learning to hash for indexing big data—a survey",
    "authors": ["Wang", "Jun", "Liu", "Wei", "Kumar", "Sanjiv", "Chang", "Shih-Fu"],
    "venue": "Proceedings of the IEEE,",
    "year": 2016
  }, {
    "title": "Spectral hashing",
    "authors": ["Weiss", "Yair", "Torralba", "Antonio", "Fergus", "Rob"],
    "venue": "In NIPS,",
    "year": 2009
  }, {
    "title": "Supervised hashing for image retrieval via image representation learning",
    "authors": ["Xia", "Rongkai", "Pan", "Yan", "Lai", "Hanjiang", "Liu", "Cong", "Shuicheng"],
    "venue": "In AAAI,",
    "year": 2014
  }, {
    "title": "Unsupervised deep embedding for clustering analysis",
    "authors": ["Xie", "Junyuan", "Girshick", "Ross", "Farhadi", "Ali"],
    "venue": "In ICML,",
    "year": 2016
  }, {
    "title": "Convolutional neural networks for text hashing",
    "authors": ["Xu", "Jiaming", "Wang", "Peng", "Tian", "Guanhua", "Bo", "Zhao", "Jun", "Fangyuan", "Hao", "Hongwei"],
    "venue": "In IJCAI,",
    "year": 2015
  }, {
    "title": "Maximum margin clustering",
    "authors": ["Xu", "Linli", "Neufeld", "James", "Larson", "Bryce", "Schuurmans", "Dale"],
    "venue": "In NIPS,",
    "year": 2004
  }, {
    "title": "Self-tuning spectral clustering",
    "authors": ["Zelnik-Manor", "Lihi", "Perona", "Pietro"],
    "venue": "In NIPS,",
    "year": 2004
  }, {
    "title": "Bit-scalable deep hashing with regularized similarity learning for image retrieval and person re-identification",
    "authors": ["Zhang", "Ruimao", "Lin", "Liang", "Rui", "Zuo", "Wangmeng", "Lei"],
    "venue": "IEEE Transactions on Image Processing,",
    "year": 2015
  }, {
    "title": "Variational deep embedding: A generative approach to clustering",
    "authors": ["Zheng", "Yin", "Tan", "Huachun", "Tang", "Bangsheng", "Zhou", "Hanning"],
    "venue": "arXiv preprint arXiv:1611.05148,",
    "year": 2016
  }],
  "id": "SP:c2280e7b4391748ef6decdb16b07cfe68a68d685",
  "authors": [{
    "name": "Weihua Hu",
    "affiliations": []
  }, {
    "name": "Takeru Miyato",
    "affiliations": []
  }, {
    "name": "Seiya Tokui",
    "affiliations": []
  }, {
    "name": "Eiichi Matsumoto",
    "affiliations": []
  }, {
    "name": "Masashi Sugiyama",
    "affiliations": []
  }],
  "abstractText": "Learning discrete representations of data is a central machine learning task because of the compactness of the representations and ease of interpretation. The task includes clustering and hash learning as special cases. Deep neural networks are promising to be used because they can model the non-linearity of data and scale to large datasets. However, their model complexity is huge, and therefore, we need to carefully regularize the networks in order to learn useful representations that exhibit intended invariance for applications of interest. To this end, we propose a method called Information Maximizing Self-Augmented Training (IMSAT). In IMSAT, we use data augmentation to impose the invariance on discrete representations. More specifically, we encourage the predicted representations of augmented data points to be close to those of the original data points in an end-to-end fashion. At the same time, we maximize the informationtheoretic dependency between data and their predicted discrete representations. Extensive experiments on benchmark datasets show that IMSAT produces state-of-the-art results for both clustering and unsupervised hash learning.",
  "title": "Learning Discrete Representations via Information Maximizing Self-Augmented Training"
}