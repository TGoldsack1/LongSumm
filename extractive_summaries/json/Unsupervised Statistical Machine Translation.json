{
  "sections": [{
    "heading": "1 Introduction",
    "text": "Machine translation (MT) systems usually require a large amount of bilingual data, produced by humans, as supervision for training. However, finding such data remains challenging for most language pairs, as it may not exist or may be too costly to manually produce.\nIn contrast, a large amount of monolingual data can be easily collected for many languages, for instance from the Web.1 Previous work proposed many ways for taking advantage of the monolingual data in order to improve translation models trained on bilingual data. These methods usually exploit existing accurate translation models and have shown to be useful especially when targeting\n1See for instance the Common Crawl project: http:// commoncrawl.org/\nlow-resource language pairs and domains. However, they usually fail when the available bilingual data is too noisy or too small to train useful translation models. In such scenarios, the use of pivot languages or unsupervised machine translation are possible alternatives.\nRecent work has shown remarkable results in training MT systems using only monolingual data in the source and target languages. Unsupervised statistical (USMT) and neural (UNMT) machine translation have been proposed (Artetxe et al., 2018b; Lample et al., 2018b). State-of-theart USMT (Artetxe et al., 2018b; Lample et al., 2018b) uses a phrase table induced from source and target phrases, extracted from the monolingual data, paired and scored using bilingual word, or n-gram, embeddings trained without supervision. This phrase table is plugged in a standard phrasebased SMT framework that is used to translate target monolingual data into the source language, i.e., performing a so-called back-translation. The translated target sentences and their translations in the source language are paired to form synthetic parallel data and to train a source-to-target USMT system. This back-translation/re-training step is repeated for several iterations to refine the translation model of the system.2 On the other hand, state-of-the-art UNMT (Lample et al., 2018b) uses bilingual sub-word embeddings. They are trained on the concatenation of source and target monolingual data in which tokens have been segmented into sub-word units using, for instance, byte-pairencoding (BPE) (Sennrich et al., 2016b). This method can learn bilingual embeddings if the source and target languages have in common some sub-word units. The sub-word embeddings are then used to initialize the lookup tables in the encoder and decoder of the UNMT system. Follow-\n2Previous work did not address the issue of convergence and rather fixed the number of iterations to perform for these refinement steps.\nar X\niv :1\n81 0.\n12 70\n3v 1\n[ cs\n.C L\n] 3\n0 O\nct 2\n01 8\ning this initialization step, UNMT mainly relies on denoising autoencoder as language model during training and on latent representation shared across the source and target languages for the encoder and the decoder.\nWhile the primary target of USMT and UNMT is low-resource language pairs, their possible applications for these language pairs remain challenging, especially for distant languages,3 and have yet to be demonstrated. On the other hand, unsupervised MT achieves impressive results on resource-rich language pairs, with recent and quick progresses, suggesting that it may become competitive, or more likely complementary, to supervised MT in the near future.\nIn this preliminary work, we propose a new approach for unsupervised MT to further reduce the gap between supervised and unsupervised MT. Our approach exploits a new framework in which UNMT is bootstrapped by USMT and uses only synthetic parallel data as supervision for training. The main outcomes of our work are as follows:\n• We propose a simplified USMT framework. It is easier to set up and train. We also show that using back-translation to train USMT is not suitable and underperform.\n• We propose to use supervised NMT framework for the unsupervised NMT scenarios by simply replacing true parallel data with synthetic parallel data generated by USMT. This strategy enables the use of well-established NMT architectures with all their features, without assuming any relatedness between source and target languages in contrast to previous work.\n• We empirically show that our framework leads to significantly better UNMT than USMT on the WMT16 German–English news translation task, for both translation directions."
  }, {
    "heading": "2 What is truly unsupervised in this paper?",
    "text": "Since the term “unsupervised” may be misleading, we present in this section what aspects of this work are truly unsupervised.\n3Mainly due to the difficulty of training accurate unsupervised bilingual word/sub-word embeddings for distant languages (Søgaard et al., 2018).\nAs previous work, we define “unsupervised MT” as MT that does not use human-made translation pairs as bilingual data for training. Nonetheless, MT still needs some supervision for training. Our approach uses as supervision synthetic bilingual data generated from monolingual data.\n“Unsupervised” qualifies only the training of MT systems on bilingual parallel data of which at least one side is synthetic. For tuning, it is arguably unsupervised in some of our experiments or supervised using a small set of human-made bilingual sentence pairs. We discuss “unsupervised tuning” in Section 3.2. For evaluation, it is fully supervised, as in previous work, since we use a human-made test set to evaluate the translation quality.\nEven if our systems are trained without humanmade bilingual data, we can still argue that the monolingual corpora used to generate synthetic parallel data have been produced by humans. Source and target monolingual corpora in our experiments (see Section 5.1) could include some comparable parts. Moreover, we cannot ensure that they do not contain any human-made translations from which our systems can take advantage during training. Finally, we use SMT and NMT architectures, set and use their hyper-parameters (for instance, the default parameters of the Transformer model) in our framework that have already shown to give good results in supervised MT."
  }, {
    "heading": "3 Simplified USMT",
    "text": "Our USMT framework is based on the same architecture proposed by previous work (Artetxe et al., 2018b; Lample et al., 2018b): a phrase table is induced from monolingual data and used to compose the initial USMT system that is then refined iteratively using synthetic parallel data. We propose the following improvements and discussions to simplify the framework and make it faster with lighter models (see also Figure 1):\n• Section 3.1: we propose several modifications to rely more on compositional phrases and to simplify the phrase table induction compared to the method proposed by Artetxe et al. (2018b)\n• Section 3.2: we discuss the feasibility of unsupervised tuning.\n• Section 3.3: we propose to replace the backtranslation in the refinement steps with for-\nward translation to improve translation quality and to remove the need of simultaneously training models for both translation directions.\n• Section 3.4: we propose to prune the phrase table to speed up the generation of synthetic parallel data during the refinement steps."
  }, {
    "heading": "3.1 Phrase table induction",
    "text": "As proposed by Artetxe et al. (2018b) and Lample et al. (2018b), the first step of our approach for USMT is an unsupervised phrase table induction that only takes as inputs a set of source phrases, a set of target phrases, and their respective embeddings, as illustrated by Figure 2. Artetxe et al. (2018b) regarded the most frequent unigrams, bigrams, and trigrams in the monolingual data as phrases. The embedding of each n-gram is computed with a generalization of the skipgram algorithm (Mikolov et al., 2013). Then, source and target n-gram embedding spaces are aligned in the same bilingual embedding space without supervision (Artetxe et al., 2018a). Lample et al. (2018b)’s method also works at n-gram level, but computes phrase embeddings as proposed by Zhao et al. (2015): performing the element-wise addition of the embeddings of the\ncomponent words of the phrase, also trained on the monolingual data and aligned in the same bilingual embedding space. This method can estimate embedding for compositional phrases but not for non-compositional phrases unlike Artetxe et al. (2018b)’s method. Interestingly, Artetxe et al. (2018b)’s method yields significantly better results at the first iteration of USMT, that uses the induced phrase table, but performs similarly to Lample et al. (2018b)’s method after several refinement steps (see Section 3.3).\nWe choose to build USMT with an alternative method for phrase table induction. We adopt the method proposed by Marie and Fujita (2018), except that we remove the supervision using a bilingual word lexicon. First, phrases are collected using the following equation (Mikolov et al., 2013):\nscore(wiwj) = freq(wiwj)− δ\nfreq(wi)× freq(wj) , (1)\nwhere wi and wj are two consecutive tokens or phrases in the monolingual data, freq(·) the frequency of the given token or phrase, and δ a discounting coefficient for preventing the retrieval of phrases composed of very infrequent tokens. Consecutive tokens/phrases having a higher score than a pre-defined threshold are regarded as new phrases,4 and a new pass is performed to obtain longer phrases. The iteration results in the collection of much longer and meaningful phrases, i.e., not only very frequent sequences of grammatical words, rather than only short n-grams. In our experiments, we perform 6 iterations to collect phrases of up to 6 tokens.5 Equation (1) was\n4This transformation is performed by simply replacing the space between the two tokens/phrases with an underscore.\n5We chose a maximum phrase length of 6, since this value\noriginally proposed to identify non-compositional phrases. However, we choose to enforce the collection of more compositional phrases with a low δ6 for the following reasons:\n• very few phrases are actually noncompositional in standard SMT systems (Zens et al., 2012),\n• most of them are not very frequent, and • useful representation of compositional\nphrases can easily be obtained compositionally (Zhao et al., 2015).\nTo obtain the pairs of source and target phrases that populate the induced phrase table, we used the Equation proposed by Lample et al. (2018b):7\np(tj |si) = exp (β cos(emb(tj), emb(si)))∑ k exp (β cos(emb(tk), emb(si))) ,\n(2) where tj is the j-th phrase in the target phrase list and si the i-th phrase in the source phrase list, β a parameter to tune the peakiness of the distribution8 (Smith et al., 2017), and emb(·) a function returning the bilingual embedding of a given phrase.\nIn this work, for a reasonably fast computation, we retained only the 300k most frequent phrases in each language and retained for each of them the 300-best target phrases according to Equation (2).\nStandard phrase-based SMT uses the following four translation probabilities for each phrase pair.\n(a) p(tj |si): forward phrase translation probability\n(b) p(si|tj): backward phrase translation probability\n(c) lex(tj |si): forward lexical translation probability\n(d) lex(si|tj): backward lexical translation probability\nis usually used as the maximum length in most state-of-theart SMT frameworks.\n6We set δ = 10 in all our experiments. 7We could not obtain results similar to the results reported in Lample et al. (2018b) (the second version of their arXiv paper) by using their Equation (3) with β = 30 as they proposed. We have confirmed through personal communications with the authors that Equation (2), as we wrote, with β = 30, generates the expected results. We did not use the Equation computing φ in Artetxe et al. (2018b), since it produces negative value as a probability when cosine similarity is negative.\n8We set β = 30 since it is the default value proposed in the code released by Smith et al. (2017): https://github.com/Babylonpartners/ fastText_multilingual\nThese probabilities, except (a), need to be computed only for the 300-best target phrases for each source phrase that are already determined using (a). (b) is given by switching si and tj in Equation (2). To compute lexical translation probabilities, (c) and (d), given the significant filtering of candidate target phrases, we can adopt a more costly but better similarity score. In this work, we compute them using word embeddings as proposed by Song and Roth (2015):\nlex(tj |si) = 1\nL L∏ l=1 K max k=1 p(tkj |sli) (3)\nwhere K and L are the number of words in tj and si, respectively, and p(tkj |sli) the translation probability of the k-th target word tkj of tj given the l-th source word sli of si given by Equation (2). This phrase-level lexical translation probability is computed for both translation directions. Note that, unlike Song and Roth (2015) and Kajiwara and Komachi (2016), we do not use a threshold value under which p(tkj |sli) is ignored, since it would require some supervised fine-tuning to be set according to the translation task. In practice, even without this threshold value, our preliminary experiments showed significant improvements of translation quality by incorporating lex(tj |si) and lex(si|tj) into the induced phrase table.\nAfter the computation of the above four scores for each phrase pair in the induced phrase table, the phrase table is plugged in an SMT system to perform what we denote in the remainder of this paper as iteration 0 of USMT.\nComputing lexicalized reordering models for the phrase pairs in the induced phrase table from monolingual data is feasible and helpful as shown by Klementiev et al. (2012). However, for the sake of simplicity, we do not compute these lexical reordering models for iteration 0."
  }, {
    "heading": "3.2 Discussion about unsupervised tuning",
    "text": "State-of-the-art supervised SMT performs the weighted log-linear combination of different models (Och and Ney, 2002). The model weights are tuned given a small development set of bilingual sentence pairs. For completely unsupervised SMT, we cannot assume the availability of this development set. In other words, model weights must be tuned without the supervision of manually produced bilingual data.\nLample et al. (2018b) used some pre-existing default weights that work reasonably well. On the other hand, Artetxe et al. (2018b) obtained better results by using 10k monolingual sentences paired with their back-translations as a development set. Nonetheless, to create this development set, they also relied on the same pre-exisintg default weights used by Lample et al. (2018b). To be precise, both used the default weights of the Moses framework (Koehn et al., 2007). In this preliminary work, we present results with supervised tuning and with the Moses’s default weights.\nHowever, regarding the use of default weights as “unsupervised tuning” is arguable, since these default weights have been determined manually to work well for European languages. For translation between much more distant languages,9 these default weights would likely result in a very poor translation quality. We argue that unsupervised tuning remains one of the main issues in current approaches for USMT.\nNote that while creating large training bilingual data manually for a particular language pairs is very costly, which is one of the fundamental motivations of unsupervised MT, we can assume that a small set of sentence pairs required for tuning can be created at a reasonable cost."
  }, {
    "heading": "3.3 Refinement without back-translation",
    "text": "Artetxe et al. (2018b) and Lample et al. (2018b) presented the same idea of performing so-called refinement steps. Those steps use USMT to generate synthetic parallel data to train a new phrase table, with refined translation probabilities. This can be repeated for several iterations to improve USMT. The initial system at iteration 0 uses the induced phrase table (see Section 3.1), while the following iterations use only a phrase table and a lexicalized reordering model trained on the synthetic parallel data generated by USMT. They both fixed the number of iterations.\nArtetxe et al. (2018b) and Lample et al. (2018b) generated the synthetic parallel data through backtranslation: a target-to-source USMT system was used to back-translate sentences in the target language, then the pairs of each sentence in the target language and its USMT output in the source language were used as synthetic parallel data to train a new source-to-target USMT system. This way\n9For instance, Lample et al. (2018b) presented for Urdu– English only the results with supervised tuning.\nof using back-translation has originally been proposed to improve NMT systems (Sennrich et al., 2016a) with a specific motivation to enhance the decoder by exploiting fluent sentences in the target language. In contrast, however, using backtranslation for USMT lacks motivation. Since the source side of the synthetic parallel data, i.e., decoded results of USMT, is not fluent, USMT will learn a phrase table with many ungrammatical source phrases, or foreign words, that will never be seen in the source language, meaning that many phrase pairs in the phrase table will never be used. Moreover, possible and frequent source phrases, or even source words, may not be generated via back-translation and will be consequently absent from the trained phrase table.\nWe rather consider that the language model already trained on a large monolingual corpus in the target language can play a much more important role in generating more fluent translations. This motivates us to perform the refinement steps on synthetic parallel data made of source sentences translated into the target language by the sourceto-target system, i.e., “forward translation,” as opposed to back-translation. In fact, the idea of retraining an SMT system on synthetic parallel data generated by a source-to-target system has already been proven beneficial (Ueffing et al., 2007).\nAt each iteration, we randomly sample new N source sentences from the monolingual corpus and translate them with the latest USMT system to generate synthetic parallel data."
  }, {
    "heading": "3.4 Phrase table pruning",
    "text": "Generating synthetic parallel data through decoding millions of sentences is one of the most computationally expensive parts of the refinement steps, requiring also a large memory to store the whole phrase table.10 In SMT, decoding speed can be improved by reducing the size of the phrase table. The phrase tables trained during the re-\n10To decode a particular test set, usually consisting of thousands of sentences, the phrase table can be drastically filtered by keeping only the phrase pairs applicable to the source sentences to translate. For the refinement steps of USMT, this filtering is impractical since we need to translate a very large number of sentences. In other words, it would still remain a large number of phrase pairs. Another alternative is to binarize the phrase table so that the system can load only applicable phrase pairs on-demand at decoding time. However, we did not consider it in our framework since the binarization is itself very costly to perform, and more importantly, the phrase table of each refinement step is used only once.\nfinement steps are expected to be very noisy and very large since they are trained on noisy parallel data. Therefore, we assume that a large number of phrase pairs can be removed without sacrificing translation quality. On this assumption, we use the well-known algorithm for pruning phrase table (Johnson et al., 2007), which has shown good performance in removing less reliable phrase pairs without any significant drop of the translation quality. This pruning can be done for each refinement step to reduce the phrase table size, and consequently to speed up the decoding. Note that we cannot prune the induced phrase table used at iteration 0, since it was not learned from parallel data: we do not have co-occurrence statistics for the phrase pairs."
  }, {
    "heading": "4 UNMT as NMT trained exclusively on synthetic parallel data",
    "text": "To make NMT able to learn how to translate from monolingual data only, previous work on UNMT (Artetxe et al., 2018c; Lample et al., 2018a,b; Yang et al., 2018) proposed dedicated architectures, such as denoising autoencoders, shared latent representations, weight sharing, pre-trained sub-word embeddings, and adversarial training.\nIn this paper, we propose to train UNMT systems exclusively on synthetic parallel data, using existing frameworks for supervised NMT. Specifically, we train the first UNMT system on synthetic parallel data generated by USMT through back-translating monolingual sentences in the target language, expecting that they are of a better quality than those generated by existing UNMT frameworks.\nOur approach is significantly different from Lample et al. (2018b)’s “PBSMT+NMT” configuration in the following two aspects. First, while it uses synthetic parallel data generated by USMT only to further tune their UNMT system, ours uses it for initialization. Second, they assumed certain level of relatedness between source and target languages, which is a prerequisite to jointly pre-train bilingual sub-word embeddings. Our approach does not make this assumption.\nHowever, training an NMT system only on synthetic parallel data generated by USMT, as we proposed, will hardly make an UNMT system significantly better than USMT systems. To obtain better UNMT systems, we propose the following (see also Figure 3).\n• Section 4.1: we propose an incremental training strategy for UNMT that gradually increases the quality and the quantity of synthetic parallel data.\n• Section 4.2: we propose to filter the synthetic parallel data to remove before training the sentence pairs with the noisiest synthetic sentences, aiming at speeding up training and improving translation quality."
  }, {
    "heading": "4.1 Incremental training",
    "text": "To train UNMT, we first use the synthetic parallel data generated by the last refinement step of our USMT system. Since it has been shown that backtranslated monolingual data significantly improves translation quality in NMT, as opposed to the refinement of our USMT (see Section 3.3), we train source-to-target and target-to-source UNMT systems on synthetic parallel data respectively generated by a target-to-source and source-to-target USMT systems.\nIn contrast to supervised NMT where synthetic parallel data are used in combination with humanmade parallel data, we can presumably use as much synthetic parallel data as possible, since seeing more and more fluent target sentences will be helpful to train a better decoder while we can assume that the quality of synthetic source side remains constant. In practice, generating a large quantity of synthetic parallel data is costly. Therefore, to train the first UNMT system, we use the\nsame number, N , of synthetic sentence pairs generated by the final USMT system.\nSince the source side of the synthetic parallel data is generated by USMT, it is expected to be of worse quality than those that state-of-the-art supervised NMT can generate. Therefore, we propose to refine UNMT through gradually increasing the quality and quantity of synthetic parallel data. First, we back-translate a new set of N monolingual sentences using our UNMT systems at iteration 1 in order to generate new synthetic parallel data. Then, new UNMT systems at iteration 2 are trained from scratch on the 2N synthetic sentence pairs consisting of the new N synthetic data and N synthetic data generated by USMT. Note that we do not re-back-translate the monolingual data used at iteration 1 but keep them as they are for iteration 2 to reduce the computational cost. Similarly to the refinement steps of USMT, we can again perform this back-translation/re-training step for a pre-defined number of iterations to keep improving the quality of the source side of the synthetic data while increasing the number of new target sentences. At each iteration i, (N×i) synthetic sentence pairs are used for training.\nThis can be seen as an extension of Hoang et al. (2018)’s work, which performs a so-called iterative back-translation to improve NMT. The difference is that we introduce better synthetic parallel data, with new target sentences, at each iteration."
  }, {
    "heading": "4.2 Filtering of synthetic parallel data",
    "text": "Our UNMT system is trained on purely synthetic parallel data in which a large proportion of source sentences may be very noisy. We assume that removing the sentence pairs with the noisiest source sentences will improve translation quality. Inevitably it also reduces the training time.\nEach sentence pair in the synthetic parallel data is evaluated by the following normalized source language model score:\nppl(S) = lm(S)\nlen(S) + 1 (4)\nwhere S is a (synthetic) source sentence, lm(·) the language model score, and len(·) a function returning the number of tokens in the sentence. We add 1 to the number of tokens to account for the special token used by NMT that marks the end of a sentence. This scoring function has a negligible computational cost, but has shown satisfying performances in our preliminary experiments. While\nwe do not limit the language model to be specific type, in our experiment, we use a recurrent neural network (RNN) language model trained on the entire source monolingual data.\nThere are many ways to make use of the above score during NMT training. For instance, weighting the sentence pairs with this score during training is a possible alternative, and this idea is close to one used by Cheng et al. (2017) in their joint training framework for NMT. However, given that many of the source sentences would be noisy, we rather choose to discard potentially noisy pairs for training. It would also remove potentially useful target sentences, but we assume that the impact of this removal could be compensated at the succeeding iterations of UNMT, where we incrementally introduce new target sentences.\nAt each iteration i of incremental training, we keep only the cleanest (α ×N × i) synthetic sentence pairs11 selected according to the score computed by Equation (4), where α (0 < α ≤ 1) is the filtering ratio.12 This aggressive filtering will speed up training while relying only on the most fluent sentence pairs."
  }, {
    "heading": "5 Experiments",
    "text": "In this section, we present experiments for evaluating our USMT and UNMT systems."
  }, {
    "heading": "5.1 Experimental settings",
    "text": "For these preliminary experiments, we chose the language pair English–German (en-de) and the evaluation task WMT16 (newstest2016) for both translation directions, following previous work (Artetxe et al., 2018b; Lample et al., 2018b). To train our USMT and UNMT, we used only monolingual data: English and German News Crawl corpora respectively containing around 238M and 237M sentences.13 All our data were tokenized and truecased with Moses’s tokenizer14 and truecaser, respectively. The statistics for truecasing were learned from 10M sentences randomly sampled from the monolingual data.\n11We considered both the sentence pairs used to initialize UNMT and all the sentence pairs generated by each iteration of UNMT in the set of sentence pairs to filter.\n12We used α = 0.5 in our experiments. 13http://www.statmt.org/wmt18/\ntranslation-task.html 14We escaped special characters but did not use the option for “aggressive” tokenization.\nFor the phrase table induction, the source and target word embeddings were learned from the entire monolingual data with the default parameters of fasttext (Bojanowski et al., 2017),15 except that we set to 200 the number of dimensions.16 For a reasonably fast computation, we retained only the embeddings for the 300k most frequent words. Word embeddings for two languages were then aligned in the same space using the -unsupervised option of vecmap.17 From the entire monolingual data, we also collected phrases of up to 6 tokens in each language using word2phrase.18 To maintain the experiments feasible and to make sure that we have a word embedding for all of the constituent words, we retained only 300k most frequent phrases made of words among the 300k most frequent words. We conserved the 300-best target phrases for each source phrase, according to Equation (2), consequently resulting in the initial phrase table for USMT containing 90M (300k×300) phrase pairs.\nWe used Moses and its default parameters to conduct experiments for USMT. The language models used by our USMT systems were 4-gram models trained with LMPLZ (Heafield et al., 2013) on the entire monolingual data. In each refinement step, we trained a phrase table and a lexicalized reordering model on synthetic parallel data using mgiza.19 We compared USMT systems with and without supervised tuning. For supervised tuning, we used kb-mira (Cherry and Foster, 2012) and the WMT15 newstest (newstest2015). For the configurations without tuning, we used Moses’s default weights as in previous work.\nFor UNMT, we used the Transformer (Vaswani et al., 2017) model implemented in Marian (Junczys-Dowmunt et al., 2018)20 with the hyperparameters proposed by Vaswani et al. (2017).21\n15https://fasttext.cc/ 16While Artetxe et al. (2018b) and Lample et al. (2018b) used 300 and 512 dimensions, respectively, we chose a smaller number of dimensions for faster computation, even though this might lead to lower quality.\n17https://github.com/artetxem/vecmap 18https://code.google.com/archive/p/\nword2vec/ 19fast_align (Dyer et al., 2013) is a significantly faster alternative for a similar performance on en-de (Durrani et al., 2014). We used mgiza since it is integrated in Moses.\n20https://marian-nmt.github.io/, version 1.6. 21Considering the computational cost of our approach for UNMT, we did not experiment with the “big” version of the Transformer model while it would probably have resulted in a better translation quality.\nWe reduced the vocabulary size by using bytepair-encoding (BPE) with 8k symbols jointly learned for English and German from 10M sentences sampled from the monolingual data. BPE was then applied to the entire source and target monolingual data.22 We used the same BPE vocabulary throughout our UNMT experiments.23 We validated our model during UNMT training as proposed by Lample et al. (2018b): we did a supervised validation using 100 human-made sentence pairs randomly extracted from newstest2015. We consistently used the same validation set throughout our UNMT experiments. To filter the synthetic parallel sentences (see Section 4.2), we used an RNN language model trained on the entire monolingual data, without BPE, with a vocabulary size of 100k.24\nFor each of USMT and UNMT, we performed 4 refinement iterations. USMT has one more system in the beginning, which exploits an induced phrase table. At each iteration, we sampled new 3M monolingual sentences: i.e., N = 3000000.25\nFor reference, we also trained supervised NMT with Marian on 5.6M, 2.8M, and 1.4M humanmade parallel sentences provided by the WMT18 conference for the German–English news translation task.26\nWe evaluated our systems with detokenized and detruecased BLEU-cased (Papineni et al., 2002). Note that our results should not be directly compared with the tokenized BLEU scores reported in Artetxe et al. (2018b) and Lample et al. (2018b)."
  }, {
    "heading": "5.2 Results",
    "text": "Our results for USMT and UNMT are presented in Table 1.\nWe can first observe that supervised tuning for USMT improves translation quality, with 2.0 BLEU points of improvements, for instance between systems #5 and #6. Another interesting observation is that this improvement is carried on until the final iteration of UNMT (#11 and #12). These results show the importance of development data for tuning that could be created at a reason-\n22We did not use BPE for USMT. 23Re-training BPE at each iteration of UNMT on synthetic data did not improve the translation quality in our preliminary experiments.\n24We used also Marian to train the RNN language models. 25Artetxe et al. (2018b) and Lample et al. (2018b) respec-\ntively sampled 2M and 5M monolingual sentences. 26We did not use the ParaCrawl corpus.\nable cost (see Section 3.2).\nOur USMT systems benefited more from forward translation (#5 and #6) than back-translation (#3 and #4) during the refinement steps, with an improvement of 1.6 and 0.4 BLEU points for de→en and en→de (with supervised tuning), respectively. Pruning the phrase table (see Section 3.4) did not hurt translation quality but removed around 93% of the phrase pairs in the phrase tables for each refinement step. Nonetheless, our USMT systems seem to significantly underperform the state-of-the-art USMT proposed by Lample et al. (2018b) (#1) and Artetxe et al. (2018b) (#2). This is potentially the consequence of the following: we used much lower dimensions for our word embeddings and much less phrases (300k source and target phrases), than in Artetxe et al. (2018b) (1M source and target phrases). In our future work, we will investigate whether their parameters improve the performance of our USMT systems.\nWhile our USMT systems do not seem to outperform previous work, we can observe that the synthetic parallel data that they generated are of\nsufficient quality to initialize our UNMT. Incremental training improved significantly translation quality. To the best of our knowledge, we report the best results of unsupervised MT for this task which is, for de→en, only 3.7 BLEU points lower (#11) than a supervised NMT system trained on 1.4M parallel sentences (#13).27 Our best UNMT systems (#11 and #12) significantly outperformed our USMT systems (#5 and #6) by more than 6.0 BLEU points, for de→en. Filtering the synthetic parallel sentences at each iteration significantly improved the training speed28 for a comparable or better translation quality for both translation directions. The results confirm the importance of filtering the very noisy synthetic source sentences generated by back-translation.\n27A fair supervised NMT baseline should also use, in addition to human-made parallel sentences, back-translated data for training.\n28For instance, for the last iteration of UNMT for de→en, the training using 4 GPUs consumed 30 hours with filtering while it took 52 hours without filtering."
  }, {
    "heading": "5.3 Learning curves",
    "text": "In this section, we present the evolution of the translation quality during training of USMT and UNMT.\nThe learning curves of our systems, for the same experiments presented in Section 5.1, are given in Figures 4a and 4b for de→en and en→de, respectively. Iteration 0 of our USMT, using an induced phrase table, performed very poorly; for instance systems without supervised tuning (leftmost points of blue lines) achieved only 11.2 and 7.3 absolute BLEU points for de→en and en→de, respectively. Iterations 1 and 2 of USMT were very effective and covered most of the improvements between iteration 0 and iteration 4. After 4 iterations, we observed improvements of 9.0 and 8.1 BLEU points for de→en and en→de, respectively.\nThe learning curves of UNMT were very different for the two translation directions. The first iteration of UNMT, trained on the synthetic parallel data generated by USMT, performed slightly lower than USMT for de→en while for en→de we observed around 2.0 BLEU points of improvements. This confirms the ability of NMT in generating significantly better sentences than SMT for morphologically-rich target languages (Bentivogli et al., 2016). Then, the second iteration of UNMT improved the translation quality significantly for de→en, but much more moderately for en→de. For instance, in the configuration without supervised tuning and with language model filtering (blue solid lines), we observed 5.4 and 0.9 BLEU\npoints of improvements for de→en and en→de, respectively. Succeeding iterations continued to improve translation quality but more moderately.\nFor both translation directions, the learning curves highlighted that improving the synthetic parallel data generated by USMT, and used to initialize UNMT, is critical to improve UNMT: synthetic parallel data generated with tuned USMT were consistently more useful for UNMT than the synthetic parallel data of lower quality generated by USMT without tuning."
  }, {
    "heading": "6 Conclusion an future work",
    "text": "We proposed a new approach for UNMT that can be straightforwardly exploited with wellestablished architectures and frameworks used for supervised NMT without any modifications. It only assumes for initialization the availability of synthetic parallel data that can be, for instance, easily generated by USMT. We showed that improving the quality of the synthetic parallel data used for initialization is crucial to improve UNMT. We obtained with our approach a new state-ofthe-art performance for unsupervised MT on the WMT16 German–English news translation task.\nFor future work, we will extend our experiments to cover many more language pairs, including distant language pairs for which we expect that our approach will perform better than previous work that assumes the relatedness between source and target languages. We will also analyze the impact of using synthetic parallel data of a much better quality to initialize UNMT. Moreover, we\nwould like to investigate the use of much noisier and not comparable source and target monolingual corpora to train USMT and UNMT, since we consider it as a more realistic scenario when dealing with truly low-resource languages. We will also study our approach in the semi-supervised scenario where we assume the availability of some human-made bilingual sentence pairs for training."
  }],
  "year": 2018,
  "references": [{
    "title": "A robust self-learning method for fully unsupervised cross-lingual mappings of word embeddings",
    "authors": ["Mikel Artetxe", "Gorka Labaka", "Eneko Agirre."],
    "venue": "Proceedings of the 56th Annual Meeting of the Association for Compu-",
    "year": 2018
  }, {
    "title": "Unsupervised statistical machine translation",
    "authors": ["Mikel Artetxe", "Gorka Labaka", "Eneko Agirre."],
    "venue": "CoRR, abs/1809.01272.",
    "year": 2018
  }, {
    "title": "Unsupervised neural machine translation",
    "authors": ["Mikel Artetxe", "Gorka Labaka", "Eneko Agirre", "Kyunghyun Cho."],
    "venue": "Proceedings of the 6th International Conference on Learning Representations.",
    "year": 2018
  }, {
    "title": "Neural versus phrase-based machine translation quality: a case study",
    "authors": ["Luisa Bentivogli", "Arianna Bisazza", "Mauro Cettolo", "Marcello Federico."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural",
    "year": 2016
  }, {
    "title": "Enriching word vectors with subword information",
    "authors": ["Piotr Bojanowski", "Edouard Grave", "Armand Joulin", "Tomas Mikolov."],
    "venue": "Transactions of the Association for Computational Linguistics, 5:135–146.",
    "year": 2017
  }, {
    "title": "Joint training for pivotbased neural machine translation",
    "authors": ["Yong Cheng", "Qian Yang", "Yang Liu", "Maosong Sun", "Wei Xu."],
    "venue": "Proceedings of the 26th International Joint Conferences on Artificial Intelligence, pages 3974–3980.",
    "year": 2017
  }, {
    "title": "Batch tuning strategies for statistical machine translation",
    "authors": ["Colin Cherry", "George Foster"],
    "year": 2012
  }, {
    "title": "Improving translation",
    "authors": ["Roland Kuhn"],
    "year": 2007
  }, {
    "title": "Marian: Fast neural",
    "authors": ["Alexandra Birch"],
    "year": 2018
  }, {
    "title": "Building a monolingual parallel corpus for text simplification using sentence similarity based on alignment between word embeddings",
    "authors": ["Tomoyuki Kajiwara", "Mamoru Komachi."],
    "venue": "Proceedings of COLING 2016, the 26th Inter-",
    "year": 2016
  }, {
    "title": "Toward statistical machine translation without parallel corpora",
    "authors": ["Alexandre Klementiev", "Ann Irvine", "Chris Callison-Burch", "David Yarowsky."],
    "venue": "Proceedings of the 13th Conference of the European Chapter of the",
    "year": 2012
  }, {
    "title": "Moses: Open source toolkit for statistical machine translation",
    "authors": ["Herbst."],
    "venue": "Proceedings of the 45th Annual Meeting of the Association for Computational Linguistics Companion Volume Proceedings of the Demo and Poster",
    "year": 2007
  }, {
    "title": "Unsupervised machine translation using monolingual corpora only",
    "authors": ["Guillaume Lample", "Alexis Conneau", "Ludovic Denoyer", "Marc’Aurelio Ranzato"],
    "venue": "In Proceedings of the 6th International Conference on Learning Represen-",
    "year": 2018
  }, {
    "title": "2018b. Phrase-based & neural unsupervised machine translation. CoRR, abs/1804.07755",
    "authors": ["Guillaume Lample", "Myle Ott", "Alexis Conneau", "Ludovic Denoyer", "Marc’Aurelio Ranzato"],
    "year": 2018
  }, {
    "title": "Phrase table induction using monolingual data for low-resource statistical machine translation",
    "authors": ["Benjamin Marie", "Atsushi Fujita."],
    "venue": "ACM Transactions on Asian and Low-Resource Language Information Processing, 17(3):16:1–",
    "year": 2018
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg Corrado", "Jeffrey Dean."],
    "venue": "Proceedings of the 26th International Conference on Neural Informa-",
    "year": 2013
  }, {
    "title": "Discriminative training and maximum entropy models for statistical machine translation",
    "authors": ["Franz Josef Och", "Hermann Ney."],
    "venue": "Proceedings of 40th Annual Meeting of the Association for Computational Linguistics, pages",
    "year": 2002
  }, {
    "title": "Bleu: a method for automatic evaluation of machine translation",
    "authors": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "Wei-Jing Zhu."],
    "venue": "Proceedings of 40th Annual Meeting of the Association for Computational Linguistics, pages 311–",
    "year": 2002
  }, {
    "title": "Improving neural machine translation models with monolingual data",
    "authors": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Vol-",
    "year": 2016
  }, {
    "title": "Neural machine translation of rare words with subword units",
    "authors": ["Rico Sennrich", "Barry Haddow", "Alexandra Birch."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1:",
    "year": 2016
  }, {
    "title": "Offline bilingual word vectors, orthogonal transformations and the inverted softmax",
    "authors": ["Samuel L. Smith", "David H.P. Turban", "Steven Hamblin", "Nils Y. Hammerla."],
    "venue": "Proceedings of the 5th International Conference on Learning",
    "year": 2017
  }, {
    "title": "On the limitations of unsupervised bilingual dictionary induction",
    "authors": ["Anders Søgaard", "Sebastian Ruder", "Ivan Vulić."],
    "venue": "Proceedings of the 56th Annual Meeting of the Association for",
    "year": 2018
  }, {
    "title": "Unsupervised sparse vector densification for short text similarity",
    "authors": ["Yangqiu Song", "Dan Roth."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human",
    "year": 2015
  }, {
    "title": "Transductive learning for statistical machine translation",
    "authors": ["Nicola Ueffing", "Gholamreza Haffari", "Anoop Sarkar."],
    "venue": "Proceedings of the 45th Annual Meeting of the Association of Computational Linguistics, pages 25–32. Associa-",
    "year": 2007
  }, {
    "title": "Attention is all you need",
    "authors": ["Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N. Gomez", "Łukasz Kaiser", "Illia Polosukhin."],
    "venue": "I. Guyon, U. V. Luxburg, S. Bengio, H. Wallach, R. Fergus,",
    "year": 2017
  }, {
    "title": "Unsupervised neural machine translation with weight sharing",
    "authors": ["Zhen Yang", "Wei Chen", "Feng Wang", "Bo Xu."],
    "venue": "Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Pa-",
    "year": 2018
  }, {
    "title": "A systematic comparison of phrase table pruning techniques",
    "authors": ["Richard Zens", "Daisy Stanton", "Peng Xu."],
    "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational",
    "year": 2012
  }, {
    "title": "Learning translation models from monolingual continuous representations",
    "authors": ["Kai Zhao", "Hany Hassan", "Michael Auli."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational",
    "year": 2015
  }],
  "id": "SP:778c4283106852ff4bd95a5b7c4dc34db3d6ad2b",
  "authors": [{
    "name": "Benjamin Marie",
    "affiliations": []
  }, {
    "name": "Atsushi Fujita",
    "affiliations": []
  }],
  "abstractText": "Recent work achieved remarkable results in training neural machine translation (NMT) systems in a fully unsupervised way, with new and dedicated architectures that rely on monolingual corpora only. In this work, we propose to define unsupervised NMT (UNMT) as NMT trained with the supervision of synthetic bilingual data. Our approach straightforwardly enables the use of state-of-the-art architectures proposed for supervised NMT by replacing human-made bilingual data with synthetic bilingual data for training. We propose to initialize the training of UNMT with synthetic bilingual data generated by unsupervised statistical machine translation (USMT). The UNMT system is then incrementally improved using back-translation. Our preliminary experiments show that our approach achieves a new state-of-the-art for unsupervised machine translation on the WMT16 German– English news translation task, for both translation directions.",
  "title": "Unsupervised Neural Machine Translation Initialized by Unsupervised Statistical Machine Translation"
}