{
  "sections": [{
    "heading": "1. Introduction",
    "text": "The problem of finding the mixing matrix A from a set of observation vectors y in the model\ny = Ax (1)\nis only solvable if one can benefit from strong hypotheses on the signal vector x. For instance, one may assume that\n*Equal contribution 1Biomedical Imaging Group, EPFL, Lausanne, Switzerland 2Computer Communications and Applications Laboratory 3, EPFL, Lausanne, Switzerland. Correspondence to: Pedram Pad <pedram.pad@epfl.ch>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nthe entries of x are statistically independent, which results in a class of methods refered to as independent component analysis (ICA) (Hyvärinen et al., 2004). A more recent trend is to assume that the vector x is sparse, so that the recovery can be recast as a deterministic dictionary learning problem, the prototypical example being sparse component analysis (SCA) (Gribonval & Lesage, 2006; Aharon et al., 2006; Spielman et al., 2012). Extensive research has been conducted on these problems in the past three decades.\nPrior work: In the literature, ICA precedes SCA and can be traced back to (Herault & Jutten, 1986). In fact, ICA constitutes the non-Gaussian generalization of the much older principal component analysis (PCA), which is widely used in classical signal processing. ICA is usually formalized as an optimization problem involving a cost function that measures the independence of the estimated xi (i.e., the entries of the vector x). A common measure of independence, which is inspired by information theory, is the mutual information of the entries of x. However, due to its computational complexity, other measures such as the kurtosis, which measures the non-Gaussianity of the components, are often used (Hyvärinen & Oja, 2000; Naik & Kumar, 2011) (except in special cases such as the analysis of stable AR(1) processes by (Pad & Unser, 2015)). The main drawback of ICA is that the system (1) needs to be determined; i.e., A should be square—otherwise the complexity is so high that the methods can only be implemented for small problems (Lathauwer et al., 2007; Lathauwer & Castaing, 2008).\nSCA, on the other hand, is usually achieved by putting constraints on the sparsity of the representation or by optimizing a sparsity-promoting cost function. Thanks to the emergence of very efficient algorithms, SCA has found wide use in different applications (see (Mairal et al., 2010; Marvasti et al., 2012)). The underlying framework for SCA is deterministic—this is the primary difference with ICA, which aims to decouple signals that are realizations of stochastic processes.\nα-stable distributions: In this paper, we aim to achieve the best of both worlds: the use of a statistical formulation—in the spirit of ICA—with a restriction to a parametric class of stochastic models that is well adapted to the notion of sparsity. Specifically, we assume that the entries of the vector x are random variables that are i.i.d. symmetric-α-\nstable. The family of α-stable distributions is a generalization of the Gaussian probability density function (PDF). Since α-stability is preserved through linear transformation, this class of models has a central position in the study of stochastic processes (Samoradnitsky & Taqqu, 1994; Nikias & Shao, 1995; Shao & Nikias, 1993). The family is parametrized by α ∈ (0, 2], which controls the rate of decay of the distribution. The extreme case of α = 2 corresponds to the Gaussian distribution—the only non-sparse member of the family. By contrast, the other members of the SαS family for α < 2 are heavy-tailed with unbounded variance. This property implies that an i.i.d. sequence of such random variables generates a sparse signal (Amini et al., 2011; Gribonval et al., 2012). By decreasing α, the distribution becomes more heavy-tailed and thus the signal becomes more sparse (the effect of α is illustrated in Figure 1).\nThis class of random variables has also been widely used in practice. Typical applications include: modeling of ultrasound RF signals, (Achim et al., 2015), signal detection theory (Kuruoglu et al., 1998), communications (Middleton, 1999), image processing (Achim & Kuruoglu, 2005), audio processing (Georgiou et al., 1999), sea surface (Gallagher, 2001), network traffic (Resnick, 1997), and finance (Nolan, 2003; Ling, 2005).\nMain contributions: Our main contribution in this paper is a new dictionary learning algorithm based on the signal modeling mentioned above. The proposed method has the following advantages:\n1. all parameters can be estimated from the data (it is hyperparameter-free), 2. it learns the dictionary without the need to recover the signal x, and 3. it is fast and remarkably robust.\nOnce the matrix A is estimated, it is then possible to efficiently recover x by using standard procedures (Bickson & Guestrin, 2010).\nWe also show that the proposed algorithm provides an efficient estimator of the spectral measure of a stable random vector. An enabling component of our method is a new theorem that generalizes a classical result about isometries of `p-norms.\nOrganization: In the next section, we briefly review SαS random variables and present our mathematical model. In Section 3, we establish our main result which then yields an algorithm for finding the matrix A as well as the sparsity index α. In Section 4, we present the simulation results and compare their performance with existing algorithms. In Section 5, we summarize the paper and give some suggestions for future work."
  }, {
    "heading": "2. Preliminaries and problem formulation",
    "text": "We begin by recalling some basic properties of symmetricα-stable random variables. We then proceed with the formulation of the estimation problem that we solve in Section 3. The notation that we use throughout the paper is as follows: we use italic symbols for random variables, capital boldface symbols for matrices and lowercase boldface symbols for vectors. Thus, X is a deterministic matrix,X is a random matrix and x is a random variable. Likewise, x and x denote a random and a deterministic vector respectively."
  }, {
    "heading": "2.1. Symmetric-α-stable random variables",
    "text": "For any α ∈ (0, 2] and γ > 0, a random variable X with characteristic function\np̂X(ω) = exp(−γ|ω|α) (2)\nis called a symmetric-α-stable (SαS) random variable with dispersion γ and stability parameter α (Nikias & Shao, 1995). This class of random variables is a generalization of the Gaussian model: For α = 2, X is a Gaussian random variable with zero mean and variance 2γ. As their name suggests, α-stable variables share the property of stability under linear combination (Nikias & Shao, 1995); i.e., if X1, . . . , Xn are n i.i.d. copies ofX and a1, . . . , an ∈ R are n real numbers, then the random variable\nY = a1X1 + · · ·+ anXn (3)\nhas the same distribution as( |a1|α + · · ·+ |an|α ) 1 αX. (4)\nIn other words, the random variable Y is an SαS random variable with dispersion γ ‖a‖αα where ‖a‖α = ( |a1|α +\n· · · + |an|α ) 1 α is the α-(pseudo)norm of the vector a = (a1, . . . , an). This property makes SαS random variables convenient for the study of linear systems.\nThe other property of SαS random variables with α < 2 is their heavy-tailed PDF. When α < 2, we have\nlim |x|→∞\n|x|1+αpX(x) = C(α, γ), (5)\nwhere pX is the PDF of X and C(α, γ) is a positive constant that depends on α and γ (Nikias & Shao, 1995). This implies that the variance of SαS random variables is unbounded for α < 2. Also, note that a smaller α results in heavier tails.\nInfinite-variance random variables are considered to be appropriate candidates for sparse signals (Amini et al., 2011; Gribonval et al., 2012). Because an i.i.d. sequence of heavytailed random variables has most of its energy concentrated on a small fraction of samples, they are good candidates to model signals that exhibit sparse behavior.\nYet, the truly fundamental aspect of α-stable random variables is their role in the generalized central limit theorem. As we know, the limit distribution of normalized sums of i.i.d. finite-variance random variables are Gaussian. Likewise, any properly normalized sum of heavy-tailed i.i.d. random variables converges to an α-stable random variable whee the α depends on the weight of their tail (Meerschaert & Scheffler, 2001). This implies that a linear combination of a large number of samples of a sparse signal is well represented by α-stable random variables."
  }, {
    "heading": "2.2. Problem formulation",
    "text": "Our underlying signal model is\ny = Ax (6)\nwhere x is an unknown n× 1 random vector with SαS i.i.d. entries and α < 2, y is an m× 1 observation vector and A is an m× n dictionary matrix,. We are given K realizations of y; namely, y1, . . . ,yK , and our goal is to estimate A."
  }, {
    "heading": "3. Dictionary learning for SαS signals",
    "text": "In the problem of dictionary learning, the maximum information that we can asymptotically try to retrieve from y1, . . . ,yK is the exact distribution of y. However, even if we knew y, identifying A is still not tractable in general— for instance, in the case of Gaussian vectors, A is only identifiable up to right-multiplication by a unitary matrix. Moreover, obtaining an acceptable estimate of the distribution of y requires, in general, a vast amount of data and processing power (since it is a m-dimensional function with m possibly large). In this section, we leverage the property of stability under linear combination of SαS random variables explained in Section 2.1 to propose a new algorithm to estimate A for the dictionary learning problem stated in Section 2.2."
  }, {
    "heading": "3.1. New cost function for sparse SαS signals",
    "text": "Recall that, the random vector y (see Equations (2) and (6)) is an m-dimensional α-stable vector with characteristic function\np̂y(ω) = exp ( −γ‖A>ω‖αα ) (7)\nfor ω ∈ Rm. Thus, knowing ‖A>u‖α for all u ∈ Sm−1, where Sm−1 is the (m− 1)-dimensional unit sphere, i.e.,\nSm−1 = {u ∈ Rm | ‖u‖2 = 1} , (8) is equivalent to knowing the distribution of y. Note that u>y = u>Ax (see Equations (3) and (4)) is an SαS random variable with dispersion\nγ(u) = γ‖A>u‖αα. (9) Thus, knowing the dispersion of the marginal distributions of y for all u ∈ Sm−1 is equivalent to knowing the distribution of y. In other words, in the case of SαS random vectors, knowing their marginal dispersions is equivalent to knowing the Radon transform of their PDFs or, equivalently, their joint characteristic function (Helgason, 2010). Due to the relationship between the Radon transform and the field of tomography, we call our algorithm sparse distribution tomography (SparsDT).\nAnother interesting fact is that, in the non-Gaussian case (α < 2), knowing the marginal dispersions of y, i.e., γ(u), identifies the matrix A uniquely, up to negation and permutation of the columns. Formally, we have the following theorem, which is proved in Appendix A:\nTheorem 1 Let A be an m× n matrix where columns are pairwise linearly independent. If α ∈ (0, 2) and B is an m× n matrix for which we have\n‖A>u‖αα = ‖B>u‖αα (10) for all u ∈ Rm, then B is equal to A up to negation and permutation of its columns.\nRemark 1 This theorem can be seen as a generalization of the result in (Rolewicz, 1985) that states that the isometries of `p-norms are generalized permutation matrices (permutation matrices with some of their rows negated). To the best of our knowledge, this result is novel and could be of independent interest.\nThis theorem suggests that in order to find A all we need is to find γ(u) for u ∈ Rm. Intuitively, we can say that as A has a finite number of parameters (entries), A is identifiable based on the knowledge of γ(u) for an appropriate finite set of vectors u = u1, . . . ,uL (for some L ≥ mn). We can then solve the set of non-linear equations\nγ‖B>u1‖αα = γ(u1), ... (11) γ‖B>uL‖αα = γ(uL),\nfor B to obtain A.\nNow, the problem is to find γ(u) for a given u ∈ Rm. Recall that γ(u) is the dispersion of the SαS random variable uTy. As y1, . . . ,yK are realizations of y, uTy1, . . . ,uTyK are realizations of uTy. There is a rich literature on the estimation of the parameters of α-stable random variables through their realizations, see, e.g, (Nikias & Shao, 1995). We use the estimation from (Achim et al., 2015) in the following equation\nlog γ̂(u) = α\nK K∑ k=1 log |uTyk| − (α− 1)ψ(1) (12)\nwhere ψ is the digamma function (ψ(1) is the negative of the Euler-Mascheroni constant and is approximately 0.5572), and γ̂(u) denotes the estimation of γ(u). Note that γ̂(u) tends to γ(u) when the number of observations, K, tends to infinity. This means that we can obtain the exact value of γ(u) asymptotically.\nHowever, non-exact values for γ(u`), for ` = 1, . . . , L (which is the case when K is finite), can lead to the nonexistence of a solution for the system of equations (11). To overcome this problem, instead of solving this system of equations exactly, we minimize the following objective function\nE(B) = 1 L L∑ `=1 d ( γ‖B>u`‖αα, γ̂(u`) ) (13)\n= 1\nαL L∑ `=1 ∣∣log(γ‖B>u`‖αα)− log(γ̂(u`))∣∣ where log γ̂(u1), . . . , log γ̂(uL) are L numbers calculated from (12). The cost function d(a, b) = 1α | log a− log b| is a continuous positive function1 from R2 to R, whose global minimum is 0 and is reached over the line a = b. When γ̂(u) = γ(u), B = A minimizes E(B). Thus, if γ̂(u) is close enough to γ(u), due to the continuity of d, we expect that the minimizer of E will be close to A. Therefore, our approach to dictionary learning is to solve\nÂ = argmin B E(B) (14)\n= argmin B\n1\nαL L∑ `=1 ∣∣log (γ‖B>u`‖αα)− log γ̂(u`)∣∣ . The only parameter that needs to be set now is the stability parameter α. Note that the dispersion parameter γ in Equation (14) does not need to be set as it will be automatically\n1In our simulations we also implemented other natural candidates for d(a, b) and all of them gave approximately the same performance. Due to the limited space, we do not present results for other cost functions.\nmerged into the learned dictionary. Recall that there are well-known methods for estimating α from data; among which we use\nα̂(u) =\n( 6\nπ2K K∑ k=1 ( log |u>yk| − log κ̂(u) )2 − 1 2 )− 12 (15)\nfrom (Achim et al., 2015), where\nlog κ̂(u) = 1\nK K∑ k=1 log |u>yk|. (16)\nThis gives us an estimate for α for any given u ∈ Rm. Hence, the estimated value of α is the average over all α̂(u`) for ` = 1, . . . , L, i.e.,\nα̂ = 1\nL L∑ `=1 α̂(u`). (17)\nNow, using this estimate, Equation (12) becomes\nlog γ̂(u) = α̂ log κ̂(u)− (α̂− 1)ψ(1). (18)\nWe also replace α with α̂ in Equation (13) which results in a parameter-free cost function. This is in contrast with most existing cost functions that have parameters one must set."
  }, {
    "heading": "3.2. Learning algorithm",
    "text": "To solve the minimization problem in Equation (14), we propose a variation on a gradient-descent algorithm with an adaptive step size that has a changing cost function. To do so, we first derive the gradient of E at B. Using matrix calculus (see Appendix B), we find that\n∇E(B) = (19)\n1\nαL L∑ `=1 sgn ( log(γ‖B>u`‖αα)− log γ̂(u`) ) · ∇‖B >u`‖αα ‖B>u`‖αα\nwhere sgn(·) is the sign function (i.e., sgn(e) = 1 if e > 0 and sgn(e) = 0 otherwise) and\n∇‖B>u‖αα = α  sgn ( b>1 u ) ∣∣b>1 u∣∣α−1 u> ...\nsgn ( b>nu ) ∣∣b>nu∣∣α−1 u>  >\n(20)\nwhere bi is the ith column of B.\nThe cost function in Equation (13) is non-convex in B. In order to avoid getting trapped in local minima, we iteratively change the cost function inside the gradient descent algorithm. The idea is that instead of keeping u1, . . . ,uL fixed throughout the optimization process, we regenerate them randomly with a uniform distribution on Rm after some\niterations of steepest descent. We repeat this process until convergence. Note that (11) holds for any u1, . . . ,uL and thus changing this set does not change the end result of (11).\nRemark 2 Using this idea always results in convergence to the global minimum in our computer simulations. A plausible explanation of this phenomenon is that each set of u1, . . . ,uL yields a non-convex cost function with different local minima. Yet they all have the same global minimum. Therefore, switching between them during the optimization process prevents getting trapped in any of the local minima, which ultimately results in finding the global minimum of the cost function.\nThe pseudocode of our dictionary learning method is given in Algorithm 1. There, η is the step size of the gradient descent that increases or decreases by factors of κ+ or κ− upon taking a good or poor step. The adaptive step size is especially helpful for α ≤ 1, where the cost function is not smooth. The algorithm does not depend on the exact choice of convergence criteria.\nRemark 3 Algorithm 1 can also be seen as an efficient method for estimating the spectral measure of stable random vectors. In fact, the problem of estimating A from a set of realizations of y can also be seen as parameter estimation for a stable random vector y with a symmetric distribution around the origin. Such random vectors are parametrized by a measure Γ on Sm−1 that is called the spectral measure. In our problem, we have Γ(·) = ∑n i=1 ‖ai‖α δai(·) where the δais are unit point masses at ai ‖ai‖2 and ai is the i th column of A. Some methods have been proposed to solve this problem, e.g., (Nolan et al., 2001). However, they tend to be computationally intractable for dimensions greater than 3.\nRemark 4 According to the generalized central limit theorem, under some mild conditions, the distribution of the sum of symmetric heavy-tailed random variables tends to a SαS distribution as the number of summands tends to infinity. This means that we can represent u>y = u>Ax with an SαS random variable for large enough n irrespective of the distribution of the xis provided that the latter are heavy tailed. Therefore, we expect Algorithm 1 to find applications for other classes of sparse signals, provided that n is sufficiently large."
  }, {
    "heading": "4. Empirical results",
    "text": "In this section, we analyze the performance of the proposed algorithm SparsDT and compare it with existing methods. Recall that the actual dictionary is A and the learned dictionary is Â. We run two types of the experiments: We first test the algorithm on synthetic SαS data and then we test it on real images.\nAlgorithm 1 SparseDT 1: initialize: η > 0 2: initialize: κ+ ≥ 1 and κ− ≤ 1 3: initialize: generate b1, . . . , bn ∼ N (0, Im×m) and\nB← [ b1| . . . |bn ] 4: repeat 5: initialize: generate u1, . . . ,uL ∼ N (0, Im×m) 6: estimate α̂ from (15) 7: E ← E(B) 8: repeat 9: Bold ← B 10: Eold ← E 11: B← B− η ∇E(B) 12: E ← E(B) 13: if E ≤ Eold then 14: η ← κ+ · η 15: else 16: B← Bold 17: E ← Eold 18: η ← κ− · η 19: end if 20: until B converges (for this choice of u1, . . . ,uL) 21: until B converges\nreturn B"
  }, {
    "heading": "4.1. Benchmarks",
    "text": "We compare our algorithm with three commonly used algorithms that are available in the Python package SPAMS2. These constrained optimization problems3 are as follows:\n1. `2/`1: Maximizing the data fidelity while controling the sparsity of representation with parameter λ1:\nÂ`2/`1 = argmin B\n1\n2K K∑ k=1 ‖yk −Bxk‖22\ns.t. ‖xi‖1 ≤ λ1.\n2. `1/`2: Maximizing the sparsity of representation while controling the data fidelity with parameter λ2:\nÂ`1/`2 = argmin B\n1\n2K K∑ k=1 ‖xk‖1\ns.t. ‖yk −Bxk‖2 ≤ λ2.\n3. `1 + `2: Combining sparsity and data fidelity in the cost function using Lagrange multipliers:\nÂ`1+`2 = argmin B\n1\n2K K∑ k=1 ‖yk −Bxk‖22\n+ λ3‖xk‖1 + λ4‖xk‖22. 2http://spams-devel.gforge.inria.fr/ 3Other cost functions are also available in the package SPAMS,\nbut those retained here yield the best results in our experiments.\nOne of the challenges in utilizing these benchmarks is determining the regularization parameters λ1, . . . , λ4. In our experiments, the regularization parameters are optimized (by grid search) in order to maximize the performance of each of the benchmarks above. This is in contrast to our algorithm, which has no regularization parameter to tune."
  }, {
    "heading": "4.2. Experimental results for synthetic data",
    "text": "We first test the algorithms on synthetic data. In order to quantify the performance of the algorithms, we use several metrics. One is the average correlation of the dictionaries. Specifically, we calculate the correlation between all columns of Â and A, and then match each column of Â with one of the columns of A (a one-to-one map) such that the average correlation between the corresponding columns is maximized. Additionally, we say that the dictionary is found if the average correlation of the columns is larger than 0.97.\nEffect of K: We demonstrate the effect of the number of samples K on the performance of our proposed algorithm SparsDT. Intuitively, the precision of the estimation increases with the number of samples K, and, as K goes to infinity, the estimation error goes to zero, which ultimately gives the exact A. We demonstrate this effect with the following experiment: We take m = 16, n = 24 and α = 1 and 1.5. Then, for each K, we run the experiment for 50 random matrices A, and, for each case, we run Algorithm 1 with both exact and estimated α (from (17)). The results are depicted in Figure 2, where the vertical axis is the average correlation of the estimated dictionary with the exact one, and the horizontal axis is the number of samples K. Interestingly, the performance of the algorithm is almost the same when using the exact or estimated value of α, which suggests that the estimator of α is robust and accurate. Moreover, we see that the average correlation is an increasing function of K, as expected. Also note that the convergence is faster for α = 1, which corresponds to the setting with more sparsity.\nComparison metrics\nAlgorithm % found Avg. time (s)\nComparison against benchmarks: We compare SparsDT against the `2/`1, `1/`2 and `1 + `2 methods described above. We compare the algorithms with regard to their success rate (i.e., the percentage of the dictionaries found by the algorithm), and the time that they take to find the dictionary (in the cases of success only). We again take m = 16, n = 24 and generate 100 random matrices A. In Table 1, the results for α = 1.2 and K = 500 are given. Finally, in Figure 3 we compare the algorithms success rate for different α, we take m = 16, n = 24, and K = 1000. These results indicate that SparsDT outperforms the other methods in the rate of success. Also, its average learning time is typically much less than the others, except for `2/`1 which does not find the correct dictionary at best in 10% of the time. The range of α that was observed in our experiments is α ∈ [1, 1.6], which is also the range where our algorithm works well and which is interesting for many applications including image processing. We do not recommend using the method for α > 1.7 because the convergence properties degrade as we get closer to 2 (a larger value of K is then needed to reach high success rates)."
  }, {
    "heading": "4.3. Experimental results for real images",
    "text": "Since images often have sparse representations, we apply our algorithm to problems in image processing applications. Our experiments are missing pixel recovery (in-painting) and denoising, based on dictionary learning. We use a\nAlgorithm PSNR (dB)\ndatabase of face images provided by AT&T4 and crop them to have size 112 × 91 so we can chop each image to 208 patches of size 7× 7, which correspond to yi in our model.\nIn this situation, the data is not exactly SαS, so we must adapt our choice of u in Step 5 of Algorithm 1. Specifically, in Equation (17) we eliminate projection vectors u that result in α greater than 2 (as α is required to be less than 2). In addition, we only select u that results in an α close to our estimated α̂ in (17). The number of iterations are chosen such that all algorithms converge.\nMissing pixel recovery: In this experiment, we reconstruct an image from 50% of its pixels. We take out the image shown in Figure 4, remove 50% of its pixels uniformly at random, and learn the dictionary using the patches of the other images in the collection. We assume 248 atoms in the dictionary. Then, using the learned dictionary, we reconstruct the image using orthogonal matching pursuit (for a detailed analysis see (Sahoo & Makur, 2015)). The results for different dictionary learning methods are depicted in Figure 4; SparsDT outperforms existing methods both visually and in term of PSNR.\nImage denoising: In this experiment, we use the dictionaries learned in the previous experiment to denoise the image in Figure 4. More precisely, we add Gaussian noise with standard deviation 10 to the original image and use orthogonal matching pursuit to denoise it. The performance of each method in PSNR can be seen in Table 2. As we see, SparsDT outperforms the other methods by at least 0.6 dB."
  }, {
    "heading": "5. Summary and future work",
    "text": "In this paper, we consider a stochastic generation model of sparse signals that involves an SαS innovation. Then, by designing an estimator of the spectral measure of so-defined stable random vectors, we propose a new dictionary learning algorithm. The proposed algorithm (SparsDT) turns out to be quite robust; it works well on sparse real-world signals, even when these do not rigorously follow the SαS model. This surprising fact can be explained by invoking the generalized central limit theorem. We validate SparsDT on several image-processing tasks and found it to outperform popular dictionary learning methods often significantly.\n4www.cl.cam.ac.uk/research/dtg/attarchive/facedatabase.html\nMoreover, SparsDT has no parameter to tune, contrary to other algorithms.\nExtending this work to non-symmetric α-stable random variables is a possible direction of future research. Given the excellent numerical behavior of the algorithm, it is of interest to get a good handle on the accuracy of the estimation in terms of the number of samples and the dimensionality of signals."
  }, {
    "heading": "A. Proof of Theorem 1",
    "text": "Denote the jth column of A and B by aj and bj , respectively. Also, denote the set of indices j for which bj 6= 0 by B ⊆ {1, . . . , n}. Note that due to the assumption of the pairwise linear independence of columns of A, aj 6= 0 for all j ∈ {1, . . . , n}. Since\n∥∥A>u∥∥α α = n∑ j=1 ∣∣u>aj∣∣α = ∑ j∈B ∣∣u>bj∣∣α = ∥∥B>u∥∥αα . for all u ∈ Rm, the partial derivatives of any order of the two side of the equation are also equal. In particular, we have\n∂d\n∂ui d\n∥∥A>u∥∥α α = ∂d\n∂ui d\n∥∥B>u∥∥α α\n(21)\nfor all i = 1, . . . ,m and d ∈ N, where ui is the ith entry of u.\nFirst we prove the theorem for 0 < α ≤ 1. In (21), we set d = 1 and obtain\nn∑ j=1 ∣∣u>aj∣∣α−1 sgn (u>aj) aij = ∑ j∈B\n∣∣u>bj∣∣α−1 sgn (u>bj) bij . (22) Exploiting this equation, we prove the following lemma:\nLemma 1 Under the assumptions of Theorem 1, for any j′ ∈ {1, . . . , n}, there exists j ∈ B and tj′ 6= 0, such that tj′aj′ = bj .\nProof: Take i′ such that ai′j′ 6= 0. Also, for all r = 1, . . . , n, define\nKar = { u ∈ Rm|u>ar = 0 } (23)\nwhich is an (m − 1)-dimensional subspace of Rm. Since for any j 6= j′, aj′ and aj are linearly independent, the subspace Kaj′ ∩ Kaj is (m − 2)-dimensional. This implies that their (m− 1)-dimensional Lebesgue measure is zero; and the same holds for the union ⋃ j 6=j′ ( Kaj′ ∩ Kaj ) . Since\nKaj′ \\ ⋃ j 6=j′ Kaj = Kaj′ \\ ⋃ j 6=j′ ( Kaj′ ∩ Kaj ) , (24)\nwe conclude that the (m− 1)-dimensional Lebesgue measure of Kaj′ \\ ⋃ j 6=j′ Kaj is infinity.\nNote that any u ∈ Kaj′ \\ ⋃ j 6=j′ Kaj is only orthogonal to aj′ and not to any other column of A. This yields that if we set i = i′ in the left-hand side of (22), for any u ∈ Kaj′ \\ ⋃ j 6=j′ Kaj , the only discontinuous term at u is the j′th one (because the function |x|α−1sgn(x) has a single point of discontinuity at x = 0). As a result, the sum itself is discontinuous over Kaj′ \\ ⋃ j 6=j′ Kaj . Hence, the same should hold for the right-hand side of the equation.\nSimilar to (23), define Kbr = { u ∈ Rm|u>br = 0 } . (25)\nThe set of discontinuity points of the right-hand side of (22) is a subset of ⋃ j∈B Kbj . Therefore, we have\nKaj′ \\ ⋃ j 6=j′ Kaj ⊆ ⋃ j∈B Kbj (26)\nwhich can also be written as Kaj′ \\ ⋃ j 6=j′ Kaj ⊆ ⋃ j∈B ( Kaj′ ∩ Kbj ) (27)\nNow, if none of the columns of B is linearly dependent to aj′ , all Kaj′ ∩ Kbj will be (m− 2)-dimensional spaces, and their (m− 1)-dimesnional Lebesgue measure is zero. This implies that the (m− 1)-dimensional Lebesgue measure of the right-hand side of (27) is also zero, which contradicts the result after (24). Therefore, there exists a j ∈ B such that bj is linearly dependent to aj′ , which completes the proof of the lemma.\nThe first consequence of Lemma 1 is that none of the columns of B is the zero vector and thus B = {1, . . . , n}.\nAlso, since all pairs of columns of A are linearly independent, the correspondence between a column of A and a column of B that are linearly dependent is one-to-one. Thus, we can simplify (22) to be\nn∑ j=1 (1− |tj |) ∣∣u>aj∣∣α−1 sgn (u>aj) aij = 0, (28)\nwhich holds for all u. This implies that the left hand-side of the above equation is a continuous function. However, as we saw in the proof of the lemma, every u ∈ Kaj′ \\ ⋃ j 6=j′ Kaj is a discontinuity point of the left-hand unless 1− |t′j | = 0 which completes the proof for the case of 0 < α ≤ 1.\nFor the case of 1 < α < 2, we set d = 2 in (21) and obtain n∑ j=1 ∣∣u>aj∣∣α−2 a2ij = n∑ j=1 ∣∣u>bj∣∣α−2 b2ij . (29) Replacing (22) by (29), the same reasoning as for 0 < α ≤ 1 works to prove the theorem for 1 < α < 2.\nB. Derivation of the gradient of E(B) To calculate the gradient of E(B), we first calculate the gradient of ‖B>u‖αα using the definition of the gradient, i.e.\n〈∇‖B>u‖αα,C〉 = ∂\n∂\n∥∥(B> − C>)u∥∥α α ∣∣∣ =0\n= α n∑ j=1 c>j u sgn ( b>j u ) ∣∣b>j u∣∣α−1 . Here, 〈D,C〉 = tr(D>C) is the standard inner product on the space of matrices. Writing the last equation in the matrix form, we obtain (20). Now, using the fact ddx |log x| = sgn(log x) 1x and the chain rule for differentiation yields (19)."
  }, {
    "heading": "Acknowledgements",
    "text": "The research was partially supported by the Hasler Foundation under Grant 16009, by the European Research Council under Grant 692726 (H2020-ERC Project GlobalBioIm) and by the SNF Project Grant (205121 163385)."
  }],
  "year": 2017,
  "references": [{
    "title": "Image denoising using bivariate α-stable distributions in the complex wavelet domain",
    "authors": ["A. Achim", "E. Kuruoglu"],
    "venue": "IEEE Signal Processing Letters,",
    "year": 2005
  }, {
    "title": "Reconstruction of ultrasound RF echoes modeled as stable random variables",
    "authors": ["A. Achim", "A. Basarab", "G. Tzagkarakis", "P. Tsakalides", "D. Kouamé"],
    "venue": "IEEE Transactions on Computational Imaging,",
    "year": 2015
  }, {
    "title": "K-svd: An algorithm for designing overcomplete dictionaries for sparse representation",
    "authors": ["M. Aharon", "M. Elad", "A. Bruckstein"],
    "venue": "IEEE Transactions on signal processing,",
    "year": 2006
  }, {
    "title": "Compressibility of deterministic and random infinite sequences",
    "authors": ["A. Amini", "M. Unser", "F. Marvasti"],
    "venue": "IEEE Transactions on Signal Processing,",
    "year": 2011
  }, {
    "title": "Inference with multivariate heavy-tails in linear models",
    "authors": ["D. Bickson", "C. Guestrin"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2010
  }, {
    "title": "A method for fitting stable autoregressive models using the autocovariation function",
    "authors": ["C. Gallagher"],
    "venue": "Statistics & probability letters,",
    "year": 2001
  }, {
    "title": "Alphastable modeling of noise and robust time-delay estimation in the presence of impulsive noise",
    "authors": ["P. Georgiou", "P. Tsakalides", "C. Kyriakakis"],
    "venue": "IEEE transactions on multimedia,",
    "year": 1999
  }, {
    "title": "A survey of sparse component analysis for blind source separation: principles, perspectives, and new challenges",
    "authors": ["R. Gribonval", "S. Lesage"],
    "venue": "In ESANN’06 proceedings14th European Symposium on Artificial Neural Networks,",
    "year": 2006
  }, {
    "title": "Compressible distributions for high-dimensional statistics",
    "authors": ["R. Gribonval", "V. Cevher", "M.E. Davies"],
    "venue": "IEEE Transactions on Information Theory,",
    "year": 2012
  }, {
    "title": "Integral Geometry and Radon Transforms",
    "authors": ["S. Helgason"],
    "year": 2010
  }, {
    "title": "Space or time adaptive signal processing by neural network models",
    "authors": ["J. Herault", "C. Jutten"],
    "venue": "In Neural networks for computing,",
    "year": 1986
  }, {
    "title": "Independent component analysis: algorithms and applications",
    "authors": ["A. Hyvärinen", "E. Oja"],
    "venue": "Neural networks,",
    "year": 2000
  }, {
    "title": "Independent component analysis, volume 46",
    "authors": ["A. Hyvärinen", "J. Karhunen", "E. Oja"],
    "year": 2004
  }, {
    "title": "Near optimal detection of signals in impulsive noise modeled with a symmetric/spl alpha/-stable distribution",
    "authors": ["E.E. Kuruoglu", "W.J. Fitzgerald", "P.J. Rayner"],
    "venue": "IEEE Communications Letters,",
    "year": 1998
  }, {
    "title": "Blind identification of underdetermined mixtures by simultaneous matrix diagonalization",
    "authors": ["Lathauwer", "L. De", "J. Castaing"],
    "venue": "IEEE Transactions on Signal Processing,",
    "year": 2008
  }, {
    "title": "Fourth-order cumulant-based blind identification of underdetermined mixtures",
    "authors": ["Lathauwer", "L. De", "J. Castaing", "J. Cardoso"],
    "venue": "IEEE Transactions on Signal Processing,",
    "year": 2007
  }, {
    "title": "Self-weighted least absolute deviation estimation for infinite variance autoregressive models",
    "authors": ["S. Ling"],
    "venue": "Journal of the Royal Statistical Society: Series B (Statistical Methodology),",
    "year": 2005
  }, {
    "title": "Online learning for matrix factorization and sparse coding",
    "authors": ["J. Mairal", "F. Bach", "J. Ponce", "G. Sapiro"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2010
  }, {
    "title": "A unified approach to sparse signal processing",
    "authors": ["F. Marvasti", "A. Amini", "F. Haddadi", "M. Soltanolkotabi", "B.H. Khalaj", "A. Aldroubi", "S. Sanei", "J. Chambers"],
    "venue": "EURASIP journal on advances in signal processing,",
    "year": 2012
  }, {
    "title": "Limit distributions for sums of independent random vectors: Heavy tails in theory and practice, volume 321",
    "authors": ["M. Meerschaert", "H. Scheffler"],
    "year": 2001
  }, {
    "title": "Non-gaussian noise models in signal processing for telecommunications: new methods an results for class a and class b noise models",
    "authors": ["D. Middleton"],
    "venue": "IEEE Transactions on Information Theory,",
    "year": 1999
  }, {
    "title": "An overview of independent component analysis and its applications",
    "authors": ["G. Naik", "D. Kumar"],
    "year": 2011
  }, {
    "title": "Signal Processing with AlphaStable Distributions and Applications",
    "authors": ["C.L. Nikias", "M. Shao"],
    "year": 1995
  }, {
    "title": "Modeling financial data with stable distributions",
    "authors": ["Nolan", "JP"],
    "venue": "Handbook of Heavy Tailed Distributions in Finance, Handbooks in Finance: Book,",
    "year": 2003
  }, {
    "title": "Estimation of stable spectral measures",
    "authors": ["Nolan", "JP", "Panorska", "AK", "McCulloch", "JH"],
    "venue": "Mathematical and Computer Modelling,",
    "year": 2001
  }, {
    "title": "Optimality of operator-like wavelets for representing sparse AR(1) processes",
    "authors": ["P. Pad", "M. Unser"],
    "venue": "IEEE Transactions on Signal Processing,",
    "year": 2015
  }, {
    "title": "Heavy tail modeling and teletraffic data: special invited paper",
    "authors": ["S. Resnick"],
    "venue": "The Annals of Statistics,",
    "year": 1997
  }, {
    "title": "Metric Linear Spaces. Mathematics and its applications (D",
    "authors": ["S. Rolewicz"],
    "venue": "Reidel Publishing Company).: East European series. D. Reidel,",
    "year": 1985
  }, {
    "title": "Signal recovery from random measurements via extended orthogonal matching pursuit",
    "authors": ["S. Sahoo", "A. Makur"],
    "venue": "IEEE Trans. Signal Processing,",
    "year": 2015
  }, {
    "title": "Stable non-Gaussian random processes: stochastic models with infinite variance, volume 1",
    "authors": ["G. Samoradnitsky", "M. Taqqu"],
    "venue": "CRC press,",
    "year": 1994
  }, {
    "title": "Signal processing with fractional lower order moments: stable processes and their applications",
    "authors": ["M. Shao", "C.L. Nikias"],
    "venue": "Proceedings of the IEEE,",
    "year": 1993
  }, {
    "title": "Exact recovery of sparsely-used dictionaries",
    "authors": ["D. Spielman", "H. Wang", "J. Wright"],
    "venue": "In COLT, pp",
    "year": 2012
  }],
  "id": "SP:13cabc82f93f87c029c8db95db1c12a744e16b67",
  "authors": [{
    "name": "Pedram Pad",
    "affiliations": []
  }, {
    "name": "Farnood Salehi",
    "affiliations": []
  }, {
    "name": "Elisa Celis",
    "affiliations": []
  }, {
    "name": "Patrick Thiran",
    "affiliations": []
  }, {
    "name": "Michael Unser",
    "affiliations": []
  }],
  "abstractText": "We propose a new statistical dictionary learning algorithm for sparse signals that is based on an α-stable innovation model. The parameters of the underlying model—that is, the atoms of the dictionary, the sparsity index α and the dispersion of the transform-domain coefficients—are recovered using a new type of probability distribution tomography. Specifically, we drive our estimator with a series of random projections of the data, which results in an efficient algorithm. Moreover, since the projections are achieved using linear combinations, we can invoke the generalized central limit theorem to justify the use of our method for sparse signals that are not necessarily α-stable. We evaluate our algorithm by performing two types of experiments: image inpainting and image denoising. In both cases, we find that our approach is competitive with stateof-the-art dictionary learning techniques. Beyond the algorithm itself, two aspects of this study are interesting in their own right. The first is our statistical formulation of the problem, which unifies the topics of dictionary learning and independent component analysis. The second is a generalization of a classical theorem about isometries of `p-norms that constitutes the foundation of our approach.",
  "title": "Dictionary Learning Based on Sparse Distribution Tomography"
}