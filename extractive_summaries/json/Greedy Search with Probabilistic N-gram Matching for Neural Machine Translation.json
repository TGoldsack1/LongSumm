{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 4778–4784 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n4778"
  }, {
    "heading": "1 Introduction",
    "text": "Neural machine translation (NMT) (Kalchbrenner and Blunsom, 2013; Cho et al., 2014; Sutskever et al., 2014; Bahdanau et al., 2014) has now achieved impressive performance (Wu et al., 2016; Gehring et al., 2017; Vaswani et al., 2017; Hassan et al., 2018; Chen et al., 2018; Lample et al., 2018) and draws more attention. NMT models are built on the encoder-decoder framework where the encoder network encodes the source sentence to distributed representations and the decoder network reconstructs the target sentence form the representations word by word.\nCurrently, NMT models are usually trained with the word-level loss (i.e., cross-entropy) under the teacher forcing algorithm (Williams and Zipser,\n*Corresponding Author\n1989), which forces the model to generate translation strictly matching the ground-truth at the word level. However, in practice it is impossible to generate translation totally the same as ground truth. Once different target words are generated, the word-level loss cannot evaluate the translation properly, usually under-estimating the translation. In addition, the teacher forcing algorithm suffers from the exposure bias (Ranzato et al., 2015) as it uses different inputs at training and inference, that is ground-truth words for the training and previously predicted words for the inference. Kim and Rush (2016) proposed a method of sequence-level knowledge distillation, which use teacher outputs to direct the training of student model, but the student model still have no access to its own predicted words. Scheduled sampling(SS) (Bengio et al., 2015; Venkatraman et al., 2015) attempts to alleviate the exposure bias problem through mixing ground-truth words and previously predicted words as inputs during training. However, the sequence generated by SS may not be aligned with the target sequence, which is inconsistent with the word-level loss.\nIn contrast, sequence-level objectives, such as BLEU (Papineni et al., 2002), GLEU (Wu et al., 2016), TER (Snover et al., 2006), and NIST (Doddington, 2002), evaluate translation at the sentence or n-gram level and allow for greater flexibility, and thus can mitigate the above problems of the word-level loss. However, due to the nondifferentiable of sequence-level objectives, previous works on sequence-level training (Ranzato et al., 2015; Shen et al., 2016; Bahdanau et al., 2016; Wu et al., 2016; He et al., 2016; Wu et al., 2017; Yang et al., 2017) mainly rely on reinforcement learning algorithms (Williams, 1992; Sutton et al., 2000) to find an unbiased gradient estimator for the gradient update. Sparse rewards in this situation often cause the high variance of gradient estimation, which consequently leads to unstable\ntraining and limited improvements. Lamb et al. (2016); Gu et al. (2017); Ma et al. (2018) respectively use the discriminator, critic and bag-of-words target as sequence-level training objectives, all of which are directly connected to the generation model and hence enable direct gradient update. However, these methods do not allow for direct optimization with respect to evaluation metrics.\nIn this paper, we propose a method to combine the strengths of the word-level and sequencelevel training, that is the direct gradient update without gradient estimation from word-level training and the greater flexibility from sequence-level training. Our method introduces probabilistic ngram matching which makes sequence-level objectives (e.g., BLEU, GLEU) differentiable. During training, it abandons teacher forcing and performs greedy search instead to take into consideration the predicted words. Experiment results show that our method significantly outperforms word-level training with the cross-entropy loss and sequence-level training under the reinforcement framework. The experiments also indicate that greedy search strategy indeed has superiority over teacher forcing."
  }, {
    "heading": "2 Background",
    "text": "NMT is based on an end-to-end framework which directly models the translation probability from the source sentence x to the target sentence ŷ:\nP (ŷ|x) = T∏ j=1 p(ŷj |ŷ<j ,x, θ), (1)\nwhere T is the target length and θ is the model parameters. Given the training set D = {XM,YM} withM sentences pairs, the training objective is to maximize the log-likelihood of the training data as\nθ = argmax θ {L(θ)}\nL(θ) = M∑ m=1 lm∑ j=1 log(p(ŷmj |ŷm<j ,xm, θ)), (2)\nwhere the superior m indicates the m-th sentence in the dataset and lm is the length of m-th target sentence.\nIn the above model, the probability of each target word p(ŷmj |ŷm<j ,xm, θ) is conditioned on the previous target words. The scenario is that in the\ntraining time, the teacher forcing algorithm is employed and the ground truth words from the target sentence are fed as context, while during inference, the ground truth words are not available and the previous predicted words are instead fed as context. This discrepancy is called exposure bias."
  }, {
    "heading": "3 Model",
    "text": ""
  }, {
    "heading": "3.1 Sequence-Level Objectives",
    "text": "Many automatic evaluation metrics of machine translation, such as BLEU, GLEU and NIST, are based on the n-gram matching. Assuming that y and ŷ are the output sentence and the ground truth sentence with length T and T ′ respectively, the count of an n-gram g = (g1, . . . , gn) in sentence y is calculated as\nCy(g) = T−n∑ t=0 n∏ i=1 1{gi = yt+i}, (3)\nwhere 1{·} is the indicator function. The matching count of the n-gram g between ŷ and y is given by\nCŷy(g) = min (Cy(g),Cŷ(g)). (4)\nThen the precision pn and the recall rn of the predicted n-grams are calculated as follows\npn =\n∑ g∈y C\nŷ y(g)∑\ng∈y Cy(g) , (5)\nrn =\n∑ g∈y C\nŷ y(g)∑\ng∈ŷ Cŷ(g) . (6)\nBLEU, the most widely used metric for machine translation evaluation, is defined based on the n-gram precision as follows\nBLEU = BP · exp( N∑ n=1 wn log pn), (7)\nwhere BP stands for the brevity penalty and wn is the weight for the n-gram. In contrast, GLEU is the minimum of recall and precision of 1-4 grams where 1-4 grams are counted together:\nGLEU = min(p1-4, r1-4). (8)"
  }, {
    "heading": "3.2 probabilistic Sequence-Level Objectives",
    "text": "In the output sentence y, the prediction probability varies among words. Some words are translated by the model with high confidence while some words are translated with high uncertainty.\nHowever, when calculating the count of n-grams in Eq.(3), all the words in the output sentence are treated equally, regardless of their respective prediction probabilities.\nTo give a more precise description of n-gram counts which considers the variety of prediction probabilities, we use the prediction probability p(yj |y<j ,x, θ) as the count of word yj , and correspondingly the count of an n-gram is the product of these probabilistic counts of all the words in the n-gram, not one anymore. Then the probabilistic count of g = (g1, . . . , gn) is calculated by summing over the output sentence y as\nC̃y(g) = T−n∑ t=0 n∏ i=1 1{gi = yt+i} · p(yt+i|y<t+i,x, θ). (9)\nNow the probabilistic sequence-level objective can be got by replacing Cy(g) with C̃y(g) (the tilde over the head indicates the probabilistic version) and keeping the rest unchanged. Here, we take BLEU as an example and show how the probabilistic BLEU (denoted as P-BLEU) is defined. From this purpose, the matching count of n-gram g in Eq.(4) is modified as follows\nC̃ ŷ\ny(g) = min(C̃y(g),Cŷ(g)). (10)\nand the predict precision of n-grams changes into\np̃n =\n∑ g∈y C̃ ŷ\ny(g)∑ g∈y C̃y(g) . (11)\nFinally, the probabilistic BLEU (P-BLEU) is defined as\nP-BLEU = BP · exp( N∑ n=1 wn log p̃n), (12)\nProbabilistic GLEU (P-GLEU) can be defined in a similar way. Specifically, we denote the probabilistic precision of n-grams as P-Pn. The probabilistic precision is more reasonable than recall since the denominator in Eq.(11) plays a normalization role, so we modify the definition in Eq.(8) and define P-GLEU as simply the probabilistic precision of 1-4 grams.\nThe general probabilistic loss function is:\nL(θ) = − M∑ m=1 P(ym, ŷm), (13)\nwhere P represents the probabilistic sequencelevel objectives, and ym and ŷm are the predicted translation and the ground truth for the m-th sentence respectively. The calculation of the probabilistic objective is illustrated in Figure 1. This probabilistic loss can work with decoding strategies such as greedy search and teacher forcing. In this paper we employ greedy search rather than teacher forcing so as to use the previously predicted words as context and alleviate the exposure bias problem."
  }, {
    "heading": "4 Experiment",
    "text": ""
  }, {
    "heading": "4.1 Settings",
    "text": "We carry out experiments on Chinese-to-English translation.1 The training data consists of 1.25M pairs of sentences extracted from LDC corpora2. Sentence pairs with either side longer than 50 were dropped. We use NIST 2002 (MT 02) as the validation set and NIST 2003-2006 (MT 03-08) as the test sets. We use the case insensitive 4-gram NIST BLEU score (Papineni et al., 2002) for the translation task.\nWe apply our method to an attention-based NMT system (Bahdanau et al., 2014) implemented by Pytorch. Both source and target vocabularies are limited to 30K. All word embedding sizes are set to 512, and the sizes of hidden units in both encoder and decoder RNNs are also set to 512. All parameters are initialized by uniform distribution over [−0.1, 0.1]. The mini-batch stochastic gradient descent (SGD) algorithm is employed to train the model with batch size of 40. In addition, the learning rate is adjusted by adadelta optimizer (Zeiler, 2012) with ρ = 0.95 and = 1e-6. Dropout is applied on the output layer with dropout rate of 0.5. The beam size is set to 10."
  }, {
    "heading": "4.2 Performance",
    "text": "Systems We first pretrain the baseline model by maximum likelihood estimation (MLE) and then refine the model using probabilistic sequencelevel objectives, including P-BLEU, P-GLEU and P-P2 (probabilistic 2-gram precision). In addition, we reproduce previous works which train the NMT model through minimum risk training (MRT) (Shen et al., 2016) and REINFORCE algo-\n1Experiment code: https://github.com/ictnlp/GS4NMT 2The corpora include LDC2002E18, LDC2003E07, LDC2003E14, Hansards portion of LDC2004T07, LDC2004T08 and LDC2005T06.\nrithm (RF) (Ranzato et al., 2015). When reproducing their works, we set BLEU, GLEU and 2-gram precision as training objectives respectively and find out that GLEU yields the best performance. In the following, we only report the results with training objective GLEU. Performance Table 1 shows the translation performance on test sets measured in BLEU score. Simply training NMT model by the probabilistic 2-gram precision achieves an improvement of 1.5 BLEU points, which significantly outperforms the reinforcement-based algorithms. We also test the precision of other n-grams and their combinations, but do not notice significant improvements over P-P2. Notice that our method only changes the loss function, without any modification on model structure and training data."
  }, {
    "heading": "4.3 Why Pretraining",
    "text": "We use the probabilistic loss to finetune the baseline model rather than training from scratch. This is in line with our motivation: to alleviate the exposure bias and make the model exposed to its own output during training. In the very beginning of the training, the model’s translation capability is nearly zero and the generated sentences are often meaningless and do not contain useful information for the training, so it is unreasonable to directly apply the greedy search strategy. Therefore, we first apply the teacher forcing algorithm to pretrain the model, and then we let the model generate the sentences itself and learn from its own outputs.\nAnother reason favoring pretraining is that pretraining can lower the training cost. The training cost of the introduced probabilistic loss is about three times higher than the cost of cross entropy. Without pretraining, the training time will be much higher than usual. Otherwise, the training cost is acceptable if the probabilistic loss is only for finetuning."
  }, {
    "heading": "4.4 Effect of Decoding Strategy",
    "text": "The probabilistic loss, defined in Eq.(13), is computed from the model output y and reference ŷ. In this section, we apply two different decoding strategies to generate y: 1. teacher forcing, which uses the ground truth as decoder input. 2. greedy search, which feeds the word with maximum probability. By conducting this experiment, we attempt to figure out where the improvements come from: the modification of loss or the mitigation of exposure bias?\nFigure 2 shows the learning curves of the two decoding strategies with training objective P-P2. Teacher forcing raises about 0.5 BLEU improvements and greedy search outperform the teacher forcing algorithm by nearly 1 BLEU point. We conclude that the probabilistic loss has its own advantage even when trained by the teacher forcing algorithm, and greedy search is effective in alleviating the exposure bias.\nNotice that the greedy search strategy highly relys on the probabilistic loss and can not be conducted independently. Greedy search together with the word-level loss is very similar with the scheduled sampling(SS). However, SS is inconsistent with the word-level loss since the word-level loss requires strict alignment between hypothesis and reference, which can only be accomplished by the teacher forcing algorithm."
  }, {
    "heading": "4.5 Correlation with Evaluation Metrics",
    "text": "In this section, we explore how the probabilistic objective correlates with the real evaluation metric. We randomly sample 100 pairs of sentences\nfrom the training set and compute their P-GLEU and GLEU scores (Wu et al. (2016) indicates that GLEU have better performance in the sentencelevel evaluation than BLEU).\nDirectly computing the correlation between GLEU and P-GLEU gives the correlation coefficient 0.86, which indicates strong correlation. In addition, we draw the scatter diagram of the 100 pairs of sentences in Figure 3 with GLEU as x-axis and P-GLEU as y-axix. Figure 3 shows that PGLEU correlates well with GLEU, suggesting that it is reasonable to directly train the NMT model with P-GLEU."
  }, {
    "heading": "5 Conclusion",
    "text": "Word-level loss cannot evaluate the translation properly and suffers from the exposure bias, and sequence-level objectives are usually indifferentiable and require gradient estimation. We propose probabilistic sequence-level objectives based on ngram matching, which relieve the dependence on gradient estimation and can directly train the NMT model. Experiment results show that our method significantly outperforms previous sequence-level training works and successfully alleviates the exposure bias through performing greedy search."
  }, {
    "heading": "6 Acknowledgments",
    "text": "We thank the anonymous reviewers for their insightful comments. This work was supported by the National Natural Science Foundation of China (NSFC) under the project NO.61472428 and the project NO. 61662077."
  }],
  "year": 2018,
  "references": [{
    "title": "An actor-critic algorithm for sequence prediction",
    "authors": ["Dzmitry Bahdanau", "Philemon Brakel", "Kelvin Xu", "Anirudh Goyal", "Ryan Lowe", "Joelle Pineau", "Aaron Courville", "Yoshua Bengio."],
    "venue": "arXiv preprint arXiv:1607.07086.",
    "year": 2016
  }, {
    "title": "Neural machine translation by jointly learning to align and translate",
    "authors": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."],
    "venue": "arXiv preprint arXiv:1409.0473.",
    "year": 2014
  }, {
    "title": "Scheduled sampling for sequence prediction with recurrent neural networks",
    "authors": ["Samy Bengio", "Oriol Vinyals", "Navdeep Jaitly", "Noam Shazeer."],
    "venue": "Advances in Neural Information Processing Systems, pages 1171–1179.",
    "year": 2015
  }, {
    "title": "The best of both worlds: Combining recent advances in neural machine translation",
    "authors": ["Mia Xu Chen", "Orhan Firat", "Ankur Bapna", "Melvin Johnson", "Wolfgang Macherey", "George Foster", "Llion Jones", "Niki Parmar", "Mike Schuster", "Zhifeng Chen"],
    "year": 2018
  }, {
    "title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation",
    "authors": ["Kyunghyun Cho", "Bart Van Merriënboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio."],
    "venue": "arXiv preprint",
    "year": 2014
  }, {
    "title": "Automatic evaluation of machine translation quality using n-gram cooccurrence statistics",
    "authors": ["George Doddington."],
    "venue": "Proceedings of the second international conference on Human Language Technology Research, pages 138–145. Morgan Kauf-",
    "year": 2002
  }, {
    "title": "Convolutional sequence to sequence learning",
    "authors": ["Jonas Gehring", "Michael Auli", "David Grangier", "Denis Yarats", "Yann N Dauphin."],
    "venue": "arXiv preprint arXiv:1705.03122.",
    "year": 2017
  }, {
    "title": "Trainable greedy decoding for neural machine translation",
    "authors": ["Jiatao Gu", "Kyunghyun Cho", "Victor OK Li."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 1968–1978.",
    "year": 2017
  }, {
    "title": "Achieving human parity on automatic chinese to english news",
    "authors": ["Hany Hassan", "Anthony Aue", "Chang Chen", "Vishal Chowdhary", "Jonathan Clark", "Christian Federmann", "Xuedong Huang", "Marcin Junczys-Dowmunt", "William Lewis", "Mu Li"],
    "year": 2018
  }, {
    "title": "Dual learning for machine translation",
    "authors": ["Di He", "Yingce Xia", "Tao Qin", "Liwei Wang", "Nenghai Yu", "Tieyan Liu", "Wei-Ying Ma."],
    "venue": "Advances in Neural Information Processing Systems, pages 820–828.",
    "year": 2016
  }, {
    "title": "Recurrent continuous translation models",
    "authors": ["Nal Kalchbrenner", "Phil Blunsom."],
    "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1700–1709.",
    "year": 2013
  }, {
    "title": "Sequencelevel knowledge distillation",
    "authors": ["Yoon Kim", "Alexander M Rush."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 1317–1327.",
    "year": 2016
  }, {
    "title": "Professor forcing: A new algorithm for training recurrent networks",
    "authors": ["Alex M Lamb", "Anirudh Goyal ALIAS PARTH GOYAL", "Ying Zhang", "Saizheng Zhang", "Aaron C Courville", "Yoshua Bengio."],
    "venue": "Advances In Neural Information Process-",
    "year": 2016
  }, {
    "title": "Phrase-based & neural unsupervised machine translation",
    "authors": ["Guillaume Lample", "Myle Ott", "Alexis Conneau", "Ludovic Denoyer", "Marc’Aurelio Ranzato"],
    "venue": "arXiv preprint arXiv:1804.07755",
    "year": 2018
  }, {
    "title": "Bag-of-words as target for neural machine translation",
    "authors": ["Shuming Ma", "Xu Sun", "Yizhong Wang", "Junyang Lin."],
    "venue": "arXiv preprint arXiv:1805.04871.",
    "year": 2018
  }, {
    "title": "Bleu: a method for automatic evaluation of machine translation",
    "authors": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "WeiJing Zhu."],
    "venue": "Proceedings of the 40th annual meeting on association for computational linguistics, pages 311–318. Association for",
    "year": 2002
  }, {
    "title": "Sequence level training with recurrent neural networks. arXiv preprint arXiv:1511.06732",
    "authors": ["Marc’Aurelio Ranzato", "Sumit Chopra", "Michael Auli", "Wojciech Zaremba"],
    "year": 2015
  }, {
    "title": "Minimum risk training for neural machine translation",
    "authors": ["Shiqi Shen", "Yong Cheng", "Zhongjun He", "Wei He", "Hua Wu", "Maosong Sun", "Yang Liu."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long",
    "year": 2016
  }, {
    "title": "A study of translation edit rate with targeted human annotation",
    "authors": ["Matthew Snover", "Bonnie Dorr", "Richard Schwartz", "Linnea Micciulla", "John Makhoul."],
    "venue": "Proceedings of association for machine translation in the Americas, volume 200.",
    "year": 2006
  }, {
    "title": "Sequence to sequence learning with neural networks",
    "authors": ["Ilya Sutskever", "Oriol Vinyals", "Quoc V Le."],
    "venue": "Advances in neural information processing systems, pages 3104–3112.",
    "year": 2014
  }, {
    "title": "Policy gradient methods for reinforcement learning with function approximation",
    "authors": ["Richard S Sutton", "David A McAllester", "Satinder P Singh", "Yishay Mansour."],
    "venue": "Advances in neural information processing systems, pages 1057–1063.",
    "year": 2000
  }, {
    "title": "Attention is all you need",
    "authors": ["Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N Gomez", "Łukasz Kaiser", "Illia Polosukhin."],
    "venue": "Advances in Neural Information Processing Systems, pages 6000–6010.",
    "year": 2017
  }, {
    "title": "Improving multi-step prediction of learned time series models",
    "authors": ["Arun Venkatraman", "Martial Hebert", "J Andrew Bagnell."],
    "venue": "AAAI, pages 3024– 3030.",
    "year": 2015
  }, {
    "title": "Simple statistical gradientfollowing algorithms for connectionist reinforcement learning",
    "authors": ["Ronald J Williams."],
    "venue": "Reinforcement Learning, pages 5–32. Springer.",
    "year": 1992
  }, {
    "title": "A learning algorithm for continually running fully recurrent neural networks",
    "authors": ["Ronald J Williams", "David Zipser."],
    "venue": "Neural computation, 1(2):270– 280.",
    "year": 1989
  }, {
    "title": "Adversarial neural machine translation",
    "authors": ["Lijun Wu", "Yingce Xia", "Li Zhao", "Fei Tian", "Tao Qin", "Jianhuang Lai", "Tie-Yan Liu."],
    "venue": "arXiv preprint arXiv:1704.06933.",
    "year": 2017
  }, {
    "title": "Improving neural machine translation with conditional sequence generative adversarial nets",
    "authors": ["Zhen Yang", "Wei Chen", "Feng Wang", "Bo Xu."],
    "venue": "arXiv preprint arXiv:1703.04887.",
    "year": 2017
  }, {
    "title": "Adadelta: an adaptive learning rate method",
    "authors": ["Matthew D Zeiler."],
    "venue": "arXiv preprint arXiv:1212.5701.",
    "year": 2012
  }],
  "id": "SP:b35ea8aca56f2587379ceaf33b9203a5bd8d264d",
  "authors": [{
    "name": "Chenze Shao",
    "affiliations": []
  }, {
    "name": "Yang Feng",
    "affiliations": []
  }, {
    "name": "Xilin Chen",
    "affiliations": []
  }],
  "abstractText": "Neural machine translation (NMT) models are usually trained with the word-level loss using the teacher forcing algorithm, which not only evaluates the translation improperly but also suffers from exposure bias. Sequence-level training under the reinforcement framework can mitigate the problems of the word-level loss, but its performance is unstable due to the high variance of the gradient estimation. On these grounds, we present a method with a differentiable sequence-level training objective based on probabilistic n-gram matching which can avoid the reinforcement framework. In addition, this method performs greedy search in the training which uses the predicted words as context just as at inference to alleviate the problem of exposure bias. Experiment results on the NIST Chinese-to-English translation tasks show that our method significantly outperforms the reinforcement-based algorithms and achieves an improvement of 1.5 BLEU points on average over a strong baseline system.",
  "title": "Greedy Search with Probabilistic N-gram Matching for Neural Machine Translation"
}