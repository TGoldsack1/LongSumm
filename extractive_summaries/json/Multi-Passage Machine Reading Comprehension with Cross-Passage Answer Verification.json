{
  "sections": [{
    "text": "Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers), pages 1918–1927 Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics\n1918"
  }, {
    "heading": "1 Introduction",
    "text": "Machine reading comprehension (MRC), empowering computers with the ability to acquire knowledge and answer questions from textual data, is believed to be a crucial step in building a general intelligent agent (Chen et al., 2016). Recent years have seen rapid growth in the MRC community. With the release of various datasets, the MRC task has evolved from the early cloze-style test (Hermann et al., 2015; Hill et al., 2015) to answer extraction from a single passage (Rajpurkar et al.,\n*This work was done while the first author was doing internship at Baidu Inc.\n2016) and to the latest more complex question answering on web data (Nguyen et al., 2016; Dunn et al., 2017; He et al., 2017).\nGreat efforts have also been made to develop models for these MRC tasks , especially for the answer extraction on single passage (Wang and Jiang, 2016; Seo et al., 2016; Pan et al., 2017). A significant milestone is that several MRC models have exceeded the performance of human annotators on the SQuAD dataset1 (Rajpurkar et al., 2016). However, this success on single Wikipedia passage is still not adequate, considering the ultimate goal of reading the whole web. Therefore, several latest datasets (Nguyen et al., 2016; He et al., 2017; Dunn et al., 2017) attempt to design the MRC tasks in more realistic settings by involving search engines. For each question, they use the search engine to retrieve multiple passages and the MRC models are required to read these passages in order to give the final answer.\nOne of the intrinsic challenges for such multipassage MRC is that since all the passages are question-related but usually independently written, it’s probable that multiple confusing answer candidates (correct or incorrect) exist. Table 1 shows an example from MS-MARCO. We can see that all the answer candidates have semantic matching with the question while they are literally different and some of them are even incorrect. As is shown by Jia and Liang (2017), these confusing answer candidates could be quite difficult for MRC models to distinguish. Therefore, special consideration is required for such multi-passage MRC problem.\nIn this paper, we propose to leverage the answer candidates from different passages to verify the final correct answer and rule out the noisy incorrect answers. Our hypothesis is that the cor-\n1https://rajpurkar.github.io/SQuAD-explorer/\nrect answers could occur more frequently in those passages and usually share some commonalities, while incorrect answers are usually different from one another. The example in Table 1 demonstrates this phenomenon. We can see that the answer candidates extracted from the last four passages are all valid answers to the question and they are semantically similar to each other, while the answer candidates from the other two passages are incorrect and there is no supportive information from other passages. As human beings usually compare the answer candidates from different sources to deduce the final answer, we hope that MRC model can also benefit from the cross-passage answer verification process.\nThe overall framework of our model is demonstrated in Figure 1 , which consists of three modules. First, we follow the boundary-based MRC models (Seo et al., 2016; Wang and Jiang, 2016) to find an answer candidate for each passage by identifying the start and end position of the answer (Figure 2). Second, we model the meanings of the answer candidates extracted from those passages and use the content scores to measure the quality of the candidates from a second perspective. Third, we conduct the answer verification by enabling each answer candidate to attend to the other candidates based on their representations. We hope that the answer candidates can collect supportive information from each other according to their semantic similarities and further decide whether each candidate is correct or not.\nTherefore, the final answer is determined by three factors: the boundary, the content and the crosspassage answer verification. The three steps are modeled using different modules, which can be jointly trained in our end-to-end framework.\nWe conduct extensive experiments on the MSMARCO (Nguyen et al., 2016) and DuReader (He et al., 2017) datasets. The results show that our answer verification MRC model outperforms the baseline models by a large margin and achieves the state-of-the-art performance on both datasets."
  }, {
    "heading": "2 Our Approach",
    "text": "Figure 1 gives an overview of our multi-passage MRC model which is mainly composed of three modules including answer boundary prediction, answer content modeling and answer verification. First of all, we need to model the question and passages. Following Seo et al. (2016), we compute the question-aware representation for each passage (Section 2.1). Based on this representation, we employ a Pointer Network (Vinyals et al., 2015) to predict the start and end position of the answer in the module of answer boundary prediction (Section 2.2). At the same time, with the answer content model (Section 2.3), we estimate whether each word should be included in the answer and thus obtain the answer representations. Next, in the answer verification module (Section 2.4), each answer candidate can attend to the other answer candidates to collect supportive information and we compute one score for each candidate\nto indicate whether it is correct or not according to the verification. The final answer is determined by not only the boundary but also the answer content and its verification score (Section 2.5)."
  }, {
    "heading": "2.1 Question and Passage Modeling",
    "text": "Given a question Q and a set of passages {Pi} retrieved by search engines, our task is to find the best concise answer to the question. First, we formally present the details of modeling the question and passages.\nEncoding We first map each word into the vector space by concatenating its word embedding and sum of its character embeddings. Then we employ bi-directional LSTMs (BiLSTM) to encode the question Q and passages {Pi} as follows:\nuQt = BiLSTMQ(u Q t−1, [e Q t , c Q t ]) (1) uPit = BiLSTMP (u Pi t−1, [e Pi t , c Pi t ]) (2)\nwhere eQt , c Q t , e Pi t , c Pi t are the word-level and character-level embeddings of the tth word. uQt and uPit are the encoding vectors of the t\nth words in Q and Pi respectively. Unlike previous work (Wang et al., 2017c) that simply concatenates all the passages, we process the passages independently at the encoding and matching steps.\nQ-P Matching One essential step in MRC is to match the question with passages so that important information can be highlighted. We use the\nAttention Flow Layer (Seo et al., 2016) to conduct the Q-P matching in two directions. The similarity matrix S ∈ R|Q|×|Pi| between the question and passage i is changed to a simpler version, where the similarity between the tth word in the question and the kth word in passage i is computed as:\nSt,k = u Q t ᵀ · uPik (3)\nThen the context-to-question attention and question-to-context attention is applied strictly following Seo et al. (2016) to obtain the questionaware passage representation {ũPit }. We do not give the details here due to space limitation. Next, another BiLSTM is applied in order to fuse the contextual information and get the new representation for each word in the passage, which is regarded as the match output:\nvPit = BiLSTMM (v Pi t−1, ũ Pi t ) (4)\nBased on the passage representations, we introduce the three main modules of our model."
  }, {
    "heading": "2.2 Answer Boundary Prediction",
    "text": "To extract the answer span from passages, mainstream studies try to locate the boundary of the answer, which is called boundary model. Following (Wang and Jiang, 2016), we employ Pointer Network (Vinyals et al., 2015) to compute the probability of each word to be the start or end position\nof the span:\ngtk = w a 1 ᵀ tanh(Wa2 [v P k ,h a t−1]) (5)\nαtk = exp(g t k)/ ∑|P| j=1 exp(gtj) (6)\nct = ∑|P|\nk=1 αtkv P k (7)\nhat = LSTM(h a t−1, ct) (8)\nBy utilizing the attention weights, the probability of the kth word in the passage to be the start and end position of the answer is obtained as α1k and α2k. It should be noted that the pointer network is applied to the concatenation of all passages, which is denoted as P so that the probabilities are comparable across passages. This boundary model can be trained by minimizing the negative log probabilities of the true start and end indices:\nLboundary = − 1\nN N∑ i=1 (logα1y1i + logα2y2i ) (9)\nwhere N is the number of samples in the dataset and y1i , y 2 i are the gold start and end positions."
  }, {
    "heading": "2.3 Answer Content Modeling",
    "text": "Previous work employs the boundary model to find the text span with the maximum boundary score as the final answer. However, in our context, besides locating the answer candidates, we also need to model their meanings in order to conduct the verification. An intuitive method is to compute the representation of the answer candidates separately after extracting them, but it could be hard to train such model end-to-end. Here, we propose a novel method that can obtain the representation of the answer candidates based on probabilities.\nSpecifically, we change the output layer of the classic MRC model. Besides predicting the boundary probabilities for the words in the passages, we also predict whether each word should be included in the content of the answer. The content probability of the kth word is computed as:\npck = sigmoid(w c 1 ᵀReLU(Wc2v Pi k )) (10)\nTraining this content model is also quite intuitive. We transform the boundary labels into a continuous segment, which means the words within the answer span will be labeled as 1 and other words will be labeled as 0. In this way, we define\nthe loss function as the averaged cross entropy:\nLcontent =− 1\nN\n1\n|P| N∑ i=1 |P |∑ j=1 [yck log p c k\n+ (1− yck) log(1− pck)]\n(11)\nThe content probabilities provide another view to measure the quality of the answer in addition to the boundary. Moreover, with these probabilities, we can represent the answer from passage i as a weighted sum of all the word embeddings in this passage:\nrAi = 1 |Pi| ∑|Pi| k=1 pck[e Pi k , c Pi k ] (12)"
  }, {
    "heading": "2.4 Cross-Passage Answer Verification",
    "text": "The boundary model and the content model focus on extracting and modeling the answer within a single passage respectively, with little consideration of the cross-passage information. However, as is discussed in Section 1, there could be multiple answer candidates from different passages and some of them may mislead the MRC model to make an incorrect prediction. It’s necessary to aggregate the information from different passages and choose the best one from those candidates. Therefore, we propose a method to enable the answer candidates to exchange information and verify each other through the cross-passage answer verification process.\nGiven the representation of the answer candidates from all passages {rAi}, each answer candidate then attends to other candidates to collect supportive information via attention mechanism:\nsi,j = { 0, if i = j, rAi ᵀ · rAj , otherwise (13)\nαi,j = exp(si,j)/ ∑n\nk=1 exp(si,k) (14) r̃Ai = ∑n\nj=1 αi,jr\nAj (15)\nHere r̃Ai is the collected verification information from other passages based on the attention weights. Then we pass it together with the original representation rAi to a fully connected layer:\ngvi = w vᵀ[rAi , r̃Ai , rAi r̃Ai ] (16)\nWe further normalize these scores over all passages to get the verification score for answer candidate Ai:\npvi = exp(g v i )/ ∑n j=1 exp(gvj ) (17)\nIn order to train this verification model, we take the answer from the gold passage as the gold answer. And the loss function can be formulated as the negative log probability of the correct answer:\nLverify = − 1\nN N∑ i=1 log pvyvi (18)\nwhere yvi is the index of the correct answer in all the answer candidates of the ith instance ."
  }, {
    "heading": "2.5 Joint Training and Prediction",
    "text": "As is described above, we define three objectives for the reading comprehension model over multiple passages: 1. finding the boundary of the answer; 2. predicting whether each word should be included in the content; 3. selecting the best answer via cross-passage answer verification. According to our design, these three tasks can share the same embedding, encoding and matching layers. Therefore, we propose to train them together as multi-task learning (Ruder, 2017). The joint objective function is formulated as follows:\nL = Lboundary + β1Lcontent + β2Lverify (19)\nwhere β1 and β2 are two hyper-parameters that control the weights of those tasks.\nWhen predicting the final answer, we take the boundary score, content score and verification score into consideration. We first extract the answer candidateAi that has the maximum boundary score from each passage i. This boundary score is computed as the product of the start and end probability of the answer span. Then for each answer candidate Ai, we average the content probabilities of all its words as the content score of Ai. And we can also predict the verification score for Ai using the verification model. Therefore, the final answer can be selected from all the answer candidates according to the product of these three scores."
  }, {
    "heading": "3 Experiments",
    "text": "To verify the effectiveness of our model on multipassage machine reading comprehension, we conduct experiments on the MS-MARCO (Nguyen et al., 2016) and DuReader (He et al., 2017) datasets. Our method achieves the state-of-the-art performance on both datasets."
  }, {
    "heading": "3.1 Datasets",
    "text": "We choose the MS-MARCO and DuReader datasets to test our method, since both of them are\ndesigned from real-world search engines and involve a large number of passages retrieved from the web. One difference of these two datasets is that MS-MARCO mainly focuses on the English web data, while DuReader is designed for Chinese MRC. This diversity is expected to reflect the generality of our method. In terms of the data size, MS-MARCO contains 102023 questions, each of which is paired up with approximately 10 passages for reading comprehension. As for DuReader, it keeps the top-5 search results for each question and there are totally 201574 questions.\nOne prerequisite for answer verification is that there should be multiple correct answers so that they can verify each other. Both the MS-MARCO and DuReader datasets require the human annotators to generate multiple answers if possible. Table 2 shows the proportion of questions that have multiple answers. However, the same answer that occurs many times is treated as one single answer here. Therefore, we also report the proportion of questions that have multiple answer spans to match with the human-generated answers. A span is taken as valid if it can achieve F1 score larger than 0.7 compared with any reference answer. From these statistics, we can see that the phenomenon of multiple answers is quite common for both MS-MARCO and DuReader. These answers will provide strong signals for answer verification if we can leverage them properly."
  }, {
    "heading": "3.2 Implementation Details",
    "text": "For MS-MARCO, we preprocess the corpus with the reversible tokenizer from Stanford CoreNLP (Manning et al., 2014) and we choose the span that achieves the highest ROUGE-L score with the reference answers as the gold span for training. We employ the 300-D pre-trained Glove embeddings (Pennington et al., 2014) and keep it fixed during training. The character embeddings are randomly initialized with its dimension as 30. For DuReader, we follow the preprocessing described in He et al. (2017).\nWe tune the hyper-parameters according to the\nvalidation performance on the MS-MARCO development set. The hidden size is set to be 150 and we apply L2 regularization with its weight as 0.0003. The task weights β1, β2 are both set to be 0.5. To train our model, we employ the Adam algorithm (Kingma and Ba, 2014) with the initial learning rate as 0.0004 and the mini-batch size as 32. Exponential moving average is applied on all trainable variables with a decay rate 0.9999.\nTwo simple yet effective technologies are employed to improve the final performance on these two datasets respectively. For MS-MARCO, approximately 8% questions have the answers as Yes or No, which usually cannot be solved by extractive approach (Tan et al., 2017). We address this problem by training a simple Yes/No classifier for those questions with certain patterns (e.g., starting with “is”). Concretely, we simply change the output layer of the basic boundary model so that it can predict whether the answer is “Yes” or “No”. For DuReader, the retrieved document usually contains a large number of paragraphs that cannot be fed into MRC models directly (He et al., 2017). The original paper employs a simple a simple heuristic strategy to select a representative paragraph for each document, while we train a paragraph ranking model for this. We will demonstrate the effects of these two technologies later."
  }, {
    "heading": "3.3 Results on MS-MARCO",
    "text": "Table 3 shows the results of our system and other state-of-the-art models on the MS-MARCO test set. We adopt the official evaluation metrics, including ROUGE-L (Lin, 2004) and BLEU-1 (Papineni et al., 2002). As we can see, for both metrics, our single model outperforms all the other competing models with an evident margin, which is extremely hard considering the near-human per-\nformance. If we ensemble the models trained with different random seeds and hyper-parameters, the results can be further improved and outperform the ensemble model in Tan et al. (2017), especially in terms of the BLEU-1."
  }, {
    "heading": "3.4 Results on DuReader",
    "text": "The results of our model and several baseline systems on the test set of DuReader are shown in Table 4. The BiDAF and Match-LSTM models are provided as two baseline systems (He et al., 2017). Based on BiDAF, as is described in Section 3.2, we tried a new paragraph selection strategy by employing a paragraph ranking (PR) model. We can see that this paragraph ranking can boost the BiDAF baseline significantly. Finally, we implement our system based on this new strategy, and our system (single model) achieves further improvement by a large margin."
  }, {
    "heading": "4 Analysis and Discussion",
    "text": ""
  }, {
    "heading": "4.1 Ablation Study",
    "text": "To get better insight into our system, we conduct in-depth ablation study on the development set of MS-MARCO, which is shown in Table 5. Following Tan et al. (2017), we mainly focus on the ROUGE-L score that is averaged case by case.\nWe first evaluate the answer verification by ablating the cross-passage verification model so that the verification loss and verification score will not be used during training and testing. Then we remove the content model in order to test the necessity of modeling the content of the answer. Since we don’t have the content scores, we use the boundary probabilities instead to compute the answer representation for verification. Next, to show the benefits of joint training, we train the boundary model separately from the other two models. Finally, we remove the yes/no classification in order to show the real improvement of our end-toend model compared with the baseline method that predicts the answer with only the boundary model.\nFrom Table 5, we can see that the answer verification makes a great contribution to the overall improvement, which confirms our hypothesis that cross-passage answer verification is useful for the multi-passage MRC. For the ablation of the content model, we analyze that it will not only affect the content score itself, but also violate the verification model since the content probabilities are necessary for the answer representation, which will be further analyzed in Section 4.3. Another discovery is that jointly training the three models can provide great benefits, which shows that the three tasks are actually closely related and can boost each other with shared representations at bottom layers. At last, comparing our method with the baseline, we achieve an improvement of nearly\n3 points without the yes/no classification. This significant improvement proves the effectiveness of our approach."
  }, {
    "heading": "4.2 Case Study",
    "text": "To demonstrate how each module of our model takes effect when predicting the final answer, we conduct a case study in Table 6 with the same example that we discussed in Section 1. For each answer candidate, we list three scores predicted by the boundary model, content model and verification model respectively.\nOn the one hand, we can see that these three scores generally have some relevance. For example, the second candidate is given lowest scores by all the three models. We analyze that this is because the models share the same encoding and matching layers at bottom level and this relevance guarantees that the content and verification models will not violate the boundary model too much. On the other hand, we also see that the verification score can really make a difference here when the boundary model makes an incorrect decision among the confusing answer candidates ([1], [3], [4], [6]). Besides, as we expected, the verification model tends to give higher scores for those answers that have semantic commonality with each other ([3], [4], [6]), which are all valid answers in this case. By multiplying the three scores, our model finally predicts the answer correctly."
  }, {
    "heading": "4.3 Necessity of the Content Model",
    "text": "In our model, we compute the answer representation based on the content probabilities predicted by a separate content model instead of directly using the boundary probabilities. We argue that this content model is necessary for our answer verification process. Figure 2 plots the predicted content probabilities as well as the boundary probabilities\nfor a passage. We can see that the boundary and content probabilities capture different aspects of the answer. Since answer candidates usually have similar boundary words, if we compute the answer representation based on the boundary probabilities, it’s difficult to model the real difference among different answer candidates. On the contrary, with the content probabilities, we pay more attention to the content part of the answer, which can provide more distinguishable information for verifying the correct answer. Furthermore, the content probabilities can also adjust the weights of the words within the answer span so that unimportant words (e.g. “and” and “.”) get lower weights in the final answer representation. We believe that this refined representation is also good for the answer verification process."
  }, {
    "heading": "5 Related Work",
    "text": "Machine reading comprehension made rapid progress in recent years, especially for singlepassage MRC task, such as SQuAD (Rajpurkar et al., 2016). Mainstream studies (Seo et al., 2016; Wang and Jiang, 2016; Xiong et al., 2016) treat reading comprehension as extracting answer span from the given passage, which is usually achieved by predicting the start and end position of the answer. We implement our boundary model similarly by employing the boundary-based pointer network (Wang and Jiang, 2016). Another inspiring work is from Wang et al. (2017c), where the authors propose to match the passage against itself so that the representation can aggregate evidence from the whole passage. Our verification model adopts a similar idea. However, we collect information across passages and our attention is based on the answer representation, which is much more efficient than attention over all passages. For the model training, Xiong et al. (2017) argues that the boundary loss encourages exact answers at the\ncost of penalizing overlapping answers. Therefore they propose a mixed objective that incorporates rewards derived from word overlap. Our joint training approach has a similar function. By taking the content and verification loss into consideration, our model will give less loss for overlapping answers than those unmatched answers, and our loss function is totally differentiable.\nRecently, we also see emerging interests in multi-passage MRC from both the academic (Dunn et al., 2017; Joshi et al., 2017) and industrial community (Nguyen et al., 2016; He et al., 2017). Early studies (Shen et al., 2017; Wang et al., 2017c) usually concat those passages and employ the same models designed for singlepassage MRC. However, more and more latest studies start to design specific methods that can read multiple passages more effectively. In the aspect of passage selection, Wang et al. (2017a) introduced a pipelined approach that rank the passages first and then read the selected passages for answering questions. Tan et al. (2017) treats the passage ranking as an auxiliary task that can be trained jointly with the reading comprehension model. Actually, the target of our answer verification is very similar to that of the passage selection, while we pay more attention to the answer content and the answer verification process. Speaking of the answer verification, Wang et al. (2017b) has a similar motivation to ours. They attempt to aggregate the evidence from different passages and choose the final answer from n-best candidates. However, they implement their idea as a separate reranking step after reading comprehension, while our answer verification is a component of the whole model that can be trained end-to-end."
  }, {
    "heading": "6 Conclusion",
    "text": "In this paper, we propose an end-to-end framework to tackle the multi-passage MRC task . We\ncreatively design three different modules in our model, which can find the answer boundary, model the answer content and conduct cross-passage answer verification respectively. All these three modules can be trained with different forms of the answer labels and training them jointly can provide further improvement. The experimental results demonstrate that our model outperforms the baseline models by a large margin and achieves the state-of-the-art performance on two challenging datasets, both of which are designed for MRC on real web data."
  }, {
    "heading": "Acknowledgments",
    "text": "This work is supported by the National Basic Research Program of China (973 program, No. 2014CB340505) and Baidu-Peking University Joint Project. We thank the Microsoft MSMARCO team for evaluating our results on the anonymous test set. We also thank Ying Chen, Xuan Liu and the anonymous reviewers for their constructive criticism of the manuscript."
  }],
  "year": 2018,
  "references": [{
    "title": "A thorough examination of the cnn/daily mail reading comprehension task",
    "authors": ["Danqi Chen", "Jason Bolton", "Christopher D. Manning."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, ACL 2016, Au-",
    "year": 2016
  }, {
    "title": "Searchqa: A new q&a dataset augmented with context from a search engine",
    "authors": ["Matthew Dunn", "Levent Sagun", "Mike Higgins", "V. Ugur Güney", "Volkan Cirik", "Kyunghyun Cho."],
    "venue": "arXiv preprint arXiv:1704.05179 .",
    "year": 2017
  }, {
    "title": "Dureader: a chinese machine reading comprehension dataset from real-world applications",
    "authors": ["Wei He", "Kai Liu", "Yajuan Lyu", "Shiqi Zhao", "Xinyan Xiao", "Yuan Liu", "Yizhong Wang", "Hua Wu", "Qiaoqiao She", "Xuan Liu", "Tian Wu", "Haifeng Wang."],
    "venue": "arXiv",
    "year": 2017
  }, {
    "title": "Teaching machines to read and comprehend",
    "authors": ["Karl Moritz Hermann", "Tomás Kociský", "Edward Grefenstette", "Lasse Espeholt", "Will Kay", "Mustafa Suleyman", "Phil Blunsom."],
    "venue": "Advances in Neural Information Processing Systems 28: Annual",
    "year": 2015
  }, {
    "title": "The goldilocks principle: Reading children’s books with explicit memory representations",
    "authors": ["Felix Hill", "Antoine Bordes", "Sumit Chopra", "Jason Weston."],
    "venue": "arXiv preprint arXiv:1511.02301 .",
    "year": 2015
  }, {
    "title": "Adversarial examples for evaluating reading comprehension systems",
    "authors": ["Robin Jia", "Percy Liang."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, EMNLP 2017, Copenhagen, Denmark, Septem-",
    "year": 2017
  }, {
    "title": "Triviaqa: A large scale distantly supervised challenge dataset for reading comprehension",
    "authors": ["Mandar Joshi", "Eunsol Choi", "Daniel Weld", "Luke Zettlemoyer."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics. vol-",
    "year": 2017
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Diederik P. Kingma", "Jimmy Ba."],
    "venue": "arXiv preprint arXiv:1412.6980 .",
    "year": 2014
  }, {
    "title": "Rouge: A package for automatic evaluation of summaries",
    "authors": ["Chin-Yew Lin."],
    "venue": "Text Summarization Branches Out .",
    "year": 2004
  }, {
    "title": "The stanford corenlp natural language processing toolkit",
    "authors": ["Christopher D. Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J. Bethard", "David McClosky."],
    "venue": "Association for Computational Linguistics (ACL) System Demonstrations.",
    "year": 2014
  }, {
    "title": "MS MARCO: A human generated machine reading comprehension dataset",
    "authors": ["Tri Nguyen", "Mir Rosenberg", "Xia Song", "Jianfeng Gao", "Saurabh Tiwary", "Rangan Majumder", "Li Deng."],
    "venue": "Proceedings of the Workshop on Cognitive Computation: Inte-",
    "year": 2016
  }, {
    "title": "Memen: Multi-layer embedding with memory networks for machine comprehension",
    "authors": ["Boyuan Pan", "Hao Li", "Zhou Zhao", "Bin Cao", "Deng Cai", "Xiaofei He."],
    "venue": "arXiv preprint arXiv:1707.09098 .",
    "year": 2017
  }, {
    "title": "Bleu: a method for automatic evaluation of machine translation",
    "authors": ["Kishore Papineni", "Salim Roukos", "Todd Ward", "WeiJing Zhu."],
    "venue": "Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics, July 6-12, 2002, Philadelphia,",
    "year": 2002
  }, {
    "title": "Glove: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning."],
    "venue": "Empirical Methods in Natural Language Processing (EMNLP). pages 1532– 1543.",
    "year": 2014
  }, {
    "title": "Squad: 100, 000+ questions for machine comprehension of text",
    "authors": ["Pranav Rajpurkar", "Jian Zhang", "Konstantin Lopyrev", "Percy Liang."],
    "venue": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, EMNLP 2016.",
    "year": 2016
  }, {
    "title": "An overview of multi-task learning in deep neural networks",
    "authors": ["Sebastian Ruder."],
    "venue": "arXiv preprint arXiv:1706.05098 .",
    "year": 2017
  }, {
    "title": "Bidirectional attention flow for machine comprehension",
    "authors": ["Min Joon Seo", "Aniruddha Kembhavi", "Ali Farhadi", "Hannaneh Hajishirzi."],
    "venue": "arXiv preprint arXiv:1611.01603 .",
    "year": 2016
  }, {
    "title": "Reasonet: Learning to stop reading in machine comprehension",
    "authors": ["Yelong Shen", "Po-Sen Huang", "Jianfeng Gao", "Weizhu Chen."],
    "venue": "Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, Hali-",
    "year": 2017
  }, {
    "title": "S-net: From answer extraction to answer generation for machine reading comprehension",
    "authors": ["Chuanqi Tan", "Furu Wei", "Nan Yang", "Weifeng Lv", "Ming Zhou."],
    "venue": "arXiv preprint arXiv:1706.04815 .",
    "year": 2017
  }, {
    "title": "Pointer networks",
    "authors": ["Oriol Vinyals", "Meire Fortunato", "Navdeep Jaitly."],
    "venue": "Advances in Neural Information Processing Systems 28: Annual Conference on Neural Information Processing Systems 2015, December 7-12, 2015, Montreal, Quebec,",
    "year": 2015
  }, {
    "title": "Machine comprehension using match-lstm and answer pointer",
    "authors": ["Shuohang Wang", "Jing Jiang."],
    "venue": "arXiv preprint arXiv:1608.07905 .",
    "year": 2016
  }, {
    "title": "R$ˆ3$: Reinforced reader-ranker for open-domain question answering",
    "authors": ["Shuohang Wang", "Mo Yu", "Xiaoxiao Guo", "Zhiguo Wang", "Tim Klinger", "Wei Zhang", "Shiyu Chang", "Gerald Tesauro", "Bowen Zhou", "Jing Jiang."],
    "venue": "arXiv preprint",
    "year": 2017
  }, {
    "title": "Evidence aggregation for answer re-ranking in open-domain question answering",
    "authors": ["Shuohang Wang", "Mo Yu", "Jing Jiang", "Wei Zhang", "Xiaoxiao Guo", "Shiyu Chang", "Zhiguo Wang", "Tim Klinger", "Gerald Tesauro", "Murray Campbell."],
    "venue": "arXiv preprint",
    "year": 2017
  }, {
    "title": "Gated self-matching networks for reading comprehension and question answering",
    "authors": ["Wenhui Wang", "Nan Yang", "Furu Wei", "Baobao Chang", "Ming Zhou."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational Linguis-",
    "year": 2017
  }, {
    "title": "Making neural QA as simple as possible but not simpler",
    "authors": ["Dirk Weissenborn", "Georg Wiese", "Laura Seiffe."],
    "venue": "Proceedings of the 21st Conference on Computational Natural Language Learning (CoNLL 2017), Vancouver, Canada, August 3-4,",
    "year": 2017
  }, {
    "title": "Dynamic coattention networks for question answering",
    "authors": ["Caiming Xiong", "Victor Zhong", "Richard Socher."],
    "venue": "arXiv preprint arXiv:1611.01604 .",
    "year": 2016
  }, {
    "title": "DCN+: mixed objective and deep residual coattention for question answering",
    "authors": ["Caiming Xiong", "Victor Zhong", "Richard Socher."],
    "venue": "arXiv preprint arXiv:1711.00106 .",
    "year": 2017
  }],
  "id": "SP:bc0e98903a017448247f4cfc9234e3f819e1b6ff",
  "authors": [{
    "name": "Yizhong Wang",
    "affiliations": []
  }, {
    "name": "Kai Liu",
    "affiliations": []
  }, {
    "name": "Jing Liu",
    "affiliations": []
  }, {
    "name": "Wei He",
    "affiliations": []
  }, {
    "name": "Yajuan Lyu",
    "affiliations": []
  }, {
    "name": "Hua Wu",
    "affiliations": []
  }, {
    "name": "Sujian Li",
    "affiliations": []
  }, {
    "name": "Haifeng Wang",
    "affiliations": []
  }],
  "abstractText": "Machine reading comprehension (MRC) on real web data usually requires the machine to answer a question by analyzing multiple passages retrieved by search engine. Compared with MRC on a single passage, multi-passage MRC is more challenging, since we are likely to get multiple confusing answer candidates from different passages. To address this problem, we propose an end-to-end neural model that enables those answer candidates from different passages to verify each other based on their content representations. Specifically, we jointly train three modules that can predict the final answer based on three factors: the answer boundary, the answer content and the cross-passage answer verification. The experimental results show that our method outperforms the baseline by a large margin and achieves the state-of-the-art performance on the English MS-MARCO dataset and the Chinese DuReader dataset, both of which are designed for MRC in real-world settings.",
  "title": "Multi-Passage Machine Reading Comprehension with Cross-Passage Answer Verification"
}