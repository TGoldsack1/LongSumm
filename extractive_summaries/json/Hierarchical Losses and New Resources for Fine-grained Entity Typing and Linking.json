{
  "sections": [{
    "text": "Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers), pages 97–109 Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics\n97"
  }, {
    "heading": "1 Introduction",
    "text": "Identifying and understanding entities is a central component in knowledge base construction (Roth et al., 2015) and essential for enhancing downstream tasks such as relation extraction\n*equal contribution Data and code for experiments: https://github.\ncom/MurtyShikhar/Hierarchical-Typing\n(Yaghoobzadeh et al., 2017b), question answering (Das et al., 2017; Welbl et al., 2017) and search (Dalton et al., 2014). This has led to considerable research in automatically identifying entities in text, predicting their types, and linking them to existing structured knowledge sources.\nCurrent state-of-the-art models encode a textual mention with a neural network and classify the mention as being an instance of a fine grained type or entity in a knowledge base. Although in many cases the types and their entities are arranged in a hierarchical ontology, most approaches ignore this structure, and previous attempts to incorporate hierarchical information yielded little improvement in performance (Shimaoka et al., 2017). Additionally, existing benchmark entity typing datasets only consider small label sets arranged in very shallow hierarchies. For example, FIGER (Ling and Weld, 2012), the de facto standard fine grained entity type dataset, contains only 113 types in a hierarchy only two levels deep.\nIn this paper we investigate models that explicitly integrate hierarchical information into the embedding space of entities and types, using a hierarchy-aware loss on top of a deep neural network classifier over textual mentions. By using this additional information, we learn a richer, more robust representation, gaining statistical efficiency when predicting similar concepts and aiding the classification of rarer types. We first validate our methods on the narrow, shallow type system of FIGER, out-performing state-of-the-art methods not incorporating hand-crafted features and matching those that do.\nTo evaluate on richer datasets and stimulate further research into hierarchical entity/typing prediction with larger and deeper ontologies, we introduce two new human annotated datasets. The first is MedMentions, a collection of PubMed ab-\nstracts in which 246k concept mentions have been annotated with links to the Unified Medical Language System (UMLS) ontology (Bodenreider, 2004), an order of magnitude more annotations than comparable datasets. UMLS contains over 3.5 million concepts in a hierarchy having average depth 14.4. Interestingly, UMLS does not distinguish between types and entities (an approach we heartily endorse), and the technical details of linking to such a massive ontology lead us to refer to our MedMentions experiments as entity linking. Second, we present TypeNet, a curated mapping from the Freebase type system into the WordNet hierarchy. TypeNet contains over 1900 types with an average depth of 7.8.\nIn experimental results, we show improvements with a hierarchically-aware training loss on each of the three datasets. In entity-linking MedMentions to UMLS, we observe a 6% relative increase in accuracy over the base model. In experiments on entity-typing from Wikipedia into TypeNet, we show that incorporating the hierarchy of types and including a hierarchical loss provides a dramatic 29% relative increase in MAP. Our models even provide benefits for shallow hierarchies allowing us to match the state-of-art results of Shimaoka et al. (2017) on the FIGER (GOLD) dataset without requiring hand-crafted features.\nWe will publicly release the TypeNet and MedMentions datasets to the community to encourage further research in truly fine-grained, hierarchical entity-typing and linking."
  }, {
    "heading": "2 New Corpora and Ontologies",
    "text": ""
  }, {
    "heading": "2.1 MedMentions",
    "text": "Over the years researchers have constructed many large knowledge bases in the biomedical domain (Apweiler et al., 2004; Davis et al., 2008; Chatraryamontri et al., 2017). Many of these knowledge bases are specific to a particular sub-domain encompassing a few particular types such as genes and diseases (Piñero et al., 2017).\nUMLS (Bodenreider, 2004) is particularly comprehensive, containing over 3.5 million concepts (UMLS does not distinguish between entities and types) defining their relationships and a curated hierarchical ontology. For example LETM1 Protein IS-A Calcium Binding Protein IS-A Binding Protein IS-A Protein IS-A Genome Encoded Entity. This fact makes UMLS particularly well suited for methods explicitly exploiting hierarchical struc-\nture. Accurately linking textual biological entity mentions to an existing knowledge base is extremely important but few richly annotated resources are available. Even when resources do exist, they often contain no more than a few thousand annotated entity mentions which is insufficient for training state-of-the-art neural network entity linkers. State-of-the-art methods must instead rely on string matching between entity mentions and canonical entity names (Leaman et al., 2013; Wei et al., 2015; Leaman and Lu, 2016). To address this, we constructed MedMentions, a new, large dataset identifying and linking entity mentions in PubMed abstracts to specific UMLS concepts. Professional annotators exhaustively annotated UMLS entity mentions from 3704 PubMed abstracts, resulting in 246,000 linked mention spans. The average depth in the hierarchy of a concept from our annotated set is 14.4 and the maximum depth is 43.\nMedMentions contains an order of magnitude more annotations than similar biological entity linking PubMed datasets (Doğan et al., 2014; Wei et al., 2015; Li et al., 2016). Additionally, these datasets contain annotations for only one or two entity types (genes or chemicals and disease etc.). MedMentions instead contains annotations for a wide diversity of entities linking to UMLS. Statistics for several other datasets are in Table 1 and further statistics are in 2."
  }, {
    "heading": "2.2 TypeNet",
    "text": "TypeNet is a new dataset of hierarchical entity types for extremely fine-grained entity typing. TypeNet was created by manually aligning Freebase types (Bollacker et al., 2008) to noun synsets from the WordNet hierarchy (Fellbaum, 1998), naturally producing a hierarchical type set.\nTo construct TypeNet, we first consider all Freebase types that were linked to more than 20 entities. This is done to eliminate types that are either very specific or very rare. We also remove all Freebase API types, e.g. the [/freebase, /dataworld, /schema, /atom, /scheme, and /topics] domains.\nFor each remaining Freebase type, we generate a list of candidate WordNet synsets through a substring match. An expert annotator then attempted to map the Freebase type to one or more synsets in the candidate list with a parent-of, child-of or equivalence link by comparing the definitions of each synset with example entities of the Freebase type. If no match was found, the annotator manually formulated queries for the online WordNet API until an appropriate synset was found. See Table 9 for an example annotation.\nTwo expert annotators independently aligned each Freebase type before meeting to resolve any conflicts. The annotators were conservative with assigning equivalence links resulting in a greater number of child-of links. The final dataset contained 13 parent-of, 727 child-of, and 380 equivalence links. Note that some Freebase types have multiple child-of links to WordNet, making TypeNet, like WordNet, a directed acyclic graph. We then took the union of each of our annotated Freebase types, the synset that they linked to, and any ancestors of that synset.\nWe also added an additional set of 614 FB → FB links 4. This was done by computing conditional probabilities of Freebase types given other Freebase types from a collection of 5 million randomly chosen Freebase entities. The conditional probability P(t2 | t1) of a Freebase type t2 given another Freebase type t1 was calculated as #(t1,t2)#t1 . Links with a conditional probability less than or equal to 0.7 were discarded. The remaining links were manually verified by an expert annotator and valid links were added to the final dataset, preserving acyclicity."
  }, {
    "heading": "3 Model",
    "text": ""
  }, {
    "heading": "3.1 Background: Entity Typing and Linking",
    "text": "We define a textual mention m as a sentence with an identified entity. The goal is then to classify m with one or more labels. For example, we could take the sentence m = “Barack Obama is the President of the United States.” with the identified entity string Barack Obama. In the task of entity linking, we want to map m to a specific entity in a knowledge base such as “m/02mjmr” in Freebase. In mention-level typing, we label m with one or more types from our type system T such as tm = {president, leader, politician} (Ling and Weld, 2012; Gillick et al., 2014; Shimaoka et al., 2017). In entity-level typing, we instead consider a bag of mentions Be which are all linked to the same entity. We label Be with te, the set of all types expressed in all m ∈ Be (Yao et al., 2013; Neelakantan and Chang, 2015; Verga et al., 2017; Yaghoobzadeh et al., 2017a)."
  }, {
    "heading": "3.2 Mention Encoder",
    "text": "Our model converts each mention m to a d dimensional vector. This vector is used to classify the type or entity of the mention. The basic model depicted in Figure 1 concatenates the averaged word embeddings of the mention string with the output of a convolutional neural network (CNN). The\nword embeddings of the mention string capture global, context independent semantics while the CNN encodes a context dependent representation."
  }, {
    "heading": "3.2.1 Token Representation",
    "text": "Each sentence is made up of s tokens which are mapped to dw dimensional word embeddings. Because sentences may contain mentions of more than one entity, we explicitly encode a distinguished mention in the text using position embeddings which have been shown to be useful in state of the art relation extraction models (dos Santos et al., 2015; Lin et al., 2016) and machine translation (Vaswani et al., 2017). Each word embedding is concatenated with a dp dimensional learned position embedding encoding the token’s relative distance to the target entity. Each token within the distinguished mention span has position 0, tokens to the left have a negative distance from [−s, 0), and tokens to the right of the mention span have a positive distance from (0, s]. We denote the final sequence of token representations as M ."
  }, {
    "heading": "3.2.2 Sentence Representation",
    "text": "The embedded sequence M is then fed into our context encoder. Our context encoder is a single layer CNN followed by a tanh non-linearity to produce C. The outputs are max pooled across\ntime to get a final context embedding, mCNN.\nci = tanh(b+ w∑\nj=0\nW [j]M [i− bw 2 c+ j])\nmCNN = max 0≤i≤n−w+1 ci\nEach W [j] ∈ Rd×d is a CNN filter, the bias b ∈ Rd, M [i] ∈ Rd is a token representation, and the max is taken pointwise. In all of our experiments we set w = 5.\nIn addition to the contextually encoded mention, we create a global mention encoding, mG, by averaging the word embeddings of the tokens within the mention span.\nThe final mention representation mF is constructed by concatenating mCNN and mG and applying a two layer feed-forward network with tanh non-linearity (see Figure 1):\nmF = W2 tanh(W1 [ mSFM mCNN ] + b1) + b2"
  }, {
    "heading": "4 Training",
    "text": ""
  }, {
    "heading": "4.1 Mention-Level Typing",
    "text": "Mention level entity typing is treated as multilabel prediction. Given the sentence vector mF, we compute a score for each type in typeset T as:\nyj = tj >mF\nwhere tj is the embedding for the jth type in T and yj is its corresponding score. The mention is labeled with tm, a binary vector of all types where tmj = 1 if the j\nth type is in the set of gold types for m and 0 otherwise. We optimize a multi-label binary cross entropy objective:\nLtype(m) = − ∑ j tmj log yj + (1− tmj ) log(1− yj)"
  }, {
    "heading": "4.2 Entity-Level Typing",
    "text": "In the absence of mention-level annotations, we instead must rely on distant supervision (Mintz et al., 2009) to noisily label all mentions of entity e with all types belonging to e. This procedure inevitably leads to noise as not all mentions of an entity express each of its known types. To alleviate this noise, we use multi-instance multi-label learning (MIML) (Surdeanu et al., 2012) which operates over bags rather than mentions. A bag of mentions Be = {m1,m2, . . . ,mn} is the set of\nall mentions belonging to entity e. The bag is labeled with te, a binary vector of all types where tej = 1 if the j\nth type is in the set of gold types for e and 0 otherwise.\nFor every entity, we subsample k mentions from its bag of mentions. Each mention is then encoded independently using the model described in Section 3.2 resulting in a bag of vectors. Each of the k sentence vectors miF is used to compute a score for each type in te:\nyij = tj >miF\nwhere tj is the embedding for the jth type in te and yi is a vector of logits corresponding to the ith mention. The final bag predictions are obtained using element-wise LogSumExp pooling across the k logit vectors in the bag to produce entity level logits y:\ny = log ∑ i exp(yi)\nWe use these final bag level predictions to optimize a multi-label binary cross entropy objective:\nLtype(Be) = − ∑ j tej log yj + (1− tej) log(1− yj)"
  }, {
    "heading": "4.3 Entity Linking",
    "text": "Entity linking is similar to mention-level entity typing with a single correct class per mention. Because the set of possible entities is in the millions, linking models typically integrate an alias table mapping entity mentions to a set of possible candidate entities. Given a large corpus of entity linked data, one can compute conditional probabilities from mention strings to entities (Spitkovsky and Chang, 2012). In many scenarios this data is unavailable. However, knowledge bases such as UMLS contain a canonical string name for each of its curated entities. State-of-the-art biological entity linking systems tend to operate on various string edit metrics between the entity mention string and the set of canonical entity strings in the existing structured knowledge base (Leaman et al., 2013; Wei et al., 2015).\nFor each mention in our dataset, we generate 100 candidate entities ec = (e1, e2, . . . , e100) each with an associated string similarity score csim. See Appendix A.5.1 for more details on candidate generation. We generate the sentence representation mF using our encoder and compute a similarity score between mF and the learned embedding\ne of each of the candidate entities. This score and string cosine similarity csim are combined via a learned linear combination to generate our final score. The final prediction at test time ê is the maximally similar entity to the mention.\nφ(m, e) = α e>mF + β csim(m, e)\nê = argmax e∈ec φ(m, e)\nWe optimize this model by multinomial cross entropy over the set of candidate entities and correct entity e.\nLlink(m, ec) = − φ(m, e) + log ∑ e′∈ec expφ(m, e′)"
  }, {
    "heading": "5 Encoding Hierarchies",
    "text": "Both entity typing and entity linking treat the label space as prediction into a flat set. To explicitly incorporate the structure between types/entities into our training, we add an additional loss. We consider two methods for modeling the hierarchy of the embedding space: real and complex bilinear maps, which are two of the state-of-the-art knowledge graph embedding models."
  }, {
    "heading": "5.1 Hierarchical Structure Models",
    "text": "Bilinear: Our standard bilinear model scores a hypernym link between (c1, c2) as:\ns(c1, c2) = c1 >Ac2\nwhere A ∈ Rd×d is a learned real-valued nondiagonal matrix and c1 is the child of c2 in the hierarchy. This model is equivalent to RESCAL (Nickel et al., 2011) with a single IS-A relation type. The type embeddings are the same whether used on the left or right side of the relation. We merge this with the base model by using the parameter A as an additional map before type/entity scoring. Complex Bilinear: We also experiment with a complex bilinear map based on the ComplEx model (Trouillon et al., 2016), which was shown to have strong performance predicting the hypernym relation in WordNet, suggesting suitability for asymmetric, transitive relations such as those in our type hierarchy. ComplEx uses complex valued vectors for types, and diagonal complex matrices for relations, using Hermitian inner products (taking the complex conjugate of the second argument, equivalent to treating the right-hand-side\ntype embedding to be the complex conjugate of the left hand side), and finally taking the real part of the score1. The score of a hypernym link between (c1, c2) in the ComplEx model is defined as:\ns(c1, c2) = Re(< c1, rIS-A, c2 >) = Re( ∑ k c1krk c̄2k)\n= 〈Re(c1),Re(rIS-A),Re(c2)〉 + 〈Re(c1), Im(rIS-A), Im(c2)〉 + 〈Im(c1),Re(rIS-A), Im(c2)〉 − 〈Im(c1), Im(rIS-A),Re(c2)〉\nwhere c1, c2 and rIS-A are complex valued vectors representing c1, c2 and the IS-A relation respectively. Re(z) represents the real component of z and Im(z) is the imaginary component. As noted in Trouillon et al. (2016), the above function is antisymmetric when rIS-A is purely imaginary.\nSince entity/type embeddings are complex vectors, in order to combine it with our base model, we also need to represent mentions with complex vectors for scoring. To do this, we pass the output of the mention encoder through two different affine transformations to generate a real and imaginary component:\nRe(mF) = WrealmF + breal Im(mF) = WimgmF + bimg\nwhere mF is the output of the mention encoder, and Wreal, Wimg ∈ Rd×d and breal, bimg ∈ Rd ."
  }, {
    "heading": "5.2 Training with Hierarchies",
    "text": "Learning a hierarchy is analogous to learning embeddings for nodes of a knowledge graph with a single hypernym/IS-A relation. To train these embeddings, we sample (c1, c2) pairs, where each pair is a positive link in our hierarchy. For each positive link, we sample a set N of n negative links. We encourage the model to output high scores for positive links, and low scores for negative links via a binary cross entropy (BCE) loss:\nLstruct = − log σ(s(c1i, c2i)) + ∑ N log(1− σ(s(c1i, c′2i)))\nL = Ltype/link + γLstruct 1This step makes the scoring function technically not bilinear, as it commutes with addition but not complex multiplication, but we term it bilinear for ease of exposition.\nwhere s(c1, c2) is the score of a link (c1, c2), and σ(·) is the logistic sigmoid. The weighting parameter γ is ∈ {0.1, 0.5, 0.8, 1, 2.0, 4.0}. The final loss function that we optimize is L."
  }, {
    "heading": "6 Experiments",
    "text": "We perform three sets of experiments: mentionlevel entity typing on the benchmark dataset FIGER, entity-level typing using Wikipedia and TypeNet, and entity linking using MedMentions."
  }, {
    "heading": "6.1 Models",
    "text": "CNN: Each mention is encoded using the model described in Section 3.2. The resulting embedding is used for classification into a flat set labels. Specific implementation details can be found in Appendix A.2. CNN+Complex: The CNN+Complex model is equivalent to the CNN model but uses complex embeddings and Hermitian dot products. Transitive: This model does not add an additional hierarchical loss to the training objective (unless otherwise stated). We add additional labels to each entity corresponding to the transitive closure, or the union of all ancestors of its known types. This provides a rich additional learning signal that greatly improves classification of specific types. Hierarchy: These models add an explicit hierarchical loss to the training objective, as described in Section 5, using either complex or real-valued bilinear mappings, and the associated parameter sharing."
  }, {
    "heading": "6.2 Mention-Level Typing in FIGER",
    "text": "To evaluate the efficacy of our methods we first compare against the current state-of-art models of Shimaoka et al. (2017). The most widely used type system for fine-grained entity typing is FIGER which consists of 113 types organized in a 2 level hierarchy. For training, we use the publicly available W2M data (Ren et al., 2016) and optimize the mention typing loss function defined in Section4.1 with the additional hierarchical loss where specified. For evaluation, we use the manually annotated FIGER (GOLD) data by Ling and Weld (2012). See Appendix A.2 and A.3 for specific implementation details."
  }, {
    "heading": "6.2.1 Results",
    "text": "In Table 5 we see that our base CNN models (CNN and CNN+Complex) match LSTM models of Shimaoka et al. (2017) and Gupta et al. (2017), the\nprevious state-of-the-art for models without handcrafted features. When incorporating structure into our models, we gain 2.5 points of accuracy in our CNN+Complex model, matching the overall state of the art attentive LSTM that relied on handcrafted features from syntactic parses, topic models, and character n-grams. The structure can help our model predict lower frequency types which is a similar role played by hand-crafted features."
  }, {
    "heading": "6.3 Entity-Level Typing in TypeNet",
    "text": "Next we evaluate our models on entity-level typing in TypeNet using Wikipedia. For each entity, we follow the procedure outlined in Section 4.2. We predict labels for each instance in the entity’s bag and aggregate them into entity-level predictions using LogSumExp pooling. Each type is assigned a predicted score by the model. We then rank these scores and calculate average precision for each of the types in the test set, and use these scores to calculate mean average precision (MAP). We evaluate using MAP instead of accuracy which is standard in large knowledge base link prediction tasks (Verga et al., 2017; Trouillon et al., 2016). These scores are calculated only over Freebase types, which tend to be lower in the hierarchy. This is to avoid artificial score inflation caused by trivial predictions such as ‘entity.’ See Appendix A.4 for more implementation details."
  }, {
    "heading": "6.3.1 Results",
    "text": "Table 6 shows the results for entity level typing on our Wikipedia TypeNet dataset. We see that both the basic CNN and the CNN+Complex models perform similarly with the CNN+Complex model doing slightly better on the full data regime. We also see that both models get an improvement when adding an explicit hierarchy loss, even before adding in the transitive closure. The transitive closure itself gives an additional increase\nin performance to both models. In both of these cases, the basic CNN model improves by a greater amount than CNN+Complex. This could be a result of the complex embeddings being more difficult to optimize and therefore more susceptible to variations in hyperparameters. When adding in both the transitive closure and the explicit hierarchy loss, the performance improves further. We observe similar trends when training our models in a lower data regime with ~150,000 examples, or about 5% of the total data.\nIn all cases, we note that the baseline models that do not incorporate any hierarchical information (neither the transitive closure nor the hierarchy loss) perform ~9 MAP worse, demonstrating the benefits of incorporating structure information."
  }, {
    "heading": "6.4 MedMentions Entity Linking with UMLS",
    "text": "In addition to entity typing, we evaluate our model’s performance on an entity linking task using MedMentions, our new PubMed / UMLS dataset described in Section 2.1."
  }, {
    "heading": "6.4.1 Results",
    "text": "Table 7 shows results for baselines and our proposed variant with additional hierarchical loss. None of these models incorporate transitive clo-\nsure information, due to difficulty incorporating it in our candidate generation, which we leave to future work. The Normalized metric considers performance only on mentions with an alias table hit; all models have 0 accuracy for mentions otherwise. We also report the overall score for comparison in future work with improved candidate generation. We see that incorporating structure information results in a 1.1% reduction in absolute error, corresponding to a ~6% reduction in relative error on this large-scale dataset.\nTable 8 shows qualitative predictions for models with and without hierarchy information incorporated. Each example contains the sentence (with target entity in bold), predictions for the baseline and hierarchy aware models, and the ancestors of the predicted entity. In the first and second example, the baseline model becomes extremely dependent on TFIDF string similarities when the gold candidate is rare (≤ 10 occurrences). This shows that modeling the structure of the entity hierarchy helps the model disambiguate rare entities. In the third example, structure helps the model understand the hierarchical nature of the labels and prevents it from predicting an entity that is overly specific (e.g predicting Interleukin-27 rather than the correct and more general entity IL2 Gene).\nNote that, in contrast with the previous tasks, the complex hierarchical loss provides a significant boost, while the real-valued bilinear model does not. A possible explanation is that UMLS is a far larger/deeper ontology than even TypeNet, and the additional ability of complex embeddings to model intricate graph structure is key to realizing gains from hierarchical modeling."
  }, {
    "heading": "7 Related Work",
    "text": "By directly linking a large set of mentions and typing a large set of entities with respect to a new ontology and corpus, and our incorporation of structural learning between the many entities and types in our ontologies of interest, our work draws on many different but complementary threads of research in information extraction, knowledge base population, and completion.\nOur structural, hierarchy-aware loss between types and entities draws on research in Knowledge Base Inference such as Jain et al. (2018), Trouillon et al. (2016) and Nickel et al. (2011). Combining KB completion with hierarchical structure in knowledge bases has been explored in (Dalvi et al., 2015; Xie et al., 2016). Recently, Wu et al. (2017) proposed a hierarchical loss for text classification.\nLinking mentions to a flat set of entities, often in Freebase or Wikipedia, is a long-standing task in NLP (Bunescu and Pasca, 2006; Cucerzan, 2007; Durrett and Klein, 2014; Francis-Landau et al., 2016). Typing of mentions at varying levels of granularity, from CoNLL-style named entity recognition (Tjong Kim Sang and De Meulder, 2003), to the more fine-grained recent approaches (Ling and Weld, 2012; Gillick et al., 2014; Shimaoka et al., 2017), is also related to our task. A few prior attempts to incorporate a very shallow hierarchy into fine-grained entity typing have not lead to significant or consistent improvements (Gillick et al., 2014; Shimaoka et al., 2017).\nThe knowledge base Yago (Suchanek et al., 2007) includes integration with WordNet and type hierarchies have been derived from its type system (Yosef et al., 2012). Del Corro et al. (2015) use manually crafted rules and patterns (Hearst patterns (Hearst, 1992), appositives, etc) to automati-\ncally match entity types to Wordnet synsets. Recent work has moved towards unifying these two highly related tasks by improving entity linking by simultaneously learning a fine grained entity type predictor (Gupta et al., 2017). Learning hierarchical structures or transitive relations between concepts has been the subject of much recent work (Vilnis and McCallum, 2015; Vendrov et al., 2016; Nickel and Kiela, 2017)\nWe draw inspiration from all of this prior work, and contribute datasets and models to address previous challenges in jointly modeling the structure of large-scale hierarchical ontologies and mapping textual mentions into an extremely fine-grained space of entities and types."
  }, {
    "heading": "8 Conclusion",
    "text": "We demonstrate that explicitly incorporating and modeling hierarchical information leads to increased performance in experiments on entity typing and linking across three challenging datasets. Additionally, we introduce two new humanannotated datasets: MedMentions, a corpus of 246k mentions from PubMed abstracts linked to the UMLS knowledge base, and TypeNet, a new hierarchical fine-grained entity typeset an order of magnitude larger and deeper than previous datasets.\nWhile this work already demonstrates considerable improvement over non-hierarchical modeling, future work will explore techniques such as Box embeddings (Vilnis et al., 2018) and Poincaré embeddings (Nickel and Kiela, 2017) to represent the hierarchical embedding space, as well as methods to improve recall in the candidate generation process for entity linking. Most of all, we are excited to see new techniques from the NLP community using the resources we have presented."
  }, {
    "heading": "9 Acknowledgements",
    "text": "We thank Nicholas Monath, Haw-Shiuan Chang and Emma Strubell for helpful comments on early drafts of the paper. Creation of the MedMentions corpus is supported and managed by the Meta team at the Chan Zuckerberg Initiative. A pre-release of the dataset is available at http://github.com/chanzuckerberg/ MedMentions. This work was supported in part by the Center for Intelligent Information Retrieval and the Center for Data Science, in part by the Chan Zuckerberg Initiative under the project\nScientific Knowledge Base Construction., and in part by the National Science Foundation under Grant No. IIS-1514053. Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect those of the sponsor."
  }, {
    "heading": "A Supplementary Materials",
    "text": "A.1 TypeNet Construction\nA.2 Model Implementation Details For all of our experiments, we use pretrained 300 dimensional word vectors from Pennington et al. (2014). These embeddings are fixed during training. The type vectors and entity vectors are all 300 dimensional vectors initialized using Glorot initialization (Glorot and Bengio, 2010). The number of negative links for hierarchical training n ∈ {16, 32, 64, 128, 256}.\nFor regularization, we use dropout (Srivastava et al., 2014) with p ∈ {0.5, 0.75, 0.8} on the sentence encoder output and L2 regularize all learned parameters with λ ∈ {1e-5, 5e-5, 1e-4}. All our parameters are optimized using Adam (Kingma and Ba, 2014) with a learning rate of 0.001. We tune our hyper-parameters via grid search and early stopping on the development set.\nA.3 FIGER Implementation Details To train our models, we use the mention typing loss function defined in Section-5. For models with structure training, we additionally add in the hierarchical loss, along with a weight that is obtained by tuning on the dev set. We follow the same inference time procedure as Shimaoka et al. (2017) For each mention, we first assign the type with the largest probability according to the logits, and then assign additional types based on the condition that their corresponding probability be greater than 0.5.\nA.4 Wikipedia Data and Implementation Details\nAt train time, each training example randomly samples an entity bag of 10 mentions. At test time we classify bags of 20 mentions of an entity. The dataset contains a total of 344,246 entities mapped to the 1081 Freebase types from TypeNet. We consider all sentences in Wikipedia between 10 and 50 tokens long. Tokenization and sentence splitting was performed using NLTK (Loper and Bird, 2002). From these sentences, we considered all entities annotated with a cross-link in Wikipedia that we could link to Freebase and assign types in TypeNet. We then split the data by entities into a 90-5-5 train, dev, test split.\nA.5 UMLS Implementation details We pre-process each string by lowercasing and removing stop words. We consider ngrams from size 1 to 5 and keep the top 100,000 features and the final vectors are L2 normalized. For each mention, In our experiments we consider the top 100 most similar entities as the candidate set.\nA.5.1 Candidate Generation Details Each mention and each canonical entity string in UMLS are mapped to TFIDF character ngram vectors. We pre-process each string by lowercasing and removing stop words. We consider ngrams from size 1 to 5 and keep the top 100,000 features and the final vectors are L2 normalized. For each mention, we calculate the cosine similarity, csim, between the mention string and each canonical entity string. In our experiments we consider the top 100 most similar entities as the candidate set."
  }],
  "year": 2018,
  "references": [{
    "title": "Uniprot: the universal protein knowledgebase",
    "authors": ["Rolf Apweiler", "Amos Bairoch", "Cathy H Wu", "Winona C Barker", "Brigitte Boeckmann", "Serenella Ferro", "Elisabeth Gasteiger", "Hongzhan Huang", "Rodrigo Lopez", "Michele Magrane"],
    "venue": "Nucleic acids research,",
    "year": 2004
  }, {
    "title": "The unified medical language system (umls): integrating biomedical terminology",
    "authors": ["Olivier Bodenreider."],
    "venue": "Nucleic acids research, 32(suppl 1):D267– D270.",
    "year": 2004
  }, {
    "title": "Freebase: a collaboratively created graph database for structuring human knowledge",
    "authors": ["Kurt Bollacker", "Colin Evans", "Praveen Paritosh", "Tim Sturge", "Jamie Taylor."],
    "venue": "Proceedings of the 2008 ACM SIGMOD international conference on Management",
    "year": 2008
  }, {
    "title": "Using encyclopedic knowledge for named entity disambiguation",
    "authors": ["Razvan C Bunescu", "Marius Pasca."],
    "venue": "Eacl, volume 6, pages 9–16.",
    "year": 2006
  }, {
    "title": "The biogrid interaction",
    "authors": ["Andrew Chatr-aryamontri", "Rose Oughtred", "Lorrie Boucher", "Jennifer Rust", "Christie Chang", "Nadine K Kolas", "Lara O’Donnell", "Sara Oster", "Chandra Theesfeld", "Adnane Sellam"],
    "year": 2017
  }, {
    "title": "Large-scale named entity disambiguation based on wikipedia data",
    "authors": ["Silviu Cucerzan."],
    "venue": "Proceedings of the 2007 joint conference on empirical methods in natural language processing and computational natural language learning (EMNLP-CoNLL).",
    "year": 2007
  }, {
    "title": "Entity query feature expansion using knowledge base links",
    "authors": ["Jeffrey Dalton", "Laura Dietz", "James Allan."],
    "venue": "Proceedings of the 37th international ACM SIGIR conference on Research & development in information retrieval, pages 365–374. ACM.",
    "year": 2014
  }, {
    "title": "Automatic gloss finding for a knowledge base using ontological constraints",
    "authors": ["Bhavana Dalvi", "Einat Minkov", "Partha P Talukdar", "William W Cohen."],
    "venue": "Proceedings of the Eighth ACM International Conference on Web Search and Data Mining, pages",
    "year": 2015
  }, {
    "title": "Question answering on knowledge bases and text using universal schema and memory networks",
    "authors": ["Rajarshi Das", "Manzil Zaheer", "Siva Reddy", "Andrew McCallum."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Computational",
    "year": 2017
  }, {
    "title": "Comparative toxicogenomics database: a knowledgebase and discovery tool for chemical",
    "authors": ["Allan Peter Davis", "Cynthia G Murphy", "Cynthia A Saraceni-Richards", "Michael C Rosenstein", "Thomas C Wiegers", "Carolyn J Mattingly"],
    "year": 2008
  }, {
    "title": "Finet: Context-aware fine-grained named entity typing",
    "authors": ["Luciano Del Corro", "Abdalghani Abujabal", "Rainer Gemulla", "Gerhard Weikum."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP).",
    "year": 2015
  }, {
    "title": "Ncbi disease corpus: a resource for disease name recognition and concept normalization",
    "authors": ["Rezarta Islamaj Doğan", "Robert Leaman", "Zhiyong Lu."],
    "venue": "Journal of biomedical informatics, 47:1–10.",
    "year": 2014
  }, {
    "title": "A joint model for entity analysis: Coreference, typing, and linking",
    "authors": ["Greg Durrett", "Dan Klein."],
    "venue": "Transactions of the Association for Computational Linguistics, 2:477–490.",
    "year": 2014
  }, {
    "title": "WordNet",
    "authors": ["Christiane Fellbaum."],
    "venue": "Wiley Online Library.",
    "year": 1998
  }, {
    "title": "Capturing semantic similarity for entity linking with convolutional neural networks",
    "authors": ["Matthew Francis-Landau", "Greg Durrett", "Dan Klein."],
    "venue": "Proceedings of NAACL-HLT, pages 1256–1261.",
    "year": 2016
  }, {
    "title": "Contextdependent fine-grained entity type tagging",
    "authors": ["Dan Gillick", "Nevena Lazic", "Kuzman Ganchev", "Jesse Kirchner", "David Huynh."],
    "venue": "CoRR, abs/1412.1820.",
    "year": 2014
  }, {
    "title": "Understanding the difficulty of training deep feedforward neural networks",
    "authors": ["Xavier Glorot", "Yoshua Bengio."],
    "venue": "Proceedings of the International Conference on Artificial Intelligence and Statistics (AISTATS).",
    "year": 2010
  }, {
    "title": "Entity linking via joint encoding of types, descriptions, and context",
    "authors": ["Nitish Gupta", "Sameer Singh", "Dan Roth."],
    "venue": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 2671–2680, Copenhagen, Denmark.",
    "year": 2017
  }, {
    "title": "Automatic acquisition of hyponyms from large text corpora",
    "authors": ["Marti A Hearst."],
    "venue": "Proceedings of the International Conference on Computational Linguistics (COLING).",
    "year": 1992
  }, {
    "title": "Mitigating the effect of out-ofvocabulary entity pairs in matrix factorization for knowledge base inference",
    "authors": ["Prachi Jain", "Shikhar Murty", "Mausam", "Soumen Chakrabarti."],
    "venue": "The 27th International Joint Conference on Artificial Intelligence (IJ-",
    "year": 2018
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Diederik P. Kingma", "Jimmy Ba."],
    "venue": "CoRR, abs/1412.6980.",
    "year": 2014
  }, {
    "title": "Dnorm: disease name normalization with pairwise learning to rank",
    "authors": ["Robert Leaman", "Rezarta Islamaj Doğan", "Zhiyong Lu."],
    "venue": "Bioinformatics, 29(22):2909–2917.",
    "year": 2013
  }, {
    "title": "Taggerone: joint named entity recognition and normalization with semi-markov models",
    "authors": ["Robert Leaman", "Zhiyong Lu."],
    "venue": "Bioinformatics, 32(18):2839–2846.",
    "year": 2016
  }, {
    "title": "Biocreative v cdr task corpus: a resource for chemical disease relation extraction",
    "authors": ["Jiao Li", "Yueping Sun", "Robin J Johnson", "Daniela Sciaky", "Chih-Hsuan Wei", "Robert Leaman", "Allan Peter Davis", "Carolyn J Mattingly", "Thomas C Wiegers", "Zhiyong Lu"],
    "year": 2016
  }, {
    "title": "Neural relation extraction with selective attention over instances",
    "authors": ["Yankai Lin", "Shiqi Shen", "Zhiyuan Liu", "Huanbo Luan", "Maosong Sun."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Pa-",
    "year": 2016
  }, {
    "title": "Fine-grained entity recognition",
    "authors": ["Xiao Ling", "Daniel S Weld."],
    "venue": "Twenty-Sixth AAAI Conference on Artificial Intelligence.",
    "year": 2012
  }, {
    "title": "Nltk: The natural language toolkit",
    "authors": ["Edward Loper", "Steven Bird."],
    "venue": "Proceedings of the ACL-02 Workshop on Effective tools and methodologies for teaching natural language processing and computational linguistics-Volume 1, pages 63–70. Associa-",
    "year": 2002
  }, {
    "title": "Distant supervision for relation extraction without labeled data",
    "authors": ["Mike Mintz", "Steven Bills", "Rion Snow", "Daniel Jurafsky."],
    "venue": "Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference",
    "year": 2009
  }, {
    "title": "Inferring missing entity type instances for knowledge base completion: New dataset and methods",
    "authors": ["Arvind Neelakantan", "Ming-Wei Chang."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational",
    "year": 2015
  }, {
    "title": "Poincar\\’e embeddings for learning hierarchical representations",
    "authors": ["Maximilian Nickel", "Douwe Kiela."],
    "venue": "arXiv preprint arXiv:1705.08039.",
    "year": 2017
  }, {
    "title": "A three-way model for collective learning on multi-relational data",
    "authors": ["Maximilian Nickel", "Volker Tresp", "Hans-Peter Kriegel."],
    "venue": "Proceedings of the International Conference on Machine Learning (ICML).",
    "year": 2011
  }, {
    "title": "Glove: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D. Manning."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing (EMNLP).",
    "year": 2014
  }, {
    "title": "Disgenet: a comprehensive platform integrating information on human disease",
    "authors": ["Janet Piñero", "Àlex Bravo", "Núria Queralt-Rosinach", "Alba Gutiérrez-Sacristán", "Jordi Deu-Pons", "Emilio Centeno", "Javier Garcı́a-Garcı́a", "Ferran Sanz", "Laura I Furlong"],
    "year": 2017
  }, {
    "title": "Label noise reduction in entity typing by heterogeneous partial-label embedding",
    "authors": ["Xiang Ren", "Wenqi He", "Meng Qu", "Clare R. Voss", "Heng Ji", "Jiawei Han."],
    "venue": "Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery",
    "year": 2016
  }, {
    "title": "Building knowledge bases with universal schema: Cold start and slot-filling approaches",
    "authors": ["Benjamin Roth", "Nicholas Monath", "David Belanger", "Emma Strubell", "Patrick Verga", "Andrew McCallum"],
    "year": 2015
  }, {
    "title": "Classifying relations by ranking with convolutional neural networks",
    "authors": ["Cı́cero Nogueira dos Santos", "Bing Xiang", "Bowen Zhou"],
    "venue": "In Proceedings of the Annual Meeting of the Association for Computational Linguistics and the 7th International Joint",
    "year": 2015
  }, {
    "title": "Neural architectures for fine-grained entity type classification",
    "authors": ["Sonse Shimaoka", "Pontus Stenetorp", "Kentaro Inui", "Sebastian Riedel."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics:",
    "year": 2017
  }, {
    "title": "A cross-lingual dictionary for english wikipedia",
    "authors": ["Valentin I Spitkovsky", "Angel X Chang"],
    "year": 2012
  }, {
    "title": "Dropout: a simple way to prevent neural networks from overfitting",
    "authors": ["Nitish Srivastava", "Geoffrey E. Hinton", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan Salakhutdinov."],
    "venue": "Journal of Machine Learning Research.",
    "year": 2014
  }, {
    "title": "Yago: a core of semantic knowledge",
    "authors": ["Fabian M. Suchanek", "Gjergji Kasneci", "Gerhard Weikum."],
    "venue": "Proceedings of the International Conference on World Wide Web (WWW).",
    "year": 2007
  }, {
    "title": "Multi-instance multi-label learning for relation extraction",
    "authors": ["Mihai Surdeanu", "Julie Tibshirani", "Ramesh Nallapati", "Christopher D Manning."],
    "venue": "Proceedings of the 2012 joint conference on empirical methods in natural language processing and compu-",
    "year": 2012
  }, {
    "title": "Introduction to the conll-2003 shared task: Language-independent named entity recognition",
    "authors": ["Erik F Tjong Kim Sang", "Fien De Meulder."],
    "venue": "Proceedings of the seventh conference on Natural language learning at HLT-NAACL 2003-Volume 4,",
    "year": 2003
  }, {
    "title": "Complex embeddings for simple link prediction",
    "authors": ["Théo Trouillon", "Johannes Welbl", "Sebastian Riedel", "Éric Gaussier", "Guillaume Bouchard."],
    "venue": "Proceedings of the International Conference on Machine Learning (ICML).",
    "year": 2016
  }, {
    "title": "Attention is all you need",
    "authors": ["Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N. Gomez", "Lukasz Kaiser", "Illia Polosukhin."],
    "venue": "Conference on Advances in Neural Information Processing (NIPS).",
    "year": 2017
  }, {
    "title": "Order-embeddings of images and language",
    "authors": ["Ivan Vendrov", "Ryan Kiros", "Sanja Fidler", "Raquel Urtasun."],
    "venue": "ICLR.",
    "year": 2016
  }, {
    "title": "Generalizing to unseen entities and entity pairs with row-less universal schema",
    "authors": ["Patrick Verga", "Arvind Neelakantan", "Andrew McCallum."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association for Computational Lin-",
    "year": 2017
  }, {
    "title": "Probabilistic embedding of knowledge graphs with box lattice measures",
    "authors": ["Luke Vilnis", "Xiang Li", "Shikhar Murty", "Andrew McCallum."],
    "venue": "The 56th Annual Meeting of the Association for Computational Linguistics (ACL), Melbourne, Australia.",
    "year": 2018
  }, {
    "title": "Word representations via gaussian embedding",
    "authors": ["Luke Vilnis", "Andrew McCallum."],
    "venue": "ICLR.",
    "year": 2015
  }, {
    "title": "Gnormplus: an integrative approach for tagging genes, gene families, and protein domains",
    "authors": ["Chih-Hsuan Wei", "Hung-Yu Kao", "Zhiyong Lu."],
    "venue": "BioMed research international, 2015.",
    "year": 2015
  }, {
    "title": "Constructing datasets for multi-hop reading comprehension across documents",
    "authors": ["Johannes Welbl", "Pontus Stenetorp", "Sebastian Riedel."],
    "venue": "arXiv preprint arXiv:1710.06481.",
    "year": 2017
  }, {
    "title": "Hierarchical loss for classification",
    "authors": ["Cinna Wu", "Mark Tygert", "Yann LeCun."],
    "venue": "CoRR, abs/1709.01062.",
    "year": 2017
  }, {
    "title": "Representation learning of knowledge graphs with hierarchical types",
    "authors": ["Ruobing Xie", "Zhiyuan Liu", "Maosong Sun."],
    "venue": "IJCAI, pages 2965–2971.",
    "year": 2016
  }, {
    "title": "Corpus-level fine-grained entity typing",
    "authors": ["Yadollah Yaghoobzadeh", "Heike Adel", "Hinrich Schütze."],
    "venue": "arXiv preprint arXiv:1708.02275.",
    "year": 2017
  }, {
    "title": "Noise mitigation for neural entity typing and relation extraction",
    "authors": ["Yadollah Yaghoobzadeh", "Heike Adel", "Hinrich Schütze."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume",
    "year": 2017
  }, {
    "title": "Universal schema for entity type prediction",
    "authors": ["Limin Yao", "Sebastian Riedel", "Andrew McCallum."],
    "venue": "Proceedings of the 2013 workshop on Automated knowledge base construction, pages 79–84. ACM.",
    "year": 2013
  }, {
    "title": "Hyena: Hierarchical type classification for entity names",
    "authors": ["Mohamed Amir Yosef", "Sandro Bauer", "Johannes Hoffart", "Marc Spaniol", "Gerhard Weikum."],
    "venue": "Proceedings of the International Conference on Computational Linguistics (COLING).",
    "year": 2012
  }, {
    "title": "The number of negative links for hierarchical training",
    "authors": ["tialization (Glorot", "Bengio"],
    "venue": "n ∈ {16,",
    "year": 2010
  }],
  "id": "SP:35112824817b78156a6b2bcd2a5622a26ee16600",
  "authors": [{
    "name": "Shikhar Murty",
    "affiliations": []
  }, {
    "name": "Patrick Verga",
    "affiliations": []
  }, {
    "name": "Luke Vilnis",
    "affiliations": []
  }, {
    "name": "Irena Radovanovic",
    "affiliations": []
  }, {
    "name": "Andrew McCallum",
    "affiliations": []
  }],
  "abstractText": "Extraction from raw text to a knowledge base of entities and fine-grained types is often cast as prediction into a flat set of entity and type labels, neglecting the rich hierarchies over types and entities contained in curated ontologies. Previous attempts to incorporate hierarchical structure have yielded little benefit and are restricted to shallow ontologies. This paper presents new methods using real and complex bilinear mappings for integrating hierarchical information, yielding substantial improvement over flat predictions in entity linking and fine-grained entity typing, and achieving new state-of-the-art results for end-to-end models on the benchmark FIGER dataset. We also present two new human-annotated datasets containing wide and deep hierarchies which we will release to the community to encourage further research in this direction: MedMentions, a collection of PubMed abstracts in which 246k mentions have been mapped to the massive UMLS ontology; and TypeNet, which aligns Freebase types with the WordNet hierarchy to obtain nearly 2k entity types. In experiments on all three datasets we show substantial gains from hierarchy-aware training.",
  "title": "Hierarchical Losses and New Resources for Fine-grained Entity Typing and Linking"
}