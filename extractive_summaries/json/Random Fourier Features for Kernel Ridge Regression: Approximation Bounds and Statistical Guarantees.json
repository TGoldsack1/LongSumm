{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Kernel methods constitute a powerful paradigm for devising non-parametric modeling techniques for a wide range of problems in machine learning. One of the most elementary is Kernel Ridge Regression (KRR). Given training data (x\n1 , y 1 ), . . . , (x n , y n ) 2 X ⇥Y , where X ✓ Rd is an input domain and Y ✓ R is an output domain, a positive definite kernel function k : X ⇥ X ! R, and a regularization parameter > 0, the response for a given input x is estimated as:\n¯f(x) ⌘ nX\nj=1\nk(x j ,x)↵ j\nwhere ↵ = (↵ 1 · · ·↵ n ) T is the solution of the equation\n(K+ I n )↵ = y. (1) *Equal contribution 1School of Mathematical Sciences, Tel Aviv University, Israel 2School of Computer and Communication Sciences, EPFL, Switzerland 3Computer Science and Artificial Intelligence Laboratory, MIT, USA. Correspondence to: Haim Avron <haimav@post.tau.ac.il>, Michael Kapralov <michael.kapralov@epfl.ch>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nIn the above, K 2 Rn⇥n is the kernel matrix or Gram matrix defined by K\nij ⌘ k(x i ,x j ) and y ⌘ [y 1 · · · y n ] T is the vector of responses. The KRR estimator can be derived by minimizing a regularized square loss objective function over a hypothesis space defined by the reproducing kernel Hilbert space associated with k(·, ·); however, the details are not important for this paper.\nWhile simple, KRR is a powerful technique that is well understood statistically and capable of achieving impressive empirical results. Nevertheless, the method has a key weakness: computing the KRR estimator can be prohibitively expensive for large datasets. Solving (1) generally requires ⇥(n3) time and ⇥(n2) memory. Thus, the design of scalable methods for KRR (and other kernel based methods) has been the focus of intensive research in recent years (Zhang et al., 2015; Alaoui & Mahoney, 2015; Musco & Musco, 2016; Avron et al., 2016).\nOne of the most popular approaches to scaling up kernel based methods is random Fourier features sampling, originally proposed by Rahimi & Recht (2007). For shiftinvariant kernels (e.g. the Gaussian kernel), Rahimi & Recht (2007) presented a distribution D on functions from X to Cs (s is a parameter) such that for every x, z 2 Rd\nk(x, z) = E '⇠D ['(x)⇤'(z)] .\nThe idea is to sample ' from D and use ˜k(x, z) ⌘ '(x)⇤'(y) as a surrogate kernel. The resulting approximate KRR estimator can be computed in O(ns2) time and O(ns) memory (see §2.2 for details), giving substantial computational savings if s ⌧ n. This approach naturally raises the question: how large should s be to ensure a high quality estimator? Or, using the exact KRR estimator as a natural baseline: how large should s be for the random Fourier features estimator to be almost as good as the exact KRR estimator? Answering this question can help us determine when random Fourier features can be useful, whether the method needs to be improved, and how to go about improving it.\nThe original random Fourier features analysis (Rahimi & Recht, 2007) bounds the point-wise distance between\nk(·, ·) and ˜k(·, ·) (for other approaches for analyzing random Fourier features, see §2.3). However, the bounds do not naturally lead to an answer to the aforementioned question. In contrast, spectral approximation bounds on the entire kernel matrix, i.e. of the form\n(1 )(K+ I n ) ˜K+ I n (1+ )(K+ I n\n) , (2)\nnaturally have statistical and algorithmic implications. Indeed, in §3 we show that when (2) holds we can bound the excess risk introduced by the random Fourier features estimator when compared to the KRR estimator. We also show that ˜K+ I\nn can be used as an effective preconditioner for the solution of (1). This motivates the study of how large s should be as a function of for (2) to hold.\nIn this paper we rigorously analyze the relation between the number of random Fourier features and the spectral approximation bound (2). Our main results are the following:\nWe give an upper bound on the number of random features needed to achieve (2) (Theorem 7). This bound, in conjunction with the results in §3, positively shows that random Fourier features can give guarantees for KRR under reasonable assumptions. We give a lower bound showing that our upper bound is tight for the Gaussian kernel (Theorem 8). We show that the upper bound can be improved dramatically by modifying the sampling distribution used in classical random Fourier features (§4). Our sampling distribution is based on an appropriately defined leverage function of the kernel, closely related to so-called leverage scores frequently encountered in the analysis of sampling based methods for linear regression. Unfortunately, it is unclear how to efficiently sample using the leverage function. To address the lack of an efficient way to sample using the leverage function, we propose a novel, easy-tosample distribution for the Gaussian kernel which approximates the true leverage function distribution and allows random Fourier features to achieve a significantly improved upper bound (Theorem 10). The bound has an exponential dependence on the data dimension, so it is only applicable to low dimensional datasets. Nevertheless, it demonstrate that classic random Fourier features can be improved for spectral approximation and motivates further study. As an application, our improved understanding of the leverage function yields a novel asymptotic bound on the statistical dimension of Gaussian kernel matrices over bounded datasets, which may be of independent interest (Corollary 15)."
  }, {
    "heading": "2. Preliminaries",
    "text": ""
  }, {
    "heading": "2.1. Setup and Notation",
    "text": "The complex conjugate of x 2 C is denoted by x⇤. For a vector x or a matrix A, x⇤ or A⇤ denotes the Hermitian transpose. The l ⇥ l identity matrix is denoted I\nl . We use the convention that vectors are column-vectors.\nA Hermitian matrix A is positive semidefinite (PSD) if x ⇤ Ax 0 for every vector x. It is positive definite (PD) if\nx ⇤ Ax > 0 for every vector x 6= 0. For any two Hermitian matrices A and B of the same size, A B means that B A is PSD. We use L\n2 (d⇢) = L 2 (Rd, d⇢) to denote the space of complex-valued square-integrable functions with respect to some measure ⇢(·). L\n2 (d⇢) is a Hilbert space equipped with the inner product\nhf, gi L\n2\n(d⇢)\n=\nZ\nRd f(⌘)g(⌘)⇤d⇢(⌘)\n=\nZ\nRd f(⌘)g(⌘)⇤p ⇢ (⌘)d⌘ .\nIn the above, p ⇢ (·) is the density associated with ⇢(·). We denote the training set by (x\n1 , y 1 ), . . . , (x n , y n ) 2 X ⇥ Y ✓ Rd ⇥ R. Note that n denotes the number of training examples, and d their dimension. We denote the kernel, which is a function from X ⇥ X to R, by k. We denote the kernel matrix by K, with K\nij ⌘ k(x i ,x j\n). The associated reproducing kernel Hilbert space (RKHS) is denoted by H\nk , and the associated inner product by (·, ·)Hk . Some results are stated for the Gaussian kernel k(x, z) = exp( kx zk2\n2 /2 2) for some bandwidth parameter .\nWe use = n to denote the ridge regularization parameter. While for brevity we omit the n subscript, the choice of regularization parameter generally depends on n. Typically,\nn = !(1) and n = o(n). See Caponnetto & De Vito (2007) and Bach (2013) for discussion on the asymptotic behavior of\nn , noting that in our notation, is scaled by an n factor as compared to those works. As the ratio between n and will be an important quantity in our bounds, we denote it as n\n⌘ n/ . The statistical dimension or effective degrees of freedom is denoted by s (K) ⌘ Tr (K+ I n ) 1 K ."
  }, {
    "heading": "2.2. Random Fourier Features",
    "text": ""
  }, {
    "heading": "2.2.1. CLASSICAL RANDOM FOURIER FEATURES",
    "text": "Random Fourier features (Rahimi & Recht, 2007) is an approach to scaling up kernel methods for shift-invariant kernels. A shift-invariant kernel is a kernel of the form k(x, z) = k(x z) where k(·) is a positive definite func-\ntion (we abuse notation by using k to denote both the kernel and the defining positive definite function).\nThe underlying observation behind random Fourier features is a simple consequence of Bochner’s Theorem: for every shift-invariant kernel for which k(0) = 1 there is a probability measure µ\nk (·) and a corresponding probability density function p\nk\n(·), both on Rd, such that\nk(x, z) =\nZ\nRd e 2⇡i⌘\nT (x z)dµ\nk\n(⌘)\n=\nZ\nRd e 2⇡i⌘\nT (x z)p\nk\n(⌘)d⌘ . (3)\nIn other words, the inverse Fourier transform of the kernel k(·) is a probability density function, p\nk (·). For simplicity we typically drop the k subscript, writing µ(·) = µ\nk (·) and p(·) = p\nk (·), with the associated kernel function clear from context.\nIf ⌘ 1 , . . . ,⌘ s are drawn according to p(·), and we define '(x) ⌘ 1p\ns\n⇣ e 2⇡i⌘ T 1 x, · · · , e 2⇡i⌘Ts x ⌘⇤\n, then it is not hard to see that\nk(x, z) = E ' ['(x)⇤'(z)] .\nThe idea of the Random Fourier features method is then to define\n˜k(x, z) ⌘ '(x)⇤'(z) = 1 s\nsX\nl=1\ne 2⇡i⌘ T l (x z) (4)\nas a substitute kernel.\nNow suppose that Z 2 Cn⇥s is the matrix whose jth row is '(x\nj\n) ⇤, and let ˜K = ZZ⇤. ˜K is the kernel matrix corresponding to ˜k(·, ·). The resulting random Fourier features KRR estimator is ˜f(x) ⌘Pn\nj=1\n˜k(x j ,x)↵̃ j where ↵̃ is the solution of ( ˜K+ I\nn )↵̃ = y. Typically, s < n and we can represent ˜f(·) more efficiently as:\n˜f(x) = '(x)⇤w\nwhere w = (Z ⇤ Z+ I\ns\n) 1 Z ⇤ y\nWe can compute w in O(ns2) time, making random Fourier features computationally attractive if s < n."
  }, {
    "heading": "2.2.2. MODIFIED RANDOM FOURIER FEATURES",
    "text": "While it seems to be a natural choice, there is no fundamental reason that we must sample the frequencies ⌘\n1 , . . . ,⌘ s\nusing the Fourier transform density function p(·). In fact, our results show that it is advantageous to use a different sampling distribution based on the kernel leverage function (defined later).\nLet q(·) be any probability density function whose support includes that of p(·). If we sample ⌘\n1 , . . . ,⌘ s using q(·), and define\n'(x) ⌘ 1p s\ns p(⌘\n1\n)\nq(⌘ 1 )\ne 2⇡i⌘ T 1 x, · · · , s p(⌘ s )\nq(⌘ s )\ne 2⇡i⌘ T s x\n!⇤\nwe still have k(x, z) = E ' ['(x)⇤'(z)]. We refer to this method as modified random Fourier features and remark that it can be viewed as a form of importance sampling."
  }, {
    "heading": "2.2.3. ADDITIONAL NOTATIONS AND IDENTITIES",
    "text": "Now that we have defined (modified) random Fourier features, we can introduce some additional notation and identities that shall prove useful in the rest of the paper.\nThe (j, l) entry of Z is given by\nZ\njl\n= 1p s e 2⇡ix\nT j⌘l p p(⌘\nl )/q(⌘ l ). (5)\nLet z : Rd ! Cn be defined by\nz(⌘) j\n= e 2⇡ix T j⌘ .\nNote that column l of Z from the previous section is exactly z(⌘\nl\n) p p(⌘\nl )/[s · q(⌘ l )]. So we have:\nZZ ⇤ = 1\ns\nsX\nl=1\np(⌘ l ) q(⌘ l ) z(⌘ l )z(⌘ l ) ⇤.\nFinally, by (3) we have E [ZZ⇤] = K since\nK =\nZ\nRd z(⌘)z(⌘)⇤dµ(⌘) =\nZ\nRd z(⌘)z(⌘)⇤p(⌘)d⌘ ."
  }, {
    "heading": "2.3. Related Work",
    "text": "Rahimi & Recht (2007)’s original analysis of random Fourier features bounded the point-wise distance between k(·, ·) and ˜k(·, ·) . In follow-up work, they give learning rate bounds for a broad class of estimators using random Fourier features. However, their results do not apply to classic KRR (Rahimi & Recht, 2008). Their main bound becomes relevant only when the number of sampled features is on order of the training set size.\nRudi et al. (2016) prove generalization properties for KRR with random features, under somewhat difficult to verify technical assumptions, some of which can be seen as constraining the leverage function distribution that we study. They leave open improving their bounds via a more refined sampling approach. Bach (2017) analyzes random Fourier features from a function approximation point of view. He defines a similar leverage function distribution to the one that we consider, but leaves open establishing\nbounds on and effectively sampling from this distribution, both of which we address in this work. Finally, Tropp (2015) analyzes the distance between the kernel matrix and its approximation in terms of the spectral norm, kK ˜Kk\n2 , which can be a significantly weaker error metric than (2).\nOutside of work on random Fourier features, risk inflation bounds for approximate KRR and leverage score sampling have been used to analyze and improve the Nyström method for kernel approximation (Bach, 2013; Alaoui & Mahoney, 2015; Rudi et al., 2015; Musco & Musco, 2016). We apply a number of techniques from this line of work.\nSpectral approximation bounds, such as (2), are quite popular in the sketching literature; see Woodruff (2014). Most closely related to our work is analysis of spectral approximation bounds without regularization (i.e. = 0) for the polynomial kernel (Avron et al., 2014). Improved bounds with regularization (still for the polynomial kernel) were recently proved by Avron et al. (2016)."
  }, {
    "heading": "3. Spectral Bounds and Statistical Guarantees",
    "text": "Given a feature transformation, like random Fourier features, how do we analyze it and relate its use to nonapproximate methods? A common approach, taken for example in the original paper on random Fourier features (Rahimi & Recht, 2007), is to bound the difference between the true kernel k(·, ·) and the approximate kernel ˜k(·, ·). However, it is unclear how such bounds translate to downstream guarantees on statistical learning methods, such as KRR. In this paper we advocate and focus on spectral approximation bounds on the regularized kernel matrix, specifically, bounds of the form\n(1 )(K+ I n ) ZZ⇤+ I n (1+ )(K+ I n ) (6)\nfor some < 1. Definition 1. We say that a matrix A is a -spectral approximation of another matrix B, if (1 )B A (1 + )B. Remark 1. When = 0, bounds of the form of (6) can be viewed as a low-distortion subspace embedding bounds. Indeed, when = 0 it follows from (6) that Sp (k(x\n1 , ·), . . . , k(x n , ·)) ✓ H k\ncan be embedded with -distortion in Sp ('(x\n1 ), . . . ,'(x n )) ✓ Rs. The main mathematical question we seek to address in this paper is: when using random Fourier features, how large should s be in order to guarantee that ZZ⇤ + I\nn is a - spectral approximation of K+ I\nn ? To motivate this question, in the following two subsections we show that such bounds can be used to derive risk inflation bounds for approximate kernel ridge regression. We also show that such bounds can be used to analyze the use of ZZ⇤ + I\nn as a preconditioner for K+ I\nn\n.\nWhile this paper focuses on KRR for conciseness, we remark that in the sketching literature, spectral approximation bounds also form the basis for analyzing sketching based methods for tasks like low-rank approximation, kmeans and more. In the kernel setting, such bounds where analyzed, without regularization, for the polynomial kernel (Avron et al., 2014). Cohen et al. (2017) recently showed that (6) along with a trace condition on ZZ⇤ (which holds for all sampling approaches we consider) yields a so called “projection-cost preservation” condition for the kernel approximation. With chosen appropriately, this condition ensures that ZZ⇤ can be used in place of K for approximately solving kernel k-means clustering and for certain versions of kernel PCA and kernel CCA. See Musco & Musco (2016) for details, where this analysis is carried out for the Nyström method."
  }, {
    "heading": "3.1. Risk Bounds",
    "text": "One way to analyze estimators is via risk bounds; several recent papers on approximate KRR employ such an analysis (Bach, 2013; Alaoui & Mahoney, 2015; Musco & Musco, 2016). In particular, these papers consider the fixed design setting and seek to bound the expected in-sample predication error of the KRR estimator ¯f , viewing it as an empirical estimate of the statistical risk. More specifically, the underlying assumption is that y\ni\nsatisfies\ny i = f?(x i ) + ⌫ i\n(7)\nfor some f? : X ! R. The {⌫ i }’s are i.i.d noise terms, distributed as normal variables with variance 2\n⌫ . The empirical risk of an estimator f , which can be viewed as a measure of the quality of the estimator, is\nR(f) ⌘ E{⌫i} 2\n4 1 n\nnX\nj=1\n(f(x i ) f?(x i )) 2\n3\n5\n(note that f itself might be a function of {⌫ i }). Let f 2 Rn be the vector whose jth entry is f?(x\nj ). It is quite straightforward to show that for the KRR estimator ¯f we have (Bach, 2013; Alaoui & Mahoney, 2015):\nR( ¯f) = n 1 2fT(K+ I n ) 2 f\n+ n 1 2 ⌫ Tr K 2 (K+ I n ) 2 .\nSince 2fT(K + I n ) 2 f  fT(K + I n ) 1 f and\nTr K\n2\n(K+ I n ) 2  Tr K(K+ I n ) 1 = s\n(K), we define\nbR K (f) ⌘ n 1 fT(K+ I n ) 1 f + n 1 2\n⌫\ns (K)\nand note that R( ¯f)  bR K\n(f). The first term in the above expressions for R( ¯f) and bR\nK (f) is frequently referred to as the bias term, while the second is the variance term.\nLemma 2. Suppose that (7) holds, and let f 2 Rn be the vector whose jth entry is f?(x\nj ). Let ¯f be the KRR estimator, and let ˜f be KRR estimator obtained using some other kernel ˜k(·, ·) whose kernel matrix is ˜K. Suppose that ˜ K + I n is a -spectral approximation to K + I n\nfor some < 1, and that kKk\n2 1. The following bound holds:\nR( ˜f)  (1 ) 1 bR K (f) +\n(1 + )\n· rank( ˜ K) n · 2 ⌫\n(8)\nThe proof appears in the supplementary material (Appendix B).\nIn short, Lemma 2 bounds the risk of the approximate KRR estimator as a function of both the risk upper bound bR K\n(f) (8) and an additive term which is small if the rank of rank( ˜\nK) and/or is small. In particular, it is instructive to compare the additive term ( /(1+ ))n 1 2\n⌫ ·rank( ˜K) to the variance term n 1 2\n⌫\n· s\n(K). Since approximation ˜\nK is only useful computationally if rank( ˜K) ⌧ n we should expect the additive term in (8) to also approach 0 an generally be small when n is large.\nRemark 2. An approximation ˜K is only useful computationally if rank( ˜K) ⌧ n so ˜K gives a significantly compressed approximation to the original kernel matrix. Ideally we should have rank( ˜K)/n ! 0 as n ! 1 and so the additive term in (8) will also approach 0 and generally be small when n is large."
  }, {
    "heading": "3.2. Random Features Preconditioning",
    "text": "Suppose we choose to solve (K + I n )↵ = y using an iterative method (e.g. CG). In this case, we can apply ZZ⇤ + I\nn as a preconditioner. Using standard analysis of Krylov-subspace iterative methods it is immediate that if ZZ⇤ + I\nn is a -spectral approximation of K + I\nn then the number of iterations until convergence is O( p (1 + )/(1 ))). Thus, if ZZ⇤ + I\nn is, say, a 1/2-spectral approximation of K+ I\nn , then the number of iterations is bounded by a constant. The preconditioner can be efficiently applied (after preprocessing) via the Woodbury formula, giving cost per iteration (if s  n) of O(n2). The overall cost of computing the KRR estimator is therefore O(ns2+n2). Thus, as long as s = o(n) this approach gives an advantage over direct methods which cost O(n3). For small s it also beats non-preconditioned iterative methods cost O(n2 p (K)). We reach again the question that was poised earlier: how big should s be so that ZZ⇤ + I n is a 1/2-spectral approximation of K+ I n ?\nSee Cutajar et al. (2016) and Avron et al. (2016) for more details and discussion on random features preconditioning."
  }, {
    "heading": "4. Ridge Leverage Function Sampling and Random Fourier Features",
    "text": "In this section we present upper bounds on the number of random Fourier features needed to guarantee that ZZ ⇤ + I\nn is a -spectral approximation to K+ I n . Our bounds are applicable to any shift-invariant kernel, and a wide range of feature sampling distributions (and, in particular, for classical random Fourier features).\nOur analysis is based on relating the sampling density to an appropriately defined ridge leverage function. This function is a continuous generalization of the popular leverage scores (Mahoney & Drineas, 2009) and ridge leverage scores (Alaoui & Mahoney, 2015; Cohen et al., 2017) used in the analysis of linear methods. Bach (2017) defined the leverage function of the integral operator given by the kernel function and the data distribution. For our purposes, a more appropriate definition is with respect to a fixed input dataset:\nDefinition 3. For given x 1 , . . . ,x n and shift-invariant kernel k(·, ·), define the ridge leverage function as\n⌧ (⌘) ⌘ p(⌘)z(⌘)⇤(K+ I) 1z(⌘) .\nIn the above, K is the kernel matrix and p(·) is the distribution associated with k(·, ·). Proposition 4.\np(⌘)n/(n+ )  ⌧ (⌘)  p(⌘)n/ Z\nRd ⌧ (⌘)d⌘ = s (K)\nThe (simple) proof of the proposition is given in the supplementary material (Appendix C).\nRecall that we denote the ratio n/ , which appears frequently in our analysis, by n\n= n/ . As discussed, theoretical bounds generally set = !(1) (as a function of n) so n\n= o(n). However we remark that in practice, it may frequently be the case that is very small and n\nn. Corollary 5. For any K, s (K)  n .\nFor any shift-invariant kernel with k(x,x) = 1 and k(x, z) ! 0 as kx zk\n2 ! 1 (e.g., the Gaussian kernel) if we allow points to be arbitrarily spread out, the kernel matrix converges to the identity matrix, and s (I\nn\n) =\nn/(1+ ) = ⌦(n ) if = ⌦(1) so the above bound is tight. However, this requires datasets of increasingly large diameter (as n grows). In contrast, the usual assumption in statistical learning is that the data is sampled from a bounded domain X . In §7.2 we show via a leverage function upper bound that for the important Gaussian kernel, for bounded datasets we have s (K) = o(n ).\nIn the matrix sketching literature it is well known that spectral approximation bounds similar to (6) can be constructed by sampling columns relative to upper bounds on the leverage scores. In the following, we generalize this for the case of sampling Fourier features from a continuous domain. Lemma 6. Let ⌧̃ : Rd ! R be a measurable function such that ⌧̃(⌘) ⌧\n(⌘) for all ⌘ 2 Rd, and furthermore assume that\ns ⌧̃\n⌘ Z\nRd ⌧̃(⌘)d⌘\nis finite. Denote p ⌧̃ (⌘) = ⌧̃(⌘)/s ⌧̃ . Let  1/2 and ⇢ 2 (0, 1). Assume that kKk\n2 . Suppose we take s 8\n3\n2s ⌧̃ ln(16s (K)/⇢) samples ⌘ 1 , . . . ,⌘ s from the distribution associated with the density p\n⌧̃ (·) and the construct the matrix Z according to (5) with q = p\n⌧̃ . Then ZZ ⇤ + I\nn is -spectral approximation of K + I n with probability of at least 1 ⇢. The proof is based on matrix concentration inequalities, and appears in the supplementary material (Appendix D).\nLemma 6 shows that if we could sample using the ridge leverage function, then O(s (K) log(s\n(K))) samples suffice for spectral approximation of K (for a fixed and failure probability). While there is no straightforward way to perform this sampling, we can consider how well the classic random Fourier features sampling distribution approximates the leverage function, obtaining a bound on its performance (the proof is in Appendix D as well): Theorem 7. Let  1/2 and 2 (0, 1). Assume that kKk\n2\n. If we use s 8 3\n2n ln(16s (K)/⇢) random Fourier features (i.e., sampled according to p(·)), then ZZ ⇤ + I\nn is -spectral approximation of K + I n with probability of at least 1 ⇢. Theorem 7 establishes that if = !(log(n)) and is fixed, o(n) random Fourier features suffice for spectral approximation, and so the method can provably speed up KRR. Nevertheless, the bound depends on n instead of s\n(K), as is possible with true leverage function sampling (see Lemma 6). This gap arises from our use of the simple, often loose, ridge leverage function upper bound given by Proposition 4.\nUnfortunately, as the next section shows, the bound in Theorem 7 cannot be improved since the classic random Fourier features sampling distribution can be far enough from the ridge leverage distribution that ⌦(n\n) features may be needed even when s (K) = o(n )."
  }, {
    "heading": "5. Lower Bound",
    "text": "Our lower bound shows that the upper bound of Theorem 7 on the number of samples required by classic random Fourier features to obtain a spectral approximation to K+\nI n is essentially best possible. The full proof is given in the supplementary material (Appendix I). Theorem 8. Consider the Gaussian kernel with = (2⇡) 1 (so p(⌘) = 1p\n2⇡\ne ⌘ 2 /2). Suppose n 17 is an odd integer, satisfies 10\nn <  n 2\n, and R satisfies 3000 log 1.5 (n\n)  R  n 500 p log(n ) . Then, there exists a\ndataset of n points {x j }n j=1 ✓ [ R,R] such that if s random Fourier features (i.e., sampled according to p(·)) are used for some s  n\n400 , then with probability at least 1/2, there exists a vector ↵ 2 Rn such that\n↵T(K+ I n )↵ < 2\n3\n↵T(ZZ⇤ + I n )↵. (9)\nFurthermore, for the said dataset we have s (K) = O(R · poly (log n )).\nThus, the number of samples s required for ZZ⇤ + I n\nto be a 1/2-spectral approximation to K+ I\nn for a bounded dataset of points must either depend exponentially on the radius of the point set, or at least linearly on n\n, and there is an asymptotic gap between what is achieved with classical random Fourier features and what is achieved by modified random Fourier features using leverage function sampling.\nWe note that the above lower bound is proven for a onedimensional point set, which makes it only stronger: even at low dimensions, and for the common Gaussian kernel, there is a large gap between the performance of classic random Fourier features and leverage function sampling.\nThe bound applies for datasets bounded on the range [ R,R] for R = ⌦ log1.5 n . As we will see in §7, the key idea behind the proof is to show that for such a dataset, the ridge leverage function is large on a range of low frequencies. In contrast, the classic random Fourier features distribution is very small at the edges of this frequency range, and so significantly undersamples some frequencies and does not achieve spectral approximation.\nWe remark that it would be preferable if Theorem 8 applied to bounded datasets (i.e. with R fixed), as the usual assumption in statistical learning theory is that data is sampled from a bounded domain. However, our current techniques are unable to address this scenario. Nevertheless, our analysis allows R to grow very slowly with n and we conjecture that the upper bound is tight even for bounded domains."
  }, {
    "heading": "6. Improved Sampling (Gaussian Kernel)",
    "text": "Contrasting with the lower bound of Theorem 8, we now give a modified Fourier feature sampling distribution that does perform well for the Gaussian kernel on bounded input sets. Furthermore, unlike the true ridge leverage function, this distribution is simple and efficient to sample from.\nTo reduce clutter, we state the result for a fixed bandwidth = (2⇡) 1. This is without loss of generality since we can rescale the points and adjust the bounding interval.\nOur modified distribution essentially corrects the classic distribution by “capping” the probability of sampling low frequencies near the origin. This allows it to allocate more samples to higher frequencies, which are undersampled by classical random Fourier features. For simplicity, we focus on the one-dimensional setting. Our results extend to higher dimensions, albeit with an exponential in the dimension loss. Definition 9 (Improved Fourier Feature Distribution for the Gaussian Kernel). Define the function\n⌧̄ R\n(⌘) ⌘ ⇢ 25max(R, 3000 log1.5 n ) |⌘|  10plog(n )\np(⌘)n\no.w.\nLet s ⌧̄R = R R ⌧̄R(⌘)d⌘ and define the probability density function p̄ R (⌘) = ⌧̄ R (⌘)/s ⌧̄R .\nNote that p̄ R (⌘) is just the uniform distribution for low frequencies with |⌘|  10plog(n\n), and the classic Fourier features distribution, appropriately scaled, outside this range. As we show in §7, ⌧̄\nR (⌘) upper bounds the true ridge leverage function ⌧\n(⌘) for all ⌘. Hence, simply applying Lemma 6: Theorem 10. For any integer n and parameter 0 <  n\n2 , consider the one dimensional Gaussian kernel with = (2⇡) 1 (so p(⌘) = 1p\n2⇡\ne ⌘ 2 /2) and any dataset of n points {x\nj }n j=1 ✓ [ R,R] with any radius R > 0. If we sample s 8\n3\n2s ⌧̄R ln(16s⌧̄R/⇢) random Fourier features ac-\ncording to p̄ R (·) and construct Z according to (5), then with probability at least 1 ⇢, ZZ⇤ + I\nn is -spectral approximation of K+ I\nn for any  1/2 and ⇢ 2 (0, 1). Furthermore, s ⌧̄R = O(R p log(n ) + log 2 n ) and p̄ R\n(·) can be sampled from in O(1) time.\nTheorem 10 represents a possibly exponential improvement over the bound obtainable by classic random Fourier features. For R log1.5(n\n) our modified distribution requires O(R p log(n\n)) samples, as compared to the lower bound of n\n400\ngiven by Theorem 8."
  }, {
    "heading": "7. Bounding the Ridge Leverage Function",
    "text": "We conclude by discussing our approach to bounding the ridge leverage function of the Gaussian kernel, which leads to Theorems 8 and 10. The key idea is to reformulate the leverage function as the solution of two dual optimization problems. By exhibiting suitable test functions for these optimization problems, we are able to give both upper and lower bounds on the ridge leverage function, and correspondingly on the sampling performance of classic and modified Fourier feature sampling."
  }, {
    "heading": "7.1. Primal-Dual Characterization",
    "text": "In this section we prove two alternative characterizations of the ridge leverage function: one as a minimization, and the other as a maximization. These characterization are useful for bounding the leverage function, as we exhibit in the next subsection for the Gaussian kernel.\nDefine the operator : L 2 (dµ) ! Cn by\ny ⌘ Z\nRd z(⇠)y(⇠)dµ(⇠). (10)\nThe following two lemmas constitute the main result of this subsection. The proofs can be found in the supplementary material (Appendix E). Lemma 11. The ridge leverage function can alternatively be defined as follows:\n⌧ (⌘) = min y2L\n2\n(dµ)\n1k y p p(⌘)z(⌘)k2\n2 + kyk2 L\n2\n(dµ)\n(11) Lemma 12. The ridge leverage function can alternatively be defined as follows:\n⌧ (⌘) = max ↵2Cn p(⌘) · |↵⇤z(⌘)|2 k ⇤↵k2\nL\n2\n(dµ)\n+ k↵k2 2\n(12)\nSimilar results are well known for the finite dimensional case. Here we extend these results to an infinite dimensional case. Lemma 11 allows us to upper bound the leverage function at any point ⌘ 2 Rd by exhibiting a carefully constructed function y(·) and upper bounding the ratio in (11), while Lemma 12 allows us to lower bound it in a similar fashion."
  }, {
    "heading": "7.2. Leverage Function: the Gaussian Case",
    "text": "In this section we prove nearly matching bounds on the leverage score function for the one-dimensional Gaussian kernel on bounded datasets. For simplicity of presentation we focus on the one-dimensional setting. Our results extend to higher dimensions, albeit with an exponential in the dimension loss in the gap between upper and lower bounds.\nOur bounds are parameterized by the width of the point set, which we denote by R. To reduce clutter, we present all results for fixed = (2⇡) 1. This is without loss of generality since we can rescale the points. All the proofs appear in the supplementary material (Appendices F–H). Theorem 13. Consider the one dimensional Gaussian kernel with = (2⇡) 1. For any integer n and parameter 0 <  n\n2\n, and any radius R > 0, if x 1 , ..., x n 2 [ R,R], for every |⌘|  10plog n :\n⌧ (⌘)  25max(R, 3000 log1.5 n ) .\nTheorem 14. Consider the one dimensional Gaussian kernel with = (2⇡) 1. For any integer n 17, any parameter 10\nn   n 16 , and every radius 1000 log1.5 n  R  n\n500 p log(n ) , there exist x 1 , ..., x n 2 [ R,R] such that for every ⌘ 2 [ 100plog n ,+100 p log n ] we have:\n⌧ (⌘) R 150\n✓ p(⌘)\np(⌘) + 2Rn 1\n◆ .\nThe last two theorems lead to a tight bound on the statistical dimension matrices corresponding to bounded points sets:\nCorollary 15. Consider the Gaussian kernel with = (2⇡) 1. For any integer n and parameter 0 <  n\n2 , and any R > 0, if x\n1 , ..., x n\n2 [ R,R] then we have:\ns (K)  500 ·max(R, 3000 log1.5 n ) p log n + 1\n= O(R p log n + log 2 n )\nFurthermore, if 1000 log1.5 n  R  n 500 p log(n ) there exists a set of points x 1 , . . . , x n ✓ [ R,R] such that:\ns (K) = ⌦ ⇣ R p log(n /R) ⌘ .\nThe bounds above match up to constant factors if 1000 log 1.5 n  R  n0.99 . For any 1000 log1.5 n\n R  n\n500 p log(n )\nthey match up to a p log n factor."
  }, {
    "heading": "7.3. Theorems 13 and 14: Proof Outline",
    "text": "Lemma 11 allows us to bound ⌧ (⌘) simply by exhibiting any y(·) which makes the cost function small. One simple attempt might be y(s)\n⌘ (⇠) = (⌘ ⇠) where (·) is the Dirac delta function. This choice zeros out the first term. However the delta function is not square integrable, y(s) ⌘ 62 L 2\n(dµ), so the lemma cannot be used. Another trivial attempt is y(0)(⇠) = 0, which zeros out the second term and recovers the trivial bound ⌧ (⌘)  p(⌘)n\n. Nevertheless, a smarter test functions y(·) can yield improved bounds, yielding results on the leverage score function that are parameterized by the diameter of the point set.\nAt a high level, our approach is to replace the spike function at ⌘ with a ‘soft spike’ whose Fourier transform still looks approximately like a cosine wave on [ R,R], yet is still square integrable. The smaller R is, the more spread out this function will be able to be, and hence the smaller its `\n2 norm, and the better the leverage score bound. A natural candidate for a ‘soft spike’ is a Gaussian of appropriate variance, but this choice does not suffice to obtain tight bounds, due to two difficulties. First, for the upper bound a simple Gaussian does not result in a function that is close enough to a pure frequency in time domain (first\nterm of the objective function in Lemma 11) unless we settle for an upper bound of O(R · poly (n\n)) as opposed to the tight O(R) on the leverage score density function. Second, the lower bound on the leverage score function resulting from using a Gaussian pulse would only be of the form ⌦(R/ p log n\n), leading to a weak lower bound on the statistical dimension, namely ⌦(R) as opposed to ⌦(R · plog n\n), thereby missing entirely the effect of the regularization parameter on the statistical dimension!\nThe remedy to the issues above turns out to be the convolution of a (modulated) Gaussian with a rectangular pulse in time domain (product of a shifted Gaussian with the sinc function in frequency domain). Specifically, our bounds are based on variants of a flattened Gaussian spike function\ny ⌘,b,v\n(⇠) ⌘ e (⇠ ⌘)2b2/4 · v · sinc (v(⇠ ⌘)) . (13)\nfor some b > 0, v > 0 and ⌘ 2 R. It turns out that with a proper setting of parameters (where one should think of b as large, i.e. the spike y is rather narrow) the function y\n⌘,b,v\nsatisfies\n( y ⌘,b,v )(x) ⇡ p(⌘) · exp(2⇡i⌘x) R x+ v2 x v\n2\n1p 2⇡b e t 2 /2b 2 dt.\nAn illustration of this function in y is given in Fig. 1, (left) and the function y in Fig. 1, (right). Note that if the parameter v is chosen to be large, then for x not too large we have R x+ v 2\nx v 2 1p 2⇡b e t 2 /2b 2 dt ⇡ R +1 1 1p 2⇡b e t 2 /2b 2\ndt, i.e. the second multiplier is essentially constant, i.e. flat as a function of x (hence the term ‘flattened Gaussian spike’). This means that y\n⌘,b,v is essentially the kernel density evaluated at ⌘ times a pure harmonic term exp(2⇡i⌘x), which is exactly what one needs to minimize the first term on the rhs of (11) in Lemma 11, up to a factor of p p(⌘) – see Appendix F. One can also see that setting v to be not too large results in a good function to use in the maximization problem in (12) in Lemma 12 – see Appendix G. Obtaining tight bounds and in particular achieving the right dependence on p log n\nrequires several modifications to the function y above, but the intuition we just described works!"
  }, {
    "heading": "Acknowledgements",
    "text": "The authors thank Arturs Backurs helpful discussions at early stages of this project. Haim Avron acknowledges the support from the XDATA program of the Defense Advanced Research Projects Agency (DARPA), administered through Air Force Research Laboratory contract FA875012-C-0323 and an IBM Faculty Award. Cameron Musco acknowledges the support by NSF Graduate Research Fellowship, AFOSR grant FA9550-13-1-0042 and the NSF Center for Science of Information."
  }],
  "year": 2017,
  "references": [{
    "title": "Fast randomized kernel ridge regression with statistical guarantees",
    "authors": ["Alaoui", "Ahmed El", "Mahoney", "Michael W"],
    "venue": "In Neural Information Processing Systems (NIPS),",
    "year": 2015
  }, {
    "title": "Subspace embeddings for the polynomial kernel",
    "authors": ["Avron", "Haim", "Nguyen", "Huy", "Woodruff", "David"],
    "venue": "In Neural Information Processing Systems (NIPS),",
    "year": 2014
  }, {
    "title": "Faster kernel ridge regression using sketching and preconditioning",
    "authors": ["Avron", "Haim", "Clarkson", "Kenneth L", "Woodruff", "David P"],
    "venue": "CoRR, abs/1611.03220,",
    "year": 2016
  }, {
    "title": "On the equivalence between kernel quadrature rules and random feature expansions",
    "authors": ["Bach", "Francis"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2017
  }, {
    "title": "Sharp analysis of low-rank kernel matrix approximations",
    "authors": ["Bach", "Francis R"],
    "venue": "In Conference on Learning Theory (COLT),",
    "year": 2013
  }, {
    "title": "Optimal rates for the regularized least-squares algorithm",
    "authors": ["A. Caponnetto", "E. De Vito"],
    "venue": "Foundations of Computational Mathematics,",
    "year": 2007
  }, {
    "title": "An introduction to probability theory and its applications. Volume 1. Wiley series in probability and mathematical statistics",
    "authors": ["Feller", "William"],
    "venue": "http://opac.inria.fr/",
    "year": 1968
  }, {
    "title": "CUR matrix decompositions for improved data analysis",
    "authors": ["Mahoney", "Michael W", "Drineas", "Petros"],
    "venue": "Proceedings of the National Academy of Sciences,",
    "year": 2009
  }, {
    "title": "Recursive sampling for the Nyström method",
    "authors": ["Musco", "Cameron", "Christopher"],
    "venue": "CoRR, abs/1605.07583,",
    "year": 2016
  }, {
    "title": "An operator pseudo-inversion lemma",
    "authors": ["Ogawa", "Hidemitsu"],
    "venue": "SIAM Journal on Applied Mathematics,",
    "year": 1988
  }, {
    "title": "Random features for large-scale kernel machines",
    "authors": ["A. Rahimi", "B. Recht"],
    "venue": "In Neural Information Processing Systems (NIPS),",
    "year": 2007
  }, {
    "title": "Weighted sums of random kitchen sinks: Replacing minimization with randomization in learning",
    "authors": ["Rahimi", "Ali", "Recht", "Benjamin"],
    "venue": "In Neural Information Processing Systems (NIPS),",
    "year": 2008
  }, {
    "title": "Less is more: Nyström computational regularization",
    "authors": ["Rudi", "Alessandro", "Camoriano", "Raffaello", "Rosasco", "Lorenzo"],
    "venue": "In Neural Information Processing Systems (NIPS),",
    "year": 2015
  }, {
    "title": "Generalization properties of learning with random features",
    "authors": ["Rudi", "Alessandro", "Camoriano", "Raffaello", "Rosasco", "Lorenzo"],
    "venue": "ArXiv e-prints,",
    "year": 2016
  }, {
    "title": "An introduction to matrix concentration inequalities",
    "authors": ["Tropp", "Joel A"],
    "venue": "Foundations and Trends in Machine Learning,",
    "year": 2015
  }, {
    "title": "Sketching as a tool for numerical linear algebra",
    "authors": ["Woodruff", "David P"],
    "venue": "Found. Trends Theor. Comput. Sci.,",
    "year": 2014
  }],
  "id": "SP:55313fcb875acc9b9e0f8667cb37a2da8fe3b374",
  "authors": [{
    "name": "Haim Avron",
    "affiliations": []
  }, {
    "name": "Michael Kapralov",
    "affiliations": []
  }, {
    "name": "Cameron Musco",
    "affiliations": []
  }, {
    "name": "Christopher Musco",
    "affiliations": []
  }, {
    "name": "Ameya Velingker",
    "affiliations": []
  }, {
    "name": "Amir Zandieh",
    "affiliations": []
  }],
  "abstractText": "Random Fourier features is one of the most popular techniques for scaling up kernel methods, such as kernel ridge regression. However, despite impressive empirical results, the statistical properties of random Fourier features are still not well understood. In this paper we take steps toward filling this gap. Specifically, we approach random Fourier features from a spectral matrix approximation point of view, give tight bounds on the number of Fourier features required to achieve a spectral approximation, and show how spectral matrix approximation bounds imply statistical guarantees for kernel ridge regression.",
  "title": "Random Fourier Features for Kernel Ridge Regression: Approximation Bounds and Statistical Guarantees"
}