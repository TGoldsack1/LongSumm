{
  "sections": [{
    "text": "Proceedings of the SIGDIAL 2017 Conference, pages 174–185, Saarbrücken, Germany, 15-17 August 2017. c©2017 Association for Computational Linguistics"
  }, {
    "heading": "1 Introduction",
    "text": "Long before the terms conversational interface or chatbot were coined, Turing (1950) described them as the ultimate test for artificial intelligence. Despite their long history, there is a recent hype about chatbots in both, the scientific community (cf. e.g. Ferrara et al. (2016)) and industry (Gartner, 2016). While there are many related reasons for this development, we think that three key changes were particularly important:\n• Rise of universal chat platforms (like Telegram, Facebook Messenger, Slack, etc.)\n• Advances in machine learning (ML) • Natural Language Understanding (NLU) as a\nservice\nIn this paper, we focus on the latter. As we will show in Section 2, NLU services are already used by a number of researchers for building conversational interfaces. However, due to the lack of a systematic evaluation of theses services, the decision why one services was prefered over another, is usually not well justified. With this paper, we want to bridge this gap and enable both, researchers and companies, to make more educated decisions about which service they should use. We describe the functioning of NLU services and their role within the general architecture of chatbots. We explain, how NLU services can be evaluated and conduct an evaluation, based on two different corpora consisting of nearly 500 annotated questions, of the most popular services."
  }, {
    "heading": "2 Related Work",
    "text": "Recent publications have discussed the usage of NLU services in different domains and for different purposes, e.g. question answering for localized search (McTear et al., 2016), form-driven dialogue systems (Stoyanchev et al., 2016), dialogue management (Schnelle-Walka et al., 2016), and the internet of things (Kar and Haldar, 2016).\nHowever, none of these publications explicitly discuss, why they choose one particular NLU service over another and how this decision may have influenced the performance of their system and hence their results. Moreover, to the best of our knowledge, so far there exists no systematic evaluation of a particular NLU service, let alone a comparison of multiple services.\nDale (2015) lists five NLP cloud services and describes their capabilities, but without conducting an evaluation. In the domain of spoken dialog\n174\nsystems, similar evaluations have been conducted for automatic speech recognizer services, e.g. by Twiefel et al. (2014) and Morbini et al. (2013).\nSpeaking about chatbots in general, Shawar and Atwell (2007) present an approach to conduct endto-end evaluations, however, they do not take into account the single elements of a system. Resnik and Lin (2010) provide a good overview and evaluation of Natural Language Processing (NLP) systems in general. Many of the principals they apply for their evaluation (e.g. inter-annotator agreement and partitioning of data) play an important role in our evaluation too. A comprehensive and extensive survey of question answering technologies was presented by Kolomiyets and Moens (2011). However, there has been a lot of progress since 2011, including the here presented NLU services.\nOne of our two corpora was labelled using Amazon Mechanical Turk (AMT, cf. Section 5.2), while there have been long discussions about whether or not AMT can replace the work of experts for labelling linguistic data, the recent consensus is that, given enough annotators, crowdsourced labels from AMT are as reliable as expert data. (Snow et al., 2008; Munro et al., 2010; Callison-Burch, 2009)"
  }, {
    "heading": "3 Chatbot Architecture",
    "text": "In order to understand the role of NLU services for chatbots, one first has to look at the general architecture of chatbots. While there exist different documented chatbot architectures for concrete use cases, no universal model of how a chatbot should be designed has emerged yet. Our proposal for a universal chatbot architecture is shown in Figure 1. It consists of three main parts: Request Interpretation, Response Retrieval and Message Generation. The Message Generation follows the classical Natural Language Generation (NLG) pipeline described by Reiter and Dale (2000). In the context of Request Interpretation, a “request” is not necessarily a question, but can also be any user input like “My name is John”. Equally, a “response” to this input could e.g. be “What a nice name”."
  }, {
    "heading": "4 NLU Services",
    "text": "The general goal of NLU services is the extraction of structured, semantic information from unstructured natural language input, e.g. chat messages. They mainly do this by attaching user-defined la-\nbels to messages or parts of messages. At the time of writing, among the most popular NLU services are:\n• LUIS1\n• Watson Conversation2\n• API.ai3\n• wit.ai4\n• Amazon Lex5\nMoreover, there is a popular open source alternative which is called RASA6. RASA offers the same functionality, while lacking the advantages of cloud-based solutions (managed hosting, scalability, etc). On the other hand, it offers the typical advantages of self-hosted open source software (adaptability, data control, etc).\nTable 1 shows a comparison of the basic functionality offered by the different services. All of them, except for Amazon Lex, share the same basic concept: Based on example data, the user can train a classifier to classify so-called intents (which represent the intent of the whole message and are not bound to a certain position within the message) and entities (which can consist of a single or multiple characters).\nFigure 2 shows a labelled sentence in the LUIS web interface. The intent of this sentence was classified as FindConnection, with a confidence of 97%. The labelled entities are: (next, Criterion), (train, Vehicle), (Universität, StationStart), (MaxWeber-Platz, StationDest). Amazon Lex shares\n1https://www.luis.ai 2https://www.ibm.com/watson/\ndevelopercloud/conversation.html 3https://www.api.ai 4https://www.wit.ai 5https://aws.amazon.com/lex 6https://www.rasa.ai\nthe concept of intents with the other services, but instead of entities, Lex is using so-called slots, which are not trained by concrete examples, but example patterns like “When is the {Criterion} {Vehicle} to {StationDest}”. Moreover, all services, except for Amazon Lex, also offer an export and import functionality which uses a json-format to export and import the training data. While wit.ai offers this functionality, as of today, it only works reliably for creating backups and restoring them, but not importing new data7.\nWhen it comes to the core of the services, the machine learning algorithms and the data on which they are initially trained, all services are very secretive. None of them gives specific information about the used technologies and datasets.\n7cf. e.g. https://github.com/wit-ai/wit/ issues?q=is%3Aopen+is%3Aissue+label% 3Aimport\nThe exception in this case is, of course, RASA, which can either use MITIE (Geyer et al., 2016) or spaCy (Choi et al., 2015) as ML backend."
  }, {
    "heading": "5 Data Corpus",
    "text": "Our evaluation is based on two very different data corpora. The Chatbot Corpus (cf. Section 5.1) is based on questions gathered by a Telegram chatbot in production use, answering questions about public transport connections. The StackExchange Corpus (cf. Section 5.2) is based on data from two StackExchange8 platforms: ask ubuntu9 and Web Applications10. Both corpora are available on GitHub under the Creative Commons CC BY-SA 3.0 license11: https://github.com/sebischair/ NLU-Evaluation-Corpora."
  }, {
    "heading": "5.1 Chatbot Corpus",
    "text": "The Chatbot Corpus consists of 206 questions, which were manually labelled by the authors. There are two different intents (Departure Time,\n8https://www.stackexchange.com 9https://www.askubuntu.com\n10https://webapps.stackexchange.com 11https://creativecommons.org/licenses/\nby-sa/3.0/\nFind Connection) in the corpus and five different entity types (StationStart, StationDest, Criterion, Vehicle, Line). The general language of the questions was English, however, mixed with German street and station names. Example entries from the corpus can be found in Appendix A.1. For the evaluation, the corpus was split into a training dataset with 100 entries and a test dataset with 106 entries.\n43% of the questions in the training dataset belong to the intent Departure Time and 57% to Find Connection. The distribution for the test dataset is 33% (Departure Time) and 67% (Find Connection). Table 2 shows how the different entity types are distributed among the two datasets. While some entity types occur very often, like StationStart, some occur very rarely, especially Line. We do this differentiation to evaluate, if some services handle very common, or very rare, entity types better than others.\nWhile in this corpus, there are more tagged entities in the training dataset than in the test dataset, it is the other way round in the other corpus, which will be introduced in the next section. Although one might expect that this leads to better results, the evaluation in Section 7 shows that this is not necessarily the case."
  }, {
    "heading": "5.2 StackExchange Corpus",
    "text": "For the generation of the StackExchange corpus, we used the StackExchange Data Explorer12. We choose the most popular questions (i.e. questions with the highest scores and most views), from the two StackExchange platforms ask ubuntu and Web Applications, because they are likely to have a better linguistic quality and a higher relevance, compared to less popular questions. Additionally, we used only questions with an accepted, i.e. correct, answer. Although we did not use the answers in\n12https://data.stackexchange.com\nour evaluation, we included them in our corpus, in order to create a corpus that is not only useful for this particular evaluation, but also for research on question answering in general. In this way, we gathered 290 questions and answers in total, 100 from Web Applications and 190 from ask ubuntu.\nThe corpus was labelled with intents and entities using Amazon Mechanical Turk (AMT). Each question was labelled by five different workers, summing up to nearly 1,500 datapoints.\nFor each platform, we created a list of candidates for intents, which were extracted from the labels (i.e. tags) assigned to the questions by StackExchange users. For each question, the AMT workers were asked to chose one of these intents or “None”, if they think no candidate is fitting.\nFor ask ubuntu, the possible intents were: “Make Update”, “Setup Printer”, “Shutdown Computer”, and “Software Recommendation”.\nFor Web Applications, the candidates were: “Change Password”, “Delete Account”, “Download Video”, “Export Data”, “Filter Spam”, “Find Alternative”, and “Sync Accounts”.\nSimilarly, a set of entity type candidates were given. By marking parts of the questions with the mouse, workers could assign these entity types to words (or characters) within the question. For Web Applications the possible entity types were: “WebService”, “OperatingSystem” and “Browser”. For ask ubuntu, they were: “SoftwareName”, “Printer”, and “UbuntuVersion”.\nMoreover, workers were asked to state how confident they are in their assessment: very confident, somewhat confident, undecided, somewhat unconfident, or very unconfident.\nFor the generation of the annotated, final corpus, only submissions with a confidence level of “undecided” or higher were taken into account. A label, no matter if intent or entity, was only added to the corpus if the inter-annotator agreement among those confident annotators was 60% or higher. If no intent could be found for a question, satisfying these criteria, this question was not added to the corpus. The final corpus was also checked for false positives by two experts, but non were found. Therefore the final corpus consists of 251 entries, 162 from ask ubuntu and 89 from Web Applications. Example entries from the corpus are shown in Appendix A.2.\nFor the evaluation, we also split this corpus.\nFour datasets were separated, one for training and one for testing, for each platform. The distribution of intents among these datasets is shown in Table 3, the distribution of entity types is shown in Table 4. Again, we do this differentiation to compare the classification results for frequently and rarely occurring intents and entity types."
  }, {
    "heading": "6 Experimental Design",
    "text": "In order to compare the performance of the different NLU services, we used the corpora described in Section 5. We used the respective training\ndatasets to train the NLU services LUIS, Watson Conversation, API.ai, and RASA. Amazon Lex was not included in this comparison because, as mentioned in Section 4, it does not offer a batch import functionality, which is crucial in order to effectively train all services with the exact same data. For the same reason, wit.ai was also excluded from the experiment. While it does offer an import option, currently, it only works reliable for data which was created through the wit.ai webinterface and not altered, or even created, manually.\nAfterwards, the test datasets were sent to the NLU services and the labels created by the services were compared against our human created gold standard. For training, we used the batch import interfaces, offered by all compared services, in this way it was not only possible to train all different services relatively fast, despite many hundred individual labels, it also guaranteed, that all services are fed with exactly the same data. Since the data format differs from service to service, we used a Python script to automatically convert the training datasets from the format shown in the Appendix to the respective data format of the services. For retrieving the results for the test datasets from the NLU services, their respective RESTAPIs were used.\nIn order to evaluate the results, we calculated true positives, false positives, and false negatives, based on exact matches. Based on this data, we computed precision and recall as well as F-score for single intents, entity types, and corpora, as well as overall results. We will say one service is better than another if it has a higher F-score."
  }, {
    "heading": "6.1 Hypotheses",
    "text": "Before the conduction of the experiment, we had three main hypotheses:\n1. The performance varies between services: Although it might sound obvious, it is worth mentioning that one of the reasons for this evaluation is the fact that we think, there is a difference between the compared NLU services. Despite their very similar concepts and “look and feel”, we expect differences when it comes to annotation quality (i.e. F-scores), which should be taken into account when deciding for one or another service.\n2. The commercial products will (overall) perform better:\nThe initial language model of RASA, which comes with MITIE, is about 300 MB of data. The commercial services, on the other hand, are fed with data by hundreds, if not thousands, of users every day. We, therefore, assume, that the commercial products will perform better in the evaluation, especially when the training data is sparse.\n3. The quality of the labels is influenced by the domain: We assume that, depending on the used algorithms and models, individual services will perform differently in different domains. Therefore, we think it is not unlikely that a service which performs well on the more technical corpus from StackExchange will perform considerably worse on the chatbot corpus, which has a focus on spatial and time data, and vice versa."
  }, {
    "heading": "6.2 Limitations",
    "text": "One important limitation of this evaluation is the fact that the results will not be representative for other domains. On the opposite, as already mentioned in Hypothesis 3, we do believe that there are important differences in performance between different domains. Therefore our final conclusion can not be that one service is absolutely better than the others, but rather that on the given corpus, one service performed better than the others. However, we believe that the here presented approach will help developers to conduct evaluations of NLU services for their domain and thus empower them to make better-informed decisions.\nWith regard to the used corpora, we made an effort to make them as naturally as possible by using only real data from real users. However, when analysing the results, one should keep in mind that the Chatbot Corpus consists of questions which were asked by users, which were aware of communicating with a chatbot. It is, therefore, conceivable that they formulated their questions in a way which they expect to be more understandable for a chatbot.\nFinally, NLU services, like all other services, can change over time (and hopefully improve). While it is easy to track these changes for locally installed software, changes on cloud-based services may happen without any notice to the user. Conducting the very same experiment, described in this paper, in six months time, might, therefore,\nlead to different results. This evaluation can therefore only be a snapshot of the current state of the compared services. While this might decrease the reproducibility of our experiment, it is also a good argument for a formalized, repeatable evaluation process, as we describe it in this paper."
  }, {
    "heading": "7 Evaluation",
    "text": "The detailed results of the evaluation, broken down on single intents, entity types, corpora, and overall, are shown in Table 5 to 8. Each table shows the result from a different NLU service. Within the tables, each row represents one particular entity type or intent.\nFor each row, the corpus, type (intent/entity), and true positives, false negatives, and false positives are given. From these values, precision, recall, and F-score have been calculated. The entity types and intents are also sorted by the corpus they appear in. For each corpus, there is a summary row, which shows precision, recall, and Fscore for the whole corpus. At the bottom of each table, there is also an overall summary.\nFrom a high-level perspective, LUIS performed best with an F-score of 0.916, followed by RASA (0.821), Watson Conversation (0.752), and API.ai (0.687). LUIS also performed best on each individual dataset: chatbot, web apps, and ask ubuntu. Similarly, API.ai performed worst on every dataset, while the second place changes between RASA and Watson Conversation (cf. Figure 3).\nBased on this data, the second hypothesis can be rejected. Although the best performance was indeed shown by a commercial product, RASA easily competes with the other commercial products.\nThe first hypothesis is supported by our findings. We can see a difference between the services, with the F-score of LUIS being nearly 0.3 higher than the F-score of API.ai. However, a conducted two-way ANOVA analysis with the Fscore as dependent variable and the NLU service and the entity type/intent as fixed factors does not show a significance at the level of p < 0.05 (p = 0.234, df = 3). An even larger corpus might be necessary to get quantitatively more robust results.\nWith regard to the third hypothesis, the picture is less clear. Although we can see a clear influence of the domain on the F-score within each service, the ranking between different services is not\nmuch influenced. LUIS always performs best, independent from the domain, API.ai always worst, also independent from the domain, merely the second and third place changes. Therefore, although the domain influences the results, it is not clear whether or not it should also influence the decision which service should be used.\nOn a more detailed level, we also see differences between entities and intents. Especially API.ai seems to have big troubles identifying entities. On the web apps corpus, for example, API.ai did not identify a single occurrence of the entity type WebService, which occurred 64 times in the dataset. If we calculate the F-score for this dataset only based on the intents, it would increase from 0.519 to 0.803. The overall results of API.ai were therefore heavily influenced by its shortcomings regarding entity detection.\nIf we look at intents and entity types with sparse training data, like Line, ChangePassword, and ExportData, other than we expected, we do not see a significantly better performance of commercial services."
  }, {
    "heading": "8 Conclusion",
    "text": "The evaluation of the NLU services LUIS, Watson Conversation, API.ai, and RASA, based on the two corpora we presented in Section 5, has shown that the quality of the annotations differs between the different services. Before using an NLU service, no matter if for commercial or scientific purposes, one should therefore compare the different services with domain specific data.\nFor our two corpora, LUIS showed the best results, however, the open source alternative RASA could achieve similar results. Given the advantages of open source solutions (mainly adaptability), it might well be possible to achieve an even better results with RASA, after some customization.\nWith regard to absolute numbers, it is difficult to decide whether an F-score of 0.916 or 0.821 is satisfactory for productive use within a conversational question answering system. This decision also depends strongly on the concrete use case. We, therefore, focused on relative comparisons in our evaluation and leave this decision to future users."
  }, {
    "heading": "A Supplemental Material",
    "text": "A.1 Examples Chatbot Corpus\n{ \"text\": \"what is the cheapest\n↪→ connection between ↪→ quiddestraße and ↪→ hauptbahnhof?\",\n\"intent\": \"FindConnection\", \"entities\": [\n{ \"entity\": \"Criterion\", \"start\": 3, \"stop\": 3\n}, {\n\"entity\": \"StationStart\", \"start\": 6, \"stop\": 6\n}, {\n\"entity\": \"StationDest\", \"start\": 8, \"stop\": 8\n} ]\n}, {\n\"text\": \"when is the next u6 ↪→ leaving from garching?\",\n\"intent\": \"DepartureTime\", \"entities\": [\n{ \"entity\": \"Line\", \"start\": 4, \"stop\": 4\n}, {\n\"entity\": \"StationStart\", \"start\": 7, \"stop\": 7\n} ]\n}\nA.2 Examples StackExchange Corpus\nA.2.1 Web Applications Dataset\n{ \"text\": \"How can I delete my\n↪→ Twitter account?\",\n\"url\": \"http:// ↪→ webapps.stackexchange.com ↪→ /questions/57/how-can-i↪→ delete-my-twitter-account ↪→ \",\n\"author\": \"Jared Harley\", \"answer\": {\n\"text\": \"[...]\", \"author\": \"Ken Pespisa\"\n}, \"intent\": \"Delete Account\", \"entities\": [\n{ \"text\": \"Twitter\", \"stop\": 5, \"start\": 5, \"entity\": \"WebService\"\n} ]\n}, {\n\"text\": \"Is it possible to ↪→ export my data from ↪→ Trello to back it up?\",\n\"url\": \"http:// ↪→ webapps.stackexchange.com ↪→ /questions/18975/is-it↪→ possible-to-export-my↪→ data-from-trello-to-back↪→ it-up\",\n\"author\": \"Clare Macrae\", \"answer\": {\n\"text\": \"[...]\", \"author\": \"Daniel LeCheminant\n↪→ \" }, \"intent\": \"Export Data\", \"entities\": [\n{ \"text\": \"Trello\", \"stop\": 8, \"start\": 8, \"entity\": \"WebService\"\n} ]\n}\nA.2.2 Ask Ubuntu Dataset\n{ \"text\": \"How do I install the\n↪→ HP F4280 printer?\", \"url\": \"http://askubuntu.com/\n↪→ questions/24073/how-do-i↪→ install-the-hp-f4280↪→ printer\",\n\"author\": \"ok comp\", \"answer\": {\n\"text\": \"[...]\", \"author\": \"nejode\"\n}, \"intent\": \"Setup Printer\", \"entities\": [\n{ \"text\": \"HP F4280\", \"stop\": 6, \"start\": 5, \"entity\": \"Printer\"\n} ]\n}, {\n\"text\": \"What is a good MongoDB ↪→ GUI client?\",\n\"url\": \"http://askubuntu.com/ ↪→ questions/196136/what-is↪→ a-good-mongodb-gui-client ↪→ \",\n\"author\": \"Eyal\", \"answer\": {\n\"text\": \"[...]\", \"author\": \"Eyal\"\n}, \"intent\": \"Software\n↪→ Recommendation\", \"entities\": [\n{ \"text\": \"MongoDB\", \"stop\": 4, \"start\": 4, \"entity\": \"SoftwareName\"\n} ]\n}"
  }],
  "year": 2017,
  "references": [{
    "title": "Fast, cheap, and creative: evaluating translation quality using amazon’s mechanical turk",
    "authors": ["Chris Callison-Burch."],
    "venue": "Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 1-Volume 1. Association for",
    "year": 2009
  }, {
    "title": "It depends: Dependency parser comparison using A web-based evaluation tool",
    "authors": ["Jinho D. Choi", "Joel R. Tetreault", "Amanda Stent."],
    "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguistics and the 7th In-",
    "year": 2015
  }, {
    "title": "Nlp meets the cloud",
    "authors": ["Robert Dale."],
    "venue": "Natural Language Engineering 21(4):653–659. https://doi.org/10.1017/S1351324915000200.",
    "year": 2015
  }, {
    "title": "The rise of social bots",
    "authors": ["Emilio Ferrara", "Onur Varol", "Clayton Davis", "Filippo Menczer", "Alessandro Flammini."],
    "venue": "Communications of the ACM 59(7):96–104.",
    "year": 2016
  }, {
    "title": "Named entity recognition in 140 characters or less",
    "authors": ["Kelly Geyer", "Kara Greenfield", "Alyssa Mensch", "Olga Simek."],
    "venue": "6th Workshop on Making Sense of Microposts (#Microposts2016). pages 78–79.",
    "year": 2016
  }, {
    "title": "Applying chatbots to the internet of things: Opportunities and architectural elements",
    "authors": ["Rohan Kar", "Rishin Haldar."],
    "venue": "arXiv preprint arXiv:1611.03799 .",
    "year": 2016
  }, {
    "title": "A survey on question answering technology from an information retrieval perspective",
    "authors": ["Oleksandr Kolomiyets", "Marie-Francine Moens."],
    "venue": "Inf. Sci. 181(24):5412–5434. https://doi.org/10.1016/j.ins.2011.07.047.",
    "year": 2011
  }, {
    "title": "The Conversational Interface: Talking to Smart Devices, Springer International Publishing, Cham, chapter Implementing Spoken Language Understanding, pages 187–208",
    "authors": ["Michael McTear", "Zoraida Callejas", "David Griol"],
    "year": 2016
  }, {
    "title": "Which asr should i choose for my dialogue system",
    "authors": ["Fabrizio Morbini", "Kartik Audhkhasi", "Kenji Sagae", "Ron Artstein", "Dogan Can", "Panayiotis Georgiou", "Shri Narayanan", "Anton Leuski", "David Traum."],
    "venue": "Proceedings of the 14th annual SIGdial Meeting",
    "year": 2013
  }, {
    "title": "Building Natural Language Generation Systems",
    "authors": ["Ehud Reiter", "Robert Dale."],
    "venue": "Studies in Natural Language Processing. Cambridge University Press.",
    "year": 2000
  }, {
    "title": "Evaluation of nlp systems",
    "authors": ["Philip Resnik", "Jimmy Lin."],
    "venue": "The handbook of computational linguistics and natural language processing 57.",
    "year": 2010
  }, {
    "title": "Nlu vs",
    "authors": ["Dirk Schnelle-Walka", "Stefan Radomski", "Benjamin Milde", "Chris Biemann", "Max Mühlhäuser."],
    "venue": "dialog management: To whom am i speaking? In Joint Workshop on Smart Connected and Wearable Things (SCWT’2016), co-located with",
    "year": 2016
  }, {
    "title": "Different measurements metrics to evaluate a chatbot system",
    "authors": ["Bayan Abu Shawar", "Eric Atwell."],
    "venue": "Proceedings of the Workshop on Bridging the Gap: Academic and Industrial Research in Dialog Technologies. Association",
    "year": 2007
  }, {
    "title": "Cheap and fast—but is it good?: Evaluating non-expert annotations for natural language tasks",
    "authors": ["Rion Snow", "Brendan O’Connor", "Daniel Jurafsky", "Andrew Y. Ng"],
    "venue": "In Proceedings of the Conference on Empirical",
    "year": 2008
  }, {
    "title": "Rapid prototyping of formdriven dialogue systems using an open-source framework",
    "authors": ["Svetlana Stoyanchev", "Pierre Lison", "Srinivas Bangalore."],
    "venue": "Proceedings of the 17th Annual Meeting of the Special Interest Group on Dis-",
    "year": 2016
  }, {
    "title": "Computing machinery and intelligence",
    "authors": ["Alan M Turing."],
    "venue": "Mind 59(236):433–460.",
    "year": 1950
  }, {
    "title": "Improving domainindependent cloud-based speech recognition with domain-dependent phonetic post-processing",
    "authors": ["Johannes Twiefel", "Timo Baumann", "Stefan Heinrich", "Stefan Wermter."],
    "venue": "AAAI. pages 1529–1536.",
    "year": 2014
  }],
  "id": "SP:7e807c67e80be2e1ef69242a8531f1d28cc58cae",
  "authors": [{
    "name": "Daniel Braun",
    "affiliations": []
  }, {
    "name": "Adrian Hernandez Mendez",
    "affiliations": []
  }, {
    "name": "Florian Matthes Manfred Langen",
    "affiliations": []
  }],
  "abstractText": "Conversational interfaces recently gained a lot of attention. One of the reasons for the current hype is the fact that chatbots (one particularly popular form of conversational interfaces) nowadays can be created without any programming knowledge, thanks to different toolkits and socalled Natural Language Understanding (NLU) services. While these NLU services are already widely used in both, industry and science, so far, they have not been analysed systematically. In this paper, we present a method to evaluate the classification performance of NLU services. Moreover, we present two new corpora, one consisting of annotated questions and one consisting of annotated questions with the corresponding answers. Based on these corpora, we conduct an evaluation of some of the most popular NLU services. Thereby we want to enable both, researchers and companies to make more educated decisions about which service they should use.",
  "title": "Evaluating Natural Language Understanding Services for Conversational Question Answering Systems"
}