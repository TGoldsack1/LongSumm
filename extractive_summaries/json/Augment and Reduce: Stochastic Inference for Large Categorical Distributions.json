{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Categorical distributions are fundamental to many areas of machine learning. Examples include classification (Gupta et al., 2014), language models (Bengio et al., 2006), recommendation systems (Marlin & Zemel, 2004), reinforcement learning (Sutton & Barto, 1998), and neural attention models (Bahdanau et al., 2015). They also play an important role in discrete choice models (McFadden, 1978).\nA categorical is a die with K sides, a discrete random variable that takes on one of K unordered outcomes; a categorical distribution gives the probability of each possible outcome. Categorical variables are challenging to use when there are many possible outcomes. Such large categoricals appear in common applications such as image classification\n1University of Cambridge. 2Columbia University. 3Athens University of Economics and Business.. Correspondence to: Francisco J. R. Ruiz <f.ruiz@eng.cam.ac.uk, f.ruiz@columbia.edu>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\nwith many classes, recommendation systems with many items, and language models over large vocabularies. In this paper, we develop a new method for fitting and using large categorical distributions.\nThe most common way to form a categorical is through the softmax transformation, which maps a K-vector of reals to a distribution of K outcomes. Let ψ be a real-valued K-vector. The softmax transformation is\np(y = k |ψ) = exp {ψk}∑ k′ exp {ψk′} . (1)\nNote the softmax is not the only way to map real vectors to categorical distributions; for example, the multinomial probit (Albert & Chib, 1993) is an alternative. Also note that in many applications, such as in multiclass classification, the parameter ψk is a function of per-sample features x. For example, a linear classifier forms a categorical over classes through a linear combination, ψk = w>k x.\nWe usually fit a categorical with maximum likelihood estimation or any other closely related strategy. Given a dataset y1:N of categorical data—each yn is one of K values—we aim to maximize the log likelihood,\nLlog likelihood = N∑ n=1 log p(yn |ψ). (2)\nFitting this objective requires evaluating both the log probability and its gradient.\nEqs. 1 and 2 reveal the challenge to using large categoricals. Evaluating the log probability and evaluating its gradient are both O(K) operations. But this is not OK: most algorithms for fitting categoricals—for example, stochastic gradient ascent—require repeated evaluations of both gradients and probabilities. When K is large, these algorithms are prohibitively expensive.\nHere we develop a method for fitting large categorical distributions, including the softmax but also more generally. It is called augment and reduce (A&R). A&R rewrites the categorical distribution with an auxiliary variable ε,\np(y |ψ) = ∫ p(y, ε |ψ)dε. (3)\nA&R then replaces the expensive log probability with a variational bound on the integral in Eq. 3. Using stochastic\nvariational methods (Hoffman et al., 2013), the cost to evaluate the bound (or its gradient) is far below O(K).\nBecause it relies on variational methods, A&R provides a lower bound on the marginal likelihood of the data. With this bound, we can embed A&R in a larger algorithm for fitting a categorical, e.g., a (stochastic) variational expectation maximization (VEM) algorithm (Beal, 2003). Though we focus on maximum likelihood, we can also use A&R in other algorithms that require log p(y |ψ) or its gradient, e.g., fully Bayesian approaches (Gelman et al., 2003) or the REINFORCE algorithm (Williams, 1992).\nWe study A&R on linear classification tasks with up to 104 classes. On simulated and real data, we find that it provides accurate estimates of the categorical probabilities and gives better performance than existing approaches.\nRelated work. There are many methods to reduce the cost of large categorical distributions, particularly under the softmax transformation. These include methods that approximate the exact computations (Gopal & Yang, 2013; Vijayanarasimhan et al., 2014), those that rely on sampling (Bengio & Sénécal, 2003; Mikolov et al., 2013; Devlin et al., 2014; Ji et al., 2016; Botev et al., 2017), those that use approximations and distributed computing (Grave et al., 2017), double-sum formulations (Raman et al., 2017; Fagan & Iyengar, 2018), and those that avail themselves of other techniques such as noise contrastive estimation (Smith & Jason, 2005; Gutmann & Hyvärinen, 2010) or random nearest neighbor search (Mussmann et al., 2017).\nOther methods change the model. They might replace the softmax transformation with a hierarchical or stickbreaking model (Kurzynski, 1988; Morin & Bengio, 2005; Tsoumakas et al., 2008; Beygelzimer et al., 2009; Dembczyński et al., 2010; Khan et al., 2012). These approaches can be successful, but the structure of the hierarchy may influence the learned probabilities. Other methods replace the softmax with a scalable spherical family of losses (Vincent et al., 2015; de Brébisson & Vincent, 2016).\nA&R is different from all of these techniques. Unlike many of them, it provides a lower bound on the log probability rather than an approximation. The bound is useful because it can naturally be embedded in algorithms like stochastic VEM. Further, the A&R methodology applies to transformations beyond the softmax. In this paper, we study large categoricals via softmax, multinomial probit, and multinomial logistic. A&R is the first scalable approach for the two latter models. It accelerates any transformation that can be recast as an additive noise model (e.g., Gumbel, 1954; Albert & Chib, 1993).\nThe approach that most closely relates to A&R is the one-vseach (OVE) bound of Titsias (2016), which is a lower bound of the softmax. Like the other related methods, it is narrower\nthan A&R in that it does not apply to transformations beyond the softmax. We also empirically compare A&R to OVE in Section 4. A&R provides a tighter lower bound and yields better predictive performance."
  }, {
    "heading": "2. Augment and Reduce",
    "text": "We develop augment and reduce (A&R), a method for computing with large categorical random variables.\nThe utility perspective. A&R uses the additive noise model perspective on the categorical, which we refer to as the utility perspective. Define a mean utility ψk for each possible outcome k ∈ {1, . . . ,K}. To draw a variable y from a categorical, we draw a zero-mean noise term εk for each possible outcome and then choose the value that maximizes the realized utility ψk + εk. This corresponds to the following process,\nεk ∼ φ(·), k ∈ {1, . . . ,K}, y = argmax\nk (ψk + εk) .\n(4)\nNote the errors εk are drawn fresh each time we draw a variable y. We assume that the errors are independent of each other, independent of the mean utility ψk, and identically distributed according to some distribution φ(·).\nNow consider the model where we marginalize the errors from Eq. 4. This results in a distribution p(y |ψ), a categorical that transforms ψ to the simplex. Depending on the distribution of the errors, this induces different transformations. For example, a standard Gumbel distribution recovers the softmax transformation; a standard Gaussian recovers the multinomial probit transformation; a standard logistic recovers the multinomial logistic transformation.\nTypically, the mean utility ψk is a function of observed features x, e.g., ψk = x>wk in linear models or ψk = fwk(x) in non-linear settings. In both cases, wk are model parameters, relating the features to mean utilities.\nLet us focus momentarily on a linear classification problem under the softmax model. For each observation n, the mean utilities are ψnk = x>nwk and the random errors εnk are Gumbel distributed. After marginalizing out the errors, the probability that observation n is in class k is given by Eq. 1, p(yn = k |xn, w) ∝ exp{x>nwk}. Fitting the classifier involves learning the weights wk that parameterize ψ. For example, maximum likelihood uses gradient ascent to maximize ∑ n log p(yn |xn, w) with respect to w.\nLarge categoricals. When the number of outcomes K is large, the normalizing constant of the softmax is a computational burden; it is O(K). Consequently, it is burdensome to calculate useful quantities like log p(yn |xn, w) and its gradient ∇w log p(yn |xn, w). As an ultimate consequence, maximum likelihood estimation is slow—it needs to evalu-\nate the gradient for each n at each iteration.\nIts difficulty scaling is not unique to the softmax. Similar issues arise for the multinomial probit and multinomial logistic. With these transformations as well, evaluating likelihoods and related quantities is O(K)."
  }, {
    "heading": "2.1. Augment and reduce",
    "text": "We introduce A&R to relieve this burden. A&R accelerates training in models with categorical distributions and a large number of outcomes.\nRather than operating directly on the marginal p(y |ψ), A&R augments the model with one of the error terms and forms a joint p(y, ε |ψ). (We drop the subscript n to avoid cluttered notation.) This augmented model has a desirable property: its log-joint is a sum over all the possible outcomes. A&R then reduces—it subsamples a subset of outcomes to construct estimates of the log-joint and its gradient. As a result, its complexity relates to the size of the subsample, not the total number of outcomes K.\nThe augmented model. Let φ(ε) be the distribution over the error terms, and Φ(ε) = ∫ ε −∞ φ(τ)dτ the corresponding cumulative distribution function (CDF). The marginal probability of outcome k is the probability that its realized utility (ψk + εk) is greater than all others,\np(y = k |ψ) = Pr (ψk + εk ≥ ψk′ + εk′ ∀k′ 6= k) .\nWe write this probability as an integral over the kth error εk using the CDF of the other errors, p(y = k |ψ) = ∫ +∞ −∞ φ(εk) (∏ k′ 6=k ∫ εk+ψk−ψk′ −∞ φ(εk′)dεk′ ) dεk\n= ∫ +∞ −∞ φ(ε) (∏ k′ 6=k Φ(ε+ ψk − ψk′) ) dε. (5)\n(We renamed the dummy variable εk as ε to avoid clutter.) Eq. 5 is the same as found by Girolami & Rogers (2006) for the multinomial probit model, although we do not assume a Gaussian density φ(ε). Rather, we only assume that we can evaluate both φ(ε) and Φ(ε).\nWe derived Eq. 5 from the utility perspective, which encompasses many common models. We obtain the softmax by choosing a standard Gumbel distribution for φ(ε), in which case Eqs. 1 and 5 are equivalent. We obtain the multinomial probit by choosing a standard Gaussian distribution over the errors, and in this case the integral in Eq. 5 does not have a closed form. Similarly, we obtain the multinomial logistic by choosing a standard logistic distribution φ(ε). What is important is that regardless of the model, the cost to compute the marginal probability p(y = k |ψ) is O(K).\nWe now augment the model with the auxiliary latent variable ε to form the joint distribution p(y, ε |ψ),\np(y = k, ε |ψ) = φ(ε) ∏ k′ 6=k Φ(ε+ ψk − ψk′). (6)\nThis is a model that includes the kth error term from Eq. 4 but marginalizes out all the other errors. By construction, marginalizing ε from Eq. 6 recovers the original model p(y |ψ) in Eq. 5. Figure 1 illustrates this idea.\nRiihimäki et al. (2013) used Eq. 6 in the nested expectation propagation for Gaussian process classification. We use it to scale learning with categorical distributions.\nThe variational bound. The augmented model in Eq. 6 involves one latent variable ε. But our goal is to calculate the marginal log p(y |ψ) and its gradient. A&R derives a variational lower bound on log p(y |ψ) using the joint in Eq. 6. Define q(ε) to be a variational distribution on the auxiliary variable. The bound is log p(y |ψ) ≥ L, where\nL = Eq(ε) [ log p(y = k, ε |ψ)− log q(ε) ] (7)\n= Eq(ε) [ log φ(ε) + ∑ k′ 6=k logΦ(ε+ ψk − ψk′)− log q(ε) ] .\nIn Eq. 7, L is the evidence lower bound (ELBO); it is tight when q(ε) is equal to the posterior of ε given y, p(ε | y, ψ) (Jordan et al., 1999; Blei et al., 2017).\nThe ELBO contains a summation over the outcomes k′ 6= k. A&R exploits this property to reduce complexity, as we describe below. Next we show how to use the bound in a variational expectation maximization (VEM) procedure and we describe the reduce step of A&R.\nVariational expectation maximization. Consider again a linear classification task, where we have a dataset of features xn and labels yn ∈ {1, . . . ,K} for n = 1, . . . , N . The mean utility for each observation n is ψnk = w>k xn, and the goal is to learn the weights wk by maximizing the log likelihood ∑ n log p(yn |xn, w).\nA&R replaces each term in the data log likelihood with its bound using Eq. 7. The objective becomes ∑ n L(n). Maximizing this objective requires an iterative process with two steps. In one step, A&R optimizes the objective with respect to w. In the other step, A&R optimizes each L(n) with respect to the variational distribution. The resulting procedure takes the form of a VEM algorithm (Beal, 2003).\nThe VEM algorithm requires optimizing the ELBO with respect to w and the variational distributions.1 This is challenging for two reasons. First, the expectations in Eq. 7 might not be tractable. Second, the cost to compute the gradients of Eq. 7 is still O(K).\nSection 3 addresses these issues. To sidestep the intractable expectations, A&R forms unbiased Monte Carlo estimates of the gradient of the ELBO. To alleviate the computational complexity, A&R uses stochastic optimization, subsampling a set of outcomes k′.\nReduce by subsampling. The subsampling step in the VEM procedure is one of the key ideas behind A&R. Since Eq. 7 contains a summation over the outcomes k′ 6= k, we can apply stochastic optimization techniques to obtain unbiased estimates of the ELBO and its gradient.\nMore specifically, consider the gradient of the ELBO in Eq. 7 with respect to w (the parameters of ψ). It is\n∇wL = ∑ k′ 6=k Eq(ε) [ ∇w logΦ(ε+ ψk − ψk′) ] .\nA&R estimates this by first randomly sampling a subset of outcomes S ⊆ {1, . . . ,K} {k} of size |S|. A&R then uses the outcomes in S to approximate the gradient,\n∇̃wL = K − 1 |S| ∑ k′∈S Eq(ε) [ ∇w logΦ(ε+ ψk − ψk′) ] .\nThis is an unbiased estimator2 of the gradient ∇wL. Crucially, A&R only needs to iterate over |S| outcomes to obtain it, reducing the complexity to O(|S|).\nThe reduce step is also applicable to optimize the ELBO with respect to q(ε). Section 3 gives further details about the stochastic VEM procedure in different settings."
  }, {
    "heading": "3. Algorithm Description",
    "text": "Here we provide the details to run the variational expectation maximization (VEM) algorithm for the softmax model (Sec-\n1Note that maximizing the ELBO in Eq. 7 with respect to the distribution q(ε) is equivalent to minimizing the Kullback-Leibler divergence from q(ε) to the posterior p(ε | y, ψ).\n2This is not the only way to construct an unbiased estimator. Alternatively, we can draw the outcomes k′ using importance sampling, taking into account the frequency of each class. We leave this for future work.\ntion 3.1) and for more general models including the multinomial probit and multinomial logistic (Section 3.2). These models only differ in the prior over the errors φ(ε).\nAugment and reduce (A&R) is not limited to point-mass estimation of the parameters w. It is straightforward to extend the algorithm to perform posterior inference on w via stochastic variational inference, but for simplicity we describe maximum likelihood estimation."
  }, {
    "heading": "3.1. Augment and Reduce for Softmax",
    "text": "In the softmax model, the distribution over the error terms is a standard Gumbel (Gumbel, 1954),\nφsoftmax(ε) = exp{−ε− e−ε}, Φsoftmax(ε) = exp{−e−ε}.\nIn this model, the optimal distribution q?(ε), which achieves equality in the bound, has closed-form expression:\nq?softmax(ε) = Gumbel(ε ; log η ?, 1), with η? = 1 + ∑ k′ 6=k e\nψk′−ψk . However, even though q?softmax(ε) has an analytic form, its parameter η\n? is computationally expensive to obtain because it involves a summation over K − 1 classes. Instead, we set\nqsoftmax(ε ; η) = Gumbel(ε ; log η, 1).\nSubstituting this choice for qsoftmax(ε ; η) into Eq. 7 gives the following evidence lower bound (ELBO):\nLsoftmax = 1− log(η)− 1\nη 1 + ∑ k′ 6=k eψk′−ψk  . (8) Eq. 8 coincides with the log-concavity bound (Bouchard, 2007; Blei & Lafferty, 2007), although we have derived it from a completely different perspective. This derivation allows us to optimize η efficiently, as we describe next.\nThe Gumbel(ε ; log η, 1) is an exponential family distribution whose natural parameter is η. This allows us to use natural gradients in the stochastic inference procedure. A&R iterates between a local step, in which we update η, and a global step, in which we update the parameters ψ.\nIn the local step (E step), we optimize η by taking a step in the direction of the noisy natural gradient, yielding ηnew = (1 − α)ηold + αη̃. Here, η̃ is an estimate of the optimal natural parameter, which we obtain using a random set of outcomes, i.e., η̃ = 1 + K−1|S| ∑ k′∈S e\nψk′−ψk , where S ⊆ {1, . . . ,K} {k}. The parameter α is the step size; it must satisfy the Robbins-Monro conditions (Robbins & Monro, 1951; Hoffman et al., 2013).\nIn the global step (M step), we take a gradient step with respect to w (the parameters of ψ), holding η fixed. Similarly, we can estimate the gradient of Eq. 8 with complexity O(|S|) by leveraging stochastic optimization.\nAlgorithm 1 Softmax A&R for classification Input: data (xn, yn), minibatch sizes |B| and |S| Output: weights w = {wk}Kk=1 Initialize all weights and natural parameters for iteration t = 1, 2, . . . , do # Sample minibatches: Sample a minibatch of data, B ⊆ {1, . . . , N} for n ∈ B do\nSample a set of labels, Sn ⊆ {1, . . . ,K} {yn} end for # Local step (E step): for n ∈ B do\nCompute η̃n = 1 + K−1|S| ∑ k′∈Sn e ψnk′−ψnyn\nUpdate natural param., ηn ← (1−α(t))ηn+α(t)η̃n end for # Global step (M step): Set g = − N|B| K−1 |S| ∑ n∈B 1 ηn ∑ k′∈Sn∇we ψnk′−ψnyn\nGradient step on the weights, w ← w + ρ(t)g end for\nAlgorithm 1 summarizes the procedure for a classification task. In this example, the dataset consists of N datapoints (xn, yn), where xn is a feature vector and yn ∈ {1, . . . ,K} is the class label. Each observation is associated with its parameters ψnk; e.g., ψnk = x>nwk. We posit a softmax likelihood, and we wish to infer the weights via maximum likelihood using A&R. Thus, the objective function is∑ n L (n) softmax. (It is straightforward to obtain the maximum a posteriori solution by adding a regularizer.) At each iteration, we process a random subset of observations as well as a random subset of classes for each one.\nFinally, note that we can perform posterior inference on the parameters w (instead of maximum likelihood) using A&R. One way is to consider a variational distribution q(w) and take gradient steps with respect to the variational parameters of q(w) in the global step, using the reparameterization trick (Rezende et al., 2014; Titsias & Lázaro-Gredilla, 2014; Kingma & Welling, 2014) to approximate that gradient. In the local step, we only need to evaluate the moment generating function, estimating the optimal natural parameter as η̃ = 1 + K−1|S| ∑ k′∈S Eq(w) [ eψk′−ψk ] ."
  }, {
    "heading": "3.2. Augment and Reduce for Other Models",
    "text": "For most models, the expectations of the ELBO in Eq. 7 are intractable, and there is no closed-form solution for the optimal variational distribution q?(ε). Fortunately, we can apply A&R, using the reparameterization trick to build Monte Carlo estimates of the gradient of the ELBO with respect to the variational parameters (Rezende et al., 2014; Titsias & Lázaro-Gredilla, 2014; Kingma & Welling, 2014).\nMore in detail, consider the variational distribution q(ε ; ν),\nAlgorithm 2 General A&R for classification Input: data (xn, yn), minibatch sizes |B| and |S| Output: weights w = {wk}Kk=1 Initialize all weights and local variational parameters for iteration t = 1, 2, . . . , do # Sample minibatches: Sample a minibatch of data, B ⊆ {1, . . . , N} for n ∈ B do\nSample a set of labels, Sn ⊆ {1, . . . ,K} {yn} end for # Local step (E step): for n ∈ B do\nSample auxiliary variable un ∼ q(rep)(un) Transform auxiliary variable, εn = T (un ; νn) Estimate the gradient ∇̃νnL(n) (Eq. 9) Update variational param., νn ← νn+α(t)∇̃νnL(n)\nend for # Global step (M step): Sample εn ∼ q(εn ; νn) for all n ∈ B Set g= N|B| K−1 |S| ∑ n∈B ∑ k′∈Sn ∇wlogΦ(εn+ψnyn−ψnk′)\nGradient step on the weights, w ← w + ρ(t)g end for\nparameterized by some variational parameters ν. We assume that this distribution is reparameterizable, i.e., we can sample from q(ε ; ν) by first sampling an auxiliary variable u ∼ q(rep)(u) and then setting ε = T (u ; ν).\nIn the local step, we fit q(ε ; ν) by taking a gradient step of the ELBO with respect to the variational parameters ν. Since the expectations in Eq. 7 are not tractable, we obtain Monte Carlo estimates by sampling ε from the variational distribution. To sample ε, we sample u ∼ q(rep)(u) and set ε = T (u ; ν). To alleviate the computational complexity, we apply the reduce step, sampling a random subset S ⊆ {1, . . . ,K} {k} of outcomes. We thus form a one-sample gradient estimator as\n∇̃νL = ∇ε log p̃(y, ε |ψ)∇νT (u ; ν) +∇νH[q(ε ; ν)], (9) where H[q(ε ; ν)] is the entropy of the variational distribution,3 and log p̃(y, ε |ψ) is a log joint estimate,\nlog p̃(y, ε |ψ) = log φ(ε)+K − 1 |S| ∑ k′∈S logΦ(ε+ψk−ψk′).\nIn the global step, we estimate the gradient of the ELBO with respect to w. Following a similar approach, we obtain an unbiased one-sample gradient estimator as ∇̃wL = K−1 |S| ∑ k′∈S ∇w logΦ(ε+ ψk − ψk′).\nAlgorithm 2 summarizes the procedure to efficiently run\n3We can estimate the gradient of the entropy when it is not available analytically. Even when it is, the Monte Carlo estimator may have lower variance (Roeder et al., 2017).\nmaximum likelihood on a classification problem. We subsample observations and classes at each iteration.\nFinally, note that we can perform posterior inference on the parameters w by positing a variational distribution q(w) and taking gradient steps with respect to the variational parameters of q(w) in the global step. In this case, the reparameterization trick is needed in both the local and global step to obtain Monte Carlo estimates of the gradient.\nWe now particularize A&R for the multinomial probit and multinomial logistic models.\nA&R for multinomial probit. Consider a standard Gaussian distribution over the error terms,\nφprobit(ε) = 1√ 2π e− 1 2 ε 2 , Φprobit(ε) = ∫ ε −∞ φprobit(τ)dτ.\nA&R chooses a Gaussian variational distribution qprobit(ε ; ν) = N (ε ; µ, σ2) and fits the variational parameters ν = [µ, σ]>. The Gaussian is reparameterizable in terms of a standard Gaussian, i.e., q(rep)probit(u) = N (u ; 0, 1). The transformation is ε = T (u ; ν) = µ + σu. Thus, the gradients in Eq. 9 are ∇νT (u ; ν) = [1, u]> and ∇νH[qprobit(ε ; ν)] = [0, 1/σ]>.\nA&R for multinomial logistic. Consider now a standard logistic distribution over the errors,\nφlogistic(ε) = σ(ε)σ(−ε), Φlogistic(ε) = σ(ε),\nwhere σ(ε) = 11+e−ε is the sigmoid function. (The logistic distribution has heavier tails than the Gaussian.) Under this model, the ELBO in Eq. 7 takes the form\nLlogistic=Eq(ε) [ log\nσ(ε)σ(−ε) q(ε) + ∑ k′ 6=k log σ(ε+ψk−ψk′) ] .\nNote the close resemblance between this expression and the one-vs-each (OVE) bound of Titsias (2016),\nLOVE = ∑ k′ 6=k log σ(ψk − ψk′). (10)\nHowever, while the former is a bound on the multinomial logistic model, the OVE is a bound on the softmax.\nA&R sets qlogistic(ε ; ν) = 1βσ ( ε−µ β ) σ ( − ε−µβ ) , a logistic distribution. The variational parameters are ν = [µ, β]>. The logistic distribution is reparameterizable, with q(rep)logistic(u) = σ(u)σ(−u) and transformation ε = T (u ; ν) = µ+ βu. The gradient of the entropy in Eq. 9 is ∇νH[qlogistic(ε ; ν)] = [0, 1/β]>."
  }, {
    "heading": "4. Experiments",
    "text": "We showcase augment and reduce (A&R) on a linear classification task. Our goal is to assess the predictive performance\nof A&R in this classification task, to assess the quality of the marginal bound of the data, and to compare its complexity4 with existing approaches.\nWe run A&R for three different models of categorical distributions (softmax, multinomial probit, and multinomial logistic).5 For the softmax model, we compare A&R against the one-vs-each (OVE) bound (Titsias, 2016). Just like A&R, OVE is a rigorous lower bound on the marginal likelihood. It can also run on a single machine,6 and it has been shown to outperform other approaches.\nFor softmax, A&R runs nearly as fast as OVE but has better predictive performance and provides a tighter bound on the marginal likelihood than OVE. On two small datasets, the A&R bound closely reaches the marginal likelihood of exact softmax maximum likelihood estimation.\nWe now describe the experimental settings. In Section 4.1, we analyze synthetic data and K = 104 classes. In Section 4.2, we analyze five real datasets.\nExperimental setup. We consider linear classification, where the mean utilities are ψnk = w>k xn + w (0) k . We fit the model parameters (weights and biases) via maximum likelihood estimation, using stochastic gradient ascent. We initialize the weights and biases randomly, drawing from a Gaussian distribution with zero mean and standard deviation 0.1 (0.001 for the biases). For each experiment, we use the same initialization across all methods.\nAlgorithms 1 and 2 require setting a step size schedule for ρ(t). We use the adaptive step size sequence proposed by Kucukelbir et al. (2017), which combines RMSPROP (Tieleman & Hinton, 2012) and Adagrad (Duchi et al., 2011). We set the step size using the default parameters, i.e.,\nρ(t) = ρ0 × t−1/2+10 −16 × ( 1 + √ s(t) )−1 ,\ns(t) = 0.1(g(t))2 + 0.9s(t−1).\nWe set ρ0 = 0.02 and we additionally decrease ρ0 by a factor of 0.9 every 2000 iterations. We use the same step size sequence for OVE.\nWe set the step size α(t) in Algorithm 1 as α(t) = (1+t)−0.9, the default values suggested by Hoffman et al. (2013). For the step size α(t) in Algorithm 2, we set α(t) = 0.01(1 + t)−0.9. For the multinomial logit and multinomial probit A&R, we parameterize the variational distributions in terms of their means µ and their unconstrained scale parameter γ, such that the scale parameter is log(1 + exp(γ)).\n4We focus on runtime cost. A&R requires O(N) memory storage capacity due to the local variational parameters.\n5Code for A&R is available at https://github.com/ franrruiz/augment-reduce.\n6A&R is amenable to an embarrassingly parallel algorithm, but we focus on single-core procedures."
  }, {
    "heading": "4.1. Synthetic Dataset",
    "text": "We mimic the toy experiment of Titsias (2016) to assess how well A&R estimates the categorical probabilities. We generate a dataset with 104 classes andN = 3×105 observations, each assigned label k with probability pk ∝ p̃2k, where each p̃k is randomly generated from a uniform distribution in [0, 1]. After generating the data, we have K = 9,035 effective classes (thus we use this value for K). In this simple setting, there are no observed covariates xn.\nWe estimate the probabilities pk via maximum likelihood on the biases w(0)k . We posit a softmax model, and we apply both the variational expectation maximization (VEM) in Section 3.1 and the OVE bound. For both approaches, we choose a minibatch size of |B| = 500 observations and |S| = 100 classes, and we run 5× 105 iterations.\nWe run each approach on one CPU core. On average, the wall-clock time per epoch (one epoch takes N/|B| = 600 iterations) is 0.196 minutes for softmax A&R and 0.189 minutes for OVE. A&R is slightly slower because of the local step that OVE does not require; however, the bound on the marginal log likelihood is tighter (by orders of magnitude) for A&R than for OVE (−2.62×106 and−1.40×109, respectively). The estimated probabilities are similar for both methods: the average absolute error is 3.00 × 10−6 for A&R and 3.65 × 10−6 for OVE; the difference is not statistically significant."
  }, {
    "heading": "4.2. Real Datasets",
    "text": "We now turn to real datasets. We consider MNIST and Bibtex (Katakis et al., 2008; Prabhu & Varma, 2014), where we can compare against the exact softmax. We also analyze Omniglot (Lake et al., 2015), EURLex-4K (Mencia & Furnkranz, 2008; Bhatia et al., 2015), and AmazonCat-13K (McAuley & Leskovec, 2013).7 Table 1 gives information about the structure of these datasets.\nWe run each method for a fixed number of iterations. We set the minibatch sizes |B| and |S| beforehand. The specific values for each dataset are also in Table 1.\nData preprocessing. For MNIST, we divide the pixel values by 255 so that the maximum value is one. For Omniglot, following other works in the literature (e.g., Burda et al., 2016), we resize the images to 28 × 28 pixels. For EURLex-4K and AmazonCat-13K, we normalize the covariates dividing by their maximum value.\nBibtex, EURLex-4K, and AmazonCat-13K are multi-class datasets, i.e., each observation may be assigned more than one label. Following Titsias (2016), we keep only the first non-zero label for each data point. See Table 1 for the resulting number of classes in each case.\nEvaluation. For the softmax, we compare A&R against the OVE bound.8 We also compare against the exact softmax on MNIST and Bibtex, where the number of classes is small. For the multinomial probit and multinomial logistic models, we also report the predictive performance of A&R.\nWe evaluate performance with test log likelihood and accuracy. The accuracy is the fraction of correctly classified instances, assuming that we assign the most likely label (i.e., the one with the highest mean utility). To compute the test log likelihood, we use Eq. 1 for the softmax and Eq. 5 for the multinomial probit and multinomial logistic models. We approximate the integral in Eq. 5 with 1,000 samples using importance sampling (we use a Gaussian distribution with mean 5 and standard deviation 5 as a proposal).\nResults. Table 2 shows the wall-clock time per epoch for each method and dataset. In general, softmax A&R is almost as fast as OVE because the extra local step can be performed efficiently without additional expensive operations. It requires to evaluate exponential functions that can be reused in the global step. Multinomial probit A&R and multinomial\n7MNIST is available at http://yann.lecun.com/ exdb/mnist. Omniglot can be found at https://github. com/brendenlake/omniglot. Bibtex, EURLex-4K, and AmazonCat-13K are available at http://manikvarma.org/ downloads/XC/XMLRepository.html.\n8We also implemented the approach of Botev et al. (2017), but we do not report the results because it did not outperform OVE in terms of test log-likelihood on four out of the five considered datasets. On the fifth dataset, softmax A&R was still superior.\nTable 1. Statistics and experimental settings of the considered datasets. Ntrain and Ntest are the number of training and test data points. The number of classes is the resulting value after the preprocessing step (see text). The minibatch sizes correspond to |B| and |S|, respectively.\ndataset\nMNIST Bibtex\nOmniglot EURLex-4K\nAmazonCat-13K\nNtrain Ntest covariates classes\n60, 000 10, 000 784 10 4, 880 2, 413 1, 836 148 25, 968 6, 492 784 1, 623 15, 539 3, 809 5, 000 896 1, 186, 239 306, 782 203, 882 2, 919\nminibatch (obs.) minibatch (classes) iterations\n500 1 35, 000 488 20 5, 000 541 50 45, 000 379 50 100, 000 1, 987 60 5, 970\nTable 2. Average time per epoch for each method and dataset. Softmax A&R (Section 3.1) is almost as fast as OVE. The A&R approaches in Section 3.2 take longer because they require some additional computations, but they are still competitive.\ndataset\nMNIST Bibtex\nOmniglot EURLex-4K\nAmazonCat-13K\nOVE (Titsias, 2016)\n0.336 s 0.181 s 4.47 s 5.54 s 2.80 h\nA&R [this paper] softmax multi. probit multi. logistic\n0.337 s 0.431 s 0.511 s 0.188 s 0.244 s 0.246 s 4.65 s 5.63 s 5.57 s 5.65 s 6.46 s 6.23 s 2.80 h 2.82 h 2.91 h\nlogistic A&R are slightly slower because of the local step, but they are still competitive.\nFor the five datasets, Figure 2 shows the evolution of the evidence lower bound (ELBO) as a function of wall-clock time for the softmax A&R (Eq. 8), compared to the OVE (Eq. 10). For easier visualization, we plot a smoothed version of the bounds after applying a moving average window of size 100. (For AmazonCat-13K, we only compute the ELBO every 50 iterations and we use a window of size 5.) Softmax A&R provides a significantly tighter bound for most datasets (except for Bibtex, where the ELBO of A&R is close to the OVE bound). For MNIST and Bibtex, we also plot the marginal likelihood obtained after running maximum likelihood estimation on the exact softmax model. The ELBO of A&R nearly achieves this value.\nFinally, Table 3 shows the predictive performance for all methods across all datasets. We report test log likelihood and accuracy. Softmax A&R outperforms OVE in both metrics on all but one dataset (except EURLex-4K). Although our goal is not to compare performance across different models, for completeness Table 3 also shows the predictive performance of multinomial probit A&R and multinomial logistic A&R. In general, softmax A&R provides the highest\ntest log likelihood, but multinomial probit A&R outperforms all other methods in EURLex-4K and AmazonCat-13K. Additionally, multinomial logistic A&R presents better predictive performance than OVE on Omniglot and Bibtex."
  }, {
    "heading": "5. Conclusion",
    "text": "We have introduced augment and reduce (A&R), a scalable method to fit models involving categorical distributions. A&R is general and applicable to many models, including the softmax and the multinomial probit. On classification tasks, we found that A&R outperforms state-of-the art algorithms with little extra computational cost."
  }, {
    "heading": "Acknowledgements",
    "text": "This work was supported by ONR N00014-15-1-2209, ONR 133691-5102004, NIH 5100481-5500001084, NSF CCF1740833, the Alfred P. Sloan Foundation, the John Simon Guggenheim Foundation, Facebook, Amazon, and IBM. Francisco J. R. Ruiz is supported by the EU Horizon 2020 programme (Marie Skłodowska-Curie Individual Fellowship, grant agreement 706760). We also thank Victor Elvira and Pablo Moreno for their comments and help."
  }],
  "year": 2018,
  "references": [{
    "title": "Bayesian analysis of binary and polychotomous response data",
    "authors": ["J.H. Albert", "S. Chib"],
    "venue": "Journal of the American Statistical Association,",
    "year": 1993
  }, {
    "title": "Neural machine translation by jointly learning to align and translate",
    "authors": ["D. Bahdanau", "K. Cho", "Y. Bengio"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2015
  }, {
    "title": "Variational algorithms for approximate Bayesian inference",
    "authors": ["M.J. Beal"],
    "venue": "PhD thesis, Gatsby Computational Neuroscience Unit,",
    "year": 2003
  }, {
    "title": "Quick training of probabilistic neural nets by importance sampling",
    "authors": ["Y. Bengio", "Sénécal", "J.-S"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2003
  }, {
    "title": "Neural probabilistic language models",
    "authors": ["Y. Bengio", "H. Schwenk", "Senécal", "J.-S", "F. Morin", "Gauvain", "J.-L"],
    "venue": "In Innovations in Machine Learning. Springer,",
    "year": 2006
  }, {
    "title": "Conditional probability tree estimation analysis and algorithms",
    "authors": ["A. Beygelzimer", "J. Langford", "Y. Lifshits", "G.B. Sorkin", "L. Strehl"],
    "venue": "In Uncertainty in Artificial Intelligence,",
    "year": 2009
  }, {
    "title": "Sparse local embeddings for extreme multi-label classification",
    "authors": ["K. Bhatia", "H. Jain", "P. Kar", "M. Varma", "P. Jain"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2015
  }, {
    "title": "Variational inference: A review for statisticians",
    "authors": ["D. Blei", "A. Kucukelbir", "J. McAuliffe"],
    "venue": "Journal of American Statistical Association,",
    "year": 2017
  }, {
    "title": "A correlated topic model of Science",
    "authors": ["D.M. Blei", "J.D. Lafferty"],
    "venue": "The Annals of Applied Statistics,",
    "year": 2007
  }, {
    "title": "Complementary sum sampling for likelihood approximation in large scale classification",
    "authors": ["A. Botev", "B. Zheng", "D. Barber"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2017
  }, {
    "title": "Efficient bounds for the softmax and applications to approximate inference in hybrid models",
    "authors": ["G. Bouchard"],
    "venue": "In Advances in Neural Information Processing Systems, Workshop on Approximate Inference in Hybrid Models,",
    "year": 2007
  }, {
    "title": "Importance weighted autoencoders",
    "authors": ["Y. Burda", "R. Grosse", "R. Salakhutdinov"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2016
  }, {
    "title": "An exploration of softmax alternatives belonging to the spherical loss family",
    "authors": ["A. de Brébisson", "P. Vincent"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2016
  }, {
    "title": "Bayes optimal multilabel classification via probabilistic classifier chains",
    "authors": ["K. Dembczyński", "W. Cheng", "E. Hüllermeier"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2010
  }, {
    "title": "Fast and robust neural network joint models for statistical machine translation",
    "authors": ["J. Devlin", "R. Zbib", "Z. Huang", "T. Lamar", "R. Schwartz", "J. Makhoul"],
    "venue": "In Annual Meeting of the Association for Computational Linguistics",
    "year": 2014
  }, {
    "title": "Adaptive subgradient methods for online learning and stochastic optimization",
    "authors": ["J. Duchi", "E. Hazan", "Y. Singer"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2011
  }, {
    "title": "Unbiased scalable softmax optimization",
    "authors": ["F. Fagan", "G. Iyengar"],
    "venue": "In arXiv:1803.08577,",
    "year": 2018
  }, {
    "title": "Variational Bayesian multinomial probit regression with Gaussian process priors",
    "authors": ["M. Girolami", "S. Rogers"],
    "venue": "Neural Computation,",
    "year": 2006
  }, {
    "title": "Distributed training of large-scale logistic models",
    "authors": ["S. Gopal", "Y. Yang"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2013
  }, {
    "title": "Efficient softmax approximation for GPUs",
    "authors": ["E. Grave", "A. Joulin", "M. Cissé", "D. Grangier", "H. Jégrou"],
    "venue": "In arXiv:1609.04309,",
    "year": 2017
  }, {
    "title": "Statistical theory of extreme values and some practical applications: A series of lectures",
    "authors": ["E.J. Gumbel"],
    "venue": "U. S. Govt. Print. Office,",
    "year": 1954
  }, {
    "title": "Training highly multiclass classifiers",
    "authors": ["M.R. Gupta", "S. Bengio", "W. Jason"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2014
  }, {
    "title": "Noise-contrastive estimation: A new estimation principle for unnormalized statistical models",
    "authors": ["M. Gutmann", "A. Hyvärinen"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2010
  }, {
    "title": "Stochastic variational inference",
    "authors": ["M.D. Hoffman", "D.M. Blei", "C. Wang", "J. Paisley"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2013
  }, {
    "title": "Blackout: Speeding up recurrent neural network language models with very large vocabularies",
    "authors": ["S. Ji", "S.V.N. Vishwanathan", "N. Satish", "M.J. Anderson", "P. Dubey"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2016
  }, {
    "title": "Multilabel text classification for automated tag suggestion",
    "authors": ["I. Katakis", "G. Tsoumakas", "I. Vlahavas"],
    "venue": "In ECML/PKDD Discovery Challenge,",
    "year": 2008
  }, {
    "title": "A stick-breaking likelihood for categorical data analysis with latent Gaussian models",
    "authors": ["M.E. Khan", "S. Mohamed", "B.M. Marlin", "K.P. Murphy"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2012
  }, {
    "title": "Auto-encoding variational Bayes",
    "authors": ["D.P. Kingma", "M. Welling"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2014
  }, {
    "title": "Automatic differentiation variational inference",
    "authors": ["A. Kucukelbir", "D. Tran", "R. Ranganath", "A. Gelman", "D.M. Blei"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2017
  }, {
    "title": "On the multistage Bayes classifier",
    "authors": ["M. Kurzynski"],
    "venue": "Pattern Recognition,",
    "year": 1988
  }, {
    "title": "Human-level concept learning through probabilistic program induction",
    "authors": ["B.M. Lake", "R. Salakhutdinov", "J.B. Tenenbaum"],
    "year": 2015
  }, {
    "title": "The multiple multiplicative factor model for collaborative filtering",
    "authors": ["B.M. Marlin", "R.S. Zemel"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2004
  }, {
    "title": "Hidden factors and hidden topics: understanding rating dimensions with review text",
    "authors": ["J. McAuley", "J. Leskovec"],
    "venue": "In ACM Conference on Recommender Systems,",
    "year": 2013
  }, {
    "title": "Modeling the choice of residential location",
    "authors": ["D. McFadden"],
    "venue": "In Spatial Interaction Theory and Residential Location,",
    "year": 1978
  }, {
    "title": "Efficient pairwise multilabel classification for large-scale problems in the legal domain",
    "authors": ["E.L. Mencia", "J. Furnkranz"],
    "venue": "In ECML/PKDD,",
    "year": 2008
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["T. Mikolov", "I. Sutskever", "K. Chen", "G.S. Corrado", "J. Dean"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2013
  }, {
    "title": "Hierarchical probabilistic neural network language model",
    "authors": ["F. Morin", "Y. Bengio"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2005
  }, {
    "title": "Fast amortized inference and learning in log-linear models with randomly perturbed nearest neighbor search",
    "authors": ["S. Mussmann", "D. Levy", "S. Ermon"],
    "venue": "In Uncertainty in Artificial Intelligence,",
    "year": 2017
  }, {
    "title": "FastXML: Fast, accurate and stable tree-classifier for eXtreme multi-label learning",
    "authors": ["Y. Prabhu", "M. Varma"],
    "venue": "In KDD,",
    "year": 2014
  }, {
    "title": "DS-MLR: exploiting double separability for scaling up distributed multinomial logistic regression",
    "authors": ["P. Raman", "S. Matsushima", "X. Zhang", "H. Yun", "S.V.N. Vishwanathan"],
    "year": 2017
  }, {
    "title": "Stochastic backpropagation and approximate inference in deep generative models",
    "authors": ["D.J. Rezende", "S. Mohamed", "D. Wierstra"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2014
  }, {
    "title": "Nested expectation propagation for Gaussian process classification with a multinomial probit likelihood",
    "authors": ["J. Riihimäki", "P. Jylänki", "A. Vehtari"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2013
  }, {
    "title": "A stochastic approximation method",
    "authors": ["H. Robbins", "S. Monro"],
    "venue": "The Annals of Mathematical Statistics,",
    "year": 1951
  }, {
    "title": "Sticking the landing: Simple, lower-variance gradient estimators for variational inference",
    "authors": ["G. Roeder", "Y. Wu", "D. Duvenaud"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2017
  }, {
    "title": "Contrastive estimation: Training log-linear models on unlabeled data",
    "authors": ["N.A. Smith", "E. Jason"],
    "venue": "In Association for Computational Linguistics,",
    "year": 2005
  }, {
    "title": "Reinforcement Learning: An Introduction",
    "authors": ["R.S. Sutton", "A.G. Barto"],
    "year": 1998
  }, {
    "title": "Lecture 6.5-RMSPROP: Divide the gradient by a running average of its recent magnitude",
    "authors": ["T. Tieleman", "G. Hinton"],
    "venue": "Coursera: Neural Networks for Machine Learning,",
    "year": 2012
  }, {
    "title": "One-vs-each approximation to softmax for scalable estimation of probabilities",
    "authors": ["M.K. Titsias"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2016
  }, {
    "title": "Doubly stochastic variational Bayes for non-conjugate inference",
    "authors": ["M.K. Titsias", "M. Lázaro-Gredilla"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2014
  }, {
    "title": "Effective and efficient multilabel classification in domains with large number of labels",
    "authors": ["G. Tsoumakas", "I. Katakis", "I. Vlahavas"],
    "venue": "In ECML/PKDD Workshop on Mining Multidimensional Data,",
    "year": 2008
  }, {
    "title": "Deep networks with large output spaces",
    "authors": ["S. Vijayanarasimhan", "J. Shlens", "R. Monga", "J. Yagnik"],
    "venue": "In arXiv:1412.7479,",
    "year": 2014
  }, {
    "title": "Efficient exact gradient update for training deep networks with very large sparse targets",
    "authors": ["P. Vincent", "A. de Brébisson", "X. Bouthillier"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2015
  }, {
    "title": "Simple statistical gradient-following algorithms for connectionist reinforcement learning",
    "authors": ["R.J. Williams"],
    "venue": "Machine Learning,",
    "year": 1992
  }],
  "id": "SP:7187d0dbb481b9bb168ba5c4f829ce571fcd1785",
  "authors": [{
    "name": "Francisco J. R. Ruiz",
    "affiliations": []
  }, {
    "name": "Michalis K. Titsias",
    "affiliations": []
  }, {
    "name": "Adji B. Dieng",
    "affiliations": []
  }, {
    "name": "David M. Blei",
    "affiliations": []
  }],
  "abstractText": "Categorical distributions are ubiquitous in machine learning, e.g., in classification, language models, and recommendation systems. However, when the number of possible outcomes is very large, using categorical distributions becomes computationally expensive, as the complexity scales linearly with the number of outcomes. To address this problem, we propose augment and reduce (A&R), a method to alleviate the computational complexity. A&R uses two ideas: latent variable augmentation and stochastic variational inference. It maximizes a lower bound on the marginal likelihood of the data. Unlike existing methods which are specific to softmax, A&R is more general and is amenable to other categorical models, such as multinomial probit. On several large-scale classification problems, we show that A&R provides a tighter bound on the marginal likelihood and has better predictive performance than existing approaches.",
  "title": "Augment and Reduce: Stochastic Inference for Large Categorical Distributions"
}