{
  "sections": [{
    "text": "In conventional ODE modelling coefficients of an equation driving the system state forward in time are estimated. However, for many complex systems it is practically impossible to determine the equations or interactions governing the underlying dynamics. In these settings, parametric ODE model cannot be formulated. Here, we overcome this issue by introducing a novel paradigm of nonparametric ODE modelling that can learn the underlying dynamics of arbitrary continuous-time systems without prior knowledge. We propose to learn non-linear, unknown differential functions from state observations using Gaussian process vector fields within the exact ODE formalism. We demonstrate the model’s capabilities to infer dynamics from sparse data and to simulate the system forward into future."
  }, {
    "heading": "1. Introduction",
    "text": "Dynamical systems modelling is a cornerstone of experimental sciences. In biology, as well as in physics and chemistry, modelers attempt to capture the dynamical behavior of a given system or a phenomenon in order to improve its understanding and make predictions about its future state. Systems of coupled ordinary differential equations (ODEs) are undoubtedly the most widely used models in science. Even simple ODE functions can describe complex dynamical behaviours (Hirsch et al., 2004). Typically, the dynamics are firmly grounded in physics with only a few parameters to be estimated from data. However, equally ubiquitous are the cases where the governing dynamics are partially or completely unknown.\nWe consider the dynamics of a system governed by multi-\n*Equal contribution 1Aalto University, Finland 2Helsinki Institute of Information Technology HIIT, Finland. Correspondence to: Markus Heinonen <markus.o.heinonen@aalto.fi>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\nvariate ordinary differential functions:\nẋ(t) = dx(t)\ndt = f(x(t)) (1)\nwhere x(t) ∈ X = RD is the state vector of a Ddimensional dynamical system at time t, and the ẋ(t) ∈ Ẋ = RD is the first order time derivative of x(t) that drives the state x(t) forward, and where f : RD → RD is the vector-valued derivative function. The ODE solution is determined by\nx(t) = x0 + ∫ t 0 f(x(τ))dτ, (2)\nwhere we integrate the system state from an initial state x(0) = x0 for time t forward. We assume that f(·) is completely unknown and we only observe one or several multivariate time series Y = (y1, . . . ,yN )T ∈ RN×D obtained from an additive noisy observation model at observation time points T = (t1, . . . , tN ) ∈ RN ,\ny(t) = x(t) + εt, (3)\nwhere εt ∼ N (0,Ω) follows a stationary zero-mean multivariate Gaussian distribution with diagonal noise variances Ω = diag(ω21 , . . . , ω 2 D). The observation time points do not need to be equally spaced. Our task is to learn the differential function f(·) given observations Y , with no prior knowledge of the ODE system.\nThere is a vast literature on conventional ODEs (Butcher, 2016) where a parametric form for function f(x;θ, t) is assumed to be known, and its parameters θ are subsequently optimised with least squares or Bayesian approach, where the expensive forward solution xθ(ti) =∫ ti 0\nf(x(τ);θ, t)dτ is required to evaluate the system responses xθ(ti) from parameters θ against observations y(ti). To overcome the computationally intensive forward solution, a family of methods denoted as gradient matching (Varah, 1982; Ellner et al., 2002; Ramsay et al., 2007) have proposed to replace the forward solution by matching f(yi) ≈ ẏi to empirical gradients ẏi of the data instead, which do not require the costly integration step. Recently several authors have proposed embedding a parametric differential function within a Bayesian or Gaussian process (GP) framework (Graepel, 2003; Calderhead et al., 2008;\nDondelinger et al., 2013; Wang and Barber, 2014; Macdonald, 2017) (see Macdonald et al. (2015) for a review). GPs have been successfully applied to model linear differential equations as they are analytically tractable (Gao et al., 2008; Raissi et al., 2017).\nHowever, conventional ODE modelling can only proceed if a parametric form of the driving function f(·) is known. Recently, initial work to handle unknown or non-parametric ODE models have been proposed, although with various limiting approximations. Early works include spline-based smoothing and additive functions ∑D j fj(xj) to infer gene regulatory networks (De Hoon et al., 2002; Henderson and Michailidis, 2014). Äijö and Lähdesmäki (2009) proposed estimating the unknown nonlinear function with GPs using either finite time differences, or analytically solving the derivative function as a function of only time, ẋ(t) = f(t) (Äijö et al., 2013). In a seminal technical report of Heinonen and d’Alche Buc (2014) a full vector-valued kernel model f(x) was proposed, however using a gradient matching approximation. To our knowledge, there exists no model that can learn non-linear ODE functions ẋ(t) = f(x(t)) over the state x against the true forward solutions x(ti).\nIn this work we propose NPODE1: the first ODE model for learning arbitrary, and a priori completely unknown nonparametric, non-linear differential functions f : X → Ẋ from data in a Bayesian way. We do not use gradient matching or other approximative models, but instead propose to directly optimise the exact ODE system with the fully forward simulated responses against data. We parameterise our model as an augmented Gaussian process vector field with inducing points, while we propose sensitivity equations to efficiently compute the gradients of the system. Our model can forecast continuous-time systems arbitrary amounts to future, and we demonstrate the state-of-the-art performance in human motion datasets."
  }, {
    "heading": "2. Nonparametric ODE Model",
    "text": "The differential function f(x) to be learned defines a vector field2 f , that is, an assignment of a gradient vector f(x) ∈ RD to every state x ∈ RD. We model the vector field as a vector-valued Gaussian process (Rasmussen and Williams, 2006)\nf(x) ∼ GP(0,K(x,x′)), (4)\nwhich defines a priori distribution over function values f(x) whose mean and covariances are\nE[f(x)] = 0 (5) cov[f(x), f(x′)] = K(x,x′), (6)\n1The implementation is publicly available in http://www. github.com/cagatayyildiz/npode\n2We use vector field and differential function interchangeably.\nand where the kernel K(x,x′) ∈ RD×D is matrixvalued. A GP prior defines that for any collection of states X = (x1, . . . ,xN )T ∈ RN×D, the function values F = (f(x1), . . . , f(xN ))T ∈ RN×D follow a matrixvalued normal distribution,\np(F ) = N (vec(F )|0,K(X,X)), (7)\nwhere K(X,X) = (K(xi,xj))Ni,j=1 ∈ RND×ND is a block matrix of matrix-valued kernels K(xi,xj). The key property of Gaussian processes is that they encode functions where similar states x,x′ induce similar differentials f(x), f(x′), and where the state similarity is defined by the kernel K(x,x′).\nIn standard GP regression we would obtain the posterior of the vector field by conditioning the GP prior with the data (Rasmussen and Williams, 2006). In ODE models the conditional f(x)|Y of a vector field is intractable due to the integral mapping (2) between observed states y(ti) and differentials f(x). Instead, we resort to augmenting the Gaussian process with a set of M inducing points z ∈ X and u ∈ Ẋ , such that f(z) = u (Quiñonero-Candela and\nRasmussen, 2005). We choose to interpolate the differential function between the inducing points as (See Figure 1)\nf(x) , Kθ(x, Z)Kθ(Z,Z) −1vec(U), (8)\nwhich supports the function f(x) with inducing locations Z = (z1, . . . , zM ), inducing vectors U = (u1, . . . ,uM ), and θ are the kernel parameters. The function above corresponds to a vector-valued kernel function (Alvarez et al., 2012), or to a multi-task Gaussian process conditional mean without the variance term (Rasmussen and Williams, 2006). This definition is then compatible with the deterministic nature of the ODE formalism. Due to universality of several kernels and kernel functions (Shawe-Taylor and Cristianini, 2004), we can represent arbitrary vector fields with appropriate inducing point and kernel choices."
  }, {
    "heading": "2.1. Operator-valued Kernels",
    "text": "The vector-valued kernel function (8) uses operator-valued kernels, which result in matrix-valued kernels Kθ(z, z′) ∈ RD×D for real valued states x, z, while the kernel matrix over data points becomes Kθ = (K(zi, zj))Mi,j=1 ∈ RMD×MD (See Alvarez et al. (2012) for a review). Most straightforward operator-valued kernel is the identity decomposable kernel Kdec(z, z′) = k(z, z′) · ID, where the scalar Gaussian kernel\nKθ(z, z ′) = σ2f exp −1 2 D∑ j=1 (zj − z′j)2 `2j  (9) with differential variance σ2f and dimension-specific lengthscales ` = (`1, . . . , `D) are expanded into a diagonal matrix of size D × D. We collect the kernel parameters as θ = (σf , `).\nWe note that more complex kernels can also be considered given prior information of the underlying system characteristics. The divergence-free matrix-valued kernel induces vector fields that have zero divergence (Wahlström et al., 2013; Solin et al., 2015). Intuitively, these vector fields do not have sinks or sources, and every state always finally returns to itself after sufficient amount of time. Similarly, curl-free kernels induce curl-free vector fields that can contain sources or sinks, that is, trajectories can accelerate or decelerate. For theoretical treatment of vector field kernels, see (Narcowich and Ward, 1994; Bhatia et al., 2013; Fuselier and Wright, 2017). Non-stationary vector fields can be modeled with input-dependent lengthscales (Heinonen et al., 2016), while spectral kernels can represent stationary (Wilson et al., 2013) or non-stationary (Remes et al., 2017) recurring patterns in the differential function."
  }, {
    "heading": "2.2. Joint Model",
    "text": "We assume a Gaussian likelihood over the observations yi and the corresponding simulated responses x(ti) of Equation (2),\np(Y |x0, U, Z,ω) = N∏ i=1 N (yi|x(ti),Ω), (10)\nwhere x(ti) are forward simulated responses using the integral Equation (2) and differential Equation (8), and Ω = diag(ω21 . . . , ω 2 D) collects the dimension-specific noise variances.\nThe inducing vectors have a Gaussian process prior\np(U |Z,θ) = N (vec(U)|0,Kθ(Z,Z)). (11)\nThe model posterior is then\np(U,x0,θ,ω|Y ) ∝ p(Y |x0, U,ω)p(U |θ) = L, (12)\nwhere we have for brevity omitted the dependency on the locations of the inducing points Z and also the parameter hyperpriors p(θ) and p(ω) since we assume them to be uniform, unless there is specific domain knowledge of the priors.\nThe model parameters are the initial state x03, the inducing vectors U , the noise standard deviations ω = (ω1, . . . , ωD), and the kernel hyperparameters θ = (σf , `1, . . . , `D)."
  }, {
    "heading": "2.3. Noncentral Parameterisation",
    "text": "We apply a latent parameterisation using Cholesky decomposition LθLTθ = Kθ(Z,Z), which maps the inducing vectors to whitened domain (Kuss and Rasmussen, 2005)\nU = LθŨ , Ũ = L −1 θ U. (13)\nThe latent variables Ũ are projected on the kernel manifold Lθ to obtain the inducing vectors U . This non-centered parameterisation (NCP) transforms the hierarchical posterior L of Equation (12) into a reparameterised form\np(x0, Ũ ,θ,ω|Y ) ∝ p(Y |x0, Ũ ,ω,θ)p(Ũ), (14)\nwhere all variables to be optimised are decoupled, with the latent inducing vectors having a standard normal prior Ũ ∼ N (0, I). Optimizing Ũ and θ is now more efficient since they have independent contributions to the vector field via U = LθŨ . The gradients of the whitened posterior can be retrieved analytically as (Heinonen et al., 2016)\n∇Ũ logL = L T θ∇U logL. (15)\n3In case of multiple time-series, we will use one initial state for each time-series.\nFinally, we find a maximum a posteriori (MAP) estimate for the initial state x0, latent vector field Ũ , kernel parameters θ and noise variances ω by gradient ascent,\nx0,MAP, ŨMAP,θMAP,ωMAP = arg max x0,Ũ ,θ,ω\nlogL, (16)\nwhile keeping the inducing locations Z fixed on a sufficiently dense grid (See Figure 1). The partial derivatives of the posterior with respect to noise parameters ω can be found analytically, while the derivative with respect to σf is approximated with finite differences. We select the optimal lengthscales ` by cross-validation."
  }, {
    "heading": "3. Sensitivity Equations",
    "text": "The key term to carry out the MAP gradient ascent optimization is the likelihood\nlog p(Y |x0, Ũ ,ω)\nthat requires forward integration and computing the partial derivatives with respect to the whitened inducing vectors Ũ . Given Equation (15) we only need to compute the gradients with respect to the inducing vectors u = vec(U) ∈ RMD,\nd log p(Y |x0,u,ω) du\n= N∑ s=1 d logN (ys|x(ts,u),Ω) dx dx(ts,u) du . (17)\nThis requires computing the derivatives of the simulated system response x(t,u) against the vector field parameters u,\ndx(t,u)\ndu ≡ S(t) ∈ RD×MD, (18)\nwhich we denote by Sij(t) = ∂x(t,u)i\n∂uj , and expand the no-\ntation to make the dependency of x on u explicit. Approximating these with finite differences is possible in principle, but is highly inefficient and has been reported to cause unstability (Raue et al., 2013). We instead turn to sensitivity equations for u and x0 that provide computationally efficient, analytical gradients S(t) (Kokotovic and Heller, 1967; Fröhlich et al., 2017).\nThe solution for dx(t,u)du can be derived by differentiating the full nonparametric ODE system with respect to u by\nd\ndu\ndx(t,u)\ndt =\nd\ndu f(x(t,u)). (19)\nThe sensitivity equation for the given system can be obtained by changing the order of differentiation on the left hand side and carrying out the differentiation on the right hand side.\nThe resulting sensitivity equation can then be expressed in the form\nṠ(t)︷ ︸︸ ︷ d\ndt\ndx(t,u)\ndu =\nJ(t)︷ ︸︸ ︷ ∂f(x(t,u))\n∂x\nS(t)︷ ︸︸ ︷ dx(t,u)\ndu +\nR(t)︷ ︸︸ ︷ ∂f(x(t,u))\n∂u ,\n(20)\nwhere J(t) ∈ RD×D, R(t), Ṡ(t) ∈ RD×MD (See Supplements for detailed specification). For our nonparametric ODE system the sensitivity equation is fully determined by\nJ(t) = ∂K(x, Z)\n∂x K(Z,Z)−1u (21)\nR(t) = K(x, Z)K(Z,Z)−1. (22)\nThe sensitivity equation provides us with an additional ODE system which describes the time evolution of the derivatives with respect to the inducing vectors S(t). The sensitivities are coupled with the actual ODE system and, thus both systems x(t) and S(t) are concatenated as the new augmented state that is solved jointly by Equation (2) driven by the differentials ẋ(t) and Ṡ(t) (Leis and Kramer, 1988). The initial sensitivities are computed as S(0) = dx0du . In our implementation, we merge x0 with u for sensitivity analysis to obtain the partial derivatives with respect to the initial state which is estimated along with the other parameters. We use the CVODES solver from the SUNDIALS package (Hindmarsh et al., 2005) to solve the nonparametric ODE models and the corresponding gradients numerically. The sensitivity equation based approach is superior to the finite differences approximation because we have exact formulation for the gradients of state over inducing points, which can be solved up to the numerical accuracy of the ODE solver."
  }, {
    "heading": "4. Simple Simulated Dynamics",
    "text": "As first illustration of the proposed nonparametric ODE method we consider three simulated differential systems: the Van der Pol (VDP), FitzHugh-Nagumo (FHN) and Lotka-Volterra (LV) oscillators of form\nVDP : ẋ1 = x2 ẋ2 = (1− x21)x2 − x1 FHN : ẋ1 = 3(x1 − x31 3 + x2) ẋ2 = 0.2− 3x1 − 0.2x2\n3 LV : ẋ1 = 1.5x1 − x1x2 ẋ2 = −3x2 + x1x2.\nIn the conventional ODE case the coefficients of these equations can be inferred using standard statistical techniques if sufficient amount of time series data is available (Girolami, 2008; Raue et al., 2013). Our main goal is to infer unknown dynamics, that is, when these equations are unavailable and we instead represent the dynamics with a nonparametric\nvector field of Equation (8). We use these simulated models to only illustrate our model behavior against the true dynamics.\nWe employ 25 data points from one cycle of noisy observation data from VDP and FHN models, and 25 data points from 1.7 cycles from the LV model with a noise variance of σ2n = 0.1\n2. We learn the npODE model with five training sequences using M = 62 inducing locations on a fixed grid, and forecast between 4 and 8 future cycles starting from true initial state x0 at time 0. Training takes approximately 100 seconds per oscillator. Figure 2 (bottom) shows the training datasets (grey regions), initial states, true trajectories (black lines) and the forecasted trajectory likelihoods (colored regions). The model accurately learns the dynamics from less than two cycles of data and can reproduce them reliably into future.\nFigure 2 (top) shows the corresponding true vector field (black arrows) and the estimated vector field (grey arrows). The vector field is a continuous function, which is plotted on a 8x8 grid for visualisation. In general the most difficult part of the system is learning the middle of the loop (as seen in the FHN model), and learning the most outermost regions (bottom left in the LV model). The model learns the\nunderlying differential f(x) accurately close to observed points, while making only few errors in the border regions with no data."
  }, {
    "heading": "5. Unknown System Estimation",
    "text": "Next, we illustrate how the model estimates realistic, unknown dynamics from noisy observations y(t1), . . . ,y(tN ). As in Section 4, we make no assumptions on the structure or form of the underlying system, and capture the underlying dynamics with the nonparameteric system alone. We employ no subjective priors, and assume no inputs, controls or other sources of information. The task is to infer the underlying dynamics f(x), and interpolate or extrapolate the state trajectory outside the observed data.\nWe use a benchmark dataset of human motion capture data from the Carnegie Mellon University motion capture (CMU mocap) database. Our dataset contains 50-dimensional pose measurements y(ti) from humans walking, where each pose dimension records a measurement in different parts of the body during movement (Wang et al., 2008). We apply the preprocessing of Wang et al. (2008) by downsampling the datasets by a factor of four and centering the data. This resulted in a total of 4303 datapoints spread across 43 trajec-\ntories with on average 100 frames per trajectory. In order to tackle the problem of dimensionality, we project the original dataset with PCA to a three dimensional latent space where the system is specified, following Damianou et al. (2011) and Wang et al. (2006). We place M = 53 inducing vectors on a fixed grid, and optimize our model starting from 100 different initial values, which we set by perturbing the projected empirical differences y(ti)−y(ti−1) to the inducing vectors. We use an L-BFGS optimizer in Matlab. The whole inference takes approximately few minutes per trajectory.\nWe evaluate the method with two types of experiments: imputing missing values and forecasting future cycles. For the forecasting the first half of the trajectory is reserved for model training, and the second half is to be forecasted. For imputation we remove roughly 20% of the frames from the middle of the trajectory, which are to be filled by the models. We perform model selection for lengthscales ` with crossvalidation split of 80/20. We record the root mean square error (RMSE) over test points in the original feature space in both cases, where we reconstruct the original dimensions from the latent space trajectories.\nDue to the current lack of ODE methods suitable for this nonparametric inference task, we instead compare our method to the state-of-the-art state-space models where such problems have been previously considered (Wang et al., 2008). In a state-space or dynamical model a transition function x(tk+1) = g(x(tk)) moves the system forward in discrete steps. With sufficiently high sampling rate, such models can estimate and forecast finite approximations of smooth dynamics. In Gaussian process dynamical model (Wang et al., 2006; Frigola et al., 2014; Svensson et al., 2016) a GP transition function is inferred in a latent space, which can be inferred with a standard GPLVM (Lawrence, 2004) or with a dependent GPLVM (Zhao and Sun, 2016). In dynamical systems the transition function is replaced by a GP interpolation (Damianou et al., 2011). The discrete time state-space models emphasize inference of a low-dimensional manifold as an explanation of the high-dimensional measurement trajectories.\nWe compare our method to the dynamical model GPDM of Wang et al. (2006) and to the dynamical system VGPLVM of Damianou et al. (2011), where we directly apply the implementations provided by the authors at inverseprobability.com/vargplvm and dgp. toronto.edu/˜jmwang/gpdm. Both methods optimize their latent spaces separately, and they are thus not directly comparable."
  }, {
    "heading": "5.1. Forecasting",
    "text": "In the forecasting task we train all models with the first half of the trajectory, while forecasting the second half starting from the first frame. The models are trained and forecasted\nwithin a low-dimensional space, and subsequently projected back into the original space via inverting the PCA or with GPLVM mean predictions. As all methods optimize their latent spaces separately, they are not directly comparable. Thus, the mean errors are computed in the original highdimensional space. Note that the low-dimensional representation necessarily causes some reconstruction errors.\nFigure 3 illustrates the models on one of the trajectories 35 12.amc. The top part (a) shows the training data in the PCA space for npODE, and optimized training data representation for GPDM and VGPLVM (black points). The colored lines (npODE) and points (GPDM, VGPLVM) indicate the future forecast. The bottom part (b) shows the first 9 reconstructed original pose dimensions reconstructed from the latent forecasted trajectories. The training data is shown in grey background, while test data is shown with circles.\nThe VGPLVM has most trouble forecasting future points, and reverts quickly after training data to a value close to zero, failing to predict future points. The GPDM model produces more realistic trajectories, but fails to predict any of the poses accurately. Finally, npODE can accurately predict five poses, and still retains adequate performance on remaining poses, except for pose 2.\nFurthermore, Table 1 indicates that npODE is also best performing method on average over the whole dataset in the forecasting."
  }, {
    "heading": "5.2. Imputation",
    "text": "In the imputation task we remove approximately 20% of the training data from the middle of the trajectory. The goals are to learn a model with the remaining data and to forecast the missing values. Figure 4 highlights the performance of the three models on the trajectory 07 07.amc. The top part (a) shows the training data (black points) in the PCA space (npODE) or optimized training locations in the latent space (GPDM, VGPLVM). The middle part imputation is shown with colored points or lines. Interestingly both npODE and GPDM operate on cyclic representations, while VGPLVM is not cyclic.\nThe bottom panel (b) shows the first 9 reconstructed pose\ndimensions from the three models. The missing values are shown in circles, while training points are shown with black dots. All models can accurately reproduce the overall trends, while npODE seems to fit slightly worse than the other methods. The PCA projection causes the seemingly perfect fit of the npODE prediction (at the top) to lead to slightly warped reconstructions (at the bottom). All methods mostly fit the missing parts as well. Table 1 shows that on average the npODE and VGPLVM have approximately equal top performance on the imputing missing values task."
  }, {
    "heading": "6. Discussion",
    "text": "We proposed the framework of nonparametric ODE model that can accurately learn arbitrary, nonlinear continuos-time dynamics from purely observational data without making assumptions of the underlying system dynamics. We demonstrated that the model excels at learning dynamics that can be forecasted into the future. We consider this work as the\nfirst in a line of studies of nonparametric ODE systems, and foresee several aspects as future work. Currently we do not handle non-stationary vector fields, that is time-dependent differentials ft(x). Furthermore, an interesting future avenue is the study of various vector field kernels, such as divergence-free, curl-free or spectral kernels (Remes et al., 2017). Finally, including inputs or controls to the system would allow precise modelling in interactive settings, such as robotics.\nThe proposed nonparametric ODE model operates along a continuous-time trajectory, while dynamic models such as hidden Markov models or state-space models are restricted to discrete time steps. These models are unable to consider system state at arbitrary times, for instance, between two successive timepoints.\nConventional ODE models have also been considered from the stochastic perspective with stochastic differential equation (SDE) models that commonly model the deterministic\nsystem drift and diffusion processes separately leading to a distribution of trajectories p(x(t)) (Archambeau et al., 2007; Garcı́a et al., 2017). As future work we will consider stochastic extensions of our nonparametric ODE model, as well as MCMC sampling of the inducing point posterior p(U |Y ), leading to trajectory distribution as well.\nAcknowledgements. The data used in this project was obtained from mocap.cs.cmu.edu. The database was created with funding from NSF EIA-0196217. This work has been supported by the Academy of Finland Center of Excellence in Systems Immunology and Physiology, the Academy of Finland grants no. 284597, 311584, 313271, 299915."
  }],
  "year": 2018,
  "references": [{
    "title": "Kernels for vector-valued functions: A review",
    "authors": ["M. Alvarez", "L. Rosasco", "N. Lawrence"],
    "venue": "Foundations and Trends in Machine Learning,",
    "year": 2012
  }, {
    "title": "ShaweTaylor. Gaussian process approximations of stochastic differential equations",
    "authors": ["C. Archambeau", "D. Cornford", "M. Opper"],
    "venue": "In Gaussian Processes in Practice,",
    "year": 2007
  }, {
    "title": "The helmholtz-hodge decomposition -— a survey",
    "authors": ["H. Bhatia", "G. Norgard", "V. Pascucci", "P. Bremer"],
    "venue": "IEEE Transactions on visualization and computer graphics,",
    "year": 2013
  }, {
    "title": "Numerical methods for ordinary differential equations",
    "authors": ["J. Butcher"],
    "year": 2016
  }, {
    "title": "Accelerating bayesian inference over nonlinear differential equations with gaussian processes",
    "authors": ["B. Calderhead", "M. Girolami", "N. Lawrence"],
    "year": 2008
  }, {
    "title": "Variational gaussian process dynamical systems",
    "authors": ["Andreas Damianou", "Michalis K Titsias", "Neil D Lawrence"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2011
  }, {
    "title": "Inferring gene regulatory networks from time-ordered gene expression data of bacillus subtilis using differential equations",
    "authors": ["Michiel JL De Hoon", "Seiya Imoto", "Kazuo Kobayashi", "Naotake Ogasawara", "Satoru Miyano"],
    "venue": "In Biocomputing",
    "year": 2003
  }, {
    "title": "Ode parameter inference using adaptive gradient matching with gaussian processes",
    "authors": ["F. Dondelinger", "M. Filippone", "S Rogers", "D. Husmeier"],
    "year": 2013
  }, {
    "title": "Fitting population dynamic models to time-series data by gradient matching",
    "authors": ["S.P. Ellner", "Y. Seifu", "R.H. Smith"],
    "year": 2002
  }, {
    "title": "Variational gaussian process state-space models",
    "authors": ["Roger Frigola", "Yutian Chen", "Carl Edward Rasmussen"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2014
  }, {
    "title": "Scalable parameter estimation for genome-scale biochemical reaction networks",
    "authors": ["Fabian Fröhlich", "Barbara Kaltenbacher", "Fabian J. Theis", "Jan Hasenauer"],
    "venue": "PLOS Computational Biology,",
    "year": 2017
  }, {
    "title": "A radial basis function method for computing helmholtz–hodge decompositions",
    "authors": ["E. Fuselier", "G. Wright"],
    "venue": "IMA Journal of Numerical Analysis,",
    "year": 2017
  }, {
    "title": "Gaussian process modelling of latent chemical species: applications to inferring transcription factor activities",
    "authors": ["Pei Gao", "Antti Honkela", "Magnus Rattray", "Neil D Lawrence"],
    "venue": "Bioinformatics, 24(16):i70–i75,",
    "year": 2008
  }, {
    "title": "Nonparametric estimation of stochastic differential equations with sparse Gaussian processes",
    "authors": ["C. Garcı́a", "A. Otero", "P. Felix", "J. Presedo", "D. Marquez"],
    "venue": "Physical Review E,",
    "year": 2017
  }, {
    "title": "Bayesian inference for differential equations",
    "authors": ["Mark Girolami"],
    "venue": "Theor. Comput. Sci.,",
    "year": 2008
  }, {
    "title": "Solving noisy linear operator equations by gaussian processes: Application to ordinary and partial differential equations",
    "authors": ["T. Graepel"],
    "year": 2003
  }, {
    "title": "Learning nonparametric differential equations with operator-valued kernels and gradient matching",
    "authors": ["M. Heinonen", "F. d’Alche Buc"],
    "venue": "arxiv, Telecom ParisTech,",
    "year": 2014
  }, {
    "title": "Non-stationary Gaussian process regression with Hamiltonian Monte Carlo",
    "authors": ["M. Heinonen", "H. Mannerström", "J. Rousu", "S. Kaski", "H. Lähdesmäki"],
    "venue": "In AISTATS,",
    "year": 2016
  }, {
    "title": "Network reconstruction using nonparametric additive ode models",
    "authors": ["J. Henderson", "G. Michailidis"],
    "venue": "PLOS ONE,",
    "year": 2014
  }, {
    "title": "SUNDIALS: Suite of nonlinear and differential/algebraic equation solvers",
    "authors": ["Alan C Hindmarsh", "Peter N Brown", "Keith E Grant", "Steven L Lee", "Radu Serban", "Dan E Shumaker", "Carol S Woodward"],
    "venue": "ACM Trans. Math. Softw.,",
    "year": 2005
  }, {
    "title": "Differential Equations, Dynamical Systems, and an Introduction to Chaos (Edition: 2)",
    "authors": ["M. Hirsch", "S. Smale", "Devaney"],
    "venue": "Elsevier Science & Technology Books,",
    "year": 2004
  }, {
    "title": "Direct and adjoint sensitivity equations for parameter optimization",
    "authors": ["P Kokotovic", "J Heller"],
    "venue": "IEEE Transactions on Automatic Control,",
    "year": 1967
  }, {
    "title": "Assessing approximate inference for binary gaussian process classification",
    "authors": ["Malte Kuss", "Carl Edward Rasmussen"],
    "venue": "Journal of machine learning research,",
    "year": 2005
  }, {
    "title": "Gaussian process latent variable models for visualisation of high dimensional data",
    "authors": ["Neil D Lawrence"],
    "venue": "In Advances in neural information processing systems,",
    "year": 2004
  }, {
    "title": "The simultaneous solution and sensitivity analysis of systems described by ordinary differential equations",
    "authors": ["Jorge R. Leis", "Mark A. Kramer"],
    "venue": "ACM Trans. Math. Softw.,",
    "year": 1988
  }, {
    "title": "Statistical inference for ordinary differential equations using gradient matching",
    "authors": ["Benn Macdonald"],
    "venue": "PhD thesis,",
    "year": 2017
  }, {
    "title": "Controversy in mechanistic modelling with gaussian processes",
    "authors": ["Benn Macdonald", "Catherine Higham", "Dirk Husmeier"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2015
  }, {
    "title": "Generalized hermite interpolation via matrix-valued conditionally positive definite functions",
    "authors": ["Francis J Narcowich", "Joseph D Ward"],
    "venue": "Mathematics of Computation,",
    "year": 1994
  }, {
    "title": "A unifying view of sparse approximate gaussian process regression",
    "authors": ["Joaquin Quiñonero-Candela", "Carl Edward Rasmussen"],
    "venue": "Journal of Machine Learning Research,",
    "year": 1939
  }, {
    "title": "Inferring solutions of differential equations using noisy multi-fidelity data",
    "authors": ["Maziar Raissi", "Paris Perdikaris", "George Em Karniadakis"],
    "venue": "Journal of Computational Physics,",
    "year": 2017
  }, {
    "title": "Parameter estimation for differential equations: a generalized smoothing approach",
    "authors": ["J. Ramsay", "G. Hooker", "D. Campbell", "J. Cao"],
    "venue": "Journal of the Royal Statistical Society: Series B,",
    "year": 2007
  }, {
    "title": "Gaussian processes for machine learning",
    "authors": ["C.E. Rasmussen", "K.I. Williams"],
    "year": 2006
  }, {
    "title": "Non-stationary spectral kernels",
    "authors": ["S. Remes", "M. Heinonen", "S. Kaski"],
    "year": 2017
  }, {
    "title": "Kernel methods for pattern analysis",
    "authors": ["John Shawe-Taylor", "Nello Cristianini"],
    "venue": "Cambridge university press,",
    "year": 2004
  }, {
    "title": "Modeling and interpolation of the ambient magnetic field by gaussian processes",
    "authors": ["A. Solin", "M. Kok", "N. Wahlstrom", "T. Schon", "S. Särkkä"],
    "year": 2015
  }, {
    "title": "Computationally efficient bayesian learning of gaussian process state space models",
    "authors": ["Andreas Svensson", "Arno Solin", "Simo Särkkä", "Thomas Schön"],
    "venue": "In Artificial Intelligence and Statistics,",
    "year": 2016
  }, {
    "title": "A spline least squares method for numerical parameter estimation in differential equations",
    "authors": ["J.M. Varah"],
    "venue": "SIAM J.sci. Stat. Comput.,",
    "year": 1982
  }, {
    "title": "Modeling magnetic fields using gaussian processes",
    "authors": ["N. Wahlström", "M. Kok", "T. Schön"],
    "venue": "IEEE conf on Acoustics, Speech and Signal Processing (ICASSP),",
    "year": 2013
  }, {
    "title": "Gaussian process dynamical models",
    "authors": ["Jack Wang", "Aaron Hertzmann", "David M Blei"],
    "venue": "In Advances in neural information processing systems,",
    "year": 2006
  }, {
    "title": "Gaussian process dynamical models for human motion",
    "authors": ["Jack M Wang", "David J Fleet", "Aaron Hertzmann"],
    "venue": "IEEE transactions on pattern analysis and machine intelligence,",
    "year": 2008
  }, {
    "title": "Gaussian processes for bayesian estimation in ordinary differential equations",
    "authors": ["Y. Wang", "D. Barber"],
    "year": 2014
  }, {
    "title": "Fast multidimensional pattern extrapolation with gaussian processes",
    "authors": ["A. Wilson", "E. Gilboa", "A. Nehorai", "J. Cunningham"],
    "year": 2013
  }, {
    "title": "Variational dependent multioutput gaussian process dynamical systems",
    "authors": ["Jing Zhao", "Shiliang Sun"],
    "venue": "The Journal of Machine Learning Research,",
    "year": 2016
  }, {
    "title": "Learning gene regulatory networks from gene expression measurements using nonparametric molecular kinetics",
    "authors": ["T Äijö", "H. Lähdesmäki"],
    "year": 2009
  }],
  "id": "SP:c3f57d2286e8ea8ccc0aabd1dab3de299a1ea944",
  "authors": [{
    "name": "Markus Heinonen",
    "affiliations": []
  }, {
    "name": "Çagatay Yıldız",
    "affiliations": []
  }, {
    "name": "Henrik Mannerström",
    "affiliations": []
  }, {
    "name": "Jukka Intosalmi",
    "affiliations": []
  }, {
    "name": "Harri Lähdesmäki",
    "affiliations": []
  }],
  "abstractText": "In conventional ODE modelling coefficients of an equation driving the system state forward in time are estimated. However, for many complex systems it is practically impossible to determine the equations or interactions governing the underlying dynamics. In these settings, parametric ODE model cannot be formulated. Here, we overcome this issue by introducing a novel paradigm of nonparametric ODE modelling that can learn the underlying dynamics of arbitrary continuous-time systems without prior knowledge. We propose to learn non-linear, unknown differential functions from state observations using Gaussian process vector fields within the exact ODE formalism. We demonstrate the model’s capabilities to infer dynamics from sparse data and to simulate the system forward into future.",
  "title": "Learning unknown ODE models with Gaussian processes"
}