{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Variational inference (VI) is a family of methods to approximate an intractable target distribution (typically known only up to a constant) with a tractable surrogate distribution (Blei et al., 2016; Jordan et al., 1999; Wainwright & Jordan, 2008). VI procedures typically minimize the Kullback-Leibler (KL) divergence between the approximation and target distributions by maximizing a tractable lower bound on the marginal likelihood. The approximating family is often fixed, and typically excludes the neighborhood surrounding the target distribution, which prevents the approximation from becoming arbitrarily close to the true posterior. In the context of Bayesian inference, this mismatch between the variational family and the true posterior often manifests as underestimating the posterior variances of the model parameters and the inability to capture posterior correlations (Wainwright & Jordan, 2008).\nAn alternative approach to posterior inference uses Markov\n1Harvard University, Cambridge, MA, USA 2University of Washington, Seattle, WA, USA 3Google Brain, Cambridge, MA, USA. Correspondence to: Andrew C. Miller <acm@seas.harvard.edu>, Nicholas J. Foti <nfoti@uw.edu>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\nchain Monte Carlo (MCMC) methods that approximate a target distribution with samples drawn from a Markov chain constructed to admit the target distribution as the stationary distribution. MCMC enables a trade-off between computation and accuracy: drawing more samples makes the approximation closer to the target distribution. However, MCMC algorithms typically must be run iteratively and it can be difficult to assess convergence to the true target. Furthermore, correctly specifying MCMC moves can be more algorithmically restrictive than optimization-based approaches.\nTo alleviate the mismatch between tractable variational approximations and complicated posterior distributions, we propose a variational inference method that iteratively allows the approximating family of distributions to become more complex. Under certain conditions, the proposed approximations are eventually expressive enough to represent the true target arbitrarily well (though we do not prove our algorithm attains such a universal approximation here). Thus, the practitioner can trade time fitting a posterior approximation for increased accuracy of posterior estimates. Our algorithm grows the complexity of the approximating class in two ways: 1) incorporating rich covariance structure, and 2) sequentially adding new components to the approximating distribution. Our method builds on black-box variational inference methods using the re-parameterization trick by adapting it to be used with mixture distributions. This allows our method to be applied to a variety of target distributions including those arising from non-conjugate model specifications (Kingma & Welling, 2014; Ranganath et al., 2014; Salimans & Knowles, 2013). We demonstrate empirically that our algorithm improves posterior estimates over other variational methods for several practical Bayesian models."
  }, {
    "heading": "2. Variational Inference",
    "text": "Given a target distribution with density1 π(x) for a continuous random variable x ∈ X ⊆ RD, variational inference approximates π(x) with a tractable distribution, q(x;λ), from which we can efficiently draw samples and form sample-based estimates of functions of x. Variational methods minimize the KL-divergence, KL(q||π), between q(·;λ) and the true π as a function of variational parameter λ (Bishop, 2006). Although direct minimization of\n1We assume π(x) is known up to a constant, π̃(x) = Cπ(x).\nKL(q||π) is often intractable, we can derive a tractable objective based on properties of the KL-divergence. This objective is known as the evidence lower bound (ELBO):\nL(λ) = Eqλ [lnπ(x)− ln q(x;λ)] + ln C = ln C −KL(qλ||π) ≤ ln C = ln ∫ π̃(x)dx\nwhich, due to the positivity of KL(q||π), is a lower bound on C = log π(x), i.e., the marginal likelihood.\nVariational methods typically fix a family of distributions Q = {q(·;λ) : λ ∈ Λ} parameterized by λ, and maximize the ELBO with respect to λ ∈ Λ. Often there exists some (possibly non-unique) λ∗ ∈ Λ for which KL(q||π) is minimized. However, when the family Q does not include π then KL(qλ∗ ||π) > 0 which will result in biased estimates of functions f(x), Ex∼qλ∗ [f(x)] 6= Ex∼π[f(x)].\nThe primary alternative to variational methods for approximate inference is Markov chain Monte Carlo (MCMC), which constructs a Markov chain such that the target distribution remains invariant. Expectations with respect to the target distribution can be calculated as an average with respect to these correlated samples. MCMC typically enjoys nice asymptotic properties; as the number of samples grows, MCMC samplers represent the true target distribution with increasing fidelity. However, rules for constructing correct Markov steps are restrictive. With a few exceptions, most MCMC algorithms require evaluating a log-likelihood that touches all data at each step in the chain (Maclaurin & Adams, 2014; Welling & Teh, 2011). This becomes problematic during statistical analyses of large amounts of data — MCMC is often considered unusable because of this computational bottleneck. Notably, variational methods can avoid this bottleneck by sub-sampling the data (Ranganath et al., 2016a), as unbiased estimates of the log-likelihood can often be straight-forwardly used with optimization methods.\nIn the next section, we propose an algorithm that iteratively grows the approximating class Q and reframes the VI procedure as a series of optimization problems, resulting in a practical inference method that can both represent arbitrarily complex distributions and scale to large data sets."
  }, {
    "heading": "3. Variational Boosting",
    "text": "We define our class of approximating distributions to be mixtures of C simpler component distributions:\nq(C)(x;λ, ρ) = C∑ c=1 ρcqc(x;λc) , s.t. ρc ≥ 0, ∑ c ρc = 1,\nwhere we denote the full mixture as q(C), mixing proportions ρ = (ρ1, . . . , ρC), and component distributions qc(·;λc) parameterized by λ = (λ1, . . . , λC). The\nqc(·;λc)s can be any distribution over X ⊆ RD from which we can efficiently draw samples using a continuous mapping parameterized by λc (e.g., multivariate normal (Jaakkola & Jordan, 1998), or a composition of invertible maps (Rezende & Mohamed, 2015)).\nWhen posterior expectations and variances are of interest, mixture distributions provide tractable summaries. Expectations are easily expressed in terms of component expectations:\nEq(C) [f(x)] = ∫ q(C)(x)f(x)dx = ∑ c ρcEqc [f(x)].\nIn the case of multivariate normal components, the mean and covariance of a mixture are easy to compute, as are marginal distributions along any set of dimensions.\nVariational boosting (VBoost) begins with a single mixture component, q(1)(x;λ) = q1(x;λ1) with C = 1. We fix ρ1 = 1 and use existing black-box variational inference methods to fit the first component parameter, λ1. At the next iteration C = 2, we fix λ1 and introduce a new component into the mixture, q2(x;λ2). We define a new ELBO objective as a function of new component parameters, λ2, and a new mixture weight, ρ2. We then optimize this objective with respect to λ2 and ρ2 until convergence. At each subsequent round, c, we introduce new component parameters and a mixing weight, (λc, ρc), which are then optimized according to a new ELBO objective. The name variational boosting is inspired by methods that iteratively construct strong learners from ensembles of weak learners. We apply VBoost to target distributions via black-box variational inference with the re-parameterization trick to fit each component and mixture weights (Kingma & Welling, 2014; Ranganath et al., 2014; Salimans & Knowles, 2013). However, using mixtures as the variational approximation complicates the use of the re-parameterization trick."
  }, {
    "heading": "3.1. The re-parameterization trick and mixtures",
    "text": "The re-parameterization trick is used to compute an unbiased estimate of the gradient of an objective that is expressed as an intractable expectation with respect to a continuousvalued random variable. This situation arises in variational inference when the ELBO cannot be evaluated analytically. We form an unbiased estimate as:\nL(λ) = Eq [lnπ(x)− ln q(x;λ)] (1)\n≈ 1 L L∑ `=1 [ lnπ(x(`))− ln q(x(`);λ) ] (2)\nwhere x(`) ∼ q(x;λ). To obtain a Monte Carlo estimate of the gradient of L(λ) using the re-parameterization trick, we first separate the randomness needed to generate x(`) from the parameters λ, by defining a deterministic map x(`) , fq( ;λ) such that ∼ p( ) implies\nx(`) ∼ q(x;λ). Note that p( ) does not depend on λ. We then differentiate Eq. (2) with respect to λ through the map fq to obtain an estimate of∇λL(λ).\nWhen q(·;λ) is a mixture, applying the re-parameterization trick is not straightforward. The typical sampling procedure for a mixture model includes a discrete random variable that indicates a mixture component, which complicates differentiation. We circumvent this by re-writing the variational objective as a weighted combination of expectations with respect to individual mixture components:\nL(λ, ρ) = ∫ ( C∑\nc=1\nρcqc(x;λc)\n) [lnπ(x)− ln q(x;λ)] dx\n= C∑ c=1 ρc ∫ qc(x;λc) [lnπ(x)− ln q(x;λ)] dx\n= C∑ c=1 ρcEqc [lnπ(x)− ln q(x;λ)]\nwhich is a weighted sum of component-specific ELBOs. If the qc are continuous and there exists some function fc( ;λ) such that x = fc( ;λ) and x ∼ qc(·;λ) when ∼ p( ), then we can apply the re-parameterization trick to each component to obtain gradients of the ELBO : ∇λcL(λ, ρ) = ∇λc C∑ c=1 ρcEx∼q(x;λ) [lnπ(x)− ln q(x;λ)]\n= C∑ c=1 ρcE ∼p( ) [ ∇λc lnπ(fc( ;λc))\n−∇λc ln q(fc( ;λc);λ) ] .\nVBoost leverages the above formulation of ∇λcL(λ, ρ) to use the re-parameterization trick in a component-bycomponent manner, allowing us to improve the variational approximation as we incorporate new components."
  }, {
    "heading": "3.2. Incorporating New Components",
    "text": "Next, we describe how to incrementally add components during the VBoost procedure.\nThe first component VBoost starts by fitting a approximation to π(x) consisting of a single component, q1. We do this by maximizing the first ELBO objective\nL(1)(λ1) = Eq1 [lnπ(x)− ln q1(x;λ1)] (3) λ∗1 = arg max\nλ1\nL(1)(λ1) . (4)\nDepending on the forms of π and q1, optimizing L(1) can be accomplished by various methods — an obvious choice being black-box VI with the re-parameterization trick. After convergence we fix λ1 to be λ∗1.\nComponent C + 1 After iteration C, our current approximation to π(x) is a mixture distribution with C components:\nq(C)(x;λ, ρ) = C∑ c=1 ρcqc(x;λc). (5)\nAdding a component to Eq. (5) introduces a new component parameter, λC+1, and a new mixing weight, ρC+1. In this section, the mixing parameter ρC+1 ∈ [0, 1] mixes between the new component, qC+1(·;λC+1) and the existing approximation, q(C). The new approximate distribution is\nq(C+1)(x;λ, ρ)\n= (1− ρC+1)q(C)(x) + ρC+1qC+1(x;λC+1) .\nThe new ELBO, as a function of ρC+1 and λC+1, is:\nL(C+1)(ρC+1, λC+1) = Ex∼q(C+1) [ lnπ(x)− ln q(C+1)(x;λC+1, ρC+1) ] = (1− ρC+1)Eq(C) [ lnπ(x)− ln q(C+1)(x;λC+1, ρC+1)\n] + ρC+1EqC+1 [ lnπ(x)− ln q(C+1)(x;λC+1, ρC+1) ] .\nCrucially, we have separated out two expectations: one with respect to the existing approximation, q(C) (which is fixed), and the other with respect to the new component distribution, qC+1. Because we have fixed q(C), we only need to optimize the new component parameters, λC+1 and ρC+1, allowing us to use the re-parameterization trick to obtain gradients of L(C+1). Note that evaluating the gradient requires sampling from the existing components which may result in larger variance than typical black-box variational methods. To mitigate the extra variance we use many samples to estimate the gradient and leave variance reduction to future work.\nFigure 1 illustrates the algorithm on a simple onedimensional example — the initialization of a new component and the resulting mixture after optimizing the second objective, L(2)(ρ2, λ2). Figure 2 depicts the result of VBoost on a two-dimensional, multi-modal target distribution. In both cases, the component distributions are Gaussians with diagonal covariance."
  }, {
    "heading": "3.3. Structured Multivariate Normal Components",
    "text": "Though our method can use any component distribution that can be sampled using a continuous mapping, a sensible choice of component distribution is a multivariate normal\nq(x;λ) = N (x;µλ,Σλ) = |2πΣλ|−1/2 exp ( − 12 (x− µλ) ᵀΣ−1λ (x− µλ) )\nwhere the variational parameter λ is transformed into a mean vector µλ and covariance matrix Σλ.\nSpecifying the structure of the covariance matrix is a choice that largely depends on the dimensionality of X ⊆ RD and the correlation structure of the target distribution. A common choice of covariance is a diagonal matrix, Σλ = diag(σ21 , . . . , σ 2 D), which implies that x is independent across dimensions. When the approximation only consists of one component, this structure is commonly referred to as the mean field family. While computationally efficient, mean field approximations cannot model posterior correlations, which often leads to underestimation of marginal variances. Additionally, when diagonal covariances are used as the component distributions in Eq. (5) the resulting mixture may require a large number of components to represent the strong correlations (see Fig. 2). Furthermore, independence constraints can actually introduce local optima in the variational objective (Wainwright & Jordan, 2008).\nOn the other end of the spectrum, we can parameterize the entire covariance matrix using the Cholesky decomposition, L, such that LLᵀ = Σ. This allows Σ to be any positive semi-definite matrix, enabling q to have the full flexibility of a D-dimensional multivariate normal distribution. However, this introduces D(D + 1)/2 parameters, which can be computationally cumbersome when D is even moderately large. Furthermore, only a few pairs of variables may exhibit posterior correlations, particularly in multi-level models or neural networks where different parameter types may be nearly independent in the posterior.\nAs such, we would like to incorporate some capacity to capture correlations between dimensions of x without overparameterizing the approximation. The next subsection discusses a covariance specification that provides this tradeoff, while remaining computationally tractable.\nLow-rank plus diagonal covariance Black-box variational inference methods with the re-parameterization trick\nrequire sampling from the variational distribution and efficiently computing (or approximating) the entropy of the variational distribution. For multivariate normal distributions, the entropy is a function of the determinant of the covariance matrix, Σ, while computing the log likelihood requires computing Σ−1. When the dimensionality of the target, D, is large, computing determinants and inverses will have O(D3) time complexity and therefore may be prohibitively expensive to compute at every iteration.\nHowever, it may be unnecessary to represent allD(D−1)/2 possible correlations in the target distribution, particularly if certain dimensions are close to independent. One way to increase the capacity of q(x;λ) is to model the covariance as a low-rank plus diagonal (LR+D) matrix\nΣ = FF ᵀ + diag(exp(v)) (6)\nwhere F ∈ RD×r is a matrix of off diagonal factors, and v ∈ RD is the log-diagonal component. This is effectively approximating the target via a factor analysis model.\nThe choice of the rank r presents a tradeoff: with a larger rank, the variational approximation can be more flexible; with a lower rank, the computations necessary for fitting the variational approximation are more efficient. As a concrete example, in Section 4 we present a D = 37 dimensional posterior resulting from a non-conjugate hierarchical model, and we show that a “rank r = 2 plus diagonal” covariance does an excellent job capturing all D(D − 1)/2 = 780 pairwise correlations and D marginal variances. Incorporating more components using the VBoost framework further improves the approximation of the distribution.\nTo use the re-parameterization trick with this low rank covariance, we can simulate from q in two steps\nz(lo) ∼ N (0, Ir) z(hi) ∼ N (0, ID) x = Fz(lo) + µ+ I(v/2)z(hi)\nwhere z(lo) generates the randomness due to the low-rank structure, and z(hi) generates the randomness due to the diagonal structure. We use the operator I(a) = diag(exp(a)) for notational brevity. This generative process can be differentiated, yielding Monte Carlo estimates of the gradient with respect to F and v suitable for stochastic optimization.\nIn order to use LR+D covariance structure within VBoost, we will need to efficiently compute the determinant and inverse of Σ. The matrix determinant lemma expresses the determinant of Σ as the product of two determinants\n|FF ᵀ + I(v))| = |I(v))||Ir + F ᵀI(−v)F |\n= exp (∑ d vd ) |Ir + F ᵀI(−v)F |\nwhere the left term is simply the product of the diagonal component, and the right term is the determinant of an r × r matrix, computable in O(r3) time (Harville, 1997).\nTo compute Σ−1, the Woodbury matrix identity states that\n(FF ᵀ + I(v))−1\n= I(−v)− I(−v)F (Ir + F ᵀI(−v)F )−1F ᵀI(−v)\nwhich involves the inversion of a smaller, r × r matrix and can be done in O(r3) time (Golub & Van Loan, 2013). Importantly, for r D the above operations are efficiently differentiable and amenable for use in the BBVI framework.\nFitting the rank To specify the ELBO objective, we need to choose a rank r for the component covariance. There are many ways to decide on the rank of the variational approximation, some more appropriate for certain settings given dimensionality and computational constraints. For instance, we can greedily incorporate new rank components. Alternatively, we can fit a sequence of ranks r = 1, 2, . . . , rmax, and choose the best result (in terms of KL). In the Bayesian neural network model, we report results for a fixed schedule of ranks. In the hierarchical Poisson model, we monitor the change in marginal variances to decide the appropriate rank. See Section B of the supplement for further discussion.\nInitializing new component parameters When we add a new component, we must first initialize the component parameters. We find that the VBoost optimization procedure can be sensitive to initialization, so we devise a cheap importance sampling-based algorithm to generate a good starting point. This initialization procedure is detailed in Section A and Algorithm 1 of the supplement."
  }, {
    "heading": "3.4. Related Work",
    "text": "Mixtures of mean field approximations were introduced in Jaakkola & Jordan (1998) where mean field-like updates were developed using a bound on the entropy term and\nmodel-specific parameter updates. Nonparametric variational inference, introduced in Gershman et al. (2012), is a black-box variational inference algorithm that approximates a target distribution with a mixture of equally-weighted isotropic normals. The authors use a lower-bound on the entropy term in the ELBO to make the optimization procedure tractable. Similarly, Salimans & Knowles (2013) present a method for fitting mixture distributions as an approximation. However, their method is restricted to mixture component distributions within the exponential family, and a joint optimization procedure. Mixture distributions are a type of hierarchical variational model (Ranganath et al., 2016b), where the component identity can be thought of as latent variables in the variational distribution. While in Ranganath et al. (2016b), the authors optimize a lower bound on the ELBO to fit general hierarchical variational models, our approach integrates out the discrete latent variables, allowing us to directly optimize the ELBO.\nSequential maximum-likelihood estimation of mixture models has been studied previously where the error between the sequentially learned model and the optimal model where all components and weights are jointly learned is bounded by O(1/C) where C is the number of mixture components (Li & Barron, 1999; Li, 1999; Rakhlin et al., 2006). A similar bound was proven in Zhang (2003) using arguments from convex analysis. More recently, sequentially constructing a mixture of deep generative models has been shown to achieve the same O(1/C) error bound when trained using an adversarial approach (Tolstikhin et al., 2016). Though these ideas show promise for deriving error bounds for variational boosting, there are difficulties in applying them.\nIn concurrent work, Guo et al. (2016) developed a boosting procedure to construct flexible approximations to posterior distributions. In particular, they use gradient-boosting to determine candidate component distributions and then optimize the mixture weight for the new component (Friedman, 2000). However, Guo et al. (2016) assume that the gradientboosting procedure is able to find the optimal new component so that the arguments in Zhang (2003) apply, which is not true in general. We note that if we make the similar assumption that at each step of VBoost the component parameters λ∗C are found exactly, then the optimization of ρC is convex and can be optimized exactly. We can then appeal to the same arguments in Zhang (2003) and obtain an O(1/C) error bound. The work in Guo et al. (2016) provides important first steps in the theoretical development of boosting methods applied to variational inference, however, we note that developing a comprehensive theory that deals with the difficulties of multimodality and the non-joint-convexity of KL divergence in λ and ρ is still needed. Recently, Moore (2016) began to address issues of multimodality from model symmetry in variational inference. However, the question remains whether the entire distribution is being explored.\nSeeger (2010) explored the use of low-rank covariance Gaussians as variational approximations using a PCA-like algorithm. Additionally, concurrent work has proposed the use a LR+D matrices as the covariances of Gaussian posterior approximations (Ong et al., 2017). We have also found that though the LR+D covariance approximation is useful for capturing posterior correlations, combining the idea with boosting new components to capture non-Gaussian posteriors yields superior posterior inferences."
  }, {
    "heading": "4. Experiments and Analysis",
    "text": "To supplement the previous synthetic examples, we use VBoost to approximate various challenging posterior distributions arising from real statistical models of interest.2\nBinomial Regression We first apply VBoost to a nonconjugate hierarchical binomial regression model.3 The model describes the binomial rates of success (batting averages) of baseball players using a hierarchical model (Efron & Morris, 1975), parameterizing the “skill” of each player:\nθj ∼ Beta(φ · κ, (1− φ) · κ) player j prior yj ∼ Binomial(Kj , θj) player j hits ,\nwhere yj is the number of successes (hits) player j has attempted in Kj attempts (at bats). Each player has a latent success rate θj , which is governed by two global variables κ and φ. We specify the priors φ ∼ Unif(0, 1) and κ ∼ Pareto(1, 1.5). There are 18 players in this example, creating a posterior distribution with D = 20 parameters. For each round of VBoost, we estimate∇λ,ρL(C+1) using 2Code available at https://github.com/andymiller/vboost. 3Model and data from the mc-stan case studies\n400 samples each for qC+1 and qC . We use 1,000 iterations of adam with default parameters to update ρC+1 and λC+1 (Kingma & Ba, 2014).\nIn all experiments, we use autograd to obtain gradients with respect to new component parameters (Maclaurin et al., 2015b;a). To highlight the fidelity of our method, we compare VBoost with rank-1 components to mean field VI (MFVI) and the No-U-Turn Sampler (NUTS) (Hoffman & Gelman, 2014). The empirical distribution resulting from 20k NUTS samples is considered the “ground truth” posterior in this example. Figure 3a compares a selection of univariate and bivariate posterior marginals. We see that VBoost is able to closely match the NUTS posteriors, improving upon the MFVI approximation. Figure 3b compares the VBoost covariance estimates to the “ground truth” estimates of MCMC at various stages of the algorithm. We see that VBoost is able to capture pairwise covariances with increasing accuracy as the number of components increases.\nMulti-level Poisson GLM We use VBoost to approximate the posterior of a hierarchical Poisson GLM, a common non-conjugate Bayesian model. Here, we focus on a specific model that was formulated to measure the relative rates of stop-and-frisk events for different ethnicities and in different precincts (Gelman et al., 2007), and has been used as an illustrative example of multi-level modeling (Gelman & Hill, 2006). The model uses a precinct and ethnicity effect to describe the relative rate of stop-and-frisk events\nαe ∼ N (0, σ2α) ethnicity effect βp ∼ N (0, σ2β) precinct effect\nlnλep = µ+ αe + βp + lnNep log rate Yep ∼ P(λep) stop-and-frisk events\nwhere Yep are the number of stop-and-frisk events within ethnicity group e and precinct p over some fixed period of time; Nep is the total number of arrests of ethnicity group e in precinct p over the same period of time; αe and βp are the ethnicity and precinct effects. The prior over the mean offset and group variances is given by µ, lnσ2α, lnσ 2 β ∼ N (0, 102).\nAs before, we simulate 20k NUTS samples, and compare various variational approximations. Because of the high posterior correlations present in this example, VBoost with diagonal covariance components is inefficient in its representation of this structure. As such, this example relies on the low-rank approximation to shape the posterior. Figure 4 shows how posterior accuracy is affected by incorporating covariance structure (left) and adding more components (right). Figures 6 and 7 in the supplement compare VBoost covariances to MCMC samples, showing that increased posterior rank capacity and number of components yield more accurate marginal variance and covariance estimates. These results indicate that while incorporating covariance structure increases the accuracy of estimating marginal variances, the non-Gaussianity afforded by the use\nof mixture components allows for a better posterior approximation translating into more accurate moment estimates.\nBayesian Neural Network We apply our method to a Bayesian neural network (BNN) regression model, which admits a high-dimensional, non-Gaussian posterior. We compare predictive performance of VBoost to Probabilistic Backpropagation (PBP) (Hernández-Lobato & Adams, 2015). Mimicking the experimental setup of HernándezLobato & Adams (2015), we use a single 50-unit hidden layer, with ReLU activation functions. We place a normal prior over each weight in the neural network, governed by the same variance and an inverse Gamma prior over the observation variance yielding the model:\nwi ∼ N (0, 1/α) weights y|x,w, τ ∼ N (φ(x,w), 1/τ) output distribution\nwhere w = {wi} is the set of weights, and φ(x,w) is a multi-layer perceptron that maps input x to output y as a function of parameters w. Both α and τ are given Gamma(1, .1) priors. We denote the set of parameters as θ , (w,α, τ). We approximate the posterior p(w,α, τ |D),\nwhere D is the training set of {xn, yn}Nn=1 input-output pairs. We then use the posterior predictive distribution to compute the distribution for a new input x∗\np(y|x∗,D) = ∫ p(y|x∗, θ)p(θ|D)dθ (7)\n≈ 1 L L∑ `=1 p(y|x∗, θ(`)) , θ(`) ∼ p(θ|D) (8)\nand report average predictive log probabilities for held out data, p(Y = y∗|x∗,D). For a dataset with input dimension P , the posterior has dimensionD = (P+2)·50+3 (between D = 303 and D = 753 for the data sets considered).\nWe report held-out predictive performance for different approximate posteriors for six datasets. For each dataset, we perform the following training procedure 20 times. First, we create a random partition into a 90% training set and 10% testing set. We then apply VBoost, adding rank 5 components. We allow each additional component only 200 iterations. To save time on initialization, we draw 100 samples from the existing approximation, and initialize the new component with the sample with maximum weight. For comparison, Probabilistic back-propagation is given 1000 passes over the training data — empirically, sufficient for the algorithm to converge.\nTable 3 in the supplement presents out-of-sample log probability for single-component multivariate Gaussian approximations with varying rank structure. Table 1 presents outof-sample log probability for additional rank 5 components added using VBoost. We note that though we do not see much improvement as rank structure is added, we do see predictive improvement as components are added. Our results suggest that incorporating and adapting new mixture components is a recipe for a more expressive posterior approximation, translating into better predictive results. In fact, for all datasets we see that incorporating a new component improves test log probability, and we see further improvement with additional components for most of the datasets. Furthermore, in five of the datasets we see predictive performance surpass probabilistic back-propagation as new components are added. This highlights VBoost’s ability to trade computation for improved accuracy. These empirical results suggest that augmenting a Gaussian approximation to include additional capacity can improve predictive performance in a BNN while retaining computational tractability."
  }, {
    "heading": "4.1. Comparison to NPVI",
    "text": "We also compare VBoost to nonparametric variational inference (NPVI) (Gershman et al., 2012), a similar mixture based black-box variational method. NPVI derives a tractable lower bound to the ELBO which is then approximately maximized. NPVI requires computing the Hessian\nof the model for the ELBO approximation, so we limit our comparison to the lower dimensional hierarchical models.\nWe also note that the NPVI ELBO approximation does not fully integrate the lnπ(x) term against the variational approximation, q(x;λ) when optimizing the mean parameters of the approximation components. When we applied NPVI to the baseball model, we discovered an instability in the optimization of these mean parameters (which we verified by finding that map optimization diverges). Black box VI, VBoost, and MCMC were not susceptible to this pathology. Consequently, we only compare NPVI to VBoost on the frisk model. Because NPVI uses diagonal components, we restrict VBoost to use purely diagonal components (r = 0). In Table 2 we show marginal likelihood lower bounds, comparing NPVI to VBoost with a varying number of components. Even with a single component, the NPVI objective tends to underperform. The NPVI component variance is spherical, limiting its capacity to represent posterior correlations. Further, NPVI is approximately optimizing a looser lower bound to the marginal likelihood. These two factors explain why NPVI fails to match MFVI and VBoost."
  }, {
    "heading": "5. Discussion and Conclusion",
    "text": "We proposed VBoost, a practical variational inference method that constructs an increasingly expressive posterior approximation and is applicable to a variety of Bayesian models. We demonstrated the ability of VBoost to learn rich representations of complex, high-dimensional posteriors on a variety of real world statistical models. One avenue for future work is incorporating flexible component distributions such as compositions of invertible maps (Rezende & Mohamed, 2015) or auxiliary variable variational models (Maaløe et al., 2016). We also plan to study approximation guarantees of the VBoost method and variance reduction techniques for our reparameterization gradient approach. Also, when optimizing parameters of a variational family, recent work has shown that the natural gradient can be more robust and lead to better optima (Hoffman et al., 2013; Johnson et al., 2016). Deriving and applying natural gradient updates for mixture approximations could make VBoost more efficient."
  }, {
    "heading": "Acknowledgements",
    "text": "The authors would like to thank Arjumand Masood, Mike Hughes, and Finale Doshi-Velez for helpful feedback. ACM is supported by the Applied Mathematics Program within the Office of Science Advanced Scientific Computing Research of the U.S. Department of Energy under contract No. DE-AC02-05CH11231. NJF is supported by a Washington Research Foundation Innovation Postdoctoral Fellowship in Neuroengineering and Data Science. RPA is supported by NSF IIS-1421780 and the Alfred P. Sloan Foundation."
  }],
  "references": [{
    "title": "Pattern Recognition and Machine Learning",
    "authors": ["C. Bishop"],
    "year": 2006
  }, {
    "title": "Variational inference: A review for statisticians",
    "authors": ["D.M. Blei", "A. Kucukelbir", "J.D. McAuliffe"],
    "venue": "arXiv preprint arXiv:1601.00670,",
    "year": 2016
  }, {
    "title": "Maximum likelihood from incomplete data via the EM algorithm",
    "authors": ["A.P. Dempster", "N.M. Laird", "D.B. Rubin"],
    "venue": "Journal of the Royal Statistical Society. Series B (methodological),",
    "year": 1977
  }, {
    "title": "Data analysis using Stein’s estimator and its generalizations",
    "authors": ["B. Efron", "C. Morris"],
    "venue": "Journal of the American Statistical Association,",
    "year": 1975
  }, {
    "title": "Greedy function approximation: A gradient boosting machine",
    "authors": ["J.H. Friedman"],
    "venue": "Annals of Statistics,",
    "year": 2000
  }, {
    "title": "Data Analysis Using Regression and Multilevel/Hierarchical Models",
    "authors": ["A. Gelman", "J. Hill"],
    "year": 2006
  }, {
    "title": "An analysis of the NYPD’s stop-and-frisk policy in the context of claims of racial bias",
    "authors": ["A. Gelman", "J. Fagan", "A. Kiss"],
    "venue": "Journal of the American Statistical Association,",
    "year": 2007
  }, {
    "title": "Nonparametric variational inference",
    "authors": ["S. Gershman", "M. Hoffman", "D.M. Blei"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2012
  }, {
    "title": "Matrix Algebra from a Statistician’s",
    "authors": ["D.A. Harville"],
    "venue": "Perspective. Springer-Verlag,",
    "year": 1997
  }, {
    "title": "Probabilistic backpropagation for scalable learning of Bayesian neural networks",
    "authors": ["J.M. Hernández-Lobato", "R.P. Adams"],
    "year": 2015
  }, {
    "title": "The No-U-turn sampler: adaptively setting path lengths in Hamiltonian monte carlo",
    "authors": ["M.D. Hoffman", "A. Gelman"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2014
  }, {
    "title": "Stochastic variational inference",
    "authors": ["M.D. Hoffman", "D.M. Blei", "C. Wang", "J.W. Paisley"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2013
  }, {
    "title": "Improving the mean field approximation via the use of mixture distributions",
    "authors": ["T.S. Jaakkola", "M.I. Jordan"],
    "venue": "In Learning in Graphical Models,",
    "year": 1998
  }, {
    "title": "Composing graphical models with neural networks for structured representations and fast inference",
    "authors": ["M.J. Johnson", "D.K. Duvenaud", "A.B. Wiltschko", "S.R. Datta", "R.P. Adams"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2016
  }, {
    "title": "An introduction to variational methods for graphical models",
    "authors": ["M.I. Jordan", "Z. Ghahramani", "T.S. Jaakkola", "L.K. Saul"],
    "venue": "Machine learning,",
    "year": 1999
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["D. Kingma", "J. Ba"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2014
  }, {
    "title": "Auto-encoding variational Bayes",
    "authors": ["D.P. Kingma", "M. Welling"],
    "venue": "In International Conference on Learning Representations,",
    "year": 2014
  }, {
    "title": "Estimation of Mixture Models",
    "authors": ["Q. Li"],
    "venue": "PhD thesis,",
    "year": 1999
  }, {
    "title": "Mixture density estimation",
    "authors": ["Q.J. Li", "A.R. Barron"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 1999
  }, {
    "title": "Auxiliary deep generative models",
    "authors": ["L. Maaløe", "C.K. Sønderby", "S.K. Sønderby", "O. Winther"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2016
  }, {
    "title": "Firefly Monte Carlo: Exact MCMC with subsets of data",
    "authors": ["D. Maclaurin", "R.P. Adams"],
    "venue": "In Uncertainty in Artificial Intelligence,",
    "year": 2014
  }, {
    "title": "Autograd: Reverse-mode differentiation of native python",
    "authors": ["D. Maclaurin", "D. Duvenaud", "R.P. Adams"],
    "venue": "ICML workshop on Automatic Machine Learning,",
    "year": 2015
  }, {
    "title": "Autograd: Reverse-mode differentiation of native Python, 2015b. URL http://github.com/HIPS/ autograd",
    "authors": ["D. Maclaurin", "D. Duvenaud", "M. Johnson", "R.P. Adams"],
    "year": 2015
  }, {
    "title": "Symmetrized variational inference",
    "authors": ["D.A. Moore"],
    "venue": "In NIPS Workshop on Advances in Approximate Bayesian Inferece,",
    "year": 2016
  }, {
    "title": "Gaussian variational approximation with factor covariance structure",
    "authors": ["Ong", "V.M.-H", "D.J. Nott", "M.S. Smith"],
    "venue": "arXiv preprint arXiv:1701.03208,",
    "year": 2017
  }, {
    "title": "Risk bounds for mixture density estimation",
    "authors": ["A. Rakhlin", "Panchenko", "Mukherjee"],
    "venue": "ESAIM: Probability and Statistics,",
    "year": 2006
  }, {
    "title": "Black box variational inference",
    "authors": ["R. Ranganath", "S. Gerrish", "D.M. Blei"],
    "venue": "In International Conference on Artificial Intelligence and Statistics,",
    "year": 2014
  }, {
    "title": "Operator variational inference",
    "authors": ["R. Ranganath", "J. Altosaar", "D. Tran", "D.M. Blei"],
    "venue": "In Advances in Neural Information Processing Systems,",
    "year": 2016
  }, {
    "title": "Hierarchical variational models",
    "authors": ["R. Ranganath", "D. Tran", "D.M. Blei"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2016
  }, {
    "title": "Variational inference with normalizing flows",
    "authors": ["D. Rezende", "S. Mohamed"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2015
  }, {
    "title": "Fixed-form variational posterior approximation through stochastic linear regression",
    "authors": ["T. Salimans", "D.A. Knowles"],
    "venue": "Bayesian Analysis,",
    "year": 2013
  }, {
    "title": "Gaussian covariance and scalable variational inference",
    "authors": ["M.W. Seeger"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2010
  }, {
    "title": "Adagan: Boosting generative models",
    "authors": ["I. Tolstikhin", "S. Gelly", "O. Bousquet", "Simon-Gabriel", "C.-J", "B. Schoelkopf"],
    "venue": "arXiv preprint arXiv:1701.02386,",
    "year": 2016
  }, {
    "title": "Graphical models, exponential families, and variational inference",
    "authors": ["M.J. Wainwright", "M.I. Jordan"],
    "venue": "Foundations and Trends in Machine Learning,",
    "year": 2008
  }, {
    "title": "Bayesian learning via stochastic gradient Langevin dynamics",
    "authors": ["M. Welling", "Y.W. Teh"],
    "venue": "In International Conference on Machine Learning,",
    "year": 2011
  }, {
    "title": "Sequential greedy approximation for certain convex optimization problems",
    "authors": ["T. Zhang"],
    "venue": "IEEE Transactions on Information Theory,",
    "year": 2003
  }],
  "id": "SP:51ddc46563379cf0fcd96e7b8be62ce318771f9a",
  "authors": [{
    "name": "Andrew C. Miller",
    "affiliations": []
  }, {
    "name": "Nicholas J. Foti",
    "affiliations": []
  }, {
    "name": "Ryan P. Adams",
    "affiliations": []
  }],
  "abstractText": "We propose a black-box variational inference method to approximate intractable distributions with an increasingly rich approximating class. Our method, variational boosting, iteratively refines an existing variational approximation by solving a sequence of optimization problems, allowing a trade-off between computation time and accuracy. We expand the variational approximating class by incorporating additional covariance structure and by introducing new components to form a mixture. We apply variational boosting to synthetic and real statistical models, and show that the resulting posterior inferences compare favorably to existing variational algorithms.",
  "title": "Variational Boosting: Iteratively Refining Posterior Approximations"
}