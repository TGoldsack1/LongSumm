{
  "sections": [{
    "heading": "1 Introduction",
    "text": "Arguments are intended to persuade the audience of a particular point of view and are an important way for humans to reason about controversial topics (Mercier and Sperber, 2011). The amount of argumentative text on any chosen subject can, how-\nTopic: “William Farquhar ought to be honoured as the rightful founder of Singapore”. Stance: “No, it is Raffles!” Argument 1: HE HAS A BOSS(RAFFLES) HE HAS TO FOLLOW HIM AND NOT GO ABOUT DOING ANYTHING ELSE... Argument 2: Raffles conceived a town plan to remodel Singapore into a modern city. The plan consisted of separate areas for different... Crowdsourced labels: {2 1, 1 2, 2 1}\nFigure 1: Example argument pair from an online debate.\never, overwhelm a reader. Consider the scale of historical text archives or social media platforms with millions of users. Automated methods could help readers overcome this challenge by identifying highquality, persuasive arguments from both sides of a debate.\nTheoretical approaches for assessing argument quality have proved difficult to apply to everyday arguments (Boudry et al., 2015). Empirical machine learning approaches instead train models using example judgments of arguments, such as those shown in Figure 1. Previous approaches to obtaining such judgments include training annotators to assign scores from 1-6 (Persing and Ng, 2017), asking annotators for simple binary or three-class categories (Wei et al., 2016b), and aggregating binary votes from multiple people (Wei et al., 2016a; Tan et al., 2016). However, these approaches are limited by the cost of training annotators, a highly restricted set of categories, or the need for multiple annotators per document.\n357\nTransactions of the Association for Computational Linguistics, vol. 6, pp. 357–371, 2018. Action Editor: Daichi Mochihashi. Submission batch: 9/2017; Revision batch: 1/2018; Published 6/2018.\nc©2018 Association for Computational Linguistics. Distributed under a CC-BY 4.0 license.\nAn alternative way to judge arguments is to compare them against one another (Habernal and Gurevych, 2016). When comparing the arguments in Figure 1, we may judge that argument 1 is less convincing due to its writing style, whereas argument 2 presents evidence in the form of historical events. Pairwise comparisons such as this are known to place less cognitive burden on human annotators than choosing a numerical rating and allow fine-grained sorting of items that is not possible with categorical labels (Kendall, 1948; Kingsley and Brown, 2010). Unlike numerical ratings, pairwise comparisons are not affected by different annotators’ biases toward high, low or middling values, or an individual’s bias changing over time.\nIn practice, we face a data acquisition bottleneck when encountering new domains or audiences. For example, neural network methods typically require datasets with many thousands of hand-labeled examples to perform well (Srivastava et al., 2014; Collobert et al., 2011). One solution is to employ multiple non-specialist annotators at low cost (crowdsourcing), but this requires quality control techniques to account for errors. Another source of data are the actions of users of a software application, which can be interpreted as pairwise judgments (Joachims, 2002). For example, when a user clicks on an argument in a list it can be interpreted as a preference for the selected argument over more highly-ranked arguments. However, the resulting pairwise labels are likely to be a very noisy indication of preference.\nIn this paper, we develop a Bayesian approach to learn from noisy pairwise preferences based on Gaussian process preference learning (GPPL) (Chu and Ghahramani, 2005). We model argument convincingness as a function of textual features, including word embeddings, and develop an inference method for GPPL that scales to realistic dataset sizes using stochastic variational inference (SVI) (Hoffman et al., 2013). Using datasets provided by Habernal and Gurevych (2016), we show that our method outperforms the previous state-of-the-art for ranking arguments by convincingness and identifying the most convincing argument in a pair. Further experiments show that our approach is particularly advantageous with small, noisy datasets, and in an active\nlearning set-up. Our software is publicly available1. The rest of the paper is structured as follows. Section 2 reviews related work on argumentation, then Section 3 motivates the use of Bayesian methods by discussing their successful applications in NLP. In Section 4, we review preference learning methods and then Section 5 describes our scalable Gaussian process-based approach. Section 6 presents our evaluation, comparing our method to the state-of-the art and testing with noisy data and active learning. Finally, we present conclusions and future work."
  }, {
    "heading": "2 Identifying Convincing Arguments",
    "text": "Lukin et al. (2017) demonstrated that an audience’s personality and prior stance affect an argument’s persuasiveness, but they were unable to predict belief change to a high degree of accuracy. Related work has shown how persuasiveness is also affected by the sequence of arguments in a discussion (Tan et al., 2016; Rosenfeld and Kraus, 2016; Monteserin and Amandi, 2013), but this work focuses on predicting salience of an argument given the state of the debate, rather than the qualities of arguments.\nWachsmuth et al. (2017) recently showed that relative comparisons of argument convincingness correlate with theory-derived quality ratings. Habernal and Gurevych (2016) established datasets containing crowdsourced pairwise judgments of convincingness for arguments taken from online discussions. Errors in the crowdsourced data were handled by determining gold labels using the MACE algorithm (Hovy et al., 2013). The gold labels were then used to train SVM and bi-directional long short-term memory (BiLSTM) classifiers to predict pairwise labels for new arguments. The gold labels were also used to construct a directed graph of convincingness, which was input to PageRank to produce scores for each argument. These scores were then used to train SVM and BiLSTM regression models. A drawback of such pipeline approaches is that they are prone to error propagation (Chen and Ng, 2016), and consensus algorithms, such as MACE, require multiple crowdsourced labels for each argument pair, which increases annotation costs.\n1https://github.com/ukplab/ tacl2018-preference-convincing"
  }, {
    "heading": "3 Bayesian Methods for NLP",
    "text": "When faced with a lack of reliable annotated data, Bayesian approaches have a number of advantages. Bayesian inference provides a mathematical framework for combining multiple observations with prior information. Given a model, M , and observed data, D, we apply Bayes’ rule to obtain a posterior distribution over M , which can be used to make predictions about unseen data or latent variables:\nP (M |D) = P (D|M)P (M) P (D) , (1)\nwhere P (D|M) is the likelihood of the data given M , and P (M) is the model prior. If the dataset is small, the posterior remains close to the prior, so the model does not assume extreme values given a small training sample. Rather than learning a posterior, neural network training typically selects model parameters that maximize the likelihood, so they are more prone to overfitting with small datasets, which can reduce performance (Xiong et al., 2011).\nBayesian methods can be trained using unsupervised or semi-supervised learning to take advantage of structure in unlabeled data when labeled data is in short supply. Popular examples in NLP are Latent Dirichlet Allocation (LDA) (Blei et al., 2003), which is used for topic modelling, and its extension, the hierarchical Dirichlet process (HDP) (Teh et al., 2005), which learns the number of topics rather than requiring it to be fixed a priori. Semisupervised Bayesian learning has also been used to achieve state-of-the-art results for semantic role labelling (Titov and Klementiev, 2012).\nWe can combine independent pieces of weak evidence using Bayesian methods through the likelihood. For instance, a Bayesian network can be used to infer attack relations between arguments by combining votes for acceptable arguments from different people (Kido and Okamoto, 2017). Other Bayesian approaches combine crowdsourced annotations to train a sentiment classifier without a separate quality control step (Simpson et al., 2015; Felt et al., 2016).\nSeveral successful Bayesian approaches in NLP make use of Gaussian processes (GPs), which are distributions over functions of input features. GPs are nonparametric, meaning they can model highly nonlinear functions by allowing function complexity to grow with the amount of data (Rasmussen and\nWilliams, 2006). They account for model uncertainty when extrapolating from sparse training data and can be incorporated into larger graphical models. Example applications include analyzing the relationship between a user’s impact on Twitter and the textual features of their tweets (Lampos et al., 2014), predicting the level of emotion in text (Beck et al., 2014), and estimating the quality of machine translations given source and translated texts (Cohn and Specia, 2013)."
  }, {
    "heading": "4 Preference Learning",
    "text": "Our aim is to develop a Bayesian method for identifying convincing arguments given their features, which can be trained on noisy pairwise labels. Each label, i j, states that an argument, i, is more convincing than argument, j. This learning task is a form of preference learning, which can be addressed in several ways. A simple approach is to use a generic classifier by obtaining a single feature vector for each pair in the training and test datasets, either by concatenating the feature vectors of the items in the pair, or by computing the difference of the two feature vectors, as in SVM-Rank (Joachims, 2002). However, this approach does not produce ranked lists of convincing arguments without predicting a large number of pairwise labels, nor give scores of convincingness.\nAlternatively, we could learn an ordering over arguments directly using Mallows models (Mallows, 1957), which define distributions over permutations. Mallows models can be trained from pairwise preferences (Lu and Boutilier, 2011), but inference is usually costly since the number of possible permutations is O(N !), where N is the number of arguments. Modeling only the ordering does not allow us to quantify the difference between arguments at similar ranks.\nTo avoid the problems of classifier-based and permutation-based methods, we propose to learn a real-valued convincingness function, f , that takes argument features as input and can be used to predict rankings, pairwise labels, or ratings for individual arguments. There are two well established approaches for mapping pairwise labels to real-valued scores: the Bradley-Terry-Plackett-Luce model (Bradley and Terry, 1952; Luce, 1959; Plack-\nett, 1975) and the Thurstone-Mosteller model (Thurstone, 1927; Mosteller, 2006). Based on the latter approach, Chu and Ghahramani (2005) introduced Gaussian process preference learning (GPPL), a Bayesian model that can tolerate errors in pairwise training labels and gains the advantages of a GP for learning nonlinear functions from sparse datasets. However, the inference method proposed by Chu and Ghahramani (2005) has memory and computational costs that scale withO(N3), making it unsuitable for real-world text datasets. The next section explains how we use recent developments in inference methods to develop scalable Bayesian preference learning for argument convincingness."
  }, {
    "heading": "5 Scalable Bayesian Preference Learning",
    "text": "First, we introduce a probabilistic model for preference learning (Chu and Ghahramani, 2005). We observe preference pairs, each consisting of a pair of feature vectors xi and xj , for arguments i and j, and a label y ∈ {i j, j i}. We assume that the likelihood of y depends on the latent convincingness, f(xi) and f(xj), of the arguments in the pair. Our goal is to predict y for pairs that have not been observed, and predict f(xi), which may be used to rank arguments. The relationship between convincingness and pairwise labels is described by the following:\np(i j|f(xi), f(xj), δi, δj)\n= { 1 if f(xi) + δi ≥ f(j) + δj 0 otherwise,\n(2)\nwhere δ ∼ N (0, 1) is Gaussian-distributed noise. If the convincingness f(xi) is higher than the convincingness f(xj), the preference label i j is more likely to be true. However, the label also depends on the noise terms, δi and δj , to allow for errors caused by, for example, disagreement between human annotators. We simplify Equation 2 by integrating out δi and δj to obtain the preference likelihood:\np(i j|f(xi), f(xj))\n= ∫ ∫ p(i j|f(xi), f(xj), δi, δj)\nN (δi; 0, 1)N (δj ; 0, 1)dδidδj = Φ (z) , (3)\nwhere z = (f(xi) − f(xj))/ √\n2, and Φ is the cumulative distribution function of the standard normal distribution.\nWe assume that convincingness is a function, f , of argument features, drawn from a Gaussian process prior: f ∼ GP(0, kθs), where kθ is a kernel function with hyper-parameters θ, and s is a scale parameter. The kernel function controls the smoothness of f over the feature space, while s controls the variance of f . Increasing s means that, on average, the magnitude of f(xi) − f(xj) increases so that Φ(z) is closer to 0 or 1, and erroneous pairwise labels are less likely. Therefore, larger values of s correspond to less observation noise. We assume a Gamma distribution 1/s ∼ G(a0, b0) with shape a0 and scale b0, as this is a conjugate prior.\nGiven N arguments and P labeled preference pairs, y = {y1, ..., yP }, we can make predictions by finding the posterior distribution over the convincingness values, f = {f(x1), ..., f(xN )}, given by:\np (f |y, kθ, a0, b0) ∝ p(y|f)p(f |kθ, a0, b0)\n= 1\nZ\n∫ P∏\nk=1\nΦ(zk)N (f ;0,Kθs)G(s; a0, b0)ds, (4)\nwhere Z = p (y|kθ, a0, b0). Unfortunately, neither Z nor the integral over s can be computed analytically, so we must turn to approximations.\nChu and Ghahramani (2005) used a Laplace approximation for GPPL, which finds a maximum aposteriori (MAP) solution that has been shown to perform poorly in many cases (Nickisch and Rasmussen, 2008). More accurate estimates of the posterior could be obtained using Markov chain Monte Carlo sampling (MCMC), but this is very computationally expensive (Nickisch and Rasmussen, 2008). Instead, we use a faster variational method that maintains the benefits of the Bayesian approach (Reece et al., 2011; Steinberg and Bonilla, 2014) and adapt this method to the preference likelihood given by Equation 3.\nTo apply the variational approach, we define an approximation q(f) to Equation 4. First, we approximate the preference likelihood with a Gaussian,∏P k=1 Φ (zk) ≈ N (y;Gf̂ ,Q). This allows us to avoid the intractable integral in Z and obtain another Gaussian, q(f) = N (f ; f̂ ,C). The parameters f̂\nand C depend on the approximate preference likelihood and an approximate distribution over s: q(s) = G(s; a, b). The variational inference algorithm begins by initializing the parameters G, f̂ , C, a and b at random. Then, the algorithm proceeds iteratively updating each parameter in turn, given the current values for the other parameters. This optimization procedure minimizes the Kullback-Leibler (KL) divergence of p(f |y, kθ, a0, b0) from q(f), causing q(f) to converge to an approximate posterior.\nThe update equations for the mean f̂ and covariance C require inverting the covariance matrix, Kθ, at a computational cost of O(N3), which is impractical with more than a few hundred data points. Furthermore, the updates also require O(NP ) computations and have O(N2 +NP + P 2) memory complexity. To resolve this, we apply a recently introduced technique, stochastic variational inference (SVI) (Hoffman et al., 2013; Hensman et al., 2015), to scale to datasets containing at least tens of thousands of arguments and pairwise labels.\nSVI makes two approximations: it assumesM inducing points, which act as a substitute for the observed arguments; it uses only a random subset of the data containing Pn pairs at each iteration. At each iteration, t, rather than update f̂ and C directly, we update the mean f̂m and covariance Cm for the inducing points. The update for each parameter λ ∈ {f̂m,Cm} takes the form of a weighted mean of the previous estimate and a new estimate computed from only a subset of observations:\nλ(t) = (1− ρt)λ(t−1) + ρtλ̂tP/Pn, (5) where ρ = t−u is the step size, u is a forgetting rate, and λ̂t is the new estimate computed from Pn out of P observations. The values of f̂ and C can be estimated from the inducing point distribution. By choosing M << N and Pn << P , we limit the computational complexity of each SVI iteration toO(M3+MPn) and the memory complexity O(M2 +MPn + P 2n). To choose representative inducing points, we use K-means++ (Arthur and Vassilvitskii, 2007) with K = M to rapidly cluster the feature vectors, then take the cluster centers as inducing points. Compared to standard K-means, Kmeans++ introduces a new method for choosing the initial cluster seeds that reduces the number of poorquality clusterings.\nA further benefit of GPs is that they enable automatic relevance determination (ARD) to identify informative features, which works as follows. The prior covariance of f is defined by a kernel function of the form kθ(x,x′) = ∏D d=1 kd(|xd−x′d|/ld), where kd is a function of the distance between the values of feature d for items x and x′, and a lengthscale hyper-parameter, ld. The length-scale controls the smoothness of the function across the feature space, and can be optimized by choosing the value of ld that maximizes the approximate log marginal likelihood, L ≈ log p(y). This process is known as maximum likelihood II (MLII) (Rasmussen and Williams, 2006). Features with larger length-scales after optimization are less relevant because their values have less effect on kθ(x,x′). To avoid the cost of optimizing the length-scales, we can alternatively set them using a median heuristic, which has been shown to perform well in practice (Gretton et al., 2012): l̃d = 1Dmedian ({|xi,d − xj,d|, ∀i = 1, ..., N,∀j = 1, ..., N})."
  }, {
    "heading": "6 Experiments",
    "text": ""
  }, {
    "heading": "6.1 Datasets",
    "text": "We first use toy datasets to illustrate the behavior of several different methods (described below). Then, we analyze the scalability and performance of our approach on datasets provided by Habernal and Gurevych (2016), which contain pairwise labels for arguments taken from online discussion forums. The labels can have a value of 0, meaning the annotator found the second argument in the pair more convincing, 1 if the annotator was undecided, or 2 if the first argument was more convincing. To test different scenarios, different pre-processing steps were used to produce the three UKPConvArg* datasets shown in Table 1. UKPConvArgStrict and UKPConvArgRank were cleaned to remove disagreements between annotators, hence can be considered to be noise-free. UKPConvArgCrowdSample is used to evaluate performance with noisy crowdsourced data including conflicts and undecided labels, and to test the suitability of our method for active learning to address the cold-start problem in domains with no labeled data. For these datasets, we perform 32-fold cross validation, where each fold corresponds to one of 16 controversial topics, and one of two stances for\nthat topic."
  }, {
    "heading": "6.2 Method Comparison",
    "text": "Our two tasks are ranking arguments by convincingness and classification of pairwise labels to predict which argument is more convincing. For both tasks, our proposed GPPL method is trained using the pairwise labels for the training folds. We rank arguments by their expected convincingness, E[f(xi)] ≈ f̂(xi) for each argument i with feature vector xi, under the approximate posterior q(f) output by our SVI algorithm. We obtain classification probabilities using Equation 3 but accommodate the posterior covariance, C, of f , by replacing z with ẑ = (f̂(xi)−f̂(xj))/ √ 2 + Cii + Cjj − Cij − Cji. We tested the sensitivity of GPPL to the choice of seed values for K-means++ by training the model on the same 31 folds of UKPConvArgStrict 20 times, each with a different random seed, then testing on the remaining fold. The resulting accuracy had a standard deviation of 0.03. In the following experiments, all methods were initialized and trained once for each fold of each experiment.\nWe compare GPPL to an SVM with radial basis function kernel, and a bi-directional long shortterm memory network (BiLSTM), with 64 output nodes in the core LSTM layer. The SVM and BiLSTM were tested by Habernal and Gurevych (2016) and are available in our software repository. To apply SVM and BiLSTM to the classification task, we concatenate the feature vectors of each pair of arguments and train on the pairwise labels. For ranking, PageRank is first applied to arguments in the train-\ning folds to obtain scores from the pairwise labels, which are then used to train the SVM and BiLSTM regression models.\nAs a Bayesian alternative to GPPL, we test a Gaussian process classifier (GPC) for the classification task by concatenating the feature vectors of arguments in the same way as the SVM classifier. We also evaluate a non-Bayesian approach that infers function values using the same pairwise preference likelihood (PL) as GPPL (Equation 3), but uses them to train an SVM regression model instead of a GP. We refer to this method as PL+SVR.\nWe use two sets of input features. The ling feature set contains 32, 010 linguistic features, including unigrams, bigrams, parts-of-speech (POS) ngrams, production rules, ratios and counts of word length, punctuation and verb forms, dependency tree depth, named entity type counts, readability measures, sentiment scores, and spell-checking. The GloVe features are word embeddings with 300 dimensions. Both feature sets were developed by Habernal and Gurevych (2016). We also evaluate a combination of both feature sets, ling + GloVe. To create a single embedding vector per argument as input for GPPL, we take the mean of individual word embeddings for tokens in the argument. We also tested skip-thoughts (Kiros et al., 2015) and Siamese-CBOW (Kenter et al., 2016) with GPPL on UKPConvArgStrict and UKPConvArgRank, both with MLII optimization and the median heuristic, both alone and combined with ling. However, we found that mean GloVe embeddings produced substantially better performance in all tests. To input\nthe argument-level ling features to BiLSTM, we extend the network by adding a dense layer with 64 nodes.\nWe set the GPPL hyper-parameters a0 = 2 and b0 = 200 by comparing training set performance on UKPConvArgStrict and UKPConvArgRank against a0 = 2, b0 = 20000 and a0 = 2, b0 = 2. The chosen prior is very weakly informative, favoring a moderate level of noise in the pairwise labels. For the kernel function, kd, we used the Matérn 32 function as it has been shown to outperform other commonlyused kernels, such as RBF, across a wide range of tasks (Rasmussen and Williams, 2006). We defer evaluating other kernel functions to future work. To set length-scales, ld, we compare the median heuristic (labeled “medi.”) with MLII optimization using an L-BFGS optimizer (“opt.”). Experiment 2 shows how the number of inducing points, M , can be set to trade off speed and accuracy. Following those results, we set M = 500 for Experiments 3, 4 and 5 and M = N for the toy dataset in Experiment 1."
  }, {
    "heading": "6.3 Experiment 1: Toy Data",
    "text": "To illustrate some key differences between GPPL, SVM and PageRank, we simulate four scenarios, each of which contains arguments labeled arg0 to arg4. In each scenario, we generate a set of pairwise preference labels according to the graphs shown in Figure 2. Each scenario is repeated 25 times: in\neach repeat, we select arguments at random from one fold of UKPConvArgStrict then associate the mean GloVe embeddings for these arguments with the labels arg0 to arg4. We train GPPL, PageRank and the SVM classifier on the preference pairs shown in each graph and predict ranks and pairwise labels for arguments arg0 to arg4.\nIn the “no cycle” scenario, arg0 is preferred to both arg1 and arg2, which is reflected in the scores predicted by PageRank and GPPL in Figure 3. However, arg3 and arg4 are not connected to the rest of the graph, and PageRank and GPPL score them differently. Figure 4 shows how GPPL provides less confident classifications for pairs that were not yet observed, e.g. arg2 arg4, in contrast with the dis-\ncrete classifications of the SVM.\nThe next scenario shows a “single cycle” in the preference graph. Both PageRank and GPPL produce equal values for the arguments in the cycle (arg0, arg1, arg2). PageRank assigns lower scores to both arg3 and arg4 than the arguments in the cycle, while GPPL more intuitively gives a higher score to arg3, which was preferred to arg4. SVM predicts that arg0 and arg1 are preferred over arg3, although arg0 and arg1 are in a cycle so there is no reason to prefer them. GPPL, in contrast, weakly predicts that arg3 is preferred.\nThe “double cycle” scenario contains two paths from arg2 to arg0, via arg1 or arg3, and one conflicting preference arg2 arg0. GPPL scores the arguments as if the single conflicting preference, arg2 arg0, is less important than the two parallel paths from arg2 to arg0. In contrast, PageRank gives high scores to both arg0 and arg2. The classifications by GPPL and SVM are similar, but GPPL produces\nmore uncertain predictions than in the first scenario due to the conflict.\nFinally, Figure 3d shows the addition of 9 undecided labels to the “no cycle” scenario, indicated by undirected edges in Figure 2, to simulate multiple annotators viewing the pair without being able to choose the most convincing argument. The SVM and PageRank are unaffected as they cannot be trained using the undecided labels. However, the GPPL classifications are less confident and the difference in GPPL scores between arg0 and the other arguments decreases, since GPPL gives the edge from arg2 to arg0 less weight.\nIn conclusion, GPPL appears to resolve conflicts in the preference graphs more intuitively than PageRank, which was designed to rank web pages by importance rather than preference. In contrast to SVM, GPPL is able to account for cycles and undecided labels to soften its predictions."
  }, {
    "heading": "6.4 Experiment 2: Scalability",
    "text": "We analyze empirically the scalability of the proposed SVI method for GPPL using the UKPConvArgStrict dataset. Figure 6 shows the effect of varying the number of inducing points, M , on the overall runtime and accuracy of the method. The accuracy increases quickly with M , and flattens out, suggesting there is little benefit to increasing M further on this dataset. The runtimes increase with M , and are much longer with 32, 310 features than with 300 features. The difference is due to the cost of computing the kernel, which is linear in M , With only 300 features, the Figure 6b runtime appears polynomial, reflecting theO(M3) term in the inference procedure.\nWe tested GPPL with both the SVI algorithm, with M = 100 and Pn = 200, and variational inference without inducing points or stochastic updates (labeled “no SVI”) with different sizes of training dataset subsampled from UKPConvArgStrict. The results are shown in Figure 5a. For GPPL with SVI, the runtime increases very little with dataset size, while the runtime with “no SVI” increases polynomially with training set size (both N and P ). At N = 100, the number of inducing points is M = N but the SVI algorithm is still faster due to the stochastic updates with Pn = 200 P pairs.\nFigure 5b shows the effect of the number of features, D, on runtimes. Runtimes for GPPL increase by a large amount with D = 32, 310, because the SVI method computes the kernel matrix,Kmm, with computational complexityO(D). While D is small, other costs dominate. We show runtimes using the MLII optimization procedure with GPPL in Figure 5c. Owing to the long computation times required, the procedure was limited to a maximum of 25 iterations and did not terminate in fewer than 25 in any of the test runs. This creates a similar pattern to Figure 5b (approximately multiples of 50).\nWe include runtimes for SVM and BiLSTM in Figures 5a and 5c to show their runtime patterns, but note that the runtimes reflect differences in implementations and system hardware. Both SVM and GPPL were run on an Intel i7 quad-core desktop. For SVM we used LibSVM version 3.2, which could be sped up if probability estimates were not required. BiLSTM was run with Theano 0.72 on\n2http://deeplearning.net/software/ theano/\nan Nvidia Tesla P100 GPU. We can see in Figure 5c that the runtime for BiLSTM does not appear to increase due to the number of features, while that of SVM increases sharply with 32, 310 features. In Figure 5a, we observe the SVM runtimes increase polynomially with training set size."
  }, {
    "heading": "6.5 Experiment 3: UKPConvArgStrict and UKPConvArgRank",
    "text": "We compare classification performance on UKPConvArgStrict and ranking performance on UKPConvArgRank. The results in Table 2 show that when using ling features, GPPL produces similar accuracy and improves the area under the ROC curve (AUC) by .02 and cross entropy error (CEE) by .01. AUC quantifies how well the predicted probabilities separate the classes, while CEE quantifies the usefulness of the probabilities output by each method. Much larger improvements can be seen in the ranking metrics. When GPPL is run with GloVe, it performs worse than BiLSTM for classification but improves the ranking metrics. Using a combination of features improves all methods, suggesting that embeddings and linguistic features contain complementary information. This improvement is statistically significant (p .01 using two-tailed Wilcoxon signed-rank test) for SVM with all metrics except accuracy, for BiLSTM with AUC only, and for GPPL medi. with Pearson correlation only.\nOptimizing the length-scale using MLII improves classification accuracy by 1% over the median heuristic, and significantly improves accuracy (p = .043) and AUC (p = .013) over the previous stateof-the-art, SVM ling. However, the cost of these im-\nprovements is that each fold required around 2 hours to compute instead of approximately 10 minutes on the same machine (Intel i7 quad-core desktop) using the median heuristic. The differences in all ranking metrics between GPPL opt. and SVM ling + GloVe are statistically significant, with p = .029 for Pearson’s r and p .01 for both Spearman’s ρ and Kendall’s τ .\nGPC produces the best results on the classification task (p < .01 for all metrics compared to all other methods), indicating the benefits of a Bayesian approach over SVM and BiLSTM. However, unlike GPPL, GPC cannot be used to rank the arguments. The results also show that PL+SVR does not reach the same performance as GPPL, suggesting that GPPL may benefit from the Bayesian integration of a GP with the preference likelihood."
  }, {
    "heading": "6.6 Experiment 4: Conflicting and Noisy Data",
    "text": "We use UKPConvArgCrowdSample to introduce noisy data and conflicting pairwise labels to both the classification and regression tasks, to test the hypothesis that GPPL would best handle unreliable crowdsourced data. The evaluation uses gold labels from UKPConvArgStrict and UKPConvArgRank for the test set. The results in Table 3 show that all methods perform worse compared to Experiment 3 due to the presence of errors in the pairwise labels. Here, GPPL produces the best classification accuracy and cross-entropy error (significant with p .01 compared to all other methods except accuracy compared to GP+SVR, for which p = .045), while GPC has the highest AUC (p .01 compared to all except GP+SVR, which was not significant). Compared to UKPConvArgStrict, the clas-\nsification performance of GPC, SVM and BiLSTM decreased more than that of GPPL. These methods lack a mechanism to resolve conflicts in the preference graph, unlike GPPL and PL+SVR, which handle conflicts through the preference likelihood. PL+SVR again performs worse than GPPL on classification metrics, although its ranking performance is comparable. For ranking, GPPL again outperforms SVM and BiLSTM in all metrics (significant with p .01 in all cases except for SVM with Pearson’s correlation)."
  }, {
    "heading": "6.7 Experiment 5: Active Learning",
    "text": "In this experiment, we hypothesized that GPPL provides more meaningful confidence estimates than SVM or BiLSTM, which can be used to facilitate active learning in scenarios where labeled training data is expensive or initially unavailable. To test this hypothesis, we simulate an active learning scenario, in which an agent iteratively learns a model for each fold. Initially, 2 pairs are chosen at random, then used to train the classifier. The agent then performs uncertainty sampling (Settles, 2010) to select the 2 pairs with the least confident classifications. The labels for these pairs are then added to the training set and used to re-train the model. We repeated the process until 400 labels had been sampled.\nThe result is plotted in Figure 7, showing that GPPL reaches a mean accuracy of 70% with only 100 labels, while SVM and BiLSTM do not reach the same performance given 400 labels. After 100 labels, the performance of BiLSTM decreases. It has previously been shown (Cawley, 2011; Guyon et al., 2011; Settles, 2010) that uncertainty sampling sometimes causes accuracy to decrease. If the model overfits to a small dataset, it can mis-classify some data points with high confidence so that they are not selected and corrected by uncertainty sampling. The larger number of parameters in the BiLSTM may make it may more prone to overfitting with small datasets than SVM or GPPL. The Bayesian approach of GPPL aims to further reduce overfitting by accounting for parameter uncertainty. The results suggest that GPPL may be more suitable than the alternatives in cold-start scenarios with small amounts of labeled data."
  }, {
    "heading": "6.8 Relevant Feature Determination",
    "text": "We now examine the length-scales learned by optimizing GPPL using MLII to identify informative features. A larger length-scale causes greater smoothing, implying that the feature is less relevant when predicting the convincingness function than a feature with a small length-scale. Figure 8 shows the distribution of length-scales for each category of ling+GloVe features, averaged over the folds in UKPConvArgStrict where MLII optimization improved accuracy by 3%. The length-scales were normalized by dividing by their median heuristic values, which were their initial values before optimization. The widest distributions of length-scales are for the mean word embeddings and the “other” category. A very large number of features have lengthscales close to 1, which may mean that they are weakly informative, as their length-scales have not been increased, or that there was insufficient data or time to learn their length-scales. To limit computation time, the optimization algorithm was restricted to 25 iterations, so may only have fully optimized features with larger gradients, leaving other features with normalized length-scales close to 1.\nTable 4 shows features with length-scales < 0.99, of which there are two production rule features and 18 POS-n-gram features, suggesting that the latter may capture more relevant aspects of grammar for convincingness. For n-grams, the relationship to convincingness may be topic-specific, hence they are not identified as important when the model is trained on 31 different topics. The fact that MLII did not substantially shorten the length-scales for ngrams and POS n-grams corresponds to previous re-\nsults (Persing and Ng, 2017), which found these feature sets less informative than other argumentrelated feature sets.\nTable 4 also presents a breakdown of the “other” features into sentiment, ratio, count and NER features. The shortest length-scales are for sentiment features, pointing to a possible link between argumentation quality and sentiment. However, “VeryPositive” was the feature with the largest lengthscale, either because the median was a poor heuristic in this case or because the feature was uninformative, perhaps because sarcastic statements can be confused with highly positive sentiment. The short length-scale for the “words> 6 letters” ratio suggest that some surface features may be informative, despite previous work (Wei et al., 2016a) finding a set of surface features less informative than other feature sets. In this case, longer words may relate to more sophisticated and convincing arguments."
  }, {
    "heading": "6.9 Error Analysis",
    "text": "We compared the errors when using GPPL opt. with mean GloVe embeddings and with linguistic features. We manually inspected the 25 arguments most frequently mis-classified by GPPL ling and correctly classified by GPPL GloVe. We found that GPPL ling mistakenly marked several arguments as less convincing when they contained grammar and spelling errors but otherwise made a logical point. In contrast, arguments that did not strongly take a side and did not contain language errors were often marked mistakenly as more convincing.\nWe also examined the 25 arguments most frequently misclassified by GPPL GloVe but not by GPPL ling. Of the arguments that GPPL GloVe incorrectly marked as more convincing, 10 contained multiple exclamation marks and all-caps sentences. Other failures were very short arguments and under-\nrating arguments containing the term ‘rape’. The analysis suggests that the different feature sets identify different aspects of convincingness.\nTo investigate the differences between our best approach, GPPL opt. ling + GloVe, and the previous best performer, SVM ling, we manually examined 40 randomly chosen false classifications, where one of either ling + GloVe or SVM was correct and the other was incorrect. We found that both SVM and GPPL falsely classified arguments that were either very short or long and complex, suggesting deeper semantic or structural understanding of the argument may be required. However, SVM also made mistakes where the arguments contained few verbs.\nWe also compared the rankings produced by GPPL opt. (ling+GloVe), and SVM on UKPConvArgRank by examining the 20 largest deviations from the gold standard rank for each method. Arguments underrated by SVM and not GPPL often contained exclamation marks or common spelling errors (likely due to unigram or bigram features). GPPL underrated short arguments with the ngrams\n“I think”, “why?”, and “don’t know”, which were used as part of a rhetorical question rather than to state that the author was uncertain or uninformed. These cases may not be distinguishable by a GP given only ling + GloVe features.\nAn expected advantage of GPPL is that it provides more meaningful uncertainty estimates for tasks such as active learning. We examined whether erroneous classifications correspond to more uncertain predictions with GPPL ling and SVM ling. For UKPConvArgStrict, the mean Shannon entropy of the pairwise predictions from GPPL was .129 for correct predictions and 2.443 for errors, while for SVM, the mean Shannon entropy was .188 for correct predictions and 1.583 for incorrect. With both methods, more uncertain (higher entropy) predictions correlate with more errors, but the more extreme values for GPPL suggest that its output probabilities more accurately reflect uncertainty than those produced by the SVM."
  }, {
    "heading": "7 Conclusions and Future Work",
    "text": "We presented a novel Bayesian approach to predicting argument convincingness from pairwise labels using Gaussian process preference learning (GPPL). Using recent advances in approximate inference, we developed a scalable algorithm for GPPL that is suitable for large NLP datasets. Our experiments demonstrated that our method significantly outperforms the state-of-the-art on a benchmark dataset for argument convincingness, particularly when noisy and conflicting pairwise labels are used in training. Active learning experiments showed that GPPL is an effective model for cold-start situations and that the convincingness of Internet arguments can be predicted reasonably well given only a small number of samples. The results also showed that linguistic features and word embeddings provide complementary information, and that GPPL can be used to automatically identify relevant features.\nFuture work will evaluate our approach on other NLP tasks where reliable classifications may be difficult to obtain, such as learning to classify text from implicit user feedback (Joachims, 2002). We also plan to investigate training the GP using absolute scores in combination with pairwise labels."
  }, {
    "heading": "Acknowledgements",
    "text": "This work has been supported by the German Federal Ministry of Education and Research (BMBF) under the promotional reference 01UG1416B (CEDIFOR). It also received funding from the European Unions Horizon 2020 research and innovation programme (H2020-EINFRA-20142) under grant agreement No. 654021 (OpenMinTeD). It reflects only the authors views and the EU is not liable for any use that may be made of the information contained therein. We would like to thank the TACL editors and reviewers for their effort and the valuable feedback we received from them."
  }],
  "year": 2018,
  "references": [{
    "title": "k-means++: the advantages of careful seeding",
    "authors": ["David Arthur", "Sergei Vassilvitskii."],
    "venue": "Proceedings of the Eighteenth Annual ACM-SIAM Symposium on Discrete Algorithms, pages 1027–1035. Society for Industrial and Applied Mathematics.",
    "year": 2007
  }, {
    "title": "Joint emotion analysis via multi-task Gaussian processes",
    "authors": ["Daniel Beck", "Trevor Cohn", "Lucia Specia."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing, pages 1798–1803. ACL.",
    "year": 2014
  }, {
    "title": "Latent Dirichlet allocation",
    "authors": ["David M Blei", "Andrew Y Ng", "Michael I Jordan."],
    "venue": "Journal of Machine Learning Research, 3(Jan):993–1022.",
    "year": 2003
  }, {
    "title": "The fake, the flimsy, and the fallacious: demarcating arguments in real life",
    "authors": ["Maarten Boudry", "Fabio Paglieri", "Massimo Pigliucci."],
    "venue": "Argumentation, 29(4):431–456.",
    "year": 2015
  }, {
    "title": "Rank analysis of incomplete block designs: I",
    "authors": ["Ralph Allan Bradley", "Milton E Terry."],
    "venue": "the method of paired comparisons. Biometrika, 39(3/4):324–345.",
    "year": 1952
  }, {
    "title": "Baseline methods for active learning",
    "authors": ["Gavin C Cawley."],
    "venue": "Proceedings of the Active Learning and Experimental Design Workshop in Conjunction with AISTATS 2010, pages 47–57.",
    "year": 2011
  }, {
    "title": "Joint inference over a lightly supervised information extraction pipeline: Towards event coreference resolution for resource-scarce languages",
    "authors": ["Chen Chen", "Vincent Ng."],
    "venue": "Proceedings of the Thirtieth AAAI Conference on Artificial Intelligence, pages 2913–2920.",
    "year": 2016
  }, {
    "title": "Preference learning with Gaussian processes",
    "authors": ["Wei Chu", "Zoubin Ghahramani."],
    "venue": "Proceedings of the 22nd International Conference on Machine learning, pages 137–144. ACM.",
    "year": 2005
  }, {
    "title": "Modelling annotator bias with multi-task Gaussian processes",
    "authors": ["Trevor Cohn", "Lucia Specia"],
    "year": 2013
  }, {
    "title": "Natural language processing (almost) from scratch",
    "authors": ["Ronan Collobert", "Jason Weston", "Léon Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa."],
    "venue": "Journal of Machine Learning Research, 12(Aug):2493–2537.",
    "year": 2011
  }, {
    "title": "Semantic annotation aggregation with conditional crowdsourcing models and word embeddings",
    "authors": ["Paul Felt", "Eric K. Ringger", "Kevin D. Seppi."],
    "venue": "Proceedings of COLING 2016, the 26th International Conference on Computational Linguistics: Technical",
    "year": 2016
  }, {
    "title": "Optimal kernel choice for large-scale two-sample tests",
    "authors": ["Arthur Gretton", "Dino Sejdinovic", "Heiko Strathmann", "Sivaraman Balakrishnan", "Massimiliano Pontil", "Kenji Fukumizu", "Bharath K. Sriperumbudur."],
    "venue": "Advances in Neural Information Processing Systems,",
    "year": 2012
  }, {
    "title": "Results of the active learning challenge",
    "authors": ["Isabelle Guyon", "Gavin Cawley", "Gideon Dror", "Vincent Lemaire."],
    "venue": "Proceedings of the Active Learning and Experimental Design Workshop in Conjunction with AISTATS 2010, pages 19–45.",
    "year": 2011
  }, {
    "title": "Which argument is more convincing? Analyzing and predicting convincingness of Web arguments using bidirectional LSTM",
    "authors": ["Ivan Habernal", "Iryna Gurevych."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Vol-",
    "year": 2016
  }, {
    "title": "Scalable Variational Gaussian Process Classification",
    "authors": ["James Hensman", "Alexander G. de G. Matthews", "Zoubin Ghahramani."],
    "venue": "Proceedings of the Eighteenth International Conference on Artificial Intelligence and Statistics, pages 351–360.",
    "year": 2015
  }, {
    "title": "Stochastic variational inference",
    "authors": ["Matthew D. Hoffman", "David M. Blei", "Chong Wang", "John William Paisley."],
    "venue": "Journal of Machine Learning Research, 14(1):1303–1347.",
    "year": 2013
  }, {
    "title": "Learning whom to trust with MACE",
    "authors": ["Dirk Hovy", "Taylor Berg-Kirkpatrick", "Ashish Vaswani", "Eduard H. Hovy."],
    "venue": "Proceedings of NAACL-HLT 2013, pages 1120–1130. ACL.",
    "year": 2013
  }, {
    "title": "Optimizing search engines using clickthrough data",
    "authors": ["Thorsten Joachims."],
    "venue": "Proceedings of the Eighth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 133–142. ACM.",
    "year": 2002
  }, {
    "title": "Rank correlation methods",
    "authors": ["Maurice George Kendall."],
    "venue": "Griffin.",
    "year": 1948
  }, {
    "title": "Siamese CBOW: Optimizing word embeddings",
    "authors": ["Tom Kenter", "Alexey Borisov", "Maarten de Rijke"],
    "year": 2016
  }, {
    "title": "A Bayesian approach to argument-based reasoning for attack estimation",
    "authors": ["Hiroyuki Kido", "Keishi Okamoto."],
    "venue": "Proceedings of the Twenty-Sixth International Joint Conference on Artificial Intelligence, pages 249–255.",
    "year": 2017
  }, {
    "title": "Preference uncertainty, preference refinement and paired comparison experiments",
    "authors": ["David C. Kingsley", "Thomas C. Brown."],
    "venue": "Land Economics, 86(3):530–544.",
    "year": 2010
  }, {
    "title": "Skip-thought vectors",
    "authors": ["Ryan Kiros", "Yukun Zhu", "Ruslan R. Salakhutdinov", "Richard Zemel", "Raquel Urtasun", "Antonio Torralba", "Sanja Fidler."],
    "venue": "Advances in Neural Information Processing Systems, pages 3294–3302.",
    "year": 2015
  }, {
    "title": "Predicting and characterising user impact on Twitter",
    "authors": ["Vasileios Lampos", "Nikolaos Aletras", "Daniel PreoţiucPietro", "Trevor Cohn."],
    "venue": "Proceedings of the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 405–413.",
    "year": 2014
  }, {
    "title": "Learning mallows models with pairwise preferences",
    "authors": ["Tyler Lu", "Craig Boutilier."],
    "venue": "Proceedings of the 28th International Conference on Machine Learning, pages 145–152.",
    "year": 2011
  }, {
    "title": "On the possible psychophysical laws",
    "authors": ["R. Duncan Luce."],
    "venue": "Psychological Review, 66(2):81.",
    "year": 1959
  }, {
    "title": "Argument strength is in the eye of the beholder: Audience effects in persuasion",
    "authors": ["Stephanie Lukin", "Pranav Anand", "Marilyn Walker", "Steve Whittaker."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguis-",
    "year": 2017
  }, {
    "title": "Non-null ranking models",
    "authors": ["Colin L Mallows."],
    "venue": "i. Biometrika, 44(1/2):114–130.",
    "year": 1957
  }, {
    "title": "Why do humans reason? Arguments for an argumentative theory",
    "authors": ["Hugo Mercier", "Dan Sperber."],
    "venue": "Behavioral and Brain Sciences, 34(2):57–74.",
    "year": 2011
  }, {
    "title": "A reinforcement learning approach to improve the argument selection effectiveness in argumentation-based negotiation",
    "authors": ["Ariel Monteserin", "Analı́a Amandi"],
    "venue": "Expert Systems with Applications,",
    "year": 2013
  }, {
    "title": "Remarks on the method of paired comparisons: I",
    "authors": ["Frederick Mosteller."],
    "venue": "The least squares solution assuming equal standard deviations and equal correlations. In Selected Papers of Frederick Mosteller, pages 157–162. Springer.",
    "year": 2006
  }, {
    "title": "Approximations for binary Gaussian process classification",
    "authors": ["Hannes Nickisch", "Carl Edward Rasmussen."],
    "venue": "Journal of Machine Learning Research, 9(Oct):2035–2078.",
    "year": 2008
  }, {
    "title": "Why can’t you convince me? Modeling weaknesses in unpersuasive arguments",
    "authors": ["Isaac Persing", "Vincent Ng."],
    "venue": "Proceedings of the 26th International Joint Conference on Artificial Intelligence, pages 4082–4088.",
    "year": 2017
  }, {
    "title": "The analysis of permutations",
    "authors": ["Robin L. Plackett."],
    "venue": "Applied Statistics, pages 193–202.",
    "year": 1975
  }, {
    "title": "Gaussian processes for machine learning",
    "authors": ["Carl E. Rasmussen", "Christopher K.I. Williams."],
    "venue": "The MIT Press, Cambridge, MA, USA, 38:715–719.",
    "year": 2006
  }, {
    "title": "Determining intent using hard/soft data and Gaussian process classifiers",
    "authors": ["Steven Reece", "Stephen Roberts", "David Nicholson", "Chris Lloyd."],
    "venue": "Proceedings of the 14th International Conference on Information Fusion, pages 1–8. IEEE.",
    "year": 2011
  }, {
    "title": "Providing arguments in discussions on the basis of the prediction of human argumentative behavior",
    "authors": ["Ariel Rosenfeld", "Sarit Kraus."],
    "venue": "ACM Transactions on Interactive Intelligent Systems (TiiS), 6(4):30.",
    "year": 2016
  }, {
    "title": "Active learning literature survey",
    "authors": ["Burr Settles."],
    "venue": "University of Wisconsin, Madison, 52(55-66):11.",
    "year": 2010
  }, {
    "title": "Language understanding in the wild: Combining crowdsourcing and machine learning",
    "authors": ["Edwin D. Simpson", "Matteo Venanzi", "Steven Reece", "Pushmeet Kohli", "John Guiver", "Stephen J. Roberts", "Nicholas R. Jennings."],
    "venue": "Proceedings of the 24th International",
    "year": 2015
  }, {
    "title": "Dropout: A simple way to prevent neural networks from overfitting",
    "authors": ["Nitish Srivastava", "Geoffrey E. Hinton", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan R. Salakhutdinov."],
    "venue": "Journal of machine learning research, 15(1):1929–1958.",
    "year": 2014
  }, {
    "title": "Extended and unscented Gaussian processes",
    "authors": ["Daniel M. Steinberg", "Edwin V. Bonilla."],
    "venue": "Advances in Neural Information Processing Systems, pages 1251–1259.",
    "year": 2014
  }, {
    "title": "Winning arguments: Interaction dynamics and persuasion strategies in good-faith online discussions",
    "authors": ["Chenhao Tan", "Vlad Niculae", "Cristian DanescuNiculescu-Mizil", "Lillian Lee."],
    "venue": "Proceedings of the 25th International Conference on",
    "year": 2016
  }, {
    "title": "Sharing clusters among related groups: Hierarchical Dirichlet processes",
    "authors": ["Yee W. Teh", "Michael I. Jordan", "Matthew J. Beal", "David M. Blei."],
    "venue": "Advances in neural information processing systems, pages 1385– 1392.",
    "year": 2005
  }, {
    "title": "A law of comparative judgment",
    "authors": ["Louis L Thurstone."],
    "venue": "Psychological review, 34(4):273.",
    "year": 1927
  }, {
    "title": "A Bayesian approach to unsupervised semantic role induction",
    "authors": ["Ivan Titov", "Alexandre Klementiev."],
    "venue": "Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 12–22.",
    "year": 2012
  }, {
    "title": "Argumentation quality assessment: Theory vs",
    "authors": ["Henning Wachsmuth", "Nona Naderi", "Ivan Habernal", "Yufang Hou", "Graeme Hirst", "Iryna Gurevych", "Benno Stein."],
    "venue": "practice. In Proceedings of the 55th Annual Meeting of the Association for Computational Linguis-",
    "year": 2017
  }, {
    "title": "Is this post persuasive? Ranking argumentative comments in online forum",
    "authors": ["Zhongyu Wei", "Yang Liu", "Yi Li."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (Volume 2: Short Papers), pages 195–200.",
    "year": 2016
  }, {
    "title": "A preliminary study of disputation behavior in online debating forum",
    "authors": ["Zhongyu Wei", "Yandi Xia", "Chen Li", "Yang Liu", "Zachary Stallbohm", "Yi Li", "Yang Jin."],
    "venue": "Proceedings of the Third Workshop on Argument Mining (ArgMining2016), pages 166–171.",
    "year": 2016
  }, {
    "title": "Bayesian prediction of tissue-regulated splicing using RNA sequence and cellular context",
    "authors": ["Hui Yuan Xiong", "Yoseph Barash", "Brendan J Frey."],
    "venue": "Bioinformatics, 27(18):2554–2562. 371",
    "year": 2011
  }],
  "id": "SP:69e6b29c87075d637f9b56b49ea324d337b51908",
  "authors": [{
    "name": "Edwin Simpson",
    "affiliations": []
  }, {
    "name": "Iryna Gurevych",
    "affiliations": []
  }],
  "abstractText": "We introduce a scalable Bayesian preference learning method for identifying convincing arguments in the absence of gold-standard ratings or rankings. In contrast to previous work, we avoid the need for separate methods to perform quality control on training data, predict rankings and perform pairwise classification. Bayesian approaches are an effective solution when faced with sparse or noisy training data, but have not previously been used to identify convincing arguments. One issue is scalability, which we address by developing a stochastic variational inference method for Gaussian process (GP) preference learning. We show how our method can be applied to predict argument convincingness from crowdsourced data, outperforming the previous state-of-the-art, particularly when trained with small amounts of unreliable data. We demonstrate how the Bayesian approach enables more effective active learning, thereby reducing the amount of data required to identify convincing arguments for new users and domains. While word embeddings are principally used with neural networks, our results show that word embeddings in combination with linguistic features also benefit GPs when predicting argument convincingness.",
  "title": "Finding Convincing Arguments Using Scalable Bayesian Preference Learning"
}