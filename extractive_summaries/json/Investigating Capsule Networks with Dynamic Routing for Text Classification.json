{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3110–3119 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n3110"
  }, {
    "heading": "1 Introduction",
    "text": "Modeling articles or sentences computationally is a fundamental topic in natural language processing. It could be as simple as a keyword/phrase matching problem, but it could also be a nontrivial problem if compositions, hierarchies, and structures of texts are considered. For example, a news article which mentions a single phrase “US election” may be categorized into the political news with high probability. But it could be very difficult for a computer to predict which presidential candidate is favored by its author, or whether the\n∗ Corresponding author (min.yang@siat.ac.cn) 1Codes are publicly available at: https:\n//github.com/andyweizhao/capsule_text_ classification.\nauthor’s view in the article is more liberal or more conservative.\nEarlier efforts in modeling texts have achieved limited success on text categorization using a simple bag-of-words classifier (Joachims, 1998; McCallum et al., 1998), implying understanding the meaning of the individual word or n-gram is a necessary step towards more sophisticated models. It is therefore not a surprise that distributed representations of words, a.k.a. word embeddings, have received great attention from NLP community addressing the question “what” to be modeled at the basic level (Mikolov et al., 2013; Pennington et al., 2014). In order to model higher level concepts and facts in texts, an NLP researcher has to think cautiously the so-called “what” question: what is actually modeled beyond word meanings. A common approach to the question is to treat the texts as sequences and focus on their spatial patterns, whose representatives include convolutional neural networks (CNNs) (Kim, 2014; Zhang et al., 2015; Conneau et al., 2017) and long shortterm memory networks (LSTMs) (Tai et al., 2015; Mousa and Schuller, 2017). Another common approach is to completely ignore the order of words but focus on their compositions as a collection, whose representatives include probabilistic topic modeling (Blei et al., 2003; Mcauliffe and Blei, 2008) and Earth Mover’s Distance based modeling (Kusner et al., 2015; Ye et al., 2017).\nThose two approaches, albeit quite different from the computational perspective, actually follow a common measure to be diagnosed regarding their answers to the “what” question. In neural network approaches, spatial patterns aggregated at lower levels contribute to representing higher level concepts. Here, they form a recursive process to articulate what to be modeled. For example, CNN builds convolutional feature detectors to extract local patterns from a window of vector sequences\nand uses max-pooling to select the most prominent ones. It then hierarchically builds such pattern extraction pipelines at multiple levels. Being a spatially sensitive model, CNN pays a price for the inefficiency of replicating feature detectors on a grid. As argued in (Sabour et al., 2017), one has to choose between replicating detectors whose size grows exponentially with the number of dimensions, or increasing the volume of the labeled training set in a similar exponential way. On the other hand, methods that are spatially insensitive are perfectly efficient at the inference time regardless of any order of words or local patterns. However, they are unavoidably more restricted to encode rich structures presented in a sequence. Improving the efficiency to encode spatial patterns while keeping the flexibility of their representation capability is thus a central issue.\nA recent method called capsule network introduced by Sabour et al. (2017) possesses this attractive potential to address the aforementioned issue. They introduce an iterative routing process to decide the credit attribution between nodes from lower and higher layers. A metaphor (also as an argument) they made is that human visual system intelligently assigns parts to wholes at the inference time without hard-coding patterns to be perspective relevant. As an outcome, their model could encode the intrinsic spatial relationship between a part and a whole constituting viewpoint invariant knowledge that automatically generalizes to novel viewpoints. In our work, we follow a similar spirit to use this technique in modeling texts. Three strategies are proposed to stabilize the dynamic routing process to alleviate the disturbance of some noise capsules which may contain “background” information such as stop words and the words that are unrelated to specific categories. We conduct a series of experiments with capsule networks on top of the pre-trained word vectors for six text classification benchmarks. More importantly, we show that capsule networks achieves significant improvement when transferring singlelabel to multi-label text classifications over the compared baseline methods."
  }, {
    "heading": "2 Our Methodology",
    "text": "Our capsule network, depicted in Figure 1, is a variant of the capsule networks proposed in Sabour et al. (2017). It consists of four layers: ngram convolutional layer, primary capsule layer,\nconvolutional capsule layer, and fully connected capsule layer. In addition, we explore two capsule frameworks to integrate these four components in different ways. In the rest of this section, we elaborate the key components in detail."
  }, {
    "heading": "2.1 N -gram Convolutional Layer",
    "text": "This layer is a standard convolutional layer which extracts n-gram features at different positions of a sentence through various convolutional filters.\nSuppose x ∈ RL×V denotes the input sentence representation where L is the length of the sentence and V is the embedding size of words. Let xi ∈ RV be the V -dimensional word vector corresponding to the i-th word in the sentence. Let W a ∈ RK1×V be the filter for the convolution operation, where K1 is the N -gram size while sliding over a sentence for the purpose of detecting features at different positions. A filter W a convolves with the word-window xi:i+K1−1 at each possible position (with stride of 1) to produce a column feature map ma ∈ RL−K1+1, each element mai ∈ R of the feature map is produced by\nmai = f(xi:i+K1−1 ◦W a + b0) (1)\nwhere ◦ is element-wise multiplication, b0 is a bias term, and f is a nonlinear activate function (i.e., ReLU). We have described the process by which one feature is extracted from one filter. Hence, for a = 1, . . . , B, totally B filters with the same N -gram size, one can generate B feature maps which can be rearranged as\nM = [m1,m2, ...,mB] ∈ R(L−K1+1)×B (2)"
  }, {
    "heading": "2.2 Primary Capsule Layer",
    "text": "This is the first capsule layer in which the capsules replace the scalar-output feature detectors of CNNs with vector-output capsules to preserve the instantiated parameters such as the local order of words and semantic representations of words.\nSuppose pi ∈ Rd denotes the instantiated parameters of a capsule, where d is the dimension of the capsule. Let W b ∈ RB×d be the filter shared in different sliding windows. For each matrix multiplication, we have a window sliding over each N - gram vector denoted as Mi ∈ RB , then the corresponding N -gram phrases in the form of capsule are produced with pi = (W b)TMi.\nThe filter W b multiplies each N -gram vector in {Mi}L−K1+1i=1 with stride of 1 to produce a\ncolumn-list of capsules p ∈ R(L−K1+1)×d, each capsule pi ∈ Rd in the column-list is computed as\npi = g(W bMi + b1) (3)\nwhere g is nonlinear squash function through the entire vector, b1 is the capsule bias term. For all C filters, the generated capsule feature maps can be rearranged as\nP = [p1,p2, ...,pC] ∈ R(L−K1+1)×C×d, (4)\nwhere totally (L − K1 + 1) × C d-dimensional vectors are collected as capsules in P."
  }, {
    "heading": "2.2.1 Child-Parent Relationships",
    "text": "As argued in (Sabour et al., 2017), capsule network tries to address the representational limitation and exponential inefficiencies of convolutions with transformation matrices. It allows the networks to automatically learn child-parent (or partwhole) relationships constituting viewpoint invariant knowledge that automatically generalizes to novel viewpoints.\nIn this paper, we explore two different types of transformation matrices to generate prediction vector (vote) ûj|i ∈ Rd from its child capsule i to the parent capsule j. The first one shares weights W t1 ∈ RN×d×d across child capsules in the layer below, where N is the number of parent capsules in the layer above. Formally, each corresponding vote can be computed by:\nûj|i = W t1 j ui + b̂j|i ∈ R d (5)\nwhere ui is a child-capsule in the layer below and b̂j|i is the capsule bias term.\nIn the second design, we replace the shared weight matrix W t1j with non-shared weight matrix W t2i,j , where the weight matrices W\nt2 ∈ RH×N×d×d and H is the number of child capsules in the layer below."
  }, {
    "heading": "2.3 Dynamic Routing",
    "text": "The basic idea of dynamic routing is to construct a non-linear map in an iterative manner ensuring that the output of each capsule gets sent to an appropriate parent in the subsequent layer:{\nûj|i ∈ Rd } i=1,...,H,j=1...,N 7→ { vj ∈ Rd }N j=1 .\nFor each potential parent, the capsule network can increase or decrease the connection strength by dynamic routing, which is more effective than the primitive routing strategies such as max-pooling in CNN that essentially detects whether a feature is present in any position of the text, but loses spatial information about the feature. We explore three strategies to boost the accuracy of routing process by alleviating the disturbance of some noisy capsules:\nOrphan Category Inspired by Sabour et al. (2017), an additional “orphan” category is added to the network, which can capture the “background” information of the text such as stop words and the words that are unrelated to specific categories, helping the capsule network model the child-parent relationship more efficiently. Adding “orphan” category in the text is more effective than in image since there is no single consistent “background” object in images, while the stop words are\nconsistent in texts such as predicate “s”, “am” and pronouns “his”, “she”.\nLeaky-Softmax We explore Leaky-Softmax Sabour et al. (2017) in the place of standard softmax while updating connection strength between the children capsules and their parents. Despite the orphan category in the last capsule layer, we also need a light-weight method between two consecutive layers to route the noise child capsules to extra dimension without any additional parameters and computation consuming.\nCoefficients Amendment We also attempt to use the probability of existence of child capsules in the layer below to iteratively amend the connection strength as Eq.6.\nAlgorithm 1: Dynamic Routing Algorithm 1 procedure ROUTING(ûj|i, âj|i, r, l) 2 Initialize the logits of coupling coefficients\nbj|i = 0\n3 for r iterations do 4 for all capsule i in layer l and capsule j in\nlayer l + 1: cj|i = âj|i · leaky-softmax(bj|i)\n5 for all capsule j in layer l + 1: vj = g( ∑ i cj|iûj|i), aj = |vj | 6 for all capsule i in layer l and capsule j in layer l + 1: bj|i = bj|i + ûj|i · vj\n7 return vj ,aj\nGiven each prediction vector ûj|i and its probability of existence âj|i, where âj|i = âi, each iterative coupling coefficient of connection strength cj|i is updated by\ncj|i = âj|i · leaky-softmax(bj|i) (6)\nwhere bj|i is the logits of coupling coefficients. Each parent capsule vj in the layer above is a weighted sum over all prediction vectors ûj|i:\nvj = g( ∑ i cj|iûj|i), aj = |vj | (7)\nwhere aj is the probabilities of parent capsules, g is nonlinear squash function Sabour et al. (2017) through the entire vector. Once all of the parent capsules are produced, each coupling coefficient bj|i is updated by:\nbj|i = bj|i + ûj|i · vj (8)\nFor simplicity of notation, the parent capsules and their probabilities in the layer above are denoted as\nv, a = Routing(û) (9)\nwhere û denotes all of the child capsules in the layer below, v denotes all of the parent-capsules and their probabilities a.\nOur dynamic routing algorithm is summarized in Algorithm 1."
  }, {
    "heading": "2.4 Convolutional Capsule Layer",
    "text": "In this layer, each capsule is connected only to a local region K2 × C spatially in the layer below. Those capsules in the region multiply transformation matrices to learn child-parent relationships followed by routing by agreement to produce parent capsules in the layer above.\nSuppose W c1 ∈ RD×d×d and W c2 ∈ RK2×C×D×d×d denote shared and non-shared weights, respectively, where K2 · C is the number of child capsules in a local region in the layer below, D is the number of parent capsules which the child capsules are sent to. When the transformation matrices are shared across the child capsules, each potential parent-capsule ûj|i is produced by\nûj|i = W c1 j ui + b̂j|i (10)\nwhere b̂j|i is the capsule bias term, ui is a child capsule in a local region K2 × C and W c1j is the jth matrix in tensor W c1 . Then, we use routingby-agreement to produce parent capsules feature maps totally (L−K1−K2+2)×D d-dimensional capsules in this layer. When using the non-shared weights across the child capsules, we replace the transformation matrix W c1j in Eq. (10) with W c2 j ."
  }, {
    "heading": "2.5 Fully Connected Capsule Layer",
    "text": "The capsules in the layer below are flattened into a list of capsules and fed into fully connected capsule layer in which capsules are multiplied by transformation matrix W d1 ∈ RE×d×d or W d2 ∈ RH×E×d×d followed by routing-by-agreement to produce final capsule vj ∈ Rd and its probability aj ∈ R for each category. Here, H is the number of child capsules in the layer below, E is the number of categories plus an extra orphan category."
  }, {
    "heading": "2.6 The Architectures of Capsule Network",
    "text": "We explore two capsule architectures (denoted as Capsule-A and Capsule-B) to integrate these four\ncomponents in different ways, as depicted in Figure 2.\nCapsule-A starts with an embedding layer which transforms each word in the corpus to a 300-dimensional (V = 300) word vector, followed by a 3-gram (K1 = 3) convolutional layer with 32 filters (B = 32) and a stride of 1 with ReLU non-linearity. All the other layers are capsule layers starting with a B × d primary capsule layer with 32 filters (C = 32), followed by a 3 × C × d × d (K2 = 3) convolutional capsule layer with 16 filters (D = 16) and a fully connected capsule layer in sequence.\nEach capsule has 16-dimensional (d = 16) instantiated parameters and their length (norm) can describe the probability of the existence of capsules. The capsule layers are connected by the transformation matrices, and each connection is also multiplied by a routing coefficient that is dynamically computed by routing by agreement mechanism.\nThe basic structure of Capsule-B is similar to Capsule-A except that we adopt three parallel networks with filter windows (N ) of 3, 4, 5 in the N -gram convolutional layer (see Figure 2). The final output of the fully connected capsule layer is fed into the average pooling to produce the final results. In this way, Capsule-B can learn more meaningful and comprehensive text representation."
  }, {
    "heading": "3 Experimental Setup",
    "text": ""
  }, {
    "heading": "3.1 Experimental Datasets",
    "text": "In order to evaluate the effectiveness of our model, we conduct a series of experiments on six bench-\nmarks including: movie reviews (MR) (Pang and Lee, 2005), Stanford Sentiment Treebankan extension of MR (SST-2) (Socher et al., 2013), Subjectivity dataset (Subj) (Pang and Lee, 2004), TREC question dataset (TREC) (Li and Roth, 2002), customer review (CR) (Hu and Liu, 2004), and AG’s news corpus (Conneau et al., 2017). These benchmarks cover several text classification tasks such as sentiment classification, question categorization, news categorization. The detailed statistics are presented in Table 1."
  }, {
    "heading": "3.2 Implementation Details",
    "text": "In the experiments, we use 300-dimensional word2vec (Mikolov et al., 2013) vectors to initialize embedding vectors. We conduct mini-batch with size 50 for AG’s news and size 25 for other datasets. We use Adam optimization algorithm with 1e-3 learning rate to train the model. We use 3 iteration of routing for all datasets since it optimizes the loss faster and converges to a lower loss at the end."
  }, {
    "heading": "3.3 Baseline methods",
    "text": "In the experiments, we evaluate and compare our model with several widely used baseline methods including: LSTM/Bi-LSTM (Cho et al., 2014), tree-structured LSTM (Tree-LSTM) (Tai et al., 2015), LSTM regularized by linguistic knowledge (LR-LSTM) (Qian et al., 2016), CNNrand/CNN-static/CNN-non-static (Kim, 2014), very deep convolutional network (VD-CNN) (Conneau et al., 2017), and character-level convolutional network (CL-CNN) (Zhang et al., 2015)."
  }, {
    "heading": "4 Experimental Results",
    "text": ""
  }, {
    "heading": "4.1 Quantitative Evaluation",
    "text": "In our experiments, the evaluation metric is classification accuracy. We summarize the experimental results in Table 2. From the results, we observe that the capsule networks achieve best results on 4 out of 6 benchmarks, which verifies the effectiveness of the capsule networks. In particular, our model substantially and consistently outperforms\nthe simple deep neural networks such as LSTM, Bi-LSTM and CNN-rand by a noticeable margin on all the experimental datasets. Capsule network also achieves competitive results against the more sophisticated deep learning models such as LR-LSTM, Tree-LSTM, VC-CNN and CL-CNN. Note that Capsule-B consistently performs better than Capsule-A since Capsule-B allows to learn more meaningful and comprehensive text representation. For example, a combination of N-gram convolutional layer with filter windows of {3,4,5} can capture the 3/4/5-gram features of the text which play a crucial role in text modeling."
  }, {
    "heading": "4.2 Ablation Study",
    "text": "To analyze the effect of varying different components of our capsule architecture for text classification, we also report the ablation test of the capsuleB model in terms of using different setups of the capsule network. The experimental results are summarized in Table 5. Generally, all three proposed dynamic routing strategies contribute to the effectiveness of Capsule-B by alleviating the disturbance of some noise capsules which may contain “background” information such as stop words and the words that are unrelated to specific categories."
  }, {
    "heading": "5 Single-Label to Multi-Label Text Classification",
    "text": "Capsule network demonstrates promising performance in single-label text classification which assigns a label from a predefined set to a text (see Table 2). Multi-label text classification is, however, a\nmore challenging practical problem. From singlelabel to multi-label (with n category labels) text classification, the label space is expanded from n to 2n, thus more training is required to cover the whole label space. For single-label texts, it is practically easy to collect and annotate the samples. However, the burden of collection and annotation for a large scale multi-label text dataset is generally extremely high. How deep neural networks (e.g., CNN and LSTM) best cope with multi-label text classification still remains a problem since obtaining large scale of multi-label dataset is a timeconsuming and expensive process. In this section, we investigate the capability of capsule network on multi-label text classification by using only the single-label samples as training data. With feature property as part of the information extracted by capsules, we may generalize the model better to multi-label text classification without an over extensive amount of labeled data.\nThe evaluation is carried on the Reuters-21578 dataset (Lewis, 1992). This dataset consists of 10,788 documents from the Reuters financial newswire service, where each document contains either multiple labels or a single label. We reprocess the corpus to evaluate the capability of capsule networks of transferring from single-label to multi-label text classification. For dev and training, we only use the single-label documents in the Reuters dev and training sets. For testing, ReutersMulti-label only uses the multi-label documents in testing dataset, while Reuters-Full includes all documents in test set. The characteristics of these two datasets are described in Table 3.\nFollowing (Sorower, 2010), we adopt Micro Averaged Precision (Precision), Micro Averaged Recall (Recall) and Micro Averaged F1 scores (F1) as the evaluation metrics for multi-label text classification. Any of these scores are firstly computed on individual class labels and then averaged over all classes, called label-based measures. In addition, we also measure the Exact Match Ratio (ER) which considers partially correct prediction as incorrect and only counts fully correct samples.\nThe experimental results are summarized in Table 4. From the results, we can observe that the capsule networks have substantial and significant improvement in terms of all four evaluation metrics over the compared baseline methods on the test sets in both Reuters-Multi-label and ReutersFull datasets. In particular, larger improvement\nis achieved on Reuters-Multi-label dataset which only contains the multi-label documents in the test set. This is within our expectation since the capsule network is capable of preserving the instantiated parameters of the categories trained by singlelabel documents. The capsule network has much stronger transferring capability than the conventional deep neural networks. In addition, the good results on Reuters-Full also indicate that the capsule network has robust superiority over competitors on single-label documents."
  }, {
    "heading": "5.1 Connection Strength Visualization",
    "text": "To visualize the connection strength between capsule layers clearly, we remove the convolutional capsule layer and make the primary capsule layer followed by the fully connected capsule layer directly, where the primary capsules denote N-gram phrases in the form of capsules. The connection strength shows the importance of each primary capsule for text categories, acting like a parallel attention mechanism. This should allow the capsule networks to recognize multiple categories in\nthe text even though the model is trained on singlelabel documents.\nDue to space reasons, we choose a multilabel document from Reuters-Multi-label test set whose category labels (i.e., Interest Rates and Money/Foreign Exchange) are correctly predicted (fully correct) by our model with high confidence (p > 0.8) to report in Table 6. The categoryspecific phrases such as “interest rates” and “foreign exchange” are highlighted with red color. We use the tag cloud to visualize the 3-gram phrases for Interest Rates and Money/Foreign Exchange categories. The stronger the connection strength, the bigger the font size. From the results, we observe that capsule networks can correctly recognize and cluster the important phrases with respect to the text categories. The histograms are used to show the intensity of connection strengths between primary capsules and the fully connected capsules, as shown in Table 6 (bottom line). Due to space reasons, five histograms are demonstrated. The routing procedure correctly routes the votes into the Interest Rates and Money/Foreign Exchange categories.\nTo experimentally verify the convergence of the routing algorithm, we also plot learning curve to show the training loss over time with different iterations of routing. From Figure 3, we observe that the Capsule-B with 3 or 5 iterations of routing optimizes the loss faster and converges to a lower loss at the end than the capsule network with 1 iteration."
  }, {
    "heading": "6 Related Work",
    "text": "Early methods for text classification adopted the typical features such as bag-of-words, n-grams, and their TF-IDF features (Zhang et al., 2008) as\ninput of machine learning algorithms such as support vector machine (SVM) (Joachims, 1998), logistic regression (Genkin et al., 2007), naive Bayes (NB) (McCallum et al., 1998) for classification. However, these models usually heavily relied on laborious feature engineering or massive extra linguistic resources.\nRecent advances in deep neural networks and representation learning have substantially improved the performance of text classification tasks. The dominant approaches are recurrent neural networks, in particular LSTMs and CNNs. (Kim, 2014) reported on a series of experiments with CNNs trained on top of pre-trained word vectors for sentence-level classification tasks. The CNN\nmodels improved upon the state of the art on 4 out of 7 tasks. (Zhang et al., 2015) offered an empirical exploration on the use of character-level convolutional networks (Convnets) for text classification and the experiments showed that Convnets outperformed the traditional models. (Joulin et al., 2016) proposed a simple and efficient text classification method fastText, which could be trained on a billion words within ten minutes. (Conneau et al., 2017) proposed a very deep convolutional networks (with 29 convolutional layers) for text classification. (Tai et al., 2015) generalized the LSTM to the tree-structured network topologies (Tree-LSTM) that achieved best results on two text classification tasks.\nRecently, a novel type of neural network is proposed using the concept of capsules to improve the representational limitations of CNN and RNN. Hinton et al. (2011) firstly introduced the concept of “capsules” to address the representational limitations of CNNs and RNNs. Capsules with transformation matrices allowed networks to automatically learn part-whole relationships. Consequently, Sabour et al. (2017) proposed capsule networks that replaced the scalar-output feature detectors of CNNs with vector-output capsules and max-pooling with routing-by-agreement. The capsule network has shown its potential by achieving a state-of-the-art result on MNIST data. Unlike max-pooling in CNN, however, Capsule net-\nwork do not throw away information about the precise position of the entity within the region. For lowlevel capsules, location information is placecoded by which capsule is active. (Xi et al., 2017) further tested out the application of capsule networks on CIFAR data with higher dimensionality. (Hinton et al., 2018) proposed a new iterative routing procedure between capsule layers based on the EM algorithm, which achieves significantly better accuracy on the smallNORB data set. (Zhang et al., 2018) generalized existing routing methods within the framework of weighted kernel density estimation. To date, no work investigates the performance of capsule networks in NLP tasks. This study herein takes the lead in this topic."
  }, {
    "heading": "7 Conclusion",
    "text": "In this paper, we investigated capsule networks with dynamic routing for text classification. Three strategies were proposed to boost the performance of the dynamic routing process to alleviate the disturbance of noisy capsules. Extensive experiments on six text classification benchmarks show the effectiveness of capsule networks in text classification. More importantly, capsule networks also show significant improvement when transferring single-label to multi-label text classifications over the co baseline methods."
  }],
  "year": 2018,
  "references": [{
    "title": "Latent dirichlet allocation",
    "authors": ["David M Blei", "Andrew Y Ng", "Michael I Jordan."],
    "venue": "Journal of machine Learning research, 3(Jan):993–1022.",
    "year": 2003
  }, {
    "title": "Learning phrase representations using rnn encoder-decoder for statistical machine translation",
    "authors": ["Kyunghyun Cho", "Bart Van Merriënboer", "Caglar Gulcehre", "Dzmitry Bahdanau", "Fethi Bougares", "Holger Schwenk", "Yoshua Bengio."],
    "venue": "arXiv preprint",
    "year": 2014
  }, {
    "title": "Very deep convolutional networks for text classification",
    "authors": ["Alexis Conneau", "Holger Schwenk", "Loı̈c Barrault", "Yann Lecun"],
    "venue": "In Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume",
    "year": 2017
  }, {
    "title": "Large-scale bayesian logistic regression for text categorization",
    "authors": ["Alexander Genkin", "David D Lewis", "David Madigan."],
    "venue": "Technometrics, 49(3):291– 304.",
    "year": 2007
  }, {
    "title": "Matrix capsules with em routing",
    "authors": ["Geoffrey Hinton", "Sara Sabour", "Nicholas Frosst."],
    "venue": "https://openreview.net/forum?id=HJWLfGWRb.",
    "year": 2018
  }, {
    "title": "Transforming auto-encoders",
    "authors": ["Geoffrey E Hinton", "Alex Krizhevsky", "Sida D Wang."],
    "venue": "International Conference on Artificial Neural Networks, pages 44–51. Springer.",
    "year": 2011
  }, {
    "title": "Mining and summarizing customer reviews",
    "authors": ["Minqing Hu", "Bing Liu."],
    "venue": "Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining, pages 168–177. ACM.",
    "year": 2004
  }, {
    "title": "Text categorization with support vector machines: Learning with many relevant features",
    "authors": ["Thorsten Joachims."],
    "venue": "European conference on machine learning, pages 137–142. Springer.",
    "year": 1998
  }, {
    "title": "Bag of tricks for efficient text classification",
    "authors": ["Armand Joulin", "Edouard Grave", "Piotr Bojanowski", "Tomas Mikolov."],
    "venue": "Annual meeting on Association for Computational Linguistics, pages 427–431.",
    "year": 2016
  }, {
    "title": "Convolutional neural networks for sentence classification",
    "authors": ["Yoon Kim."],
    "venue": "Proceedings of the 42nd annual meeting on Association for Computational Linguistics, pages 1746–1751. Association for Computational Linguistics.",
    "year": 2014
  }, {
    "title": "From word embeddings to document distances",
    "authors": ["Matt Kusner", "Yu Sun", "Nicholas Kolkin", "Kilian Weinberger."],
    "venue": "International Conference on Machine Learning, pages 957–966.",
    "year": 2015
  }, {
    "title": "An evaluation of phrasal and clustered representations on a text categorization task",
    "authors": ["David D. Lewis."],
    "venue": "Fifteenth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 37–50.",
    "year": 1992
  }, {
    "title": "Learning question classifiers",
    "authors": ["Xin Li", "Dan Roth."],
    "venue": "Proceedings of the 19th international conference on Computational linguistics-Volume 1, pages 1–7. Association for Computational Linguistics.",
    "year": 2002
  }, {
    "title": "Supervised topic models",
    "authors": ["Jon D Mcauliffe", "David M Blei."],
    "venue": "Advances in neural information processing systems, pages 121–128.",
    "year": 2008
  }, {
    "title": "A comparison of event models for naive bayes text classification",
    "authors": ["Andrew McCallum", "Kamal Nigam"],
    "venue": "In AAAI-98 workshop on learning for text categorization,",
    "year": 1998
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean."],
    "venue": "Advances in neural information processing systems, pages 3111–3119.",
    "year": 2013
  }, {
    "title": "Contextual bidirectional long short-term memory recurrent neural network language models: A generative approach to sentiment analysis",
    "authors": ["Amr Mousa", "Björn Schuller."],
    "venue": "Proceedings of the 15th Conference of the European Chapter of the Association",
    "year": 2017
  }, {
    "title": "A sentimental education: Sentiment analysis using subjectivity summarization based on minimum cuts",
    "authors": ["Bo Pang", "Lillian Lee."],
    "venue": "Proceedings of the 42nd annual meeting on Association for Computational Linguistics, page 271. Association for Com-",
    "year": 2004
  }, {
    "title": "Seeing stars: Exploiting class relationships for sentiment categorization with respect to rating scales",
    "authors": ["Bo Pang", "Lillian Lee."],
    "venue": "Proceedings of the 43rd annual meeting on association for computational linguistics, pages 115–124. Association for",
    "year": 2005
  }, {
    "title": "Glove: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher Manning."],
    "venue": "Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), pages 1532–1543.",
    "year": 2014
  }, {
    "title": "Linguistically regularized lstms for sentiment classification",
    "authors": ["Qiao Qian", "Minlie Huang", "Jinhao Lei", "Xiaoyan Zhu."],
    "venue": "arXiv preprint arXiv:1611.03949.",
    "year": 2016
  }, {
    "title": "Dynamic routing between capsules",
    "authors": ["Sara Sabour", "Nicholas Frosst", "Geoffrey E Hinton."],
    "venue": "Advances in Neural Information Processing Systems, pages 3859–3869.",
    "year": 2017
  }, {
    "title": "Recursive deep models for semantic compositionality over a sentiment treebank",
    "authors": ["Richard Socher", "Alex Perelygin", "Jean Wu", "Jason Chuang", "Christopher D Manning", "Andrew Ng", "Christopher Potts."],
    "venue": "Proceedings of the 2013 conference on",
    "year": 2013
  }, {
    "title": "A literature survey on algorithms for multi-label learning",
    "authors": ["Mohammad S Sorower."],
    "venue": "Oregon State University, Corvallis, 18.",
    "year": 2010
  }, {
    "title": "Improved semantic representations from tree-structured long short-term memory networks",
    "authors": ["Kai Sheng Tai", "Richard Socher", "Christopher D Manning."],
    "venue": "Proceedings of the 53rd Annual Meeting of the Association for Computational Linguis-",
    "year": 2015
  }, {
    "title": "Capsule network performance on complex data",
    "authors": ["Edgar Xi", "Selina Bing", "Yang Jin."],
    "venue": "arXiv preprint arXiv:1712.03480.",
    "year": 2017
  }, {
    "title": "Determining gains acquired from word embedding quantitatively using discrete distribution clustering",
    "authors": ["Jianbo Ye", "Yanran Li", "Zhaohui Wu", "James Z Wang", "Wenjie Li", "Jia Li."],
    "venue": "Proceedings of the 55th Annual Meeting of the Association for Com-",
    "year": 2017
  }, {
    "title": "Fast dynamic routing based on weighted kernel density estimation",
    "authors": ["Suofei Zhang", "Wei Zhao", "Xiaofu Wu", "Quan Zhou."],
    "venue": "arXiv preprint arXiv:1805.10807.",
    "year": 2018
  }, {
    "title": "Tfidf, lsi and multi-word in information retrieval and text categorization",
    "authors": ["Wen Zhang", "Taketoshi Yoshida", "Xijin Tang."],
    "venue": "IEEE International Conference on Systems, Man and Cybernetics, pages 108– 113. IEEE.",
    "year": 2008
  }, {
    "title": "Character-level convolutional networks for text classification",
    "authors": ["Xiang Zhang", "Junbo Zhao", "Yann LeCun."],
    "venue": "Advances in neural information processing systems, pages 649–657.",
    "year": 2015
  }],
  "id": "SP:faa8f9a296320def3a0629b6d3acf9d84f2f45f0",
  "authors": [{
    "name": "Wei Zhao",
    "affiliations": []
  }, {
    "name": "Jianbo Ye",
    "affiliations": []
  }, {
    "name": "Min Yang",
    "affiliations": []
  }, {
    "name": "Zeyang Lei",
    "affiliations": []
  }, {
    "name": "Soufei Zhang",
    "affiliations": []
  }, {
    "name": "Zhou Zhao",
    "affiliations": []
  }],
  "abstractText": "In this study, we explore capsule networks with dynamic routing for text classification. We propose three strategies to stabilize the dynamic routing process to alleviate the disturbance of some noise capsules which may contain “background” information or have not been successfully trained. A series of experiments are conducted with capsule networks on six text classification benchmarks. Capsule networks achieve competitive results over the compared baseline methods on 4 out of 6 datasets, which shows the effectiveness of capsule networks for text classification. We additionally show that capsule networks exhibit significant improvement when transfer single-label to multi-label text classification over the competitors. To the best of our knowledge, this is the first work that capsule networks have been empirically investigated for text modeling1.",
  "title": "Investigating Capsule Networks with Dynamic Routing for Text Classification"
}