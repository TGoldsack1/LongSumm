{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Ensemble methods have played a critical role in the machine learning community to obtain better predictive performance than what could be obtained from any of the constituent learning models alone, e.g., Bayesian model/parameter averaging (Domingos, 2000), boosting (Freund et al., 1999) and bagging (Breiman, 1996). Recently, they have been successfully applied to enhancing the power of many deep neural networks, e.g., 80% of\n1School of Electrical Engineering, Korea Advanced Institute of Science and Technology (KAIST), Daejeon, Repulic of Korea. Correspondence to: Jinwoo Shin <jinwoos@kaist.ac.kr>.\nProceedings of the 34 th International Conference on Machine Learning, Sydney, Australia, PMLR 70, 2017. Copyright 2017 by the author(s).\ntop-5 best-performing teams on ILSVRC challenge 2016 (Krizhevsky et al., 2012) employ ensemble methods. They are easy and trustworthy to apply for most scenarios. While there exists a long history on ensemble methods, the progress on developing more advanced ensembles specialized for deep neural networks has been slow. Despite continued efforts that apply various ensemble methods such as bagging and boosting to deep models, it has been observed that traditional independent ensembles (IE) which train models independently with random initialization achieve the best performance (Ciregan et al., 2012; Lee et al., 2015). In this paper, we focus on developing more advanced ensembles for deep models utilizing the concept of multiple choice learning (MCL).\nThe MCL concept was originally proposed in (GuzmanRivera et al., 2012) under the scenario when inference procedures are cascaded:\n(a) First, generate a set of plausible outputs.\n(b) Then, pick the correct solution form the set.\nFor example, (Park & Ramanan, 2011; Batra et al., 2012) proposed human-pose estimation methods which produce multiple predictions and then refine them by employing a temporal model, and (Collins & Koo, 2005) proposed a sentence parsing method which re-ranks the output of an initial system which produces a set of plausible outputs (Huang & Chiang, 2005). In such scenarios, the goal of the first stage (a) is generating a set of plausible outputs such that at least one of them is correct for the second stage (b), e.g., human operators. Under this motivation, MCL has been studied (Guzman-Rivera et al., 2014; 2012; Lee et al., 2016), where various applications have been demonstrated, e.g., image classification (Krizhevsky & Hinton, 2009), semantic segmentation (Everingham et al., 2010) and image captioning (Lin et al., 2014b). It trains an ensemble of multiple models by minimizing the so-called oracle loss, only focusing on the most accurate prediction produced by them. Consequently, it makes each model specialized for a certain subset of data, not for the entire one similarly as mixture-of-expert schemes (Jacobs et al., 1991).\nAlthough MCL focuses on the first stage (a) in cascaded scenarios and thus can produce diverse/plausible outputs, it might be not useful if one does not have a good scheme for\nthe second stage (b). One can use a certain average/voting scheme of the predictions made by models for (b), but MCL using deep neural networks often fails to make a correct decision since each network tends to be overconfident in its prediction. Namely, the oracle error/loss of MCL is low, but its top-1 error rate might be very high.\nContribution. To address the issue, we develop the concept of confident MCL (CMCL) that does not lose any benefit of the original MCL, while its target loss and architecture are redesigned for making the second stage (b) easier. Specifically, it targets to generate a set of diverse/plausible confident predictions from which one can pick the correct one using a simple average/voting scheme. To this end, we first propose a new loss function, called confident oracle loss, for relaxing the overconfidence issue of MCL. Our key idea is to additionally minimize the Kullback-Leibler divergence from a predictive distribution to the uniform one in order to give confidence to non-specialized models. Then, CMCL that minimizes the new loss can be efficiently trained like the original MCL for certain classes of models including neural networks, via stochastic alternating minimization (Lee et al., 2016). Furthermore, when CMCL is applied to deep models, we propose two additional regularization techniques for boosting its performance: feature sharing and stochastic labeling. Despite the new components, we note that the training complexity of CMCL is almost same to that of MCL or IE.\nWe apply the new ensemble model trained by the new training scheme for several convolutional neural networks (CNNs) including VGGNet (Simonyan & Zisserman, 2015), GoogLeNet (Szegedy et al., 2015), and ResNet (He et al., 2016) for image classification on the CIFAR (Krizhevsky & Hinton, 2009) and SVHN (Netzer et al., 2011) datasets, and fully-convolutional neural networks (FCNs) (Long et al., 2015) for foreground-background segmentation on the iCoseg dataset (Batra et al., 2010). First, for the image classification task, CMCL outperforms all baselines, i.e., the traditional IE and the original MCL, in top-1 error rates. In particular, CMCL of 5 ResNet with 20 layers provides 14.05% and 6.60% relative reductions in the top-1 error rates from the corresponding IE on CIFAR-10 and SVHN, respectively. Second, for the foreground-background segmentation task, CMCL using multiple FCNs with 4 layers also outperforms all baselines in top-1 error rates. Each model trained by CMCL generates high-quality solutions by specializing for specific images while each model trained by IE does not. We believe that our new approach should be of broader interest for many deep learning tasks requiring high accuracy.\nOrganization. In Section 2, we introduce necessary backgrounds for multiple choice learning and the corresponding loss function. We describe the proposed loss and the corre-\nsponding training scheme in Section 3. Section 4 provides additional techniques for the proposed ensemble model. Experimental results are reported in Section 5."
  }, {
    "heading": "2. Preliminaries",
    "text": ""
  }, {
    "heading": "2.1. Multiple Choice Learning",
    "text": "In this section, we describe the basic concept of multiple choice learning (MCL) (Guzman-Rivera et al., 2014; 2012). Throughout this paper, we denote the set {1, . . . , n} by [n] for positive integer n. The MCL scheme is a type of ensemble learning that produces diverse outputs of high quality. Formally, given a training dataset D = {(xi, yi) | i ∈ [N ], xi ∈ X , yi ∈ Y}, we consider an ensemble ofM models f , i.e., (f1, . . . , fM ). For some task-specific loss function ` (y, f (x)), the oracle loss over the dataset D is defined as follows:\nLO (D) = N∑ i=1 min m∈[M ] ` (yi, fm (xi)) , (1)\nwhile the traditional independent ensemble (IE) loss is\nLE (D) = N∑ i=1 ∑ m∈[M ] ` (yi, fm (xi)) . (2)\nIf all models have the same capacity and one can obtain the (global) optimum of the IE loss with respect to the model parameters, then all trained models should produce the same outputs, i.e., f1 = . . . = fM . On the other hand, the oracle loss makes the most accurate model optimize the loss function ` (y, f (x)) for each data x. Therefore, MCL produces diverse outputs of high quality by forcing each model to be specialized on a part of the entire dataset.\nMinimizing the oracle loss (1) is harder than minimizing the independent ensemble loss (2) since the min function is a non-continuous function. To address the issue, (GuzmanRivera et al., 2012) proposed an iterative block coordinate decent algorithm and (Dey et al., 2015) reformulated this problem as a submodular optimization task in which ensemble models are trained sequentially in a boosting-like manner. However, when one considers an ensemble of deep neural networks, it is challenging to apply these methods since they require either costly retraining or sequential training. Recently, (Lee et al., 2016) overcame this issue by proposing a stochastic gradient descent (SGD) based algorithm. Throughout this paper, we primarily focus on ensembles of deep neural networks and use the SGD algorithm for optimizing the oracle loss (1) or its variants."
  }, {
    "heading": "2.2. Oracle Loss for Top-1 Choice",
    "text": "The oracle loss (1) used for MCL is useful for producing diverse/plausible outputs, but it is often inappropriate for ap-\nplications requiring a single choice, i.e., top-1 error. This is because ensembles of deep neural networks tend to be overconfident in their predictions, and it is hard to judge a better solution from their outputs. To explain this in more detail, we evaluate the performance of ensembles of convolutional neural networks (CNNs) for the image classification task on the CIFAR-10 dataset (Krizhevsky & Hinton, 2009). We train ensembles of 5 CNNs (two convolutional layers followed by a fully-connected layer) using MCL. We also train the models using traditional IE which trains each model independently under different random initializations. Figure 1 summarizes the class-wise test set accuracy of each ensemble member. In the case of MCL, most models become specialists for certain classes (see Figure 1(a)), while they are generalized in the case of traditional IE as shown in Figure 1(c). However, as expected, each model trained by MCL significantly outperforms for its specialized classes than that trained by IE. For choosing a single output, similar to (Wan et al., 2013; Ciregan et al., 2012), one can average the output probabilities from ensemble members trained by MCL, but the corresponding top-1 classification error rate is often very high (e.g., see Table 1 in Section 5). This is because each model trained by MCL is overconfident for its non-specialized classes. To quantify this, we also compute the entropy of the predictive distribution on the test data and use this to evaluate the quality of confidence/uncertainty level. Figure 2(a) reports the entropy extracted from the predictive distribution of one of ensemble models trained by MCL. One can observe that it has low entropy as expected for its specialized classes (i.e., classes that the model has a test accuracy higher than 90%). However, even for non-specialized classes, it also has low entropy. Due to this, with respect to top-1 error rates, simple averaging of models trained by MCL performs much worse than that of IE. Such issue typically occurs in deep neural networks since it is well known that they are poor at quantifying predictive uncertainties, and tend to be easily overconfident (Nguyen et al., 2015)."
  }, {
    "heading": "3. Confident Multiple Choice Learning",
    "text": ""
  }, {
    "heading": "3.1. Confident Oracle Loss",
    "text": "In this section, we propose a modified oracle loss for relaxing the issue of MCL described in the previous section. Suppose that the m-th model outputs the predictive distribution Pθm (y | x) given input x, where θm denotes the model parameters. Then, we define the confident oracle loss as the following integer programming variant of (1):\nLC(D) = min vmi N∑ i=1 M∑ m=1 ( vmi ` (yi, Pθm (y | xi))\n+ β (1− vmi )DKL (U (y) ‖ Pθm (y | xi)) ) (3a)\nsubject to M∑ m=1 vmi = 1, ∀i, (3b)\nvmi ∈ {0, 1}, ∀i,m (3c)\nwhereDKL denotes the Kullback-Leibler (KL) divergence, U (y) is the uniform distribution, β is a penalty parameter, and vmi is a flag variable to decide the assignment of xi to the m-th model. By minimizing the KL divergence from the predictive distribution to the uniform one, the new loss forces the predictive distribution to be closer to the uniform one, i.e., zero confidence, on non-specialized data, while those for specialized data still follow the correct one. For example, for classification tasks, the most accurate model for each data is allowed to optimize the classification loss, while others are forced to give less confident predictions by minimizing the KL divergence. We remark that although we optimize the KL divergence only for non-specialized data, one can also do it even for specialized data to regularize each model (Pereyra et al., 2017)."
  }, {
    "heading": "3.2. Stochastic Alternating Minimization for Training",
    "text": "In order to minimize the confident oracle loss (3) efficiently, we use the following procedure (Guzman-Rivera et al., 2012), which optimizes model parameters {θm} and assignment variables {vmi } alternatively:\n1. Fix {θm} and optimize {vmi }.\nUnder fixed model parameters {θm}, the objective (3a) is decomposable with respect to assignments {vmi } and it is easy to find optimal {vmi }.\n2. Fix {vmi } and optimize {θm}.\nUnder fixed assignments {vmi }, the objective (3a) is decomposable with respect to model parameters {θm}, and it requires each model to be trained independently.\nThe above scheme iteratively assigns each data to a particular model and then independently trains each model only using its assigned data. Even though it monotonically decreases the objective, it is still highly inefficient since it requires training each model multiple times until assignments {vmi } converge. To address the issue, we propose deciding assignments and update model parameters to the gradient directions once per each batch, similarly to (Lee et al., 2016). In other words, we perform a single gradientupdate on parameters in Step 2, without waiting for their convergence to a (local) optimum. In fact, (Lee et al., 2016) show that such stochastic alternating minimization works well for the oracle loss (1). We formally describe a detailed training procedure as the ‘version 0’ of Algorithm 1, and we will introduce the alternative ‘version 1’ later. This direction is complementary to ours, and we do not explore in this paper.\nAlgorithm 1 Confident MCL (CMCL) Input: Dataset D = {(xi, yi) | xi ∈ X , yi ∈ Y} and penalty parameter β Output: Ensemble of M trained models repeat\nLet U (y) be a uniform distribution Sample random batch B ⊂ D for m = 1 to M do\nCompute the loss of the m-th model:\nLmi ←β ∑ m̂ 6=m DKL (U (y) ‖ Pθm̂ (y | xi))\n+ ` (yi, Pθm (yi | xi)) , ∀(xi, yi) ∈ B\nend for for m = 1 to M do\nfor i = 1 to |B| do if the m-th model has the lowest loss then\nCompute the gradient of the training loss ` (yi, Pθm (yi | xi)) w.r.t θm else /∗ version 0: exact gradient ∗/ Compute the gradient of the KL divergence βDKL (U (y) ‖ Pθm (y | xi)) w.r.t θm /∗ version 1: stochastic labeling ∗/ Compute the gradient of the cross entropy loss −β logPθm (ŷi | xi) using ŷi w.r.t θm where ŷi ∼ U (y)\nend if end for Update the model parameters\nend for until convergence"
  }, {
    "heading": "3.3. Effect of Confident Oracle Loss",
    "text": "Similar to Section 2.2, we evaluate the performance of the proposed training scheme using 5 CNNs for image classification on the CIFAR-10 dataset. As shown in Figure 1(b), ensemble models trained by CMCL using the exact gradient (i.e., version 0 of Algorithm 1) become specialists for certain classes. For specialized classes, they show the similar performance compared to the models trained by MCL, i.e., minimizing the oracle loss (1), which considers only specialization (see Figure 1(a)). For non-specialized classes, ensemble members of CMCL are not overconfident, which makes it easy to pick a correct output via simple voting/averaging. We indeed confirm that each model trained by CMCL has not only low entropy for its specialized classes, but also exhibits high entropy for nonspecialized classes as shown in Figure 2(b).\nWe also evaluate the quality of confidence/uncertainty level on unseen data using SVHN (Netzer et al., 2011). Somewhat surprisingly, each model trained by CMCL only using CIFAR-10 training data exhibits high entropy for SVHN test data, whereas models trained by MCL and IE are overconfident on it (see Figure 2(a) and 2(c)). We emphasize that our method can produce confident predictions significantly better than the proposed method by (Lakshminarayanan et al., 2016), which uses the averaged probability of ensemble models trained by IE to obtain high quality uncertainty estimates (see Figure 2(c))."
  }, {
    "heading": "4. Regularization Techniques",
    "text": "In this section, we introduce advanced techniques for reducing the overconfidence and improving the performance."
  }, {
    "heading": "4.1. Feature Sharing",
    "text": "We first propose a feature sharing scheme that stochastically shares the features among member models of CMCL to further address the overconfidence issue. The primary reason why deep learning models are overconfident is that they do not always extract general features from data. For examples, assume that some deep model only trains frogs and roses for classifying them. Although there might exist many kinds of features on their images, the model might make a decision based only on some specific features, e.g., colors. In this case, ‘red’ apples can be classified as rose with high confidence. Such an issue might be more severe in CMCL (and MCL) compared to IE since members of CMCL are specialized to certain data. To address the issue, we suggest the feature ensemble approach that encourages each model to generate meaningful abstractions from rich features extracted from other models.\nFormally, consider an ensemble ofM neural networks with L hidden layers. We denote the weight matrix for layer\n` of model m ∈ [M ] and `-th hidden feature of model m by W`m and h ` m, respectively. Instead of sharing the whole units of a hidden feature, we introduce random binary masks determining which units to be shared with other models. We denote the mask for layer ` from model n to m as σ`nm ∼ Bernoulli(λ), which has the same dimension with h`n (we use λ = 0.7 in all experiments). Then, the `-th hidden feature of model m with sharing (`− 1)-th hidden features is defined as follows:\nh`m (x) = φ W`m h`−1m (x) + ∑\nn 6=m\nσ`nm ? h `−1 n (x)  , where ? denotes element-wise multiplication and φ is the activation function. Figure 2(d) illustrates the proposed feature sharing scheme in an ensemble of deep neural networks. It makes each model learn more generalized features by sharing the features among them. However, one might expect that it might make each model overfitted due to the increased number of parameters that induces a single prediction, i.e., the statistical dependencies among outputs of models increase, which would hurt the ensemble effect. In order to handle this issue, we introduce the randomness in sharing across models in a similar manner to DropOut (Srivastava et al., 2014) using the random binary masks σ . In addition, we propose sharing features at lower layers since sharing the higher layers might overfit the overall networks more. For example, in all experiments with CNNs in this paper, we commonly apply feature sharing for hidden features just before the first pooling layer. We also remark that such feature sharing strategies for better generalization have also been investigated in the literature for different purposes (Misra et al., 2016; Rusu et al., 2016)."
  }, {
    "heading": "4.2. Stochastic Labeling",
    "text": "For more efficiency in minimizing the confident oracle loss, we also consider a noisy unbiased estimator of gradients of the KL divergence with Monte Carlo samples from the uniform distribution. The KL divergence from the predictive distribution to the uniform distribution can be written as follows:\nDKL (U (y) ‖ Pθ (y | x)) = ∑ y U (y) log U (y) Pθ (y | x)\n= ∑ y U (y) logU (y)− ∑ y U (y) logPθ (y | x).\nHence, the gradient of the above KL divergence with respect to the model parameter θ becomes\n5θDKL (U (y) ‖ Pθ (y | x)) = −EU(y)[5θlogPθ (y | x)].\nFrom the above, we induce the following noisy unbiased estimator of gradients with Monte Carlo samples from the uniform distribution:\n− EU(y)[5θlogPθ (y | x)] w − 1\nS ∑ s 5θlogPθ (ys | x),\nwhere ys ∼ U (y) and S is the number of samples. This random estimator takes samples from the uniform distribution U (y) and constructs estimates of the gradient using them. In other words, 5θlogPθ (ys | x) is the gradient of the cross entropy loss under assigning a random label to x. This stochastic labeling provides efficiency in implementation/computation and stochastic regularization effects. We formally describe detailed procedures, as the version 1 of Algorithm 1."
  }, {
    "heading": "5. Experiments",
    "text": "We evaluate our algorithm for both classification and foreground-background segmentation tasks using CIFAR10 (Krizhevsky & Hinton, 2009), SVHN (Netzer et al., 2011) and iCoseg (Batra et al., 2010) datasets. In all experiments, we compare the performance of CMCL with those of traditional IE and MCL using deep models. We provide the more detailed experimental setups including model architectures in the supplementary material.1"
  }, {
    "heading": "5.1. Image Classification",
    "text": "Setup. The CIFAR-10 dataset consists of 50,000 training and 10,000 test images with 10 image classes where each image consists of 32× 32 RGB pixels. The SVHN dataset consists of 73,257 training and 26,032 test images.2 We pre-process the images with global contrast normalization and ZCA whitening following (Ian J. Goodfellow & Bengio, 2013; Zagoruyko & Komodakis, 2016), and do not use any data augmentation. Using these datasets, we train various CNNs, e.g., VGGNet (Simonyan & Zisserman, 2015), GoogLeNet (Szegedy et al., 2015), and ResNet (He et al., 2016). Similar to (Zagoruyko & Komodakis, 2016), we use the softmax classifier, and train each model by minimizing the cross-entropy loss using the stochastic gradient descent method with Nesterov momentum.\nFor evaluation, we measure the top-1 and oracle error rates on the test dataset. The top-1 error rate is calculated by averaging output probabilities from all models and predicting the class of the highest probability. The oracle error rate is the rate of classification failure over all outputs of individual ensemble members for a given input, i.e., it measures whether none of the members predict the correct class for\n1Our code is available at https://github.com/ chhwang/cmcl.\n2We do not use the extra SVHN dataset for training.\nan input. While a lower oracle error rate suggests higher diversity, a lower oracle error rate does not always bring a higher top-1 accuracy as this metric does not reveal the level of overconfidence of each model. By collectively measuring the top-1 and oracle error rates, one can grasp the level of specialization and confidence of a model.\nContribution by each technique. Table 1 validates contributions of our suggested techniques under comparison with other ensemble methods IE and MCL. We evaluate an ensemble of five simple CNN models where each model has two convolutional layers followed by a fully-connected layer. We incrementally apply our optimizations to gauge the stepwise improvement by each component. One can note that CMCL significantly outperforms MCL in the top1 error rate even without feature sharing or stochastic labeling while it still provides a comparable oracle error rate. By sharing the 1st ReLU activated features, the top-1 error rates are improved compared to those that employ only confident oracle loss. Stochastic labeling further improves both error rates. This implies that stochastic labeling not only reduces computational burdens but also provides regularization effects.\nOverlapping. As a natural extension of CMCL, we also consider picking K specialized models instead of having only one specialized model, which was investigated for original MCL (Guzman-Rivera et al., 2012; Lee et al., 2016). This is easily achieved by modifying the constraint (3b) as ∑M m=1 v m i = K, where K is an overlap parameter that controls training data overlap between the models. This simple but natural scheme brings extra gain in top-1 performance by generalizing each model better. Table 2 compares the performance of various ensemble methods with varying values of K. Under the choice of K = 4, CMCL of 10 CNNs provides 9.13% relative reduction in the top-1 error rates from the corresponding IE. Somewhat interestingly, IE has similar error rates on ensembles of both 5 and 10 CNNs, which implies that the performance of CMCL might be impossible to achieve using IE even if one increases the number of models in IE.\nLarge-scale CNNs. We now evaluate the performance of our ensemble method when it is applied to larger-scale CNN models for image classification tasks on CIFAR-10\nand SVHN datasets. Specifically, we test VGGNet (Simonyan & Zisserman, 2015), GoogLeNet (Szegedy et al., 2015), and ResNet (He et al., 2016). We share the nonlinear activated features right before the first pooling layer, i.e., the 6th, 2nd, and 1st ReLU activations for ResNet with 20 layers, VGGNet with 17 layers, and GoogLeNet with 18 layers, respectively. This choice is for maximizing the regularization effect of feature sharing while minimizing the statistical dependencies among the ensemble models. For all models, we choose the best hyperparameters for confident oracle loss among the penalty parameter β ∈ {0.5, 0.75, 1, 1.25, 1.5} and the overlapping parameter K ∈ {2, 3, 4}. Table 3 shows that CMCL consistently outperforms all baselines with respect to the top-1 error rate while producing comparable oracle error rates to those of MCL. We also apply the feature sharing to IE as reported in Figure 4(a). Even though the feature sharing also improves the performance of IE, CMCL still outperforms IE: CMCL provides 6.11% relative reduction of the top-1\nerror rate from the IE with feature sharing under the choice of M = 10. We also remark that IE with feature sharing has similar error rates as the ensemble size increases, while CMCL does not (i.e., the gain is more significant for CMCL). This implies that feature sharing is more effectively working for CMCL."
  }, {
    "heading": "5.2. Foreground-Background Segmentation",
    "text": "In this section, we evaluate if ensemble models trained with CMCL produce high-quality segmentation of foreground and background of an image with the iCoseg dataset. The foreground-background segmentation is formulated as a pixel-level classification problem with 2 classes, i.e., 0 (background) or 1 (foreground). To tackle the problem, we design fully convolutional networks (FCNs) model (Long et al., 2015) based on the decoder architecture presented in (Radford et al., 2016). The dataset consists of 38 groups of related images with pixel-level ground truth on foregroundbackground segmentation of each image. We only use im-\nages that are larger than 300 × 500 pixels. For each class, we randomly split 80% and 20% of the data into training and test sets, respectively. We train on 75 × 125 resized images using the bicubic interpolation (Keys, 1981). Similar to (Guzman-Rivera et al., 2012; Lee et al., 2016), we initialize the parameters of FCNs with those trained by IE for MCL and CMCL. For all experiments, CMCL is used with both feature sharing and stochastic labeling.\nSimilar to (Guzman-Rivera et al., 2012), we define the percentage of incorrectly labeled pixels as prediction error rate. We measure the oracle error rate (i.e., the lowest error rate over all models for a given input) and the top-1 error rate. The top-1 error rate is measured by following the predictions of the member model that has a lower pixel-wise entropy, i.e., picking the output of a more confident model. For each ensemble method, we vary the number of ensemble models and measure the oracle error rate and test error rate. Figure 4(b) and 4(c) show both top-1 and oracle error rates for all ensemble methods. We remark that the ensemble models trained by CMCL consistently improves the top-1 error rate over baselines. In an ensemble of 5 models, we find that CMCL achieve up to 6.77% relative reduction\nin the top-1 error rate from the corresponding IE. As shown in Figure 3, an individual model trained by CMCL generates high-quality solutions by specializing itself in specific images (e.g., model 1 is specialized for ‘lobster’ while model 2 is specialized for ‘duck’) while each model trained by IE does not."
  }, {
    "heading": "6. Conclusion",
    "text": "This paper proposes CMCL, a novel ensemble method of deep neural networks that produces diverse/plausible confident prediction of high quality. To this end, we address the over-confidence issues of MCL, and propose a new loss, architecture and training method. In our experiments, CMCL outperforms not only the known MCL, but also the traditional IE, with respect to the top-1 error rates in classification and segmentation tasks. The recent trend in the deep learning community tends to make models bigger and wider. We believe that our new ensemble approach brings a refreshing angle for developing advanced large-scale deep neural networks in many related applications."
  }, {
    "heading": "Acknowledgements",
    "text": "This work was supported in part by the ICT R&D Program of MSIP/IITP, Korea, under [2016-0-00563, Research on Adaptive Machine Learning Technology Development for Intelligent Autonomous Digital Companion], R0190-162012, [High Performance Big Data Analytics Platform Performance Acceleration Technologies Development], and by the National Research Council of Science & Technology (NST) grant by the Korea government (MSIP) (No. CRC-15-05-ETRI)."
  }],
  "year": 2017,
  "references": [{
    "title": "icoseg: Interactive co-segmentation with intelligent scribble guidance",
    "authors": ["Batra", "Dhruv", "Kowdle", "Adarsh", "Parikh", "Devi", "Luo", "Jiebo", "Chen", "Tsuhan"],
    "venue": "In Computer Vision and Pattern Recognition (CVPR),",
    "year": 2010
  }, {
    "title": "Diverse m-best solutions in markov random fields",
    "authors": ["Batra", "Dhruv", "Yadollahpour", "Payman", "Guzman-Rivera", "Abner", "Shakhnarovich", "Gregory"],
    "venue": "In European Conference on Computer Vision (ECCV),",
    "year": 2012
  }, {
    "title": "Multi-column deep neural networks for image classification",
    "authors": ["Ciregan", "Dan", "Meier", "Ueli", "Schmidhuber", "Jürgen"],
    "venue": "In Computer Vision and Pattern Recognition (CVPR),",
    "year": 2012
  }, {
    "title": "Discriminative reranking for natural language parsing",
    "authors": ["Collins", "Michael", "Koo", "Terry"],
    "venue": "Computational Linguistics,",
    "year": 2005
  }, {
    "title": "Predicting multiple structured visual interpretations",
    "authors": ["Dey", "Debadeepta", "Ramakrishna", "Varun", "Hebert", "Martial", "J. Andrew Bagnell"],
    "venue": "In International Conference on Computer Vision (ICCV),",
    "year": 2015
  }, {
    "title": "Bayesian averaging of classifiers and the overfitting problem",
    "authors": ["Domingos", "Pedro"],
    "venue": "In International Conference on Machine Learning (ICML),",
    "year": 2000
  }, {
    "title": "The pascal visual object classes (voc) challenge",
    "authors": ["Everingham", "Mark", "Van Gool", "Luc", "Williams", "Christopher KI", "Winn", "John", "Zisserman", "Andrew"],
    "venue": "International journal of computer vision,",
    "year": 2010
  }, {
    "title": "A short introduction to boosting",
    "authors": ["Freund", "Yoav", "Schapire", "Robert", "N. Abe"],
    "venue": "Journal-Japanese Society For Artificial Intelligence,",
    "year": 1999
  }, {
    "title": "Efficiently enforcing diversity in multi-output structured prediction",
    "authors": ["Guzman-Rivera", "Abner", "Kohli", "Pushmeet", "Batra", "Dhruv", "Rutenbar", "Rob A"],
    "venue": "In International Conference on Artificial Intelligence and Statistics (AISTATS),",
    "year": 2014
  }, {
    "title": "Deep residual learning for image recognition",
    "authors": ["He", "Kaiming", "Zhang", "Xiangyu", "Ren", "Shaoqing", "Sun", "Jian"],
    "venue": "In Computer Vision and Pattern Recognition",
    "year": 2016
  }, {
    "title": "Better k-best parsing",
    "authors": ["Huang", "Liang", "Chiang", "David"],
    "venue": "In Proceedings of the Ninth International Workshop on Parsing Technology,",
    "year": 2005
  }, {
    "title": "Batch normalization: Accelerating deep network training by reducing internal covariate shift",
    "authors": ["Ioffe", "Sergey", "Szegedy", "Christian"],
    "venue": "In International Conference on Machine Learning (ICML),",
    "year": 2015
  }, {
    "title": "Adaptive mixtures of local experts",
    "authors": ["Jacobs", "Robert A", "Jordan", "Michael I", "Nowlan", "Steven J", "Hinton", "Geoffrey E"],
    "venue": "Neural computation,",
    "year": 1991
  }, {
    "title": "Cubic convolution interpolation for digital image processing",
    "authors": ["Keys", "Robert"],
    "venue": "IEEE transactions on acoustics, speech, and signal processing,",
    "year": 1981
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Kingma", "Diederik", "Ba", "Jimmy"],
    "venue": "In International Conference on Learning Representations (ICLR),",
    "year": 2015
  }, {
    "title": "Learning multiple layers of features from tiny images",
    "authors": ["Krizhevsky", "Alex", "Hinton", "Geoffrey"],
    "year": 2009
  }, {
    "title": "Imagenet classification with deep convolutional neural networks. In Advances in neural information processing systems (NIPS)",
    "authors": ["Krizhevsky", "Alex", "Sutskever", "Ilya", "Hinton", "Geoffrey E"],
    "year": 2012
  }, {
    "title": "Simple and scalable predictive uncertainty estimation using deep ensembles",
    "authors": ["Lakshminarayanan", "Balaji", "Pritzel", "Alexander", "Blundell", "Charles"],
    "venue": "NIPS Workshop on Bayesian Deep Learning,",
    "year": 2016
  }, {
    "title": "Why m heads are better than one: Training a diverse ensemble of deep networks",
    "authors": ["Lee", "Stefan", "Purushwalkam", "Senthil", "Cogswell", "Michael", "Crandall", "David", "Batra", "Dhruv"],
    "venue": "arXiv preprint arXiv:1511.06314,",
    "year": 2015
  }, {
    "title": "Network in network",
    "authors": ["Lin", "Min", "Chen", "Qiang", "Yan", "Shuicheng"],
    "venue": "In International Conference on Learning Representations (ICLR),",
    "year": 2014
  }, {
    "title": "Microsoft coco: Common objects in context",
    "authors": ["Lin", "Tsung-Yi", "Maire", "Michael", "Belongie", "Serge", "Hays", "James", "Perona", "Pietro", "Ramanan", "Deva", "Dollár", "Piotr", "Zitnick", "C Lawrence"],
    "venue": "In European Conference on Computer Vision (ECCV),",
    "year": 2014
  }, {
    "title": "Fully convolutional networks for semantic segmentation",
    "authors": ["Long", "Jonathan", "Shelhamer", "Evan", "Darrell", "Trevor"],
    "venue": "In Computer Vision and Pattern Recognition (CVPR),",
    "year": 2015
  }, {
    "title": "Cross-stitch networks for multi-task learning",
    "authors": ["Misra", "Ishan", "Shrivastava", "Abhinav", "Gupta", "Hebert", "Martial"],
    "venue": "In Computer Vision and Pattern Recognition (CVPR),",
    "year": 2016
  }, {
    "title": "Reading digits in natural images with unsupervised feature learning",
    "authors": ["Netzer", "Yuval", "Wang", "Tao", "Coates", "Adam", "Bissacco", "Alessandro", "Wu", "Bo", "Ng", "Andrew Y"],
    "venue": "NIPS Workshop on Deep Learning and Unsupervised Feature Learning,",
    "year": 2011
  }, {
    "title": "Deep neural networks are easily fooled: High confidence predictions for unrecognizable images",
    "authors": ["Nguyen", "Anh", "Yosinski", "Jason", "Clune", "Jeff"],
    "venue": "In Computer Vision and Pattern Recognition (CVPR),",
    "year": 2015
  }, {
    "title": "N-best maximal decoders for part models",
    "authors": ["Park", "Dennis", "Ramanan", "Deva"],
    "venue": "In International Conference on Computer Vision (ICCV),",
    "year": 2011
  }, {
    "title": "Regularizing neural networks by penalizing confident output distributions",
    "authors": ["Pereyra", "Gabriel", "Tucker", "George", "Chorowski", "Jan", "Kaiser", "Łukasz", "Hinton", "Geoffrey"],
    "venue": "In International Conference on Learning Representations (ICLR),",
    "year": 2017
  }, {
    "title": "Unsupervised representation learning with deep convolutional generative adversarial networks",
    "authors": ["Radford", "Alec", "Metz", "Luke", "Chintala", "Soumith"],
    "venue": "In International Conference on Learning Representations (ICLR),",
    "year": 2016
  }, {
    "title": "Very deep convolutional networks for large-scale image recognition",
    "authors": ["Simonyan", "Karen", "Zisserman", "Andrew"],
    "venue": "In International Conference on Learning Representations (ICLR),",
    "year": 2015
  }, {
    "title": "Dropout: a simple way to prevent neural networks from overfitting",
    "authors": ["Srivastava", "Nitish", "Hinton", "Geoffrey E", "Krizhevsky", "Alex", "Sutskever", "Ilya", "Salakhutdinov", "Ruslan"],
    "venue": "Journal of Machine Learning Research,",
    "year": 1929
  }, {
    "title": "Going deeper with convolutions",
    "authors": ["Szegedy", "Christian", "Liu", "Wei", "Jia", "Yangqing", "Sermanet", "Pierre", "Reed", "Scott", "Anguelov", "Dragomir", "Erhan", "Dumitru", "Vanhoucke", "Vincent", "Rabinovich", "Andrew"],
    "venue": "In Computer Vision and Pattern Recognition (CVPR),",
    "year": 2015
  }, {
    "title": "Regularization of neural networks using dropconnect",
    "authors": ["Wan", "Li", "Zeiler", "Matthew D", "Zhang", "Sixin", "LeCun", "Yann", "Fergus", "Rob"],
    "venue": "In International Conference on Machine Learning (ICML),",
    "year": 2013
  }, {
    "title": "Wide residual networks",
    "authors": ["Zagoruyko", "Sergey", "Komodakis", "Nikos"],
    "venue": "In British Machine Vision Conference (BMVC),",
    "year": 2016
  }],
  "id": "SP:4c322a8e7c558ec87a8650ae97a953447e1f1d32",
  "authors": [{
    "name": "Kimin Lee",
    "affiliations": []
  }, {
    "name": "Changho Hwang",
    "affiliations": []
  }, {
    "name": "KyoungSoo Park",
    "affiliations": []
  }, {
    "name": "Jinwoo Shin",
    "affiliations": []
  }],
  "abstractText": "Ensemble methods are arguably the most trustworthy techniques for boosting the performance of machine learning models. Popular independent ensembles (IE) relying on naı̈ve averaging/voting scheme have been of typical choice for most applications involving deep neural networks, but they do not consider advanced collaboration among ensemble models. In this paper, we propose new ensemble methods specialized for deep neural networks, called confident multiple choice learning (CMCL): it is a variant of multiple choice learning (MCL) via addressing its overconfidence issue. In particular, the proposed major components of CMCL beyond the original MCL scheme are (i) new loss, i.e., confident oracle loss, (ii) new architecture, i.e., feature sharing and (iii) new training method, i.e., stochastic labeling. We demonstrate the effect of CMCL via experiments on the image classification on CIFAR and SVHN, and the foregroundbackground segmentation on the iCoseg. In particular, CMCL using 5 residual networks provides 14.05% and 6.60% relative reductions in the top-1 error rates from the corresponding IE scheme for the classification task on CIFAR and SVHN, respectively.",
  "title": "Confident Multiple Choice Learning"
}