{
  "sections": [{
    "text": "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 1849–1860 Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics\n1849"
  }, {
    "heading": "1 Introduction",
    "text": "Document relevance ranking, also known as adhoc retrieval (Harman, 2005), is the task of ranking documents from a large collection using the query and the text of each document only. This contrasts with standard information retrieval (IR) systems that rely on text-based signals in conjunction with network structure (Page et al., 1999; Kleinberg, 1999) and/or user feedback (Joachims, 2002). Text-based ranking is particularly important when (i) click-logs do not exist or are small, and (ii) the network structure of the collection is non-existent or not informative for query-focused relevance. Examples include various domains in digital libraries, e.g., patents (Azzopardi et al., 2010) or scientific literature (Wu et al., 2015; Tsatsaronis et al., 2015); enterprise search (Hawking, 2004); and personal search (Chirita et al., 2005).\nWe investigate new deep learning architectures for document relevance ranking, focusing on termbased interaction models, where query terms (qterms for brevity) are scored relative to a docu-\nment’s terms (d-terms) and their scores are aggregated to produce a relevance score for the document. Specifically, we use the Deep Relevance Matching Model (DRMM) of Guo et al. (2016) (Fig. 1), which was shown to outperform strong IR baselines and other recent deep learning methods. DRMM uses pre-trained word embeddings for q-terms and d-terms, and cosine similarity histograms (outputs of ⊗ in Fig. 1), each capturing the similarity of a q-term to all the d-terms of a particular document. The histograms are fed to an MLP (dense layers of Fig. 1) that produces the (document-aware) score of each q-term. Each qterm score is then weighted using a gating mechanism (topmost box nodes in Fig. 1) that examines properties of the q-term to assess its importance for ranking (e.g., common words are less important). The sum of the weighted q-term scores is the relevance score of the document. This ignores entirely the contexts where the terms occur, in contrast to recent position-aware models such as PACRR (Hui et al., 2017) or those based on recurrent representations (Palangi et al., 2016).\nIn order to enrich DRMM with context-sensitive representations, we need to change fundamentally how q-terms are scored. This is because rich\ncontext-sensitive representations – such as input term encodings based on RNNs or CNNs – require end-to-end training and histogram construction is not differentiable. To account for this we investigate novel query-document interaction mechanisms that are differentiable and show empirically that they are effective ways to enable end-to-end training of context-sensitive DRMM models. This is the primary contribution of this paper.\nOverall, we explore several extensions to DRMM, including: PACRR-like convolutional ngram matching features (§3.1); context-sensitive term encodings (§3.2); query-focused attentionbased document representations (§3.3); pooling to reward denser term matches and turn rich term representations into fixed-width vectors (§3.4); multiple views of terms, e.g., context sensitive, insensitive, exact matches (§3.5).\nWe test our models on data from the BIOASQ biomedical question answering challenge (Tsatsaronis et al., 2015) and TREC ROBUST 2004 (Voorhees, 2005), showing that they outperform strong BM25-based baselines (Robertson and Zaragoza, 2009), DRMM, and PACRR.1"
  }, {
    "heading": "2 Related Work",
    "text": "Document ranking has been studied since the dawn of IR; classic term-weighting schemes were designed for this problem (Sparck Jones, 1988; Robertson and Sparck Jones, 1988). With the advent of statistical NLP and statistical IR, probabilistic language and topic modeling were explored (Zhai and Lafferty, 2001; Wei and Croft, 2006), followed recently by deep learning IR methods (Lu and Li, 2013; Hu et al., 2014; Palangi et al., 2016; Guo et al., 2016; Hui et al., 2017).\nMost document relevance ranking methods fall within two categories: representation-based, e.g., Palangi et al. (2016), or interaction-based, e.g., Lu and Li (2013). In the former, representations of the query and document are generated independently. Interaction between the two only happens at the final stage, where a score is generated indicating relevance. End-to-end learning and backpropagation through the network tie the two representations together. In the interactionbased paradigm, explicit encodings between pairs of queries and documents are induced. This al-\n1The code and data of our experiments, including word embeddings, are available at https://github.com/ nlpaueb/deep-relevance-ranking.\nlows direct modeling of exact- or near-matching terms (e.g., synonyms), which is crucial for relevance ranking. Indeed, Guo et al. (2016) showed that the interaction-based DRMM outperforms previous representation-based methods. On the other hand, interaction-based models are less efficient, since one cannot index a document representation independently of the query. This is less important, though, when relevance ranking methods rerank the top documents returned by a conventional IR engine, which is the scenario we consider here.\nOne set of our experiments ranks biomedical texts. Several methods have been proposed for the BIOASQ challenge (Tsatsaronis et al., 2015), mostly based on traditional IR techniques. The most related work is of Mohan et al. (2017), who use a deep learning architecture. Unlike our work, they focus on user click data as a supervised signal, and they use context-insensitive representations of document-query interactions. The other dataset we experiment with, TREC ROBUST 2004 (Voorhees, 2005), has been used extensively to evaluate traditional and deep learning IR methods.\nDocument relevance ranking is also related to other NLP tasks. Passage scoring for question answering (Surdeanu et al., 2008) ranks passages by their relevance to the question; several deep networks have been proposed, e.g., Tan et al. (2015). Short-text matching/ranking is also related and has seen recent deep learning solutions (Lu and Li, 2013; Hu et al., 2014; Severyn and Moschitti, 2015). In document relevance ranking, though, documents are typically much longer than queries, which makes methods from other tasks that consider pairs of short texts not directly applicable.\nOur starting point is DRMM, to which we add richer representations inspired by PACRR. Hence, we first discuss DRMM and PACRR further."
  }, {
    "heading": "2.1 DRMM",
    "text": "We have already presented an overview of DRMM. For gating (topmost box nodes of Fig. 1), Guo et al. (2016) use a linear self-attention:\ngi = softmax ( wTg φg(qi); q1, . . . , qn ) where φg(qi) is the embedding e(qi) of the i-th qterm, or its IDF, idf(qi), andwg is a weights vector. Gating aims to weight the (document-aware) score of each q-term (outputs of dense layers in Fig. 1) based on the importance of the term. We found that φg(qi) = [e(qi); idf(qi)], where ‘;’ is concatenation, was optimal for all DRMM-based models.\nThe crux of the original DRMM are the bucketed cosine similarity histograms (outputs of ⊗ nodes in Fig. 1), each capturing the similarity of a q-term to all the d-terms. In each histogram, each bucket counts the number of d-terms whose cosine similarity to the q-term is within a particular range. Consider a document with three terms, with cosine similarities, s, to a particular q-term qi 0.5, 0.1, −0.3, respectively. If we used two buckets −1 ≤ s < 0 and 0 ≤ s ≤ 1, then the input to the dense layers for qi would be 〈1, 2〉. The fixed number of buckets leads to a fixed-dimension input for the dense layers and makes the model agnostic to different document and query lengths – one of DRMM’s main strengths. The main disadvantage is that bucketed similarities are independent of the contexts where terms occur. A q-term ‘regulated’ will have a perfect match with a d-term ‘regulated’, even if the former is ‘up regulated’ and the latter is ‘down regulated’ in context. Also, there is no reward for term matches that preserve word order, or multiple matches within a small window."
  }, {
    "heading": "2.2 PACRR",
    "text": "In PACRR (Hui et al., 2017), a query-document term similarity matrix sim is computed (Fig. 2A). Each cell (i, j) of sim contains the cosine similarity between the embeddings of a q-term qi and a dterm dj . To keep the dimensions lq×ld of sim fixed across queries and documents of varying lengths, queries are padded to the maximum number of qterms lq, and only the first ld terms per document are retained.2 Then, convolutions (Fig. 2A) of different kernel sizes n × n (n = 2, . . . , lg) are applied to sim to capture n-gram query-document similarities. For each size n × n, multiple ker-\n2We use PACRR-firstk, which Hui et al. (2017) recommend when documents fit in memory, as in our experiments.\nnels (filters) are used. Max pooling is then applied along the dimension of the filters (max value of all filters), followed by row-wise k-max pooling to capture the strongest k signals between each qterm and all the d-terms. The resulting matrices are concatenated into a single matrix where each row is a document-aware q-term encoding; the IDF of the q-term is also appended, normalized by applying a softmax across the IDFs of all the q-terms. Following Hui et al. (2018), we concatenate the rows of the resulting matrix into a single vector, which is passed to an MLP (Fig. 2A, dense layers) that produces a query-document relevance score.3\nThe primary advantage of PACRR over DRMM is that it models context via the n-gram convolutions, i.e., denser n-gram matches and matches preserving word order are encoded. However, this context-sensitivity is weak, as the convolutions operate over the similarity matrix, not directly on terms or even term embeddings. Also, unlike DRMM, PACRR requires padding and hyperparameters for maximum number of q-terms (lq) and dterms (ld), since the convolutional and dense layers operate over fixed-size matrices and vectors. On the other hand, PACRR is end-to-end trainable – though Hui et al. (2017) use fixed pre-trained embeddings – unlike DRMM where the bucketed histograms are not differentiable."
  }, {
    "heading": "3 New Relevance Ranking Models",
    "text": ""
  }, {
    "heading": "3.1 PACRR-DRMM",
    "text": "In a DRMM-like version of PACRR, instead of using an MLP (dense layers, Fig. 2A) to score the concatenation of all the (document-aware) q-term encodings, the MLP independently scores each qterm encoding (the same MLP for all q-terms, Fig. 2B); the resulting scores are aggregated via a linear layer. This version, PACRR-DRMM, performs better than PACRR, using the same number of hidden layers in the MLPs. Likely this is due to the fewer parameters of its MLP, which is shared across the q-term representations and operates on shorter input vectors. Indeed, in early experiments PACRR-DRMM was less prone to over-fitting.\nIn PACRR-DRMM, the scores of the q-terms (outputs of dense layers, Fig. 2B) are not weighted by a gating mechanism, unlike DRMM (Fig. 1). Nevertheless, the IDFs of the q-terms, which are appended to the q-term encodings (Fig. 2B), are a\n3Hui et al. (2017) used an additional LSTM, which was later replaced by the final concatanation (Hui et al., 2018).\nform of term-gating (shortcut passing on information about the terms, here their IDFs, to upper layers) applied before scoring the q-terms. By contrast, in DRMM (Fig. 1) term-gating is applied after q-term scoring, and operates on [e(qi); idf(qi)]."
  }, {
    "heading": "3.2 Context-sensitive Term Encodings",
    "text": "In their original incarnations, DRMM and PACRR use pre-trained word embeddings that are insensitive to the context of a particular query or document where a term occurs. This contrasts with the plethora of systems that use context-sensitive word encodings (for each particular occurrence of a word) in virtually all NLP tasks (Bahdanau et al., 2014; Plank et al., 2016; Lample et al., 2016). In general, this is achieved via RNNs, e.g., LSTMs (Gers et al., 2000), or CNNs (Bai et al., 2018).\nIn the IR literature, context-sensitivity is typically viewed through two lenses: term proximity (Büttcher et al., 2006) and term dependency (Metzler and Croft, 2005). The former assumes that the context around a term match is also relevant, whereas the latter aims to capture when multiple terms (e.g., an n-gram) must be matched together. An advantage of neural network architectures like RNNs and CNNs is that they can capture both.\nIn the models below (§§3.3–3.4), an encoder produces the context-sensitive encoding of each qterm or d-term from the pre-trained embeddings. To compute this we use a standard BILSTM encoding scheme and set the context-sentence encoding as the concatenation of the last layer’s hidden states of the forward and backward LSTMs at each position. As is common for CNNs and even recent RNN term encodings (Peters et al., 2018), we use the original term embedding e(ti) as a residual and combine it with the BILSTM encodings. Specifically, if −→ h (ti) and ←− h (ti) are the last layer’s hidden states of the left-to-right and right-to-left LSTMs for term ti, respectively, then we set the context-sensitive term encoding as:\nc(ti) = [ −→ h (ti) + e(ti); ←− h (ti) + e(ti)] (1)\nSince we are adding the original term embedding to each LSTM hidden state, we require the dimensionality of the hidden layers to be equal to that of the original embedding. Other methods were tried, including passing all representations through an MLP, but these had no effect on performance.\nThis is an orthogonal way to incorporate context into the model relative to PACRR. PACRR creates\na query-document similarity matrix and computes n-gram convolutions over the matrix. Here we incorporate context directly into the term encodings; hence similarities in this space are already contextsensitive. One way to view this difference is the point at which context enters the model – directly during term encoding (Eq. 1) or after term similarity scores have been computed (PACRR, Fig. 2)."
  }, {
    "heading": "3.3 ABEL-DRMM",
    "text": "Using the context-sensitive q-term and d-term encodings of §3.2 (Eq. 1), our next extension to DRMM is to create document-aware q-term encodings that go beyond bucketed histograms of cosine similarities, the stage in Fig. 1 indicated by⊗. We focus on differentiable encodings to facilitate endto-end training from inputs to relevance scores.\nFigure 3 shows the sub-network that computes the document-aware encoding of a q-term qi in the new model, given a document d = 〈d1, . . . , dm〉 of m d-terms. We first compute a dot-product4 attention score ai,j for each dj relative to qi:\nai,j = softmax ( c(qi) T c(dj); d1, . . . , dm ) (2)\nwhere c(t) is the context-sensitive encoding of t (Eq. 1). We then sum the context-sensitive encodings of the d-terms, weighted by their attention scores, to produce an attention-based representation dqi of document d from the viewpoint of qi:\ndqi = ∑ j ai,j c(dj) (3)\nThe Hadamard product (element-wise multiplication, ) between the (L2-normalized) document representation dqi and the q-term encoding c(qi) is then computed and used as the fixed-dimension document-aware encoding φH(qi) of qi (Fig. 3):\nφH(qi) = dqi ||dqi ||\nc(qi) ||c(qi)||\n(4)\nThe ⊗ nodes and lower parts of the DRMM network of Fig. 1 are now replaced by (multiple copies of) the sub-network of Fig. 3 (one copy per q-term), with the nodes replacing the ⊗ nodes. We call the resulting model AttentionBased ELement-wise DRMM (ABEL-DRMM).\nIntuitively, if the document contains one or more terms dj that are similar to qi, the attention\n4Dot-products have a larger range than other similarity functions, encouraging low entropy attention distributions.\nmechanism will have emphasized mostly those terms and, hence, dqi will be similar to c(qi), otherwise not. This similarity could have been measured by the cosine similarity between dqi and c(qi), but the cosine similarity assigns the same weight to all the dimensions, i.e., to all the (L2 normalized) element-wise products in φH(qi), which cosine similarity just sums. By using the Hadamard product, we pass on to the upper layers of DRMM (the dense layers of Fig. 1), which score each q-term with respect to the document, all the (normalized) element-wise products of φH(qi), allowing the upper layers to learn which elementwise products (or combinations of them) are important when matching a q-term to the document.\nOther element-wise functions can also be used to compare dqi to c(qi), instead of the Hadamard product (Eq. 4). For example, a vector containing the squared terms of the Euclidean distance between dqi and c(qi) could be used instead of φH(qi). This change had no effect on ABELDRMM’s performance on development data. We also tried using [dqi ; c(qi)] instead of φH(qi), but performance on development data deteriorated.\nABEL-DRMM is agnostic to document length, like DRMM. ABEL-DRMM, however, is trainable end-to-end, unlike the original DRMM. Still, both models do not reward higher density matches."
  }, {
    "heading": "3.4 POSIT-DRMM",
    "text": "Ideally, we want models to reward both the maximum match between a q-term and a document, but also the average match (between several q-terms and the document) to reward documents that have a higher density of matches. The document-aware q-term scoring of ABEL-DRMM does not account for this, as the attention summation hides whether a single or multiple terms were matched with high similarity. We also want models to be end-to-end trainable, like ABEL-DRMM.\nFigure 4 (context-sensitive box) outlines a simple network that produces document-aware q-\nterm encodings, replacing the ABEL-DRMM subnetwork of Fig. 3 in the DRMM framework. We call the resulting model POoled SImilariTy DRMM (POSIT-DRMM). As in ABEL-DRMM, we compute an attention score ai,j for each dj relative to qi, now using cosine similarity (cf. Eq. 2):\nai,j = c(qi)\nT c(dj)\n||c(qi)|| ||c(dj)|| (5)\nHowever, we do not use the ai,j scores to compute a weighted average of the encodings of the d-terms (cf. Eq. 3), which is also why there is no softmax in ai,j above (cf. Eq. 2).5 Instead, we concatenate the attention scores of the m d-terms:\nai = 〈ai,1, . . . , ai,j , . . . , ai,m〉T\nand we apply two pooling steps on ai to create a 2- dimensional document-aware encoding φP (qi) of the q-term qi (Fig. 4). First max-pooling, which returns the single best match of qi in the document. Then average pooling over a k-max-pooled version of ai, which represents the average similarity for the top k matching terms:\nφP (qi) = 〈 max(ai), avg ( k-max(ai) )〉T\nPOSIT-DRMM has many fewer parameters than the other models. The input to the upper qterm scoring dense layers of the DRMM framwork (Fig. 1) for ABEL-DRMM has the same dimensionality as pre-trained term embeddings, on the order of hundreds. By contrast, the input dimensionality here is 2. Hence, POSIT-DRMM does not require deep dense layers, but uses a single layer (depth 1). More information on hyperparameters is provided in Appendix A (supplementary material).\nPOSIT-DRMM is closely related to PACRR (and PACRR-DRMM). Like POSIT-DRMM, PACRR first\n5The ai,js still need to be normalized for input to the upper layers, but they do not need to be positive summing to 1. This is why we use cosine similarity in Eq. 5 instead of dot-products combined with softmax of Eq. 2.\ncomputes cosine similarities between all q-terms and d-terms (Fig. 2). It then applies n-gram convolutions to the similarity matrix to inject contextawareness, and then pooling to create documentaware q-term representations. Instead, POSITDRMM relies on the fact that the term encodings are now already context sensitive (Eq. 1) and thus skips the n-gram convolutions. Again, this is a choice of when context is injected – during term encoding or after computing similarity scores.\nMohan et al.’s work (2017) is related in the sense that for each q-term, document-aware encodings are built over the best matching (Euclidean distance) d-term. But again, term encodings are context-insensitive pre-trained word embeddings and the model is not trained end-to-end."
  }, {
    "heading": "3.5 Multiple Views of Terms (+MV)",
    "text": "An extension to ABEL-DRMM and POSIT-DRMM (or any deep model) is to use multiple views of terms. The basic POSIT-DRMM produces a twodimensional document-aware encoding of each qterm (Fig. 4, context-sensitive box) viewing the terms as their context-sensitive encodings (Eq. 1). Another two-dimensional document-aware q-term encoding can be produced by viewing the terms directly as their pre-trained embeddings without converting them to context-sensitive encodings (Fig. 4, context-insensitive box). A third view uses one-hot vector representations of terms, which allows exact term matches to be modeled, as opposed to near matches in embedding space. Concatenating the outputs of the 3 views, we obtain 6-dimensional document-aware q-term encodings, leading to a model dubbed POSIT-DRMM+MV. An example of this multi-view document-aware query term representation is given in Fig. 5 for a querydocument pair from BIOASQ’s development data.\nThe multi-view extension of ABEL-DRMM (ABEL-DRMM+MV) is very similar, i.e., it uses context-sensitive term encodings, pre-trained term embeddings, and one-hot term encodings in its three views. The resulting three document-aware q-term embeddings can be summed or concatenated, though we found the former more effective."
  }, {
    "heading": "3.6 Alternative Network Structures",
    "text": "The new models (§§3.1–3.5) were selected by experimenting on development data. Many other extensions were considered, but not ultimately used as they were not beneficial empirically, including deeper and wider RNNs or CNN encoders (Bai\net al., 2018); combining document-aware encodings from all models; different attention mechanisms, e.g., multi-head (Vaswani et al., 2017).\nPointer Networks (Vinyals et al., 2015) use the attention scores directly to select an input component. POSIT-DRMM does this via max and average pooling, not argmax. We implemented Pointer Networks – argmax over ABEL-DRMM attention to select the best d-term encoding – but empirically this was similar to ABEL-DRMM. Other architectures considered in the literature include the KNRM model of Xiong et al. (2017). This is similar to both ABEL-DRMM and POSIT-DRMM in that it can be viewed as an end-to-end version of DRMM. However, it uses kernels over the query-document interaction matrix to produce features per q-term.\nThe work of Pang et al. (2017) is highly related and investigates many different structures, specifically aimed at incorporating context-sensitivity. However, unlike our work, Pang et al. first extract contexts (n-grams) of documents that match q-terms. Multiple interaction matrices are then constructed for the entire query relative to each of these contexts. These document contexts may match one or more q-terms allowing the model to incorporate term proximity. These interaction matrices can also be constructed using exact string match similar to POSIT-DRMM+MV."
  }, {
    "heading": "4 Experiments",
    "text": "We experiment with ad-hoc retrieval datasets with hundreds of thousands or millions of documents. As deep learning models are computationally expensive, we first run a traditional IR system6 using the BM25 score (Robertson and Zaragoza, 2009) and then re-rank the top N returned documents."
  }, {
    "heading": "4.1 Methods Compared",
    "text": "All systems use an extension proposed by Severyn and Moschitti (2015), where the relevance score is combined via a linear model with a set of extra features. We use four extra features: zscore normalized BM25 score; percentage of qterms with exact match in the document (regular and IDF weighted); and percentage of q-term bigrams matched in the document. The latter three features were taken from Mohan et al. (2017).\nIn addition to the models of §§2.1, 2.2, 3.1–3.5, we used the following baselines: Standard Okapi\n6We used Galago (http://www.lemurproject. org/galago.php, v.3.10). We removed stop words and applied Krovetz’s stemmer (Krovetz, 1993).\nBM25 (BM25); and BM25 re-ranked with a linear model over the four extra features (BM25+extra). These IR baselines are very strong and most recently proposed deep learning models do not beat them.7 DRMM and PACRR are also strong baselines and have shown superior performance over other deep learning models on a variety of data (Guo et al., 2016; Hui et al., 2017).8\nAll hyperparameters were tuned on development data and are available in Appendix A. All models were trained using Adam (Kingma and Ba, 2014) with batches containing a randomly sampled negative example per positive example9 and a pair-wise loss. As the datasets contain only documents marked as relevant, negative examples were sampled from the top N documents (returned by BM25) that had not been marked as relevant.\nWe evaluated the models using the TREC ad-hoc retrieval evaluation script10 focusing on MAP, Precision@20 and nDCG@20 (Manning et al., 2008). We trained each model five times with different random seeds and report the mean and standard deviation for each metric on test data; in each run, the model selected had the highest MAP on the development data. We also report results for an oracle, which re-ranks the N documents returned by BM25 placing all human-annotated relevant documents at the top. To test for statistical significance between two systems, we employed twotailed stratified shuffling (Smucker et al., 2007; Dror et al., 2018) using the model with the highest development MAP over the five runs per method."
  }, {
    "heading": "4.2 BioASQ Experiments",
    "text": "Our first experiment used the dataset of the document ranking task of BIOASQ (Tsatsaronis et al., 2015), years 1–5.11 It contains 2,251 English biomedical questions, each formulated by a biomedical expert, who searched (via PubMed12) for, and annotated relevant documents. Not all relevant documents were necessarily annotated, but the data includes additional expert relevance judg-\n7See, for example, Table 2 of Guo et al. (2016). 8For PACRR/PACRR-DRMM, we used/modified the code released by Hui et al. (2017, 2018). We use our own implementation of DRMM, which performs roughly the same as Guo et al. (2016), though the results are not directly comparable due to different random partitions of the data.\n9We limit positive examples to be in the top N documents. 10https://trec.nist.gov/trec_eval/ (v9.0) 11http://bioasq.org/. 12https://www.ncbi.nlm.nih.gov/pubmed/\nments made during the official evaluation.13\nThe document collection consists of approx. 28M ‘articles’ (titles and abstracts only) from the ‘MEDLINE/PubMed Baseline 2018’ collection.14 We discarded the approx. 10M articles that contained only titles, since very few of these were annotated as relevant. For the remaining 18M articles, a document was the concatenation of each title and abstract. Consult Appendix B for further statistics of the dataset. Word embeddings were pre-trained by applying word2vec (Mikolov et al., 2013) (see Appendix A for hyper-parameters) to the 28M ‘articles’ of the MEDLINE/PubMed collection. IDF values were computed over the 18M articles that contained both titles and abstracts.\nThe 1,751 queries of years 1–4 were used for training, the first 100 queries of year 5 (batch 1) for development, and the remaining 400 queries of year 5 (batches 2–5) as test set. We set N = 100, since even using only the top 100 documents of BM25, the oracle scores are high. PubMed articles published after 2015 for the training set, and after 2016 for the development and test sets, were removed from the top N (and replaced by lower ranked documents up to N ), as these were not available at the time of the human annotation.\nTable 1 reports results on the BIOASQ test set, averaged over five runs as well as the single best run (by development MAP) with statistical significance. The enhanced models of this paper perform better than BM25 (even with extra features), PACRR, and DRMM. There is hardly any difference between PACRR and DRMM, but our combination of the two (PACRR-DRMM) surpasses them both on average, though the difference is statistically significant (p < 0.05) only when comparing to PACRR. Models that use context-sensitive term encodings (ABEL-DRMM, POSIT-DRMM) outperform other models, even PACRR-style models that incorporate context at later stages in the network. This is true both on average and by statistical significance over the best run. The best model on average is POSIT-DRMM+MV, though it is not significantly different than POSIT-DRMM."
  }, {
    "heading": "4.3 TREC Robust 2004 Experiments",
    "text": "Our primary experiments were on the BIOASQ dataset as it has one of the largest sets of queries\n13Our results are, thus, not comparable to those of participating systems, since experts did not consider our outputs.\n14See https://www.nlm.nih.gov/databases/ download/pubmed_medline.html.\n(with manually constructed relevance judgments) and document collections, making it a particularly realistic dataset. However, in order to ground our models in past work we also ran experiments on TREC ROBUST 2004 (Voorhees, 2005), which is a common benchmark. It contains 250 queries15 and 528K documents. As this dataset is quite small, we used a 5-fold cross-validation. In each fold, approx. 35 of the queries were used for training, 1 5 for development, and 15 for testing. We applied word2vec to the 528K documents to obtain pretrained embeddings. IDF values were computed over the same corpus. Here we used N = 1000, as the oracle scores for N = 100 were low.\nTable 2 shows the TREC ROBUST results, which largely mirror those of BIOASQ. POSITDRMM+MV is still the best model, though again not significantly different than POSIT-DRMM. Furthermore, ABEL-DRMM and POSIT-DRMM are clearly better than the deep learning baselines,16\n15We used the ‘title’ fields of the queries. 16The results we report for our implementation of DRMM are slightly different than those of Guo et al. (2016). There\nbut unlike BIOASQ, there is no statistically significant difference between PACRR-DRMM and the two deep learning baselines. Even though the scores are quite close (particularly MAP) both ABEL-DRMM and POSIT-DRMM are statistically different from PACRR-DRMM, which was not the case for BIOASQ. ABEL-DRMM+MV is significantly different than ABEL-DRMM on the best run for MAP and nDCG@20, unlike BIOASQ where there was no statistically significant difference between the two methods. However, on average over 5 runs, the systems show little difference."
  }, {
    "heading": "5 Discussion",
    "text": "An interesting question is how well the deep models do without the extra features. For BIOASQ, the best model’s (POSIT-DRMM+MV) MAP score drops from 48.1 to 46.2 on the development set, which is higher than the BM25 baseline (43.7), but on-par with BM25+EXTRA (46.0). We should\nare a number of reasons for why this might be the case: there is no standard split of the data; non-standard preprocessing of the documents; the original DRMM paper reranks the top documents returned by Query Likelihood and not BM25.\nnote, however, that on this set, the DRMM baseline without the extra features (which include BM25) is actually lower than BM25 (MAP 42.5), though it is obviously adding a useful signal, since DRMM with the extra features performs better (46.5).\nWe also tested the contribution of contextsensitive term encodings (Eq. 1). Without them, i.e., using directly the pre-trained embeddings, MAP on BIOASQ development data dropped from 47.6 to 46.3, and from 48.1 to 47.0 for ABELDRMM and POSIT-DRMM, respectively.\nFig. 5 shows the cosine similarities (attention scores, Eq. 5) between q-terms and d-terms, using term encodings of the three views (Fig. 4), for a query “Does Vitamin D induce autophagy?” and a relevant document from the BIOASQ development data. POSIT-DRMM indeed marks this as relevant. In the similarities of the context-insensitive view (middle left box) we see multiple matches around ‘vitamin d’ and ‘induce autophagy’. The former is an exact match (white squares in lower left box) and the latter a soft match. The contextsensitive view (upper left box) smooths things out and one can see a straight diagonal white line matching ‘vitamin d induce autophagy’. The right box of Fig. 5 shows the 6 components (Fig. 4) of the document-aware q-term encodings. Although\nsome terms are not matched exactly, the context sensitive max and average pooled components (two left-most columns) are high for all q-terms. Interestingly, ‘induce’ and ‘induces’ are not an exact match (leading to black cells for ‘induce’ in the two right-most columns) and the corresponding context-insensitive component of (third cell from left) is low. However, the two components of the context-sensitive view (two left-most cells of ‘induce’) are high, esp. the max-pooling component (left-most).Finally, ‘vitamin d’ has multiple matches leading to a high average k-max pooled value, which indicates that the importance of that phrase in the document.\nFig. 6 shows the 6 components of the documentaware q-term encodings for another query and the same document, which is now irrelevant. In the max pooling columns of the exact match and context-insensitive view (columns 3, 5), the values look quite similar to those of Fig. 5. However, POSIT-DRMM scores this query-document pair low for two reasons. First, in the average-k-max pooling columns (columns 2, 4, 6) we get lower values than Fig. 5, indicating that there is less support for this pair in terms of density. Second, the context sensitive values (columns 1, 2) are much worse, indicating that even though many exact matches exist, in context, the meaning is not the same.\nWe conclude by noting there is still quite a large gap between the current best models and the oracle re-ranking scores. Thus, there is head room for improvements through more data or better models."
  }, {
    "heading": "Acknowledgements",
    "text": "We thank the reviewers for their constructive feedback that greatly improved this work. Oscar Täckström gave thorough input on an early draft of this work. Finally, AUEB’s NLP group provided many suggestions over the course of the work."
  }],
  "year": 2018,
  "references": [{
    "title": "Search system requirements of patent analysts",
    "authors": ["Leif Azzopardi", "Wim Vanderbauwhede", "Hideo Joho."],
    "venue": "Proceedings of the 33rd International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 775–776,",
    "year": 2010
  }, {
    "title": "Neural machine translation by jointly learning to align and translate",
    "authors": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."],
    "venue": "arXiv preprint arXiv:1409.0473.",
    "year": 2014
  }, {
    "title": "An empirical evaluation of generic convolutional and recurrent networks for sequence modeling",
    "authors": ["Shaojie Bai", "J Zico Kolter", "Vladlen Koltun."],
    "venue": "arXiv preprint arXiv:1803.01271.",
    "year": 2018
  }, {
    "title": "Term proximity scoring for ad-hoc retrieval on very large text collections",
    "authors": ["Stefan Büttcher", "Charles LA Clarke", "Brad Lushman."],
    "venue": "Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information",
    "year": 2006
  }, {
    "title": "Activity based metadata for semantic desktop search",
    "authors": ["Paul Alexandru Chirita", "Rita Gavriloaie", "Stefania Ghita", "Wolfgang Nejdl", "Raluca Paiu."],
    "venue": "European Semantic Web Conference, pages 439– 454, Heraklion, Greece.",
    "year": 2005
  }, {
    "title": "The hitchhiker’s guide to testing statistical significance in natural language processing",
    "authors": ["Rotem Dror", "Gili Baumer", "Segev Shlomov", "Roi Reichart."],
    "venue": "Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1:",
    "year": 2018
  }, {
    "title": "Learning to forget: Continual prediction with LSTM",
    "authors": ["Felix A. Gers", "Jürgen A. Schmidhuber", "Fred A. Cummins."],
    "venue": "Neural Computation, 12(10):2451–2471.",
    "year": 2000
  }, {
    "title": "A deep relevance matching model for ad-hoc retrieval",
    "authors": ["Jiafeng Guo", "Yixing Fan", "Qingyao Ai", "W Bruce Croft."],
    "venue": "Proceedings of the 25th ACM International on Conference on Information and Knowledge Management, pages 55–64, Indi-",
    "year": 2016
  }, {
    "title": "The TREC ad hoc experiments",
    "authors": ["Donna K Harman."],
    "venue": "Technical report, National Institute of Standards and Technology (NIST).",
    "year": 2005
  }, {
    "title": "Challenges in enterprise search",
    "authors": ["David Hawking."],
    "venue": "Proceedings of the 15th Australasian Database Conference-Volume 27, pages 15–24, Dunedin, New Zealand.",
    "year": 2004
  }, {
    "title": "Convolutional neural network architectures for matching natural language sentences",
    "authors": ["Baotian Hu", "Zhengdong Lu", "Hang Li", "Qingcai Chen."],
    "venue": "Advances in Neural Information Processing Systems 27, pages 2042–2050.",
    "year": 2014
  }, {
    "title": "PACRR: A position-aware neural IR model for relevance matching",
    "authors": ["Kai Hui", "Andrew Yates", "Klaus Berberich", "Gerard de Melo."],
    "venue": "Proceedings of the Conference on Empirical Methods in Natural Language Processing, pages 1049–1058, Copenhagen,",
    "year": 2017
  }, {
    "title": "Co-PACRR: A context-aware neural IR model for ad-hoc retrieval",
    "authors": ["Kai Hui", "Andrew Yates", "Klaus Berberich", "Gerard de Melo."],
    "venue": "Proceedings of the 11th ACM International Conference on Web Search and Data Mining, pages 279–287, Marina Del Rey,",
    "year": 2018
  }, {
    "title": "Optimizing search engines using clickthrough data",
    "authors": ["Thorsten Joachims."],
    "venue": "Proceedings of the 8th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 133–142, Edmonton, Canada.",
    "year": 2002
  }, {
    "title": "Adam: A method for stochastic optimization",
    "authors": ["Diederik P Kingma", "Jimmy Ba."],
    "venue": "arXiv preprint arXiv:1412.6980.",
    "year": 2014
  }, {
    "title": "Authoritative sources in a hyperlinked environment",
    "authors": ["Jon M. Kleinberg."],
    "venue": "Journal of the ACM (JACM), 46(5):604–632.",
    "year": 1999
  }, {
    "title": "Viewing morphology as an inference process",
    "authors": ["Robert Krovetz."],
    "venue": "Proceedings of the 16th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 191–202, Pittsburgh, PA.",
    "year": 1993
  }, {
    "title": "Neural architectures for named entity recognition",
    "authors": ["Guillaume Lample", "Miguel Ballesteros", "Sandeep Subramanian", "Kazuya Kawakami", "Chris Dyer."],
    "venue": "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computa-",
    "year": 2016
  }, {
    "title": "A deep architecture for matching short texts",
    "authors": ["Zhengdong Lu", "Hang Li."],
    "venue": "Proceedings of the 26th International Conference on Neural Information Processing Systems - Volume 1, pages 1367– 1375, Lake Tahoe, NV.",
    "year": 2013
  }, {
    "title": "Introduction to Information Retrieval",
    "authors": ["Christopher D. Manning", "Prabhakar Raghavan", "Hinrich Schütze."],
    "venue": "Cambridge University Press.",
    "year": 2008
  }, {
    "title": "A markov random field model for term dependencies",
    "authors": ["Donald Metzler", "W Bruce Croft."],
    "venue": "Proceedings of the 28th annual international ACM SIGIR conference on Research and development in information retrieval, pages 472–479. ACM.",
    "year": 2005
  }, {
    "title": "Distributed representations of words and phrases and their compositionality",
    "authors": ["Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean."],
    "venue": "Proceedings of the 26th International Conference on Neural Information Processing Systems -",
    "year": 2013
  }, {
    "title": "Deep learning for biomedical information retrieval: Learning textual relevance from click logs",
    "authors": ["Sunil Mohan", "Nicolas Fiorini", "Sun Kim", "Zhiyong Lu."],
    "venue": "BioNLP 2017, pages 222–231.",
    "year": 2017
  }, {
    "title": "The pagerank citation ranking: Bringing order to the web",
    "authors": ["Lawrence Page", "Sergey Brin", "Rajeev Motwani", "Terry Winograd."],
    "venue": "Technical report, Stanford InfoLab.",
    "year": 1999
  }, {
    "title": "Deep sentence embedding using long short-term memory networks: Analysis and application to information retrieval",
    "authors": ["Hamid Palangi", "Li Deng", "Yelong Shen", "Jianfeng Gao", "Xiaodong He", "Jianshu Chen", "Xinying Song", "Rabab Ward."],
    "venue": "IEEE/ACM Trans-",
    "year": 2016
  }, {
    "title": "Deeprank: A new deep architecture for relevance ranking in information retrieval",
    "authors": ["Liang Pang", "Yanyan Lan", "Jiafeng Guo", "Jun Xu", "Jingfang Xu", "Xueqi Cheng."],
    "venue": "Proceedings of the 2017 ACM on Conference on Information and Knowledge Man-",
    "year": 2017
  }, {
    "title": "Deep contextualized word representations",
    "authors": ["Matthew Peters", "Mark Neumann", "Mohit Iyyer", "Matt Gardner", "Christopher Clark", "Kenton Lee", "Luke Zettlemoyer."],
    "venue": "Proceedings of the 2018 Conference of the North American Chapter of the Association",
    "year": 2018
  }, {
    "title": "Multilingual part-of-speech tagging with bidirectional long short-term memory models and auxiliary loss",
    "authors": ["Barbara Plank", "Anders Søgaard", "Yoav Goldberg."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Lin-",
    "year": 2016
  }, {
    "title": "The probabilistic relevance framework: BM25 and beyond",
    "authors": ["Stephen Robertson", "Hugo Zaragoza."],
    "venue": "Foundations and Trends in Information Retrieval, 3(4):333–389.",
    "year": 2009
  }, {
    "title": "Document retrieval systems",
    "authors": ["Stephen E. Robertson", "Karen Sparck Jones."],
    "venue": "chapter Relevance Weighting of Search Terms, pages 143–160. Taylor Graham Publishing, London, UK.",
    "year": 1988
  }, {
    "title": "Learning to rank short text pairs with convolutional deep neural networks",
    "authors": ["Aliaksei Severyn", "Alessandro Moschitti."],
    "venue": "Proceedings of the 38th International ACM SIGIR Conference on Research and Development in Information Retrieval, pages",
    "year": 2015
  }, {
    "title": "A comparison of statistical significance tests for information retrieval evaluation",
    "authors": ["Mark D Smucker", "James Allan", "Ben Carterette."],
    "venue": "Proceedings of the sixteenth ACM conference on Conference on information and knowledge management, pages",
    "year": 2007
  }, {
    "title": "Document retrieval systems",
    "authors": ["Karen Sparck Jones."],
    "venue": "chapter A Statistical Interpretation of Term Specificity and Its Application in Retrieval, pages 132–142. Taylor Graham Publishing, London, UK.",
    "year": 1988
  }, {
    "title": "Learning to rank answers on large online QA collections",
    "authors": ["Mihai Surdeanu", "Massimiliano Ciaramita", "Hugo Zaragoza."],
    "venue": "Proceedings of the 46th Annual Meeting for the Association for Computational Linguistics: Human Language Technologies",
    "year": 2008
  }, {
    "title": "LSTM-based deep learning models for non-factoid answer selection",
    "authors": ["Ming Tan", "Cicero dos Santos", "Bing Xiang", "Bowen Zhou."],
    "venue": "arXiv preprint arXiv:1511.04108.",
    "year": 2015
  }, {
    "title": "An overview of the BioASQ large-scale biomedical",
    "authors": ["las Baskiotis", "Patrick Gallinari", "Thierry Artiéres", "Axel-Cyrille Ngonga Ngomo", "Norman Heino", "Eric Gaussier", "Liliana Barrio-Alvers", "Michael Schroeder", "Ion Androutsopoulos", "Georgios Paliouras"],
    "year": 2015
  }, {
    "title": "Attention is all you need",
    "authors": ["Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N Gomez", "Łukasz Kaiser", "Illia Polosukhin."],
    "venue": "Advances in Neural Information Processing Systems 30, pages 5998–6008, Long Beach,",
    "year": 2017
  }, {
    "title": "Pointer networks",
    "authors": ["Oriol Vinyals", "Meire Fortunato", "Navdeep Jaitly."],
    "venue": "Advances in Neural Information Processing Systems 28, pages 2692–2700, Montreal, Canada.",
    "year": 2015
  }, {
    "title": "The TREC robust retrieval track",
    "authors": ["Ellen M Voorhees."],
    "venue": "ACM SIGIR Forum, 39(1):11–20.",
    "year": 2005
  }, {
    "title": "LDA-based document models for ad-hoc retrieval",
    "authors": ["Xing Wei", "W Bruce Croft."],
    "venue": "Proceedings of the 29th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, pages 178–185, Seattle, WA.",
    "year": 2006
  }, {
    "title": "Citeseerx: AI in a digital library search engine",
    "authors": ["Jian Wu", "Kyle Mark Williams", "Hung-Hsuan Chen", "Madian Khabsa", "Cornelia Caragea", "Suppawong Tuarob", "Alexander G Ororbia", "Douglas Jordan", "Prasenjit Mitra", "C Lee Giles."],
    "venue": "AI Magazine, 36(3):35–48.",
    "year": 2015
  }, {
    "title": "End-to-end neural ad-hoc ranking with kernel pooling",
    "authors": ["Chenyan Xiong", "Zhuyun Dai", "Jamie Callan", "Zhiyuan Liu", "Russell Power."],
    "venue": "Proceedings of the 40th International ACM SIGIR Conference on Research and Development in Information",
    "year": 2017
  }, {
    "title": "A study of smoothing methods for language models applied to ad hoc information retrieval",
    "authors": ["Chengxiang Zhai", "John Lafferty."],
    "venue": "Proceedings of the 24th Annual International ACM SIGIR Conference on Research and Development in Information Re-",
    "year": 2001
  }],
  "id": "SP:f98a78700df4d99ffbb6da8a9f425252eda0e2df",
  "authors": [{
    "name": "Ryan McDonald",
    "affiliations": []
  }, {
    "name": "Ion Androutsopoulos",
    "affiliations": []
  }],
  "abstractText": "We explore several new models for document relevance ranking, building upon the Deep Relevance Matching Model (DRMM) of Guo et al. (2016). Unlike DRMM, which uses context-insensitive encodings of terms and query-document term interactions, we inject rich context-sensitive encodings throughout our models, inspired by PACRR’s (Hui et al., 2017) convolutional n-gram matching features, but extended in several ways including multiple views of query and document inputs. We test our models on datasets from the BIOASQ question answering challenge (Tsatsaronis et al., 2015) and TREC ROBUST 2004 (Voorhees, 2005), showing they outperform BM25-based baselines, DRMM, and PACRR.",
  "title": "Deep Relevance Ranking Using Enhanced Document-Query Interactions"
}