{
  "sections": [{
    "heading": "1. Introduction",
    "text": "Many real-world processes of interest, ranging from climate variables to brain signals, are spatio-temporal in nature, cf. Cressie & Wikle (2011). That is, they can be described as a random quantity that varies over some fixed spatial and temporal domain. Suppose we obtain n training points from a real-valued spatio-temporal process,\nDn = { (s1, t1, y1), . . . , (sn, tn, yn) } ,\nwhere yi denotes the quantity of interest observed at the ith training point, with spatial coordinate si and time ti. For notational convenience, let (s, t, y) denote an unobserved test point in space-time where y is unknown. Then a common goal is to predict y in unobserved space-time regions (s, t) using Dn. Specifically, certain spatial regions may have limited data coverage over extended periods of time, as illustrated in Figure 1. In real-world applications, Dn need not be gathered in a single batch but obtained in parts over time from various sensors, stations, satellites,\n*Equal contribution 1Uppsala University, Sweden. Correspondence to: Muhammad Osama <muhammad.osama@it.uu.se>, Dave Zachariah <dave.zachariah@it.uu.se>.\nProceedings of the 35 th International Conference on Machine Learning, Stockholm, Sweden, PMLR 80, 2018. Copyright 2018 by the author(s).\netc. That is, the dataset is augmented sequentially, i.e., n = 1, 2, . . . , N . In these streaming data scenarios, we are interested in continuous refinement of the prediction of y at (s, t) as new data is augmented into Dn+1.\nThe unknown data-generating process is often assumed to belong to a class of data models indexed by a parameter θ. Each model θ in the class yields a predictor ŷθ(s, t) of y at test point (s, t). A specific set of model parameters θ̂ is learned using Dn. Examples of commonly used model classes include Gaussian Processes (GP) (Rasmussen & Williams, 2006), spatio-temporal random effects models (Cressie et al., 2010), dynamic factor analysis models (Lopes et al., 2008; Fox & Dunson, 2015), spatial random effect models extended to incorporate time as an additional dimension (Zammit-Mangion & Cressie, 2017) (cf. related work section below). For many spatio-temporal applications, the model class should be capable of expressing temporal patterns that change across different spatial regions. Moreover, for streaming data scenarios, the learned parameter θ̂ and the resulting predictor ŷθ̂(s, t) should be updated in a sequential manner.\nOur contribution in this paper is two-fold:\n• we develop a non-stationary, localized covariance model capable of capturing temporal patterns that change across space, as illustrated in Figure 2 below.\n• we show how to sequentially learn the covariance model parameters and update the predictor from streaming spatio-temporal data, with a runtime that is linear in n.\nIn Section 2, we relate our work to already existing approaches and introduce a commonly used model class in Section 3. In Section 4 we develop a localized spatiotemporal covariance model to be used in conjunction with a covariance-fitting learning approach. Finally, the proposed method is evaluated using synthetic and real climate data in Sections 5 and 6, respectively.\nNotation: col{s1, s2} stacks both elements into a single column vector. ⊗, δ(·), ‖ · ‖W and † denote the Kronecker product, Kronecker delta function, weighted `2-norm and Moore-Penrose inverse, respectively. Finally, the sample mean is denoted by Ê[si] = 1n ∑n i=1 si."
  }, {
    "heading": "2. Related work",
    "text": "A popular model class is the family of GPs, specified by a mean and covariance function (Rasmussen & Williams, 2006). This approach is computationally prohibitive in its basic form since both learning the model parameters θ and implementing the predictor ŷθ(s, t) requires a runtime on the order of O(N3), where N is typically large in spatio-temporal applications. The predictor implementation can be approximated using various techniques. One popular approach is to approximate the training data using m N inducing points which reduces the runtime toO(m2N) (Quiñonero-Candela & Rasmussen, 2005; Bijl et al., 2015). Moreover, by assuming Kronecker covariance functions it is possible to obtain even shorter runtimes by utilizing the Kronecker structure of the GP covariance matrix (Saatçi, 2012). If the model class is restricted to stationary covariance functions, the runtimes can be reduced further, cf. (Saatçi, 2012; Wilson et al., 2014). In the spacetime domain, such models are also equivalent to dynamical system models so that ŷθ(s, t) can be approximated using a basis expansion and implemented by a Kalman smoother (Särkkä et al., 2013). In the above cases, however, θ and ŷθ(s, t) are not updated jointly when obtaining streaming data.\nThe restriction to stationary covariance models is, moreover, not always adequate to capture temporal patterns that differ across spatial regions. This modeling limitation is addressed by Cressie et al. (2010), where a discrete-time model class is partially specified using a spatial basis function expansion with time-varying expansion coefficients. These are modeled as a first-order vector auto-regressive process. The coefficients thus determine a spatial pattern of the process that evolves at each discrete time-instant. This model class can capture patterns localized to specific regions in space, unlike stationary covariance models. The predictor ŷθ(s, t) can be viewed as a spatial fixed-rank kriging method that is updated via a Kalman filter and thus applicable to streaming data (cf. Cressie & Johannesson (2008)). The model parameter θ, however, is learned us-\ning a moment-fitting approach and operates on batch rather than streaming datasets. Other work using dynamic factor analysis models (Lopes et al., 2008; Fox & Dunson, 2015) similarly allow for time-varying coefficients but with more flexible data-adaptive basis. However, they are implemented using Markov Chain Monte Carlo methods which are computationally prohibitive for the scenarios considered herein.\nMoreover, a first-order auto-regressive structure may not accurately capture more complex temporal patterns observed in real spatio-temporal processes. The approach taken by Zammit-Mangion & Cressie (2017) circumvents this limitation using basis functions that are localized in both space and time. Time locality cannot, however, capture periodic patterns or trends necessary for interpolation over longer periods. The model parameters are learned using an expectation-maximization method which is not readily applicable to streaming data scenarios."
  }, {
    "heading": "3. Spatio-temporal model class",
    "text": "We begin by defining the data vector y = col{y1, y2, . . . , yn} obtained from Dn. For the test point (s, t), we consider the unbiased predictor of y as a linear combination of the data (Stein, 2012):\nŷ(s, t) = λ>(s, t)y, (1)\nwhere λ>(s, t) is a vector of n weights which naturally depend on the test point (s, t). The weight vector is defined as the minimizer of the conditional mean square prediction error. That is,\nλ(s, t) , arg min λ\nE [ (y − λ>y)2 ∣∣ s, t ]. (2)\nSince the conditional error is determined by the unknown distribution p(y,y|s, t, s1, t1, . . . , sn, tn), we specify a class of data-generating models, using only the mean and covariance (Cressie & Wikle, 2011):{\nE[y] = u>(s, t)η, Cov[y, y′] = φ>(s, t)Θφ(s′, t′) + θ0δ(s, s ′)δ(t, t′).\n(3) The function u(s, t) captures the expected trend of the entire spatio-temporal process y, and when there is no such general trend we set u(s, t) ≡ 1. The function φ(s, t) captures the smoothness of the process in space-time and is of dimension p × 1. The parameter matrix Θ is diagonal and specifies the relevance of each dimension of φ(s, t) similar to the way in which automatic relevance determination is sometimes used within the GP (Tipping, 2001; Faul & Tipping, 2002). Taken together, (3) specifies a class of models, each of which is indexed by the parameters (η,Θ, θ0). The p+1 covariance parameters (Θ, θ0), which we collectively\ndenote by θ = col{θ0, θ1, . . . , θp} for notational convenience, determine the spatio-temporal covariance structure Covθ[y, y\n′] which depends on the function φ(s, t). In the next section, we will specify φ(s, t) to develop a suitable covariance model to capture local spatial and periodic temporal patterns.\nFor a given model in the class, the optimal weights (2) are given in closed form (Stein, 2012) as\nλθ(s, t) = K −11(1>K−11)† + K−1Π⊥ΦΘφ(s, t),\nwhere the subindex highlights the model parameter dependence. The quantities in λθ(s, t) are determined by the regressor matrix\nΦ = [ φ(s1, t1) . . . φ(sn, tn) ]> and the following covariance matrix\nKθ = Cov[y,y] = ΦΘΦ > + θ0I 0, (5)\nwith Π⊥ = I− 1(1>K−11)†1K−1 being an oblique projector onto span(1)⊥.\nThe optimal weights are invariant to the mean parameters ∼ η and to uniform scaling of the p + 1 covariance parameters θ. By learning θ up to an arbitrary scale factor, the predictor (1) is given by the linear combiner weights λθ(s, t). If we assume that the process is Gaussian, the model can be learned using the maximum likelihood framework. However, this yields neither a convex problem nor one that is readily solved in a sequential manner as Dn is augmented sequentially. In the next section, we apply a convex covariance-fitting framework to learn the spatiotemporal model using streaming data."
  }, {
    "heading": "4. Proposed method",
    "text": "Below we specify the function φ(s, t) in (3) such that the spatio-temporal covariance structure Covθ[y, y′] can express local spatial patterns with varying temporal periodicities as illustrated in Figure 2. Subsequently, we apply a covariance-fitting methodology for learning the model parameters such that the predictor (1) can be updated sequentially for each new observation (Zachariah et al., 2017)."
  }, {
    "heading": "4.1. Local-periodic space-time basis",
    "text": "The function φ(s, t) varies over a space-time domain S × T ⊂ Rd+1 and its elements can be thought of as basis functions. It is formulated as a Kronecker product of a time and space bases,\nφ(s, t) = ψ(t)⊗ϕ(s), (6)\nfor compactness.\nWe begin by specifying the spatial function as\nϕ(s) = ϕ1(s1)⊗ · · · ⊗ϕd(sd), (7)\nwhere the basis vector for the ith spatial dimension,\nϕi(si) = col{ ϕi,1(si), · · · , ϕi,Ns(si) } (8)\nis composed of Ns localized components with a finite support L. For notational simplicity, we consider Ns and L to be same for each dimension i. Based on their computational attractiveness and local approximation properties we use a cubic spline basis (Rasmussen & Williams, 2006; Wasserman, 2006). Then (8) is given by (4), where c determines the location of a component. Figure 3a illustrates the components as a function of its spatial dimension. We place the centers c of each component uniformly across the spatial dimensions.\nUsing ϕ(s) allows for covariance structures that are localized in space in such a way that neighbouring points have a nonnegative correlation and points far from each other have no correlation as determined by the support size L. Hence for a given L, the resulting covariance structure can capture local spatial patterns of a certain scale and can easily be extended to cover multiple scales by replacing (6) with for example\nφ(s, t) = ψ(t)⊗ [ ϕL1(s) ϕL2(s) ] that accommodates two different support sizes L1 and L2. The number of basis functions Ns is chosen such that adjacent localized components ϕi(s) have overlapping support to cater for points in between them. This requirement is\nϕ(s) =  1 6f(s) 3 (c−2)L 4 ≤ s < (c−1)L 4 −1 2 f(s) 3 + 2f(s)2 − 2f(s) + 23 (c−1)L 4 ≤ s < Lc 4 1 2f(s) 3 − 4f(s)2 + 10f(s)− 223 Lc 4 ≤ s < (c+1)L 4 −1 6 f(s) 3 + 2f(s)2 − 8f(s) + 323 (c+1)L 4 ≤ s ≤ (c+2)L 4\n0 otherwise\nwhere f(s) = 4s\nL −c+2\n(4)\nfulfilled by choosing Ns > RsL where Rs is the range of the spatial dimension. For example when Ns = 2RsL , the adjacent component ϕi(s) have 50 percent overlap. The maximum value of Ns is limited by the number of training points and the computational resources that are available.\nThe temporal function ψ(t) is also specified by a basis\nψ(t) = col{ ψ0(t), ψ1(t), . . . , ψNt(t) }. (9)\nHowever, to be able to predict missing data of the type illustrated in Figure 1 we cannot rely on a localized basis for extended interpolations over space-time. Due to its good approximating properties we instead apply the periodic basis developed by Solin & Särkkä (2014) defined over a range T = [0, Rt]:\nψk(t) =\n{ 1, k = 0,\n1√ Rt sin (kπ t+Rt2Rt ), otherwise, (10)\nSimilar to a Fourier basis, ψ(t) allows for periodic covariance structures that capture both fixed and periodic patterns in the data along time with different frequencies. Moreover, as Nt grows, any temporally stationary covariance structure can be captured, cf. (Solin & Särkkä, 2014). Using (10), the maximum frequency in the model is Nt4Rt . Hence,\ndepending on the data and the highest frequency periodic patterns we may expect in it, an appropriate value of Nt can be chosen.\nIn summary, the proposed spatio-temporal basis φ(s, t) in (6) is of dimension p = Nds (Nt+1) and yields a covariance function Covθ[y, y′] that may vary temporally with different frequencies specific to different spatial regions, as illustrated in Figure 2. The covariance structure is determined by the parameter θ, which we learn using a covariancefitting methodology considered next."
  }, {
    "heading": "4.2. Learning method for streaming data",
    "text": "We describe a covariance-fitting approach for learning the model parameter θ, up to an arbitrary scale factor, from streaming data. Given a training dataset Dn, this approach enables us to update the predictor ŷθ(s, t) = λ>θ (s, t)y from (1) in a streaming fashion as n = 1, 2, . . . . We consider fitting the model covariance structure of the training data y, which is parameterized by θ in (5), to the empirical structure. Let us first define a normalized sample covariance matrix of the training data,\nK̃ = (y − 1η)(y − 1η)>\n‖y − 1η‖2 .\nHere 1 corresponds to using u(s, t) ≡ 1. Then the optimal model parameters are given by a covariance-fitting criterion (cf. (Cressie, 1985; Anderson, 1989; Cressie & Johannesson, 2008; Stoica et al., 2011)) with minimizer:\nθ̂ = arg min θ ∥∥K̃−Kθ∥∥2K−1θ (11) Here the matrix norm corresponds to a weighted norm which penalizes correlated residuals. The learned parameter θ̂ is invariant with respect to the mean parameter η and can be rescaled by an arbitrary scale factor (Zachariah et al., 2017). Moreover, the resulting predictor corresponding to θ̂ in equation (1) can be written in the equivalent form:\nŷθ̂(s, t) ≡ α >(s, t)w? (12)\nwhere α(s, t) = col{1,φ(s, t)}. The (p + 1)-dimensional weight vector w? is defined as the minimizer\nw? = arg min w\n√ Ê [ |yi −α>(si, ti)w|2 ] +\n1√ N ‖ζ w‖1\n(13) where the elements of ζ are given by\nζj =\n{ 1√ N ‖[Φ]j−1‖2, j > 1,\n0, otherwise,\nFor proofs of these relations and a derivation of its computational properties, see Zachariah et al. (2017).\nThe resulting predictor in (12) is called the SPICE (sparse iterative covariance-based estimation) predictor. It is computed via a convex and sparsifying regularized minimization problem that can be solved using coordinate descent with recursively updated quantities at each new training point (sn, tn, yn). By exploiting this structure, our predictor ŷθ̂(s, t) can now be updated with streaming data as n = 1, 2, . . . . A pseudocode implementation is provided in Algorithm 1. The key recursively updated quantities passed from one update to the next are the symmetric matrix Γ and the vectors ρ and w̌ of dimension p+1 along with the scalar ∼ κ. Here w̌ is the weight vector at sample n− 1, which is initialized at zero along with the above variables in Algorithm 1. The runtime is linear in n and constant in memory. That is, for a fixed training data sizeN , the total runtime of the algorithm is on the order O(Np2) and its memory requirement is O(p2). For further details, we refer the reader to the supplementary material. Code available at github."
  }, {
    "heading": "5. Synthetic data",
    "text": "The proposed method has been derived for predictions using large and/or streaming data sets. We now demonstrate its predictive properties using synthetic data and for the sake of reference compare it with a GPR (Gaussian process regression) method using different covariance functions Cov[y, y′].\nAlgorithm 1 Learning from streaming datasets Input: (sn, tn, yn) and w̌ Γ := Γ +α(sn, tn)α\n>(sn, tn) ρ := ρ+α(sn, tn)yn κ := κ+ y2n := κ+ w̌>Γw̌ − 2w̌>ρ τ := ρ− Γw̌ repeat j = 1, . . . , p+ 1 cj := τj + Γjjw̌j if j = 1 then wj :=\ncj Γjj\nelse aj := + Γjjw̌ 2 j + 2w̌jτj\nŝj := sign(cj) r̂j := |cj | Γjj − 1Γjj\n√ ajΓjj−|cj |2\nn−1\nwj :=\n{ ŝj r̂j √ n− 1|cj | > √ ajΓjj − |cj |2\n0 otherwise end if := + Γjj(w̌j − w?j )2 + 2(w̌j − w?j )τj τ := τ + [Γ]j(w̌j − w?j )\nuntil number of iterations equal L Output: w? = w̌"
  }, {
    "heading": "5.1. Damped planar wave",
    "text": "To illustrate a dynamically evolving process, we consider planar a wave in one-dimensional space and time, cf. Figure 4a. The unknown process is generated according to:\ny(s, t) = cos\n( 2π\nλs (s− vst)\n) exp ( − s\n20\n) + ε, (14)\nwhere vs is the speed of the wave along space in units per second, λs is the wavelength in units of space and ε is a zero-mean white Gaussian process with standard deviation σ.\nNote that the process decays exponentially as it propagates through space. For our experiments, we set vs = 3 [spatial units/sec], λs = 9 [spatial units] and σ = 0.3. Synthetic data is generated over a uniform grid and a subset of N = 700 training points are used. Different contiguous space-time blocks are selected as test regions to resemble realistic scenarios in which the coverage of sensors, satellites or other measurement equipment is incomplete. For example, the dashed white boxes in Figure 4 emulate cases where data over a small region is missing most of the time. By contrast, the dashed black boxes correspond to cases when data over large spatial regions is missing some of the time.\nThe process in these test regions as well as at other randomly missing points is predicted using the proposed\nmethod with Nt = 25, Ns = 15 and a spatial basis support set to L = 5 spatial units. This results in φ(s, t) being of dimension p = Ns(Nt + 1) = 390. The mean-square error (MSE) of the prediction is shown in Figure 4b and evaluated using 25 Monte Carlo simulations. The region in the white box extends over almost the entire time dimension, hence there are very few neighbouring training points in time to draw upon for prediction and no information about the periodicities in the region. Instead our method leverages the neighbouring spatial information to obtain a good prediction resulting in a low MSE. Both black boxes are test regions that have neighbouring training points that provide temporal information about the process. However, left region has training points both before and after whereas the right region only has points before, yielding a more challenging prediction problem. Nevertheless, the proposed method is able to learn both the periodic and the local damping patterns to provide accurate predictions in both regions.\nWe include also the MSE of GPR using two different covariance functions learned by a numerical maximum likelihood search. While this method is not applicable to the streaming data of interest here, it provides a performance reference. First, we use a Matérn ARD covariance model (Rasmussen & Nickisch, 2010) to carefully adapt both space and time dimensions. In Figure 4c it is seen that the resulting prediction errors are markedly worse for the large missing spatial regions and the method naturally fails to capture the periodic pattern of the process. Next, we use a periodic Matérn ARD covariance model to also capture space-time periodicity. However, the MSE (Figure 4d) is degraded throughout, which is possibly due to the non-convex optimization problem used to learn the model parameters. It may lead to local minima issues, including learning erroneous periods."
  }, {
    "heading": "5.2. Varying seasonalities across space",
    "text": "Here we generate a process that emulates scenarios of temporal periodicities which may vary across spatial regions. This occurs e.g. in climate data. Figure 5a shows a realization of a process generated according to\ny(s, t) = cos\n( 2π\nT (s) t\n) + ε (15)\nwhere the period T (s) differs across space and ε is zeromean white Gaussian process with standard deviation σ = 0.3. In the upper region of the spatial domain T (s) = ∞, i.e., the process has a constant mean. In the middle and bottom regions T (s) is large and small, respectively. The data is generated over a uniform grid and a subset of N = 600 points is used for training. A contiguous space-time block, marked by the dashed black box in Figure 5, forms a test region to emulate scenarios where data can be missing\nover a large spatial region for some time.\nFor the proposed method we use Nt = 35, Ns = 15 and a support of L = 3 for the spatial basis, so that p = Ns(Nt + 1) = 540. For the GPR we use the periodic Matérn ARD kernel. Figures 5b and 5c show the MSE performance of the proposed method and GPR respectively which were obtained using 25 Monte Carlo simulations. The MSE of the proposed method is overall lower than that of GPR, both in the dashed test region as well as outside it. Unlike the proposed method, GPR has one parameter to fit to an overall periodic pattern and is thus unable to learn spatially localized patterns. Thus after learning, the process is predicted to be be nearly constant along time for all parts of the spatial region."
  }, {
    "heading": "6. Real data",
    "text": "We now demonstrate the proposed method for much larger, and possibly streaming, real-world datasets."
  }, {
    "heading": "6.1. Pacific Sea Surface Temperature",
    "text": "As a first application example, we use tropical pacific Sea Surface Temperature (SST) data (Wikle, 2011). These data represent gridded monthly SST anomalies, in ◦C, from January 1970 through March 2003 over a spatial region from 29◦S to 29◦N and 124◦E to 70◦W. The spatial resolution of the data is 2◦ in both latitude and longitude.\nHere we consider data from the first 36 months, making the total number of space-time data points equal to 36 × 2 520 = 90 720. In the first experiment, training points are sampled randomly across space-time and the missing data constitute the test points. Here we set N = 63 503 as the number of training points. For the proposed method we set Nt = 100, Ns = 8 and the spatial support L to be half of each spatial dimension. Then p = N2s (Nt+ 1) = 6 464. Figure 6a shows the prediction error histogram of all test points across the spatio-temporal domain. We see that it is centered around zero and its dispersion is considerably narrower than the dynamic range of the data.\nIn the second experiment, we select a contiguous spacetime block as a test region in addition to other test points to evaluate the performance in scenarios where data over entire spatial regions are missing for a period of time. Data falling within the spatial region marked by the black dashed box in Figure 6c is missing beyond month 26, as indicated by the black dashed line in Figure 6d. Here N = 18 144 are the number of training points. The prediction error histogram for this second experiment is shown in Figure 6b and remains fairly narrow. Figure 6c illustrates the predicted SST anomalies [◦C] for a spatial slice at month t = 30. We pick a spatial point in a region where the El Niño effect, i.e., the periodic warming of the equatorial Pa-\ncific Sea Surface (Sarachik & Cane, 2010), is known to be noticeable. The prediction of the SST anomalies at this spatial location across time along with the true SST is illustrated with Figure 6d. Note that the predictor is able to track the rising temperature deviation also for the missing data."
  }, {
    "heading": "6.2. Precipitation data",
    "text": "As a second application example, we use precipitation data from the Climate Research Unit (CRU) time series datasets of climate variations (Jones & Harris, 2013). The precipitation data consists of monthly rainfall in millimeter over a period from 1901 to 2012 obtained with high spatial resolution (0.5 by 0.5 degree) over the whole planet. Here we consider a five year period from 2001 to 2005 and between spatial coordinates 95◦W to 107◦W and 40◦N to 50◦N. This yields a total number of 28 800 data points.\nThe spatial region indicated by the black dashed box in Figure 7b beyond month t = 47, as seen in Figure 7c, constitutes a contiguous test region, in addition to other randomly selected test points. The remaining N = 14 400 points are used for training.\nFor the proposed method we set Nt = 300, Ns = 6 and the spatial support L to be half of each spatial dimension. Then p = N2s (Nt + 1) = 10 836. Figure 7a shows the\nprediction error histogram for the precipitation test data. It is centered around zero and its dispersion is narrower than the dynamic range of the data. Figure 7b shows the contour plot of predicted precipitation for a spatial slice at month t = 54. The red cross and plus marker indicate spatial points whose actual and predicted time series are compared in Figures 7c and 7d, respectively. Note that the estimated precipitation tracks the true precipitation well everywhere even to the right of the black dashed line where the data was not seen during training. Note the ability of the predictor to track the different seasonal patterns in the missing regions."
  }, {
    "heading": "7. Conclusion",
    "text": "We proposed a method in which a spatio-temporal predictor ŷθ̂(s, t) can be learned and updated sequentially as spatio-temporal data is obtained as a stream. It is capable of capturing spatially varying temporal patterns, using a non-stationary covariance model that is learned using a covariance-fitting approach. We demonstrated, using both simulated and real climate data, that it is capable of producing accurate predictions in large unobserved space-time test regions. In future work, we intend to further improve the computational efficiency of the method by exploiting the spatially localized structure of the covariance model.\n-2 -1.5 -1 -0.5 0 0.5 1 1.5 2\nPrediction error\n0\n500\n1000\n1500\n2000\n2500\nN u m\nb e\nr o\nf p o\nin ts\n(a)\n-2 -1.5 -1 -0.5 0 0.5 1 1.5 2\nPrediction error\n0\n100\n200\n300\n400\n500\n600\n700\n800\n900\nN u\nm b\ne r\no f\np o\nin ts\n(b)\n140 o E 160 o E 180 o E 160 o W 140 o W 120 o W 100 o W 80 o W\nLongitude\n25 o S\n20 o S\n15 o S\n10 o S\n5 o S\n0\n5 o N\n10 o N\n15 o N\n20 o N\n25 o N\nL a\nti tu\nd e\n-0.5\n0\n0.5\n1"
  }, {
    "heading": "8. Acknowledgements",
    "text": "NewLEADS - New Directions in Learning Dynamical Systems (contract number: 621-2016-06079), funded by the Swedish Research Council and the project ASSEMBLE (contract number: RIT15-0012), funded by the Swedish Foundation for Strategic Research (SSF)."
  }],
  "year": 2018,
  "references": [{
    "title": "Linear latent variable models and covariance structures",
    "authors": ["T.W. Anderson"],
    "venue": "Journal of Econometrics,",
    "year": 1989
  }, {
    "title": "Online sparse Gaussian process regression using FITC and PITC",
    "authors": ["H. Bijl", "van Wingerden", "J.-W", "T.B. Schön", "M. Verhaegen"],
    "venue": "approximations. IFAC-PapersOnLine,",
    "year": 2015
  }, {
    "title": "Fitting variogram models by weighted least squares",
    "authors": ["N. Cressie"],
    "venue": "Journal of the International Association for Mathematical Geology,",
    "year": 1985
  }, {
    "title": "Fixed rank kriging for very large spatial data sets",
    "authors": ["N. Cressie", "G. Johannesson"],
    "venue": "Journal of the Royal Statistical Society: Series B (Statistical Methodology),",
    "year": 2008
  }, {
    "title": "Statistics for spatio-temporal data",
    "authors": ["N. Cressie", "C.K. Wikle"],
    "year": 2011
  }, {
    "title": "Fixed rank filtering for spatio-temporal data",
    "authors": ["N. Cressie", "T. Shi", "E.L. Kang"],
    "venue": "Journal of Computational and Graphical Statistics,",
    "year": 2010
  }, {
    "title": "Analysis of sparse Bayesian learning",
    "authors": ["A.C. Faul", "M.E. Tipping"],
    "venue": "In Advances in neural information processing systems,",
    "year": 2002
  }, {
    "title": "Bayesian nonparametric covariance regression",
    "authors": ["E.B. Fox", "D.B. Dunson"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2015
  }, {
    "title": "Climatic research unit (CRU) timeseries (ts) version 3.21 of high resolution gridded data of month-by-month variation in climate (jan",
    "authors": ["P. Jones", "I. Harris"],
    "venue": "NCAS British Atmospheric Data Centre,",
    "year": 1901
  }, {
    "title": "Spatial dynamic factor analysis",
    "authors": ["H.F. Lopes", "E. Salazar", "D. Gamerman"],
    "venue": "Bayesian Analysis,",
    "year": 2008
  }, {
    "title": "A unifying view of sparse approximate Gaussian process regression",
    "authors": ["J. Quiñonero-Candela", "C.E. Rasmussen"],
    "venue": "Journal of Machine Learning Research,",
    "year": 1959
  }, {
    "title": "Gaussian processes for machine learning (gpml) toolbox",
    "authors": ["C.E. Rasmussen", "H. Nickisch"],
    "venue": "Journal of Machine Learning Research,",
    "year": 2010
  }, {
    "title": "Gaussian processes for machine learning, volume 1",
    "authors": ["C.E. Rasmussen", "C. Williams"],
    "venue": "MIT press Cambridge,",
    "year": 2006
  }, {
    "title": "Scalable inference for structured Gaussian process models",
    "authors": ["Y. Saatçi"],
    "venue": "PhD thesis, Citeseer,",
    "year": 2012
  }, {
    "title": "The El Nino-southern oscillation phenomenon",
    "authors": ["E.S. Sarachik", "M.A. Cane"],
    "year": 2010
  }, {
    "title": "Spatiotemporal learning via infinite-dimensional Bayesian filtering and smoothing: A look at Gaussian process regression through Kalman filtering",
    "authors": ["S. Särkkä", "A. Solin", "J. Hartikainen"],
    "venue": "IEEE Signal Processing Magazine,",
    "year": 2013
  }, {
    "title": "Hilbert space methods for reduced-rank Gaussian process regression",
    "authors": ["A. Solin", "S. Särkkä"],
    "venue": "arXiv preprint arXiv:1401.5508,",
    "year": 2014
  }, {
    "title": "Interpolation of spatial data: some theory for kriging",
    "authors": ["M.L. Stein"],
    "venue": "Springer Science & Business Media,",
    "year": 2012
  }, {
    "title": "New method of sparse parameter estimation in separable models and its use for spectral analysis of irregularly sampled data",
    "authors": ["P. Stoica", "P. Babu", "J. Li"],
    "venue": "IEEE Trans. Signal Processing,",
    "year": 2011
  }, {
    "title": "Sparse Bayesian learning and the relevance vector machine",
    "authors": ["M.E. Tipping"],
    "venue": "Journal of machine learning research,",
    "year": 2001
  }, {
    "title": "Sea surface temperature anomaly",
    "authors": ["C.K. Wikle"],
    "year": 2011
  }, {
    "title": "Online learning for distribution-free prediction",
    "authors": ["D. Zachariah", "P. Stoica", "T.B. Schön"],
    "venue": "arXiv preprint arXiv:1703.05060,",
    "year": 2017
  }, {
    "title": "FRK: An R package for spatial and spatio-temporal prediction with large datasets",
    "authors": ["A. Zammit-Mangion", "N. Cressie"],
    "venue": "arXiv preprint arXiv:1705.08105,",
    "year": 2017
  }],
  "id": "SP:1c7b01eef2126baf50ec3ab46aa07eb92dfde2c6",
  "authors": [{
    "name": "Muhammad Osama",
    "affiliations": []
  }, {
    "name": "Dave Zachariah",
    "affiliations": []
  }, {
    "name": "Thomas Schön",
    "affiliations": []
  }],
  "abstractText": "We address the problem of predicting spatiotemporal processes with temporal patterns that vary across spatial regions, when data is obtained as a stream. That is, when the training dataset is augmented sequentially. Specifically, we develop a localized spatio-temporal covariance model of the process that can capture spatially varying temporal periodicities in the data. We then apply a covariance-fitting methodology to learn the model parameters which yields a predictor that can be updated sequentially with each new data point. The proposed method is evaluated using both synthetic and real climate data which demonstrate its ability to accurately predict data missing in spatial regions over time.",
  "title": "Learning Localized Spatio-Temporal Models From Streaming Data"
}