{
  "sections": [{
    "text": "Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 35–45 Copenhagen, Denmark, September 7–11, 2017. c©2017 Association for Computational Linguistics"
  }, {
    "heading": "1 Introduction",
    "text": "A basic but highly important challenge in natural language understanding is being able to populate a knowledge base with relational facts contained in a piece of text. For the text shown in Figure 1, the system should extract triples, or equivalently, knowledge graph edges, such as hPenner, per:spouse, Lisa Dillmani. Combining such extractions, a system can produce a knowledge graph of relational facts between persons, organizations, and locations in the text. This task involves entity recognition, mention coreference and/or entity linking, and relation extraction; we focus on the\nmost challenging “slot filling” task of filling in the relations between entities in the text.\nOrganized relational knowledge in the form of “knowledge graphs” has become an important knowledge resource. These graphs are now extensively used by search engine companies, both to provide information to end-users and internally to the system, as a way to understand relationships. However, up until now, automatic knowledge extraction has proven sufficiently difficult that most of the facts in these knowledge graphs have been built up by hand. It is therefore a key challenge to show that NLP technology can effectively contribute to this important problem.\nExisting work on relation extraction (e.g., Zelenko et al., 2003; Mintz et al., 2009; Adel et al., 2016) has been unable to achieve sufficient recall or precision for the results to be usable versus hand-constructed knowledge bases. Supervised training data has been scarce and, while techniques like distant supervision appear to be a promising way to extend knowledge bases at low cost, in practice the training data has often been too noisy for reliable training of relation extraction systems (Angeli et al., 2015). As a result most systems fail to make correct extractions even in apparently straightforward cases like Figure 1,\n35\nwhere the best system at the NIST TAC Knowledge Base Population (TAC KBP) 2015 evaluation failed to recognize the relation between Penner and Dillman.1 Consequently most automatic systems continue to make heavy use of hand-written rules or patterns because it has been hard for machine learning systems to achieve adequate precision or to generalize as well across text types. We believe machine learning approaches have suffered from two key problems: (1) the models used have been insufficiently tailored to relation extraction, and (2) there has been insufficient annotated data available to satisfy the training of data-hungry models, such as deep learning models.\nThis work addresses both of these problems. We propose a new, effective neural network sequence model for relation classification. Its architecture is better customized for the slot filling task: the word representations are augmented by extra distributed representations of word position relative to the subject and object of the putative relation. This means that the neural attention model can effectively exploit the combination of semantic similarity-based attention and positionbased attention. Secondly, we markedly improve the availability of supervised training data by using Mechanical Turk crowd annotation to produce a large supervised training dataset (Table 1), suitable for the common relations between people, organizations and locations which are used in the TAC KBP evaluations. We name this dataset the TAC Relation Extraction Dataset (TACRED), and will make it available through the Linguistic Data Consortium (LDC) in order to respect copyrights on the underlying text.\nCombining these two gives a system with markedly better slot filling performance. This is\n1Note: former spouses count as spouses in the ontology.\nshown not only for a relation classification task on the crowd-annotated data but also for the incorporation of the resulting classifiers into a complete cold start knowledge base population system. On TACRED, our system achieves a relation classification F1 score that is 7.9% higher than that of a strong feature-based classifier, and 3.5% higher than that of the best previous neural architecture that we re-implemented. When this model is used in concert with a pattern-based system on the TAC KBP 2015 Cold Start Slot Filling evaluation data, the system achieves an F1 score of 26.7%, which exceeds the previous state-of-the-art by 4.5% absolute. While this performance certainly does not solve the knowledge base population problem – achieving sufficient recall remains a formidable challenge – this is nevertheless notable progress."
  }, {
    "heading": "2 A Position-aware Neural Sequence Model Suitable for Relation Extraction",
    "text": "Existing work on neural relation extraction (e.g., Zeng et al., 2014; Nguyen and Grishman, 2015; Zhou et al., 2016) has focused on convolutional neural networks (CNNs), recurrent neural networks (RNNs), or their combination. While these models generally work well on the datasets they are tested on, as we will show, they often fail to generalize to the longer sentences that are common in real-world text (such as in TAC KBP).\nWe believe that existing model architectures suffer from two problems: (1) Although modern sequence models such as Long Short-Term Memory (LSTM) networks have gating mechanisms to control the relative influence of each individual word to the final sentence representation (Hochreiter and Schmidhuber, 1997), these controls are not explicitly conditioned on the entire sentence being classified; (2) Most existing work either\ndoes not explicitly model the positions of entities (i.e., subject and object) in the sequence, or models the positions only within a local region.\nHere, we propose a new neural sequence model with a position-aware attention mechanism over an LSTM network to tackle these challenges. This model can (1) evaluate the relative contribution of each word after seeing the entire sequence, and (2) base this evaluation not only on the semantic information of the sequence, but also on the global positions of the entities within the sequence.\nWe formalize the relation extraction task as follows: Let X = [x1, ..., xn] denote a sentence, where xi is the i-th token. A subject entity s and an object entity o are identified in the sentence, corresponding to two non-overlapping consecutive spans: Xs = [xs1 , xs1+1, . . . , xs2 ] and Xo = [xo1 , xo1+1, . . . , xo2 ]. Given the sentence X and the positions of s and o, the goal is to predict a relation r 2 R (R is the set of relations) that holds between s and o or no relation otherwise.\nInspired by the position encoding vectors used in Collobert et al. (2011) and Zeng et al. (2014), we define a position sequence relative to the subject entity [ps1, ..., p s n], where\npsi = 8><>: i s1, i < s1 0, s1  i  s2 i s2, i > s2\n(1)\nHere s1, s2 are the starting and ending indices of the subject entity respectively, and psi 2 Z can be viewed as the relative distance of token xi to the subject entity. Similarly, we obtain a position sequence [po1, ..., p o n] relative to the object entities.\nLet x = [x1, ...,xn] be word embeddings of the sentence, obtained using an embedding matrix E. Similarly, we obtain position embedding vectors ps = [ps1, ...,p s n] and p o = [po1, ...,p o n] using a shared position embedding matrix P respectively. Next, as shown in Figure 2, we obtain hidden state representations of the sentence by feeding x into an LSTM:\n{h1, ...,hn} = LSTM({x1, ...,xn}) (2)\nWe define a summary vector q = hn (i.e., the output state of the LSTM). This summary vector encodes information about the entire sentence. Then for each hidden state hi, we calculate an attention weight ai as:\nui = v> tanh(Whhi + Wqq+\nWspsi + Wop o i ) (3)\nai = exp(ui)Pn\nj=1 exp(uj) (4)\nHere Wh,Wq 2 Rda⇥d, Ws,Wo 2 Rda⇥dp and v 2 Rda are learnable parameters of the network, where d is the dimension of hidden states, dp is the dimension of position embeddings, and da is the size of attention layer. Additional parameters of the network include embedding matrices E 2 R|V|⇥d and P 2 R(2L 1)⇥dp , where V is the vocabulary and L is the maximum sentence length.\nWe regard attention weight ai as the relative contribution of the specific word to the sentence representation. The final sentence representation z is computed as:\nz = Xn\ni=1 aihi (5)\nz is later fed into a fully-connected layer followed by a softmax layer for relation classification.\nNote that our model significantly differs from the attention mechanism in Bahdanau et al. (2015) and Zhou et al. (2016) in our use of the summary vector and position embeddings, and the way our attention weights are computed. An intuitive way to understand the model is to view the attention calculation as a selection process, where the goal is to select relevant contexts over irrelevant ones.\nHere the summary vector (q) helps the model to base this selection on the semantic information of the entire sentence (rather than on each word only), while the position vectors (psi and p o i ) provides important spatial information between each word and the entities."
  }, {
    "heading": "3 The TAC Relation Extraction Dataset",
    "text": "Previous research has shown that slot filling systems can greatly benefit from supervised data. For example, Angeli et al. (2014b) showed that even a small amount of supervised data can boost the end-to-end F1 score by 3.9% on the TAC KBP tasks. However, existing relation extraction datasets such as the SemEval-2010 Task 8 dataset (Hendrickx et al., 2009) and the Automatic Content Extraction (ACE) (Strassel et al., 2008) dataset are less useful for this purpose. This is mainly because: (1) these datasets are relatively small for effectively training high-capacity models (see Table 2), and (2) they capture very different types of relations. For example, the SemEval dataset focuses on semantic relations (e.g., CauseEffect, Component-Whole) between two nominals.\nOne can further argue that it is easy to obtain a large amount of training data using distant supervision (Mintz et al., 2009). In practice, however, due to the large amount of noise in the induced data, training relation extractors that perform well becomes very difficult. For example, Riedel et al. (2010) show that up to 31% of the distantly supervised labels are wrong when creating training data from aligning Freebase to newswire text.\nTo tackle these challenges, we collect a large supervised dataset TACRED, targeted towards the TAC KBP relations.\nData collection. We create TACRED based on query entities and annotated system responses in the yearly TAC KBP evaluations. In each year of the TAC KBP evaluation (2009–2015), 100 entities (people or organizations) are given as queries,\nfor which participating systems should find associated relations and object entities. We make use of Mechanical Turk to annotate each sentence in the source corpus that contains one of these query entities. For each sentence, we ask crowd workers to annotate both the subject and object entity spans and the relation types.\nDataset stratification. In total we collect 119,474 examples. We stratify TACRED across years in which the TAC KBP challenge was run, and use examples corresponding to query entities from 2009 to 2012 as training split, 2013 as development split, and 2014 as test split. We reserve the TAC KBP 2015 evaluation data for running slot filling evaluations, as presented in Section 4. Detailed statistics are given in Table 3.\nDiscussion. Table 1 presents sampled examples from TACRED. Compared to existing datasets, TACRED has four advantages. First, it contains an order of magnitude more relation instances (Table 2), enabling the training of expressive models. Second, we reuse the entity and relation types of the TAC KBP tasks. We believe these relation types are of more interest to downstream applications. Third, we fully annotate all negative instances that appear in our data collection process, to ensure that models trained on TACRED are not biased towards predicting false positives on realworld text. Lastly, the average sentence length in TACRED is 36.2, compared to 19.1 in the SemEval dataset, reflecting the complexity of contexts in which relations occur in real-world text.\nDue to space constraints, we describe the data collection and validation process, system interfaces, and more statistics and examples of TACRED in the supplementary material. We will make TACRED publicly available through the LDC."
  }, {
    "heading": "4 Experiments",
    "text": "In this section we evaluate the effectiveness of our proposed model and TACRED on improving slot\nfilling systems. Specifically, we run two sets of experiments: (1) we evaluate model performance on the relation extraction task using TACRED, and (2) we evaluate model performance on the TAC KBP 2015 cold start slot filling task, by training the models on TACRED."
  }, {
    "heading": "4.1 Baseline Models",
    "text": "We compare our model against the following baseline models for relation extraction and slot filling:\nTAC KBP 2015 winning system. To judge our proposed model against a strong baseline, we compare against Stanford’s top performing system on the TAC KBP 2015 cold start slot filling task (Angeli et al., 2015). At the core of this system are two relation extractors: a pattern-based extractor and a logistic regression (LR) classifier. The pattern-based system uses a total of 4,528 surface patterns and 169 dependency patterns. The logistic regression model was trained on approximately 2 million bootstrapped examples (using a small annotated dataset and high-precision pattern system output) that are carefully tuned for TAC KBP slot filling evaluation. It uses a comprehensive feature set similar to the MIML-RE system for relation extraction (Surdeanu et al., 2012), including lemmatized n-grams, sequence NER tags and POS tags, positions of entities, and various features over dependency paths, etc.\nConvolutional neural networks. We follow the 1-dimensional CNN architecture by Nguyen and Grishman (2015) for relation extraction. This model learns a representation of the input sentence, by first running a series of convolutional operations on the sentence with various filters, and then feeding the output into a max-pooling layer to reduce the dimension. The resulting representation is then fed into a fully-connected layer followed by a softmax layer for relation classification. As an extension, positional embeddings are also introduced into this model to better capture the relative position of each word to the subject and object entities and were shown to achieve improved results. We use “CNN-PE” to represent the CNN model with positional embeddings.\nDependency-based recurrent neural networks. In dependency-based neural models, shortest dependency paths between entities are often used as input to the neural networks. The intuition is to eliminate tokens that are potentially less relevant\nto the classification of the relation. For the example in Figure 1, the shortest dependency path between the two entities is:\n[Penner] survived! brother ! wife! [Lisa Dillman]\nWe follow the SDP-LSTM model proposed by Xu et al. (2015b). In this model, each shortest dependency path is divided into two separate sub-paths from the subject entity and the object entity to the lowest common ancestor node. Each sub-path is fed into an LSTM network, and the resulting hidden units at each word position are passed into a max-over-time pooling layer to form the output of this sub-path. Outputs from the two sub-paths are then concatenated to form the final representation.\nIn addition to the above models, we also compare our proposed model against an LSTM sequence model without attention mechanism."
  }, {
    "heading": "4.2 Implementation Details",
    "text": "We map words that occur less than 2 times in the training set to a special <UNK> token. We use the pre-trained GloVe vectors (Pennington et al., 2014) to initialize word embeddings. For all the LSTM layers, we find that 2-layer stacked LSTMs generally work better than one-layer LSTMs. We minimize cross-entropy loss over all 42 relations using AdaGrad (Duchi et al., 2011). We apply Dropout with p = 0.5 to CNNs and LSTMs. During training we also find a word dropout strategy to be very effective: we randomly set a token to be <UNK> with a probability p. We set p to be 0.06 for the SDP-LSTM model and 0.04 for all other models.\nEntity masking. We replace each subject entity in the original sentence with a special <NER>SUBJ token where <NER> is the corresponding NER signature of the subject as provided in TACRED. We do the same processing for object entities. This processing step helps (1) provide a model with entity type information, and (2) prevent a model from overfitting its predictions to specific entities.\nMulti-channel augmentation. Instead of using only word vectors as input to the network, we augment the input with part-of-speech (POS) and named entity recognition (NER) embeddings. We run Stanford CoreNLP (Manning et al., 2014) to obtain the POS and NER annotations.\nWe describe our model hyperparameters and training in detail in the supplementary material."
  }, {
    "heading": "4.3 Evaluation on TACRED",
    "text": "We first evaluate all models on TACRED. We train each model for 5 separate runs with independent random initializations. For each run we perform early stopping using the dev set. We then select the run (among 5) that achieves the median F1 score on the dev set, and report its test set performance.\nTable 4 summarizes our results. We observe that all neural models achieve higher F1 scores than the logistic regression and patterns systems, which demonstrates the effectiveness of neural models for relation extraction. Although positional embeddings help increase the F1 by around 2% over the plain CNN model, a simple (2-layer) LSTM model performs surprisingly better than CNN and dependency-based models. Lastly, our proposed position-aware mechanism is very effective and achieves an F1 score of 65.4%, with an absolute increase of 3.9% over the best baseline neural model (LSTM) and 7.9% over the baseline logistic regression system. We also run an ensemble of our position-aware attention model which takes majority votes from 5 runs with random initializations and it further pushes the F1 score up by 1.6%.\nWe find that different neural architectures show a different balance between precision and recall. CNN-based models tend to have higher precision; RNN-based models have better recall. This can be explained by noting that the filters in CNNs are essentially a form of “fuzzy n-gram patterns”."
  }, {
    "heading": "4.4 Evaluation on TAC KBP Slot Filling",
    "text": "Second, we evaluate the slot filling performance of all models using the TAC KBP 2015 cold start slot filling task (Ellis et al., 2015). In this task, about 50k newswire and Web forum documents are selected as the evaluation corpus. A slot filling system is asked to answer a series of queries with two-hop slots (Figure 3): The first slot asks about fillers of a relation with the query entity as the subject (Mike Penner), and we term this a hop-0 slot; the second slot asks about fillers with the system’s hop-0 output as the subject, and we term this a hop-1 slot. System predictions are then evaluated against gold annotations, and micro-averaged precision, recall and F1 scores are calculated at the hop-0 and hop-1 levels. Lastly hop-all scores are calculated by combining hop-0 and hop-1 scores.2\nEvaluating relation extraction systems on slot filling is particularly challenging in that: (1) Endto-end cold start slot filling scores conflate the performance of all modules in the system (i.e., entity recognizer, entity linker and relation extractor). (2) Errors in hop-0 predictions can easily propagate to hop-1 predictions. To fairly evaluate each relation extraction model on this task, we use Stanford’s 2015 slot filling system as our basic pipeline.3 It is a very strong baseline specifically tuned for TAC KBP evaluation and ranked top in the 2015 evaluation. We then plug in the corresponding relation extractor trained on TACRED, keeping all other modules unchanged.\nTable 5 presents our results. We find that: (1) by only training our logistic regression model on TACRED (in contrast to on the 2 million bootstrapped examples used in the 2015 Stanford system) and combining it with patterns, we obtain a higher hop-0 F1 score than the 2015 Stanford sys-\n2In the TAC KBP cold start slot filling evaluation, a hop-1 slot is transferred to a pseudo-slot which is treated equally as a hop-0 slot. Hop-all precision, recall and F1 are then calculated by combining these pseudo-slot predictions and hop-0 predictions.\n3This system uses the fine-grained NER system in Stanford CoreNLP (Manning et al., 2014) for entity detection and the Illinois Wikifier (Ratinov et al., 2011) for entity linking.\ntem, and a similar hop-all F1; (2) our proposed position-aware attention model substantially outperforms the 2015 Stanford system on all hop-0, hop-1 and hop-all F1 scores. Combining it with the patterns, we achieve a hop-all F1 of 26.7%, an absolute improvement of 4.5% over the previous state-of-the-art result."
  }, {
    "heading": "4.5 Analysis",
    "text": "Model ablation. Table 6 presents the results of an ablation test of our position-aware attention model on the development set of TACRED. The entire attention mechanism contributes about 1.5% F1, where the position-aware term in Eq. (3) alone contributes about 1% F1 score.\nImpact of negative examples. Figure 4 shows how the slot filling evaluation scores change as we change the amount of negative (i.e., no relation) training data provided to our proposed model. We find that: (1) At hop-0 level, precision increases as we provide more negative examples, while recall stays almost unchanged. F1 score keeps increasing. (2) At hop-all level, F1 score increases by\nabout 10% as we change the amount of negative examples from 20% to 100%.\nPerformance by sentence length. Figure 5 shows performance on varying sentence lengths. We find that: (1) Performance of all models degrades substantially as the sentences get longer. (2) Compared to the baseline Logistic Regression model, all neural models handle long sentences better. (3) Compared to CNN-PE model, RNNbased models are more robust on long sentences, and notably SDP-LSTM model is least sensitive to sentence length. (4) Our proposed model achieves equal or better results on sentences of all lengths, except for sentences with more than 60 tokens where SDP-LSTM model achieves the best result.\nImprovement by slot types. We calculate the F1 score for each slot type and compare the improvement from using our proposed model across slot types. When compared with the CNN-PE model, our position-aware attention model achieves improved F1 scores on 30 out of the 41 slot types, with the top 5 slot types being org:members, per:country of death, org:shareholders, per:children and per:religion. When compared with SDP-LSTM model, our model achieves improved F1 scores on 26 out of the 41 slot types, with the top 5 slot types being org:political/religious affiliation, per:country of death, org:alternate names, per:religion and per:alternate names. We observe that slot types with relatively sparse training examples tend to be improved by using the position-aware attention model.\nAttention visualization. Lastly, Figure 6 shows the visualization of attention weights assigned by our model on sampled sentences from the development set. We find that the model learns to pay more attention to words that are informative for the relation (e.g., “graduated from”, “niece” and “chairman”), though it still makes mistakes (e.g., “refused to name the three”). We also observe that the model tends to put a lot of weight onto object entities, as the object NER signatures are very informative to the classification of relations."
  }, {
    "heading": "5 Related Work",
    "text": "Relation extraction. There are broadly three main lines of work on relation extraction: first, fully-supervised approaches (Zelenko et al., 2003; Bunescu and Mooney, 2005), where a statisti-\ncal classifier is trained on an annotated dataset; second, distant supervision (Mintz et al., 2009; Surdeanu et al., 2012), where a training set is formed by projecting the relations in an existing knowledge base onto textual instances that contain the entities that the relation connects; and third, Open IE (Fader et al., 2011; Mausam et al., 2012), which views its goal as producing subject-relationobject triples and expressing the relation in text.\nSlot filling and knowledge base population. The most widely-known effort to evaluate slot filling and KBP systems is the yearly TAC KBP slot filling tasks, starting from 2009 (McNamee and Dang, 2009). Participants in slot filling tasks usually make use of hybrid systems that combine patterns, Open IE, distant supervision and supervised systems for relation extraction (Kisiel et al., 2015; Finin et al., 2015; Zhang et al., 2016).\nDatasets for relation extraction. Popular general-domain datasets include the ACE dataset (Strassel et al., 2008) and the SemEval-2010 task 8 dataset (Hendrickx et al., 2009). In addition, the BioNLP Shared Tasks (Kim et al., 2009) are yearly efforts on creating datasets and evaluations for biomedical information extraction systems.\nDeep learning models for relation extraction. Many deep learning models have been proposed for relation extraction, with a focus on end-to-end training using CNNs (Zeng et al., 2014; Nguyen and Grishman, 2015) and RNNs (Zhang et al., 2015). Other popular approaches include using CNN or RNN over dependency paths between entities (Xu et al., 2015a,b), augmenting RNNs with different components (Xu et al., 2016; Zhou et al., 2016), and combining RNNs and CNNs (Vu et al., 2016; Wang et al., 2016). Adel et al. (2016) compares the performance of CNN models against traditional approaches on slot filling using a portion of the TAC KBP evaluation data."
  }, {
    "heading": "6 Conclusion",
    "text": "We introduce a state-of-the-art position-aware neural sequence model for relation extraction, as well as TACRED, a large-scale, crowd-sourced dataset that is orders of magnitude larger than previous relation extraction datasets. Our proposed model outperforms a strong feature-based classifier and all baseline neural models. In combination with the new dataset, it improves the state-of-the-\nart hop-all F1 on the TAC KBP 2015 slot filling task by 4.5% absolute."
  }, {
    "heading": "Acknowledgments",
    "text": "We thank the anonymous reviewers for their helpful suggestions. We gratefully acknowledge the support of the Allen Institute for Artificial Intelligence and the support of the Defense Advanced Research Projects Agency (DARPA) Deep Exploration and Filtering of Text (DEFT) Program under Air Force Research Laboratory (AFRL) contract No. FA8750-13-2-0040. Any opinions, findings, and conclusion or recommendations expressed in this material are those of the authors and do not necessarily reflect the view of the DARPA, AFRL, or the US government."
  }],
  "year": 2017,
  "references": [{
    "title": "Comparing convolutional neural networks to traditional models for slot filling",
    "authors": ["Heike Adel", "Benjamin Roth", "Hinrich Schütze."],
    "venue": "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics",
    "year": 2016
  }, {
    "title": "Stanford’s distantly supervised slot filling systems for KBP 2014",
    "authors": ["Gabor Angeli", "Sonal Gupta", "Melvin Johnson Premkumar", "Christopher D. Manning", "Christopher Ré", "Julie Tibshirani", "Jean Y. Wu", "Sen Wu", "Ce Zhang."],
    "venue": "Text Analysis Conference",
    "year": 2014
  }, {
    "title": "Combining distant and partial supervision for relation extraction",
    "authors": ["Gabor Angeli", "Julie Tibshirani", "Jean Y. Wu", "Christopher D. Manning."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP",
    "year": 2014
  }, {
    "title": "Bootstrapped self training for knowledge base population",
    "authors": ["Manning."],
    "venue": "Text Analysis Conference (TAC) Proceedings 2015.",
    "year": 2015
  }, {
    "title": "Neural machine translation by jointly learning to align and translate",
    "authors": ["Dzmitry Bahdanau", "Kyunghyun Cho", "Yoshua Bengio."],
    "venue": "International Conference on Learning Representations (ICLR).",
    "year": 2015
  }, {
    "title": "A shortest path dependency kernel for relation extraction",
    "authors": ["Razvan C Bunescu", "Raymond J Mooney."],
    "venue": "Proceedings of the Conference on Human Language Technology and Empirical Methods in Natural Language Processing (EMNLP 2005),",
    "year": 2005
  }, {
    "title": "Entity-centric coreference resolution with model stacking",
    "authors": ["Kevin Clark", "Christopher D. Manning."],
    "venue": "Proceedings of the 53th Annual Meeting of the Association for Computational Linguistics (ACL 2015).",
    "year": 2015
  }, {
    "title": "Natural language processing (almost) from scratch",
    "authors": ["Ronan Collobert", "Jason Weston", "Léon Bottou", "Michael Karlen", "Koray Kavukcuoglu", "Pavel Kuksa."],
    "venue": "Journal of Machine Learning Research, 12(Aug):2493–2537.",
    "year": 2011
  }, {
    "title": "Adaptive subgradient methods for online learning and stochastic optimization",
    "authors": ["John Duchi", "Elad Hazan", "Yoram Singer."],
    "venue": "Journal of Machine Learning Research, 12(Jul):2121–2159.",
    "year": 2011
  }, {
    "title": "Overview of linguistic resources for the TAC KBP 2015 evaluations: Methodologies and results",
    "authors": ["Joe Ellis", "Jeremy Getman", "Dana Fore", "Neil Kuster", "Zhiyi Song", "Ann Bies", "Stephanie Strassel."],
    "venue": "Text Analysis Conference (TAC) Proceedings 2015,",
    "year": 2015
  }, {
    "title": "Identifying relations for open information extraction",
    "authors": ["Anthony Fader", "Stephen Soderland", "Oren Etzioni."],
    "venue": "Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing (EMNLP 2011), pages 1535–1545.",
    "year": 2011
  }, {
    "title": "Semeval-2010 task 8: Multi-way classification of semantic relations",
    "authors": ["Iris Hendrickx", "Su Nam Kim", "Zornitsa Kozareva", "Preslav Nakov", "Diarmuid Ó Séaghdha", "Sebastian Padó", "Marco Pennacchiotti", "Lorenza Romano", "Stan Szpakowicz"],
    "year": 2009
  }, {
    "title": "Long short-term memory",
    "authors": ["Sepp Hochreiter", "Jürgen Schmidhuber."],
    "venue": "Neural computation, 9(8):1735–1780.",
    "year": 1997
  }, {
    "title": "Overview of BioNLP’09 shared task on event extraction",
    "authors": ["Jin-Dong Kim", "Tomoko Ohta", "Sampo Pyysalo", "Yoshinobu Kano", "Jun’ichi Tsujii"],
    "venue": "In Proceedings of the Workshop on Current Trends",
    "year": 2009
  }, {
    "title": "CMUML System for KBP 2015 cold start slot filling",
    "authors": ["Bryan Kisiel", "Bill McDowell", "Matt Gardner", "Ndapandula Nakashole", "Emmanouil A Platanios", "Abulhair Saparov", "Shashank Srivastava", "Derry Wijaya", "Tom Mitchell."],
    "venue": "Text Analysis Con-",
    "year": 2015
  }, {
    "title": "The Stanford CoreNLP natural language processing toolkit",
    "authors": ["Christopher D. Manning", "Mihai Surdeanu", "John Bauer", "Jenny Finkel", "Steven J. Bethard", "David McClosky."],
    "venue": "Association for Computational Linguistics (ACL) System Demonstrations,",
    "year": 2014
  }, {
    "title": "Open language learning for information extraction",
    "authors": ["Mausam", "Michael Schmitz", "Robert Bart", "Stephen Soderland", "Oren Etzioni."],
    "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational",
    "year": 2012
  }, {
    "title": "Overview of the TAC 2009 knowledge base population track",
    "authors": ["Paul McNamee", "Hoa Trang Dang."],
    "venue": "Text Analysis Conference (TAC) Proceedings 2009, volume 17, pages 111–113.",
    "year": 2009
  }, {
    "title": "Distant supervision for relation extraction without labeled data",
    "authors": ["Mike Mintz", "Steven Bills", "Rion Snow", "Dan Jurafsky."],
    "venue": "Proceedings of the Joint Conference of the 47th Annual Meeting of the ACL and the 4th International Joint Conference on",
    "year": 2009
  }, {
    "title": "Relation extraction: Perspective from convolutional neural networks",
    "authors": ["Thien Huu Nguyen", "Ralph Grishman."],
    "venue": "Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics on Human Lan-",
    "year": 2015
  }, {
    "title": "GloVe: Global vectors for word representation",
    "authors": ["Jeffrey Pennington", "Richard Socher", "Christopher D Manning."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP 2014), volume 14, pages 1532–",
    "year": 2014
  }, {
    "title": "Local and global algorithms for disambiguation to Wikipedia",
    "authors": ["Lev Ratinov", "Dan Roth", "Doug Downey", "Mike Anderson."],
    "venue": "Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technolo-",
    "year": 2011
  }, {
    "title": "Modeling relations and their mentions without labeled text",
    "authors": ["Sebastian Riedel", "Limin Yao", "Andrew McCallum."],
    "venue": "Machine learning and knowledge discovery in databases, pages 148–163.",
    "year": 2010
  }, {
    "title": "Dropout: a simple way to prevent neural networks from overfitting",
    "authors": ["Nitish Srivastava", "Geoffrey E Hinton", "Alex Krizhevsky", "Ilya Sutskever", "Ruslan Salakhutdinov."],
    "venue": "Journal of Machine Learning Research, 15(1):1929–1958.",
    "year": 2014
  }, {
    "title": "Linguistic resources and evaluation techniques for evaluation of cross-document automatic content extraction",
    "authors": ["Stephanie Strassel", "Mark A Przybocki", "Kay Peterson", "Zhiyi Song", "Kazuaki Maeda."],
    "venue": "Proceedings of the International Conference on",
    "year": 2008
  }, {
    "title": "Multi-instance multi-label learning for relation extraction",
    "authors": ["Mihai Surdeanu", "Julie Tibshirani", "Ramesh Nallapati", "Christopher D Manning."],
    "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Com-",
    "year": 2012
  }, {
    "title": "Combining recurrent and convolutional neural networks for relation classification",
    "authors": ["Ngoc Thang Vu", "Heike Adel", "Pankaj Gupta", "Hinrich Schütze."],
    "venue": "Proceedings of the 2016 Conference of the North American Chapter of the Association for Computa-",
    "year": 2016
  }, {
    "title": "Relation classification via multi-level attention CNNs",
    "authors": ["Linlin Wang", "Zhu Cao", "Gerard de Melo", "Zhiyuan Liu."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics (ACL 2016).",
    "year": 2016
  }, {
    "title": "Semantic relation classification via convolutional neural networks with simple negative sampling",
    "authors": ["Kun Xu", "Yansong Feng", "Songfang Huang", "Dongyan Zhao."],
    "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language",
    "year": 2015
  }, {
    "title": "Improved relation classification by deep recurrent neural networks",
    "authors": ["Yan Xu", "Ran Jia", "Lili Mou", "Ge Li", "Yunchuan Chen", "Yangyang Lu", "Zhi Jin"],
    "year": 2016
  }, {
    "title": "Classifying relations via long short term memory networks along shortest dependency paths",
    "authors": ["Yan Xu", "Lili Mou", "Ge Li", "Yunchuan Chen", "Hao Peng", "Zhi Jin."],
    "venue": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language",
    "year": 2015
  }, {
    "title": "Recurrent neural network regularization",
    "authors": ["Wojciech Zaremba", "Ilya Sutskever", "Oriol Vinyals."],
    "venue": "arXiv preprint arXiv:1409.2329.",
    "year": 2014
  }, {
    "title": "Kernel methods for relation extraction",
    "authors": ["Dmitry Zelenko", "Chinatsu Aone", "Anthony Richardella."],
    "venue": "Journal of machine learning research, 3:1083–1106.",
    "year": 2003
  }, {
    "title": "Relation classification via convolutional deep neural network",
    "authors": ["Daojian Zeng", "Kang Liu", "Siwei Lai", "Guangyou Zhou", "Jun Zhao"],
    "venue": "In Proceedings of the 24th International Conference on Computational Linguistics (COLING",
    "year": 2014
  }, {
    "title": "Relation classification via recurrent neural network",
    "authors": ["Dongxu Zhang", "Dong Wang", "Rong Liu."],
    "venue": "Technical report, CSLT 20150024, Tsinghua University.",
    "year": 2015
  }, {
    "title": "Stanford at TAC KBP 2016: Sealing pipeline leaks and understanding chinese",
    "authors": ["Yuhao Zhang", "Arun Chaganty", "Ashwin Paranjape", "Danqi Chen", "Jason Bolton", "Peng Qi", "Christopher D. Manning."],
    "venue": "Text Analysis Conference (TAC) Proceed-",
    "year": 2016
  }, {
    "title": "Attentionbased bidirectional long short-term memory networks for relation classification",
    "authors": ["Peng Zhou", "Wei Shi", "Jun Tian", "Zhenyu Qi", "Bingchen Li", "Hongwei Hao", "Bo Xu."],
    "venue": "Proceedings of the 54th Annual Meeting of the Association for Com-",
    "year": 2016
  }],
  "id": "SP:b388e199859938cdb96504bf078d89486c6af75f",
  "authors": [{
    "name": "Yuhao Zhang",
    "affiliations": []
  }, {
    "name": "Victor Zhong",
    "affiliations": []
  }, {
    "name": "Danqi Chen",
    "affiliations": []
  }, {
    "name": "Gabor Angeli",
    "affiliations": []
  }, {
    "name": "Christopher D. Manning",
    "affiliations": []
  }],
  "abstractText": "Organized relational knowledge in the form of “knowledge graphs” is important for many applications. However, the ability to populate knowledge bases with facts automatically extracted from documents has improved frustratingly slowly. This paper simultaneously addresses two issues that have held back prior work. We first propose an effective new model, which combines an LSTM sequence model with a form of entity position-aware attention that is better suited to relation extraction. Then we build TACRED, a large (119,474 examples) supervised relation extraction dataset, obtained via crowdsourcing and targeted towards TAC KBP relations. The combination of better supervised data and a more appropriate high-capacity model enables much better relation extraction performance. When the model trained on this new dataset replaces the previous relation extraction component of the best TAC KBP 2015 slot filling system, its F1 score increases markedly from 22.2% to 26.7%.",
  "title": "Position-aware Attention and Supervised Data Improve Slot Filling"
}