{
  "sections": [{
    "text": "Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1763–1773, Lisbon, Portugal, 17-21 September 2015. c©2015 Association for Computational Linguistics."
  }, {
    "heading": "1 Introduction",
    "text": "Open relation extraction (open RE) is the task of extracting new facts for a potentially unbounded set of relations from various sources such as knowledge bases or natural language text. The task is closely related to targeted information extraction (IE), which aims to populate a knowledge base (KB) with new facts for the KB’s relations, such as wasBornIn(Sepp Herberger, Mannheim). Existing methods either reason within the KB itself (Franz et al., 2009; Nickel et al., 2011; Drumond et al., 2012) or leverage large text corpora to learn patterns that are indicative of KB relations (Mintz et al., 2009; Surdeanu et al., 2012; Min et al., 2013). In both cases, targeted IE methods are inherently limited to an (often small) set of predefined relations, i.e., they are not “open”.\nThe open RE task is also related to open information extraction (open IE) (Banko et al., 2007; Del Corro and Gemulla, 2013), which extracts large amounts of surface relations and their arguments from natural language text; e.g., “critizices”(“Dante”, “Catholic Church”).1 Although open IE is a domain-independent approach, the extracted surface relations are purely syntactic and often ambiguous or noisy. Moreover, open IE methods usually do not “predict” facts that have not been explicitly observed in the input data. Open RE combines the above tasks by predicting new facts for an open set of relations. The key challenge in open RE is to reason jointly over the universal schema consisting of KB relations and surface relations (Riedel et al., 2013).\nA number of matrix or tensor factorization models have recently been proposed in the context of relation extraction (Nickel et al., 2012; Riedel et al., 2013; Huang et al., 2014; Chang et al., 2014). These models use the available data to learn latent semantic representations of entities (or entity pairs) and relations in a domain-independent way; the latent representations are subsequently used to predict new facts. Existing models often focus on either targeted IE or open RE. Targeted models are used for within-KB reasoning; they rely on the closed-world assumption and often do not scale with the number of relations. Open RE models use the open-world assumption, which is more suitable for the open RE task because the available data is often highly incomplete. In this paper, we propose CORE, a novel open RE factorization model that incorporates and exploits contextual information to improve prediction performance.\nConsider for example the sentence “Tom Peloso joined Modest Mouse to record their fifth studio album”. Open IE systems may extract the surface fact “join”(TP, MM) from this sentence. Note\n1We mark (non-disambiguated) mentions of entities and relations in quotation marks throughout this paper.\n1763\nthat surface relation “join” is unspecific; in this case, it refers to becoming a member of a music band (as opposed to, say, an employee of a company). Most existing open RE systems use the extracted surface fact for further reasoning, but they ignore the context from which the fact was extracted. We argue in this paper that exploiting contextual information is beneficial for open RE. For our example, we may use standard NLP tools like a named entity recognizer to detect that TP is a person and MM an organization. These coarsegrained types give us hints about the domain and range of the “join” relation for the surface fact, although the actual meaning of “join” still remains opaque. Now imagine that the above sentence was extracted from a newspaper article published in the music section. This information can help to infer that “join” indeed refers to joining a band. Other contextual information, such as the words “record” and “album” that occur in the sentence, further strengthen this interpretation. A contextaware open RE system should leverage such information to accurately predict facts like “is band member of”(TP, MM) and “plays with”(TP, MM).\nNote that the prediction of the fact “is band member of”(TP, MM) is facilitated if we make use of a KB that knows that TP is a musician and MM is a music band. If TP and/or MM are not present in the knowledge base, however, such a reasoning does not apply. In our work, we consider both linked entities (in-KB) and non-linked entity mentions (out of-KB). Since KB are often incomplete, this open approach to handle named entities allows us to extract facts for all entities, even if they do not appear in the KB.\nIn this paper, we propose CORE, a flexible open RE model that leverages contextual information. CORE is inspired by the combined factorization and entity model (FE) of Riedel et al. (2013). As FE, CORE associates latent semantic representations with entities, relations, and arguments. In contrast to FE, CORE uses factorization machines (Rendle, 2012) as its underlying framework, which allows us to incorporate context in a flexible way. CORE is able to leverage and integrate arbitrary contextual information associated with the input facts into its open RE factorization model. To support reasoning under the openworld assumption, we propose an efficient method for parameter estimation in factorization machines based on Bayesian personalized ranking (Rendle\net al., 2009). We conducted an experimental study on a realworld dataset using contextual information along the lines mentioned above. Our model is extensible, i.e., additional contextual information can be integrated when available. Even with limited amount of contextual information used in our experiments, our CORE model provided higher prediction performance than previous models. Our findings validate the usefulness of contextual information for the open RE task."
  }, {
    "heading": "2 Related Work",
    "text": "There is a large body of related work on relation extraction; we restrict attention to methods that are most similar to our work.\nTargeted IE. Targeted IE methods aim to extract from natural-language text new instances of a set of predefined relations, usually taken from a KB. Most existing methods make use of distant supervision, i.e., they start with a set of seed instances (pairs of entities) for the relations of interest, search for these seed instances in text, learn a relation extractor from the so-obtained training data, and optionally iterate (Mintz et al., 2009; Surdeanu et al., 2012; Min et al., 2013). Open RE models are more general then targeted IE methods in that they additionally reason about surface relations that do not correspond to KB relations. For this reason, Riedel et al. (2013) argued and experimentally validated that open RE models can outperform targeted IE methods.\nOpen IE. In contrast to targeted IE, the goal of open IE is to extract all (or most) relations expressed in natural-language text, whether or not these relations are defined in a KB (Banko et al., 2007; Fader et al., 2011; Del Corro and Gemulla, 2013). The facts obtained by open IE methods are often not disambiguated, i.e., the entities and/or the relation are not linked to a knowledge base; e.g., “criticizes”(“Dante”, “Catholic Church”). The goal of our work is to reason about extracted open-IE facts and their contextual information. Our method is oblivious to the actual open IE method being used.\nRelation clustering. One way to reason about KB and surface relations is to cluster the relations: whenever two relations appear in the same cluster, they are treated as synonymous (Hasegawa et al., 2004; Shinyama and Sekine, 2006; Yao\net al., 2011; Takamatsu et al., 2011; Min et al., 2012; Akbik et al., 2012; de Lacalle and Lapata, 2013). For example, if “criticizes” and “hates” are clustered together, then we may predict “hates”(“Dante”, “Catholic Church”) from the above fact (which is actually not true). The general problem with relation clustering is its “black and white” approach to relations: either two relations are the same or they are different. This assumption generally does not hold for the surface relations extracted by open IE systems (Riedel et al., 2013); examples of other types of relationships between relations include implication or mutual exclusion.\nTensor factorization. Matrix or tensor factorization approaches try to address the above problem: instead of clustering relations, they directly predict facts. Both matrix and tensor models learn and make use of semantic representations of relations and their arguments. The semantic representations ideally captures all the information present in the data; it does not, however, establish a direct relationship (such as synonymy) between different KB or surface relations.\nTensor factorization models conceptually model the input data as a subject×relation×object tensor, in which non-zero values correspond to input facts. The tensor is factored to construct a new tensor in which predicted facts take large non-zero values. Examples of such tensor factorization models are TripleRank (Franz et al., 2009), RESCAL (Nickel et al., 2011; Nickel et al., 2012), or PITF (Drumond et al., 2012). Tensor factorization models are generally well-suited to reason within a KB because they are able to predict relations between arbitrary pairs of subjects and objects. In the context of open RE, however, these methods suffer from limited scalability with the number of relations as well as from their large prediction space (Chang et al., 2014).\nMatrix factorization. The key difference between matrix and tensor factorization models is that the former restrict the prediction space, i.e., these models generally cannot predict arbitrary facts. Similar to distant supervision approaches, matrix factorization models focus on predicting facts for which some direct evidence exists. In more detail, most methods restrict the prediction space to the set of facts for which the subject and the object share at least some relation in the input data. For this reason, matrix factorization models\nare not suited for in-KB reasoning; an individual pair of entities usually does not occur in more than one KB relation. In the open RE context, however, input relations are semantically related so that many subject-object pairs belong to multiple relations. The key advantage of matrix methods is (1) that this restriction allows them to use additional features—such as features for each subjectobject pair—and (2) that they scale much better with the number of relations. Examples of such matrix factorization models include (Tresp et al., 2009; Jiang et al., 2012; Fan et al., 2014; Huang et al., 2014). Chang et al. (2014) have also shown that a combination of matrix and tensor factorization models can be fruitful. Closest to our work is the “universal schema” matrix factorization approach of Riedel et al. (2013), which combines a latent features model, a neighborhood model and an entity model but does not incorporate context. Our CORE model follows the universal schema idea, but uses a more general factorization model, which includes the information captured by the latent features and entity model (but not the neighborhood model), and incorporates contextual information.\nUsing contextual information. It is well known that contextual information can improve IE methods. Information such as bag-of-words, part-ofspeech tags, entity types, or parse trees have been integrated into many existing systems (Mintz et al., 2009; Zhang et al., 2012; Takamatsu et al., 2011; Zhou et al., 2007; de Lacalle and Lapata, 2013; Akbik et al., 2012). Our work differs in that we integrate contextual information into an open RE system. To do so, we leverage factorization machines (Rendle et al., 2011; Rendle, 2012), which have been successfully applied to exploit contextual information in the context of recommender systems. We show how to model open RE data and context with factorization machines and provide a method for parameter estimation under the open-world assumption."
  }, {
    "heading": "3 The CORE Model",
    "text": "Input data. We model the input data as a set of observations of the form (r, t, c), where r refer to a KB or surface relation, t refer to a subject-object pair of entities (or entity mentions) and c to contextual information. An observation obtained from the example of the introduction may be (“join”, (TP, MM), { types:(person,org),\nx1 x2 x3 x4\ntopic:music, word:record, word:album, . . . }). Denote by R the set of all observed relations, by E the set of all observed entities, and by T ⊆ E×E the set of all observed entity pairs, which we refer to as tuples. A fact takes form r(t) and is composed of a relation r ∈ R and a tuple t ∈ T ; e.g., “join”(TP, MM). Note that there may be multiple observations for a fact. Finally, denote by C the set of all contextual variables; each observation is associated with a set c ⊆ C of context variables. In this paper we restrict attention to categorical context variables; our model can potentially handle continuous context as in (Rendle, 2012).\nProblem definition. The open RE task is to produce a ranked list of tuples Tr ⊆ T for each relation r ∈ R; the list is restricted to new tuples, i.e., tuples t ∈ T for which r(t) has not been observed in the input. The rank of each tuple reflects the model’s prediction of the likelihood that the corresponding fact is indeed true. A good model thus ranks correct facts higher than incorrect ones.\nModeling facts. Denote by V = R∪T ∪E ∪C the set of all observed relations, tuples, entities, and contextual variables. For ease of exposition, we refer to the elements of V as variables. We model the input data in terms of a matrix in which each row corresponds to a fact (i.e., not an observation) and each column to a variable. We group columns according to the type of the variables; e.g, there are relation columns, tuple columns, entity columns, and a group of columns for each type of contextual information. The matrix is populated such that in each row the values of each column group sum up to unity, i.e., we normalize values within column groups. In particular, we set to 1 the values of the variable of the relation and the tuple of the corresponding fact. We set to 0.5 the variables corresponding to the two entities referred\nto by the fact. An example is shown in Fig. 1. Here the first row, for instance, corresponds to the fact “born in”(Caesar, Rome). Note that we model tuples and entities separately: the entity variables expose which arguments belong to the fact, the tuple variables expose their order.\nModeling context. As described above, we model the data in terms of a matrix in which rows corresponds to facts (instead of observations). The reasoning behind this approach is as follows. First, we may see a fact in multiple observations; our goal is to leverage all the available context. Second, facts but not observations are the target of our predictions. Finally, we are interested in predicting new facts, i.e., facts that we have not seen in the input data. For these facts, there is no corresponding observation so that we cannot directly obtain contextual information. To address these points, our model aggregates the context of relevant observations for each fact; this approach allows us to provide comprehensive contextual information for both observed and unobserved facts.\nWe group contextual information by the type of information: examples include metadata about the extraction sources (e.g., from an article on music), types of the entities of a tuple (e.g., (person, location)), or the bag-of-words in the sentence from which an extraction has been obtained. We aggregate the contextual information for each tuple t ∈ T ; this tuple-level approach allows us to provide contextual information for unobserved facts. In more detail, we count in how many observations each contextual variable has been associated with the tuple, and then normalize the count values to 1 within each group of columns. The so-obtained values can be interpreted as the relative frequencies with which each contextual variable is associated with the tuple. The contextual information as-\nsociated with each fact is given by the aggregated, normalized context of its tuple.\nFig. 1 shows context information arranged in two groups: tuple types and tuple topics. We capture information such as that the tuple (Caesar, Rome) has only been seen in articles on history or that tuple (Fermi, Rome) is mentioned in both physics and history articles (slightly more often in the former). Since context is associated with tuples, facts 2 and 4 on (Fermi, Sapienza) share contextual information. This form of context sharing (as well as entity sharing) allows us to propagate information about tuples across various relations.\nFactorization model. CORE employs a matrix factorization model based on factorization machines and the open-world assumption to capture latent semantic information about the individual variables. In particular, we associate with each variable v ∈ V a bias term bv ∈ R and a latent feature vector fv ∈ Rd, where the dimensionality d of the latent feature space is a hyperparameter of our model. Denote by X the set of rows in the input matrix, which we henceforth refer to as training points. For each training point x ∈ X , denote by xv the value of variable v ∈ V in the corresponding row of the matrix. Our model associates with training point x ∈ X a score s(x) computed as follows:\ns(x) = ∑ v∈V xvbv + ∑ v1∈V ∑ v2∈V \\{v1} xv1xv2f T v1 fv2 (1)\nHere the bias terms models the contribution of each individual variable to the final score, whereas the latent feature vectors model the contribution of all pairwise interactions between variables. Note that only bias terms and feature vectors corresponding to non-zero entries in x affect the score and that x is often sparse. Since we can compute s(x) in time linear to both the number of nonzero entries in x and the dimensionality d (Rendle, 2012), score computation is fast. As discussed below, we (roughly) estimate bias terms and feature vectors such that observed facts achieve high scores. We may thus think of each feature vector as a low-dimensional representation of the global information contained in the corresponding variable.\nPrediction. Given estimates for bias terms and latent feature vectors, we rank unobserved facts as follows. Fix a relation r ∈ R and a tuple t ∈ T\nsuch that r(t) has not been observed. As indicated above, our model overcomes the key problem that there is no observation, and thus no context, for r(t) by context aggregation and sharing. In particular, we create an test point x̂ for tuple r(t) in a way similar to creating data points, i.e., we set the relation, tuple, and entity variables accordingly and add the aggregated, normalized context of t. Once test point x̂ has been created, we can predict its score s(x̂) using Eq. (1). We then rank each unobserved tuple by its so-obtained score, i.e., tuples with higher scores are ranked higher. The resulting ranking constitutes the list Tr of predicted facts for relation r.\nBayesian personalized ranking. The parameters of our model are given by Θ = { bv,fv | v ∈ V }. In approaches based on the closed-world assumption, Θ is estimated by minimizing the error between model predictions and target values (e.g., 1 for true facts, 0 for false facts). In our setting of open RE, all our observations are positive, i.e., we do not have negative training data. One way to handle the absence of negative training data is to associate a target value of 0 to all unobserved facts. This closed-world approach essentially assumes that all unobserved facts are false, which may not be a suitable assumption for the sparsely observed relations of open RE. Following Riedel et al. (2013), we adopt the open-world assumption instead, i.e., we treat each unobserved facts as unknown. Since factorization machines originally require explicit target values (e.g., feedback in recommender systems), we need to adapt parameter estimation to the open-world setting.\nIn more detail, we employ a variant of the Bayesian personalized ranking (BPR) optimization criterion (Rendle et al., 2009). We associate with each training point x a set of negative samples X−x . Each negative sample x− ∈ X−x is an unobserved fact with its associated context (constructed as described in the prediction section above). Generally, the negative samples x− should be chosen such that they are “less likely” to be true than fact x. We maximize the following optimization criterion:\n1 |X| ∑ x∈X  ∑ x−∈X−x lnσ(δ(x, x−)) |X−x | − λ‖Θx‖2  (2)\nwhere σ(x) = 1 1+e−x denotes the logistic function, δ(x, x−) = s(x)− s(x−) denotes the differ-\nence of scores, and Θx = { bv,fv | xv 6= 0 } the subset of the model parameters relevant for training point x. Here we use L2 regularization controlled by a single hyperparameter λ. In essence, the BPR criterion aims to maximize the average “difference” lnσ(δ(x, x−)) between the score of fact x and each of its negative samples x−, averaged over all facts. In other words, we aim to score x higher than each x−. (Note that under the closed-world assumption, we would instead consider x− as being false.) For a more in-depth discussion of BPR, see (Rendle et al., 2009).\nSampling negative evidence. To make BPR effective, the set of negative samples needs to be chosen carefully. A naive approach is to take the set of all unobserved facts between each relation r ∈ R and each tuple t ∈ T (or E × E) as the set X−x . The reasoning is that, after all, we expect “random” unobserved facts to be less likely to be true than observed facts. This naive approach is problematic, however, because the set of negative samples is independent of x and thus not sufficiently informative (i.e., it contains many irrelevant samples).\nTo overcome this problem, the negative sample set needs to be related to x in some way. Since we ultimately use our model to rank tuples for each relation individually, we consider as negative evidence for x only unobserved facts from the same relation (Riedel et al., 2013). In more detail, we (conceptually) build a negative sample set X−r for each relation r ∈ R. We include into X−r all facts r(t)—again, along with their context—such that t ∈ T is an observed tuple but r(t) is an unobserved fact. Thus the subject-object pair t of entities is not observed with relation r in the input data (but with some other relation). The set of negative samples associated with each training point x is defined by the relation r of the fact contained in x, that is X−x = X−r . Note that we do not actually construct the negative sample sets; see below.\nParameter estimation. We maximize Eq. (2) using stochastic gradient ascent. This allows us to avoid constructing the sets X−x , which are often infeasibly large, and worked well in our experiments. In particular, in each stochastic gradient step, we randomly sample a training point x ∈ X , and subsequently randomly sample a negative sample x− ∈ X−x . This sampling procedure can be implemented very efficiently. We then per-\nform the following ascent step with learning rate η:\nΘ← Θ + η∇Θ ( lnσ(d(x, x−))− λ‖Θx‖2 ) One can show that the stochastic gradient used in the formula above is an unbiased estimate of the gradient of Eq. (2). To speed up parameter estimation, we use a parallel lock-free version of stochastic gradient ascent as in Recht et al. (2011). This allows our model to handle (reasonably) large datasets."
  }, {
    "heading": "4 Experiments",
    "text": "We conducted an experimental study on realworld data to compare our CORE model with other state-of-the-art approaches.2 Our experimental study closely follows the one of Riedel et al. (2013)."
  }, {
    "heading": "4.1 Experimental Setup",
    "text": "Dataset. We made use of the dataset of Riedel et al. (2013), but extended it with contextual information. The dataset consisted of 2.5M surface facts extracted from the New York Times corpus (Sandhaus, 2008), as well as 16k facts from Freebase. Surface facts have been obtained by using a named-entity recognizer, which additionally labeled each named entity mention with its coarse-grained type (i.e., person, organization, location, miscellaneous). For each pair of entities found within a sentence, the shortest dependency path between these pairs was taken as surface relation. The entity mentions in each surface fact were linked to Freebase using a simple string matching\n2Source code, datasets, and supporting material are available at http://dws.informatik.uni-mannheim. de/en/resources/software/core/\nmethod. If no match was found, the entity mention was kept as is. There were around 2.2M tuples (distinct entity pairs) in this dataset, out of which 580k were fully linked to Freebase. For each of these tuples, the dataset additionally included all of the corresponding facts from Freebase. Using the metadata3 of each New York Times article, we enriched each surface fact by the following contextual information: news desk (e.g., sports desk, foreign desk), descriptors (e.g., finances, elections), online section (e.g., sports, business), section (e.g., a, d), publication year, and bag-of-words of the sentence from which the surface fact has been extracted.\nTraining data. From the raw dataset described above, we filtered out all surface relations with less than 10 instances, and all tuples with less than two instances, as in Riedel et al. (2013). Tab. 1 summarizes statistics of the resulting dataset. Here we considered a fact or tuple as linked if both of its entities were linked to Freebase, as partiallylinked if only one of its entities was linked, and as non-linked otherwise. In contrast to previous work (Riedel et al., 2013; Chang et al., 2014), we retain partially-linked and non-linked facts in our dataset.\n3Further information can be found at htps:// catalog.ldc.upenn.edu/LDC2008T19.\nEvaluation set. Open RE models produce predictions for all relations and all tuples. To keep the experimental study feasible and comparable to previous studies, we use the full training data but evaluate each model’s predictions on only the subsample of 10k tuples (≈ 6% of all tuples) of Riedel et al. (2013). The subsample consisted of 20% linked, 40% partially-linked and 40% non-linked tuples. For each (surface) relation and method, we predicted the top-100 new facts (not in training) for the tuples in the subsample.\nConsidered methods. We compared various forms of our CORE model with PITF and the matrix factorization model NFE. Our study focused on these two factorization models because they outperformed other models (including nonfactorization models) in previous studies (Riedel et al., 2013; Chang et al., 2014). All models were trained with the full training data described above.\nPITF (Drumond et al., 2012). PITF is a recent tensor factorization method designed for withinKB reasoning. PITF is based on factorization machines so that we used our scalable CORE implementation for training the model.\nNFE (Riedel et al., 2013). NFE is the full model proposed in the “universal schema” work of Riedel et al. (2013). It uses a linear combination of three component models: a neighborhood\nmodel (N), a matrix factorization model (F), and an entity model (E). The F and E models together are similar (but not equal) to our CORE model without context. The NFE model outperformed tensor models (Chang et al., 2014) as well as clustering methods and distantly supervised methods in the experimental study of Riedel et al. (2013) for open RE tasks. We use the original source code of Riedel et al. (2013) for training.\nCORE. We include multiple variants of our model in the experimental study, each differing by the amount of context being used. We consider as context the article metadata (m), the tuple types (t) and the bag-of-words (w). Each tuple type is a pair of subject-object types of (e.g. (person, location)). The basic CORE model uses relations, tuples and entities as variables. We additionally consider the CORE+t, CORE+w, CORE+mt, and CORE+mtw models, where the suffix indicates which contextual information has been included. The total number of variables in the resulting models varied between 300k (CORE) to 350k (CORE+mtw). We used a modified version of libfm for training.4 Our version adds support for BPR and parallelizes the training algorithm.\nMethodology. To evaluate the prediction performance of each method, we followed Riedel et al. (2013). We considered a collection of 19 Freebase relations (Tab. 2) and 10 surface relations (Tab. 3) and restrict predictions to tuples in the evaluation set.\nEvaluation metrics. For each relation and method, we computed the top-100 evaluation set predictions and labeled them manually. We used\n4http://www.libfm.org\nas evaluation metrics the mean average precision defined as:\nMAP100# = ∑100 k=1 Ik · P@k min{100,#} (3)\nwhere indicator Ik takes value 1 if the k-th prediction is true and 0 otherwise, and # denotes the number of true tuples for the relation in the top100 predictions of all models. The denominator is included to account for the fact that the evaluation set may include less than 100 true facts. MAP100# reflects how many true facts are found by each method as well as their ranking. If all # facts are found and ranked top, then MAP100# = 1. Note that our definition of MAP100# differs slightly from Riedel et al. (2013); our metric is more robust because it is based on completely labeled evaluation data. To compare the prediction performance of each system across multiple relations, we averaged MAP100# values, in both an unweighted and a weighted (by #) fashion.\nParameters. For all systems, we used d = 100 latent factors, λ = 0.01 for all variables, a constant learning rate of η = 0.05, and ran 1000 epochs of stochastic gradient ascent. These choices correspond to the ones of Riedel et al. (2013); no further tuning was performed."
  }, {
    "heading": "4.2 Results.",
    "text": "Prediction performance. The results of our experimental study are summarized in Tab. 2 (Freebase relations) and Tab. 3 (surface relations). As mentioned before, all reported numbers are with respect to our evaluation set. Each entry shows the number of true facts in the top-100 predictions and, in parentheses, the MAP100# value. The # col-\numn list the total number of true facts found by at least one method. The last two lines show the aggregated MAP100# scores.\nWe start our discussion with the results for Freebase relations (Tab. 2). First note that the PITF model generally did not perform well; as discussed before, tensor factorization models such as PITF suffer from a large prediction space and cannot incorporate tuple-level information. NFE and CORE, both matrix factorization models, performed better and were on par with each other. This indicates that our use of factorization machines does not affect performance in the absence of context; after all, both methods essentially make use of the same amount of information. The key advantage of our model over NFE is that we can incorporate contextual information. Our results indicate that using such information indeed improves prediction performance. The CORE+mtw model performed best overall; it increased the average MAP100# by four points (six points weighted) compared to the best contextunware model. Note that for some relations, including only subsets of the contextual information produced better results than using all contextual information (e.g., film/directed by). We thus conjecture that extending our model by variablespecific regularization terms may be beneficial.\nTab. 3 summarizes our results for surface relations. In general, the relative performance of the models agreed with the one on Freebase relations. One difference is that using bag-of-word context significantly boosted prediction performance. One reason for this boost is that related surface relations often share semantically related words (e.g., “professor at” and “scientist at”) and may occur in similar sentences (e.g., mentioning “university”, “research”, ...).\nAnecdotal results. Fig. 2 shows the top test-set predictions of CORE+mtw for the author and “scientist at” relations. In both cases, we also list relations that have a similar semantic representation in our model (highest cosine similarity). Note that semantic similarity of relations is one aspect of our model; predictions incorporate other aspects such as context (i.e., two “similar” relations in different contexts are treated differently).\nTraining time. We used a machine with 16- cores Intel Xeon processor and 128GB of memory. Training CORE took roughly one hour, NFE roughly six hours (single core only), and training CORE+mtw took roughly 20 hours. Our implementation can handle reasonably large data, but an investigation of faster, more scalable training methods appears worthwhile."
  }, {
    "heading": "5 Conclusion",
    "text": "We proposed CORE, a matrix factorization model for open RE that incorporates contextual information. Our model is based on factorization machines and the open-world assumption, integrates various forms of contextual information, and is extensible. Our experimental study suggests that exploiting context can significantly improve prediction performance."
  }],
  "year": 2015,
  "references": [{
    "title": "Unsupervised discovery of relations and discriminative extraction patterns",
    "authors": ["Alan Akbik", "Larysa Visengeriyeva", "Priska Herger", "Holmer Hemsen", "Alexander Löser."],
    "venue": "Proceedings of the 24th International Conference on Computational Linguistics",
    "year": 2012
  }, {
    "title": "Open information extraction from the web",
    "authors": ["Michele Banko", "Michael J Cafarella", "Stephen Soderl", "Matt Broadhead", "Oren Etzioni."],
    "venue": "Proceedings of the 20th International Joint Conference on Artificial Intelligence (IJCAI).",
    "year": 2007
  }, {
    "title": "Typed tensor decomposition of knowledge bases for relation extraction",
    "authors": ["Kai-Wei Chang", "Wen-tau Yih", "Bishan Yang", "Christopher Meek."],
    "venue": "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing",
    "year": 2014
  }, {
    "title": "Unsupervised relation extraction with general domain knowledge",
    "authors": ["Oier Lopez de Lacalle", "Mirella Lapata."],
    "venue": "Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing (EMNLP).",
    "year": 2013
  }, {
    "title": "Clausie: clause-based open information extraction",
    "authors": ["Luciano Del Corro", "Rainer Gemulla."],
    "venue": "Proceedings of the 22nd International Conference on World Wide Web (WWW).",
    "year": 2013
  }, {
    "title": "Predicting rdf triples in incomplete knowledge bases with tensor factorization",
    "authors": ["Lucas Drumond", "Steffen Rendle", "Lars SchmidtThieme."],
    "venue": "Proceedings of the 27th Annual ACM Symposium on Applied Computing (SAC).",
    "year": 2012
  }, {
    "title": "Identifying relations for open information extraction",
    "authors": ["Anthony Fader", "Stephen Soderland", "Oren Etzioni."],
    "venue": "Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing (EMNLP).",
    "year": 2011
  }, {
    "title": "Distant supervision for relation extraction with matrix completion",
    "authors": ["Miao Fan", "Deli Zhao", "Qiang Zhou", "Zhiyuan Liu", "Thomas Fang Zheng", "Edward Y Chang."],
    "venue": "Proceedings of the 52nd Annual Meeting of the Association for Computational Lin-",
    "year": 2014
  }, {
    "title": "Triplerank: Ranking semantic web data by tensor decomposition",
    "authors": ["Thomas Franz", "Antje Schultz", "Sergej Sizov", "Steffen Staab."],
    "venue": "Proceedings of the 8th International Semantic Web Conference (ISWC).",
    "year": 2009
  }, {
    "title": "Discovering relations among named entities from large corpora",
    "authors": ["Takaaki Hasegawa", "Satoshi Sekine", "Ralph Grishman."],
    "venue": "Proceedings of the 42nd Annual Meeting on Association for Computational Linguistics (ACL).",
    "year": 2004
  }, {
    "title": "A scalable approach for statistical learning in semantic graphs",
    "authors": ["Yi Huang", "Volker Tresp", "Maximilian Nickel", "Achim Rettinger", "Hans-Peter Kriegel."],
    "venue": "Semantic Web, 5(1):5–22.",
    "year": 2014
  }, {
    "title": "Link prediction in multirelational graphs using additive models",
    "authors": ["Xueyan Jiang", "Volker Tresp", "Yi Huang", "Maximilian Nickel."],
    "venue": "Proceedings of the 2012 International Workshop on Semantic Technologies meet Recommender Systems & Big",
    "year": 2012
  }, {
    "title": "Ensemble semantics for large-scale unsupervised relation extraction",
    "authors": ["Bonan Min", "Shuming Shi", "Ralph Grishman", "ChinYew Lin."],
    "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational",
    "year": 2012
  }, {
    "title": "Distant supervision for relation extraction with an incomplete knowledge base",
    "authors": ["Bonan Min", "Ralph Grishman", "Li Wan", "Chang Wang", "David Gondek."],
    "venue": "Proceedings of the 2013 Conference of the North American Chapter of the Association for",
    "year": 2013
  }, {
    "title": "Distant supervision for relation extraction without labeled data",
    "authors": ["Mike Mintz", "Steven Bills", "Rion Snow", "Dan Jurafsky."],
    "venue": "Proceedings of the Joint conference of the 47th Annual Meeting of the Association for Computational Linguistics and the",
    "year": 2009
  }, {
    "title": "A three-way model for collective learning on multi-relational data",
    "authors": ["Maximilian Nickel", "Volker Tresp", "Hans-Peter Kriegel."],
    "venue": "Proceedings of the 28th international conference on machine learning (ICML).",
    "year": 2011
  }, {
    "title": "Factorizing yago: scalable machine learning for linked data",
    "authors": ["Maximilian Nickel", "Volker Tresp", "Hans-Peter Kriegel."],
    "venue": "Proceedings of the 21st International Conference on World Wide Web (WWW).",
    "year": 2012
  }, {
    "title": "Hogwild: A lock-free approach to parallelizing stochastic gradient descent",
    "authors": ["Benjamin Recht", "Christopher Re", "Stephen Wright", "Feng Niu."],
    "venue": "Proceedings of the 25th Annual Conference on Neural Information Processing Systems (NIPS).",
    "year": 2011
  }, {
    "title": "Bpr: Bayesian personalized ranking from implicit feedback",
    "authors": ["Steffen Rendle", "Christoph Freudenthaler", "Zeno Gantner", "Lars Schmidt-Thieme."],
    "venue": "Proceedings of the 25th Conference on Uncertainty in Artificial Intelligence (UAI).",
    "year": 2009
  }, {
    "title": "Fast context-aware recommendations with factorization machines",
    "authors": ["Steffen Rendle", "Zeno Gantner", "Christoph Freudenthaler", "Lars Schmidt-Thieme."],
    "venue": "Proceedings of the 34th international ACM conference on Research and development in",
    "year": 2011
  }, {
    "title": "Factorization machines with libfm",
    "authors": ["Steffen Rendle."],
    "venue": "ACM Transactions on Intelligent Systems and Technology (TIST), 3(3):57.",
    "year": 2012
  }, {
    "title": "Relation extraction with matrix factorization and universal schemas",
    "authors": ["Sebastian Riedel", "Limin Yao", "Andrew McCallum", "Benjamin M Marlin."],
    "venue": "Proceedings of the 2013 Conference of the North American Chapter of the Association for Computational",
    "year": 2013
  }, {
    "title": "The New York Times Annotated Corpus",
    "authors": ["E. Sandhaus."],
    "venue": "Linguistic Data Consortium, Philadelphia, 6(12). 1772",
    "year": 2008
  }, {
    "title": "Preemptive information extraction using unrestricted relation discovery",
    "authors": ["Yusuke Shinyama", "Satoshi Sekine."],
    "venue": "Proceedings of the 2006 Conference of the North American Chapter of the Association for Computational Linguistics: Human Lan-",
    "year": 2006
  }, {
    "title": "Multi-instance multi-label learning for relation extraction",
    "authors": ["Mihai Surdeanu", "Julie Tibshirani", "Ramesh Nallapati", "Christopher D Manning."],
    "venue": "Proceedings of the 2012 Joint Conference on Empirical Methods in Natural Language Processing and Com-",
    "year": 2012
  }, {
    "title": "Probabilistic matrix factorization leveraging contexts for unsupervised relation extraction",
    "authors": ["Shingo Takamatsu", "Issei Sato", "Hiroshi Nakagawa."],
    "venue": "Advances in Knowledge Discovery and Data Mining, pages 87–99. Springer.",
    "year": 2011
  }, {
    "title": "Materializing and querying learned knowledge",
    "authors": ["Volker Tresp", "Yi Huang", "Markus Bundschus", "Achim Rettinger."],
    "venue": "Proceedings of the 2009 International Workshop on Inductive Reasoning and Machine Learning for the Semantic Web (IRMLeS).",
    "year": 2009
  }, {
    "title": "Structured relation discovery using generative models",
    "authors": ["Limin Yao", "Aria Haghighi", "Sebastian Riedel", "Andrew McCallum."],
    "venue": "Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing (EMNLP).",
    "year": 2011
  }, {
    "title": "Ontological smoothing for relation extraction with minimal supervision",
    "authors": ["Congle Zhang", "Raphael Hoffmann", "Daniel S. Weld."],
    "venue": "Proceedings of the 26th Conference on Artificial Intelligence (AAAI).",
    "year": 2012
  }, {
    "title": "Tree kernel-based relation extraction with context-sensitive structured parse tree information",
    "authors": ["GuoDong Zhou", "Min Zhang", "DongHong Ji", "QiaoMing Zhu."],
    "venue": "Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Lan-",
    "year": 2007
  }],
  "id": "SP:379696f21d6bc8829c425295b917824edf687e0a",
  "authors": [{
    "name": "Fabio Petroni",
    "affiliations": []
  }, {
    "name": "Luciano Del Corro",
    "affiliations": []
  }, {
    "name": "Rainer Gemulla",
    "affiliations": []
  }],
  "abstractText": "We propose CORE, a novel matrix factorization model that leverages contextual information for open relation extraction. Our model is based on factorization machines and integrates facts from various sources, such as knowledge bases or open information extractors, as well as the context in which these facts have been observed. We argue that integrating contextual information—such as metadata about extraction sources, lexical context, or type information—significantly improves prediction performance. Open information extractors, for example, may produce extractions that are unspecific or ambiguous when taken out of context. Our experimental study on a large real-world dataset indicates that CORE has significantly better prediction performance than state-ofthe-art approaches when contextual information is available.",
  "title": "CORE: Context-Aware Open Relation Extraction with Factorization Machines"
}