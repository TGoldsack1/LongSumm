{"ground_truth": "BEAT: asynchronous BFT made practical Duan et al., CCS\u201918  Reaching agreement (consensus) is hard enough, doing it in the presence of active adversaries who can tamper with or destroy your communications is much harder still. That\u2019s the world of Byzantine fault tolerance (BFT). We\u2019ve looked at Practical BFT (PBFT) and HoneyBadger on previous editions of The Morning Paper. Today\u2019s paper, BEAT, builds on top of HoneyBadger to offer BFT with even better latency and throughput. Asynchronous BFT protocols are arguably the most appropriate solutions for building high-assurance and intrusion-tolerant permissioned blockchains in wide-are (WAN) environments, as these asynchronous protocols are inherently more robust against timing and denial-of-service (DoS) attacks that can be mounted over an unprotected network such as the Internet. The best performing asynchronous BFT protocol, HoneyBadger , still lags behind the partially synchronous PBFT protocol in terms of throughput and latency. BEAT is actually a family of five different asynchronous BFT protocols that start from the HoneyBadger baseline and make improvements targeted at different application scenarios. Unlike HoneyBadgerBFT, which was designed to optimize throughput only, BEAT aims to be flexible and versatile, providing protocol instances optimized for latency, throughput, bandwidth, or scalability (in terms of the number of servers). The BEAT protocols divide into two groups: those supporting full (general) state-machine replication (SMR), as required e.g. for smart contract use cases (BEAT0, BEAT1, BEAT2); and those that support BFT storage (append-only ledger) use cases only (BEAT3, BEAT4). The following table summarises the BEAT family and the key distinguishing features of each member. ( Enlarge )  There\u2019s a lot of ground to cover here, but I\u2019ll do my best to give you an overview. Alongside the BEAT protocols themselves, the paper also includes two new building blocks: the generalized fingerprinted cross-checksum and an asynchronous verifiable information dispersal (AVID) algorithm. The HoneyBadger baseline  HoneyBadger supports ACS (the asynchronous common subset) meaning that it provides these guarantees:  Validity: if a correct server delivers a set  , then  and  contains the inputs of at least  correct servers. Agreement: if a correct server delivers a set  , then all correct servers deliver  . Totality: if  correct servers submit an input, then all correct servers deliver an output. HoneyBadger uses reliable broadcast (RBC) and asynchronous Byzantine binary agreement (ABA) protocols to achieve its aims. Threshold signatures are used to provide common coins for ABA, and threshold encryption is used to avoid censorship and achieve liveness. In a threshold scheme the partial outputs (e.g. decryption shares) of at least t participants need to be combined in order to recover (decrypt) the intended value. BEAT0: improved security and performance  BEAT0, our baseline protocol, incorporates a more secure and efficient threshold encryption, a direct instantiation of threshold coin-flipping (instead of using threshold signatures), and more flexible and efficient erasure-coding support. BEAT0\u2019s threshold encryption uses the TDH2 scheme by Shoup and , providing 128-bit security under elliptic curve cryptography. This gives stronger security and better performance than the scheme used in HoneyBadger. In place of the zfec erasure coding library used by HoneyBadger, which supports only Reed-Solomon codes and at most 128 servers, BEAT uses the Jerasure library giving access to more efficient erasure coding schemes and lifting the replica restriction. BEAT1: lower latency  Via a careful study of latency for each HoneyBadgerBFT subprotocol, we find that (1) most of the latency comes from threshold encryption and threshold signatures, and (2) somewhat surprisingly, when the load is small and there is low contention, erasure-coded reliable broadcast (AVID broadcast) causes significant latency. BEAT1 swaps out the AVID broadcast protocol of BEAT0 for a replication-based reliable broadcast protocol, Bracha\u2019s broadcast . Under small loads BEAT1 has lower latency. With small batch sizes BEAT1\u2019s throughput is higher than HoneyBadger / BEAT0, but with larger batch sizes throughput is down by 20-30%. BEAT2: causal ordering  BEAT2 builds on BEAT1 and also opportunistically moves the use of threshold encryption to the client side. In BEAT2, when the ciphertexts are delivered, it is too late for the adversary to censor transactions. Thus, the adversary does not know what transactions to delay, and can only delay transactions from specific clients. BEAT2 can be combined with anonymous communication networks to achieve full liveness. BEAT2 additionally achieves causal order, which prevents the adversary from inserting derived transactions before the original, causally prior transactions. BEAT3: higher throughput for storage use cases  BEAT3 is the first member of the BEAT family targeted for BFT-storage use cases (as opposed to general SMR). Recall that the safety and liveness properties of BFT storage remain the same as those of general SMR, with the only exception that the state may not be replicated at each server (but instead may be erasure-coded). BEAT3 can be used for blockchain applications that need append-only ledgers, and specific blockchains where the consensus protocol serves as an ordering service, such as Hyperledger Fabric. Whereas so far we\u2019ve been using a reliable broadcast protocol (AVID), BEAT3 replaces this with a bandwidth-efficient information dispersal scheme called AVID-FP. To disperse a block  , AVID requires bandwidth  , whereas AVID-FP can do it in  . To order transactions of size  , the communication complexity of BEAT0 is  , of BEAT1 and BEAT2 is  , and of BEAT3 is  . AVID-FP is a bandwidth-efficient AVID (asynchronous verifiable information dispersal) protocol using fingerprinted cross-checksum. In AVID-FP, given a block B to be dispersed, the dealer applies an (m,n) erasure coding scheme, where  and  \u2026 then it generates the corresponding fingerprinted cross-checksum for B with respect to the erasure coding scheme. Each server verifies the correctness of its fragment with respect to the fingerprint cross-checksum, \u201cand then, roughly speaking, leverages the (much smaller) fingerprinted cross-checksum in place of the fragment in the original AVID protocol.\u201d  An (n,m) fingerprinted cross-checksum contains a cross-checksum array of n values, and a fingerprint array of m values. The ith entry in the checksum array contains the hash of the ith coded fragment. See section 4 in the paper for details of the fingerprint array usage. BEAT4: partial reads  BEAT4 further reduces read bandwidth using a novel erasure-coded reliable broadcast protocol called AVID-FP-Pyramid. This supports use cases where clients only need to read a fraction of a data block. AVID-FD-Pyramid is based on pyramid codes, which trade space for access efficiency in erasure-coded storage systems (about 10% extra space requirement for a 50% drop in access overhead). Pyramid codes can be efficiently built from any (n, m) systematic and MDS (maximum distance separable) code. See section 4 in the paper for brief details, or Huang et al. for an in-depth treatment. BEAT4 uses a 2-level pyramid scheme which can tolerate one failure in each level, and is able to reduce read bandwidth by 50%. Full details are in section 9 of the paper. Evaluation  The evaluation is conducted on EC2 with up to 92 nodes from ten different regions in five different continents, using a variety of network sizes and batch sizes. In the figures that follow,  represents the network size such that BEAT0,1,2 & 3 require  nodes and BEAT4 requires  nodes. When f=1, BEAT0, BEAT1, BEAT2, and BEAT3 are around 2x faster than HoneyBadger, and when f becomes larger, they are even faster than HoneyBadger. When f = 1, BEAT4 is about as fast as HoneyBadger\u2026 As f increases, HoneyBadger is much slower than BEAT4. For throughput, BEAT0 slightly outperforms HoneyBadger. BEAT1 and BEAT2 achieve higher throughput than HoneyBadger with small batch sizes, but have 20-30% lower throughput at larger batch sizes. BEAT3 and BEAT4 outperform all the other protocols consistently. If this write-up has captured your interest, I highly encourage you to go an and read the full paper which contains significantly more detail than I was able to convey here.", "prediction": "We present BEAT, a set of practical Byzantine fault-tolerant (BFT) protocols for completely asynchronous environments. Asynchronous BFT ensures liveness of the protocol without depending on any timing assumptions, which is prudent when the network is controlled by an adversary. HoneyBadgerBFT has significantly higher latency and lower throughput, in part due to its use of expensive threshold cryptography. We show that BEAT is efficient: roughly, all our BEAT instances significantly outperform, in terms of both latency and throughput, Honey badger BFT. There are also new opportunities for asynchronous BFT with the rise of blockchains. For instance, the Hyperledger umbrella has become a global collaborative open-source project under the Linux Foundation, now with more than 250 members. For one-size-fits-all BFT protocols, it has been argued in various works that there needs to be a different chain-size to meet different needs. For example, ReedSoloman codes can only support one chain at a time, which can only be implemented with now-standard 128-bit security and zfecasurecoding. For another instance, there has been proposed to meet the different needs of different servers, for instance, eg., R3 Corda [30], Tendermint [88], and many more. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. To make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. ACM ISBN 978-1-4503-5693-0/18/10. . . $15.00 BFT Protocols are arguably themost appropriate solutions for building high-assurance and intrusiontoleranceant permissioned blockchains in wide-area (WAN) environments. These protocols are inherently more robust against timing and denial-of-service (DoS) attacks that can be mounted over an unprotected network such as the Internet. Compared to partially synchronous B FT protocols (e.g., PBFT [27]), HoneyBadgers BFT guarantees liveness only when theNetwork becomes synchronous (i.e., satisfies timing assumptions). For instance,. PBFT would achieve zero throughput against an adversarial asynchronous scheduler.", "simplified_prediction": "We present BEAT , which is a set of practical Byzantine fault-tolerant protocols for completely asynchronous environments . Asynchronous BFT ensures liveness of the protocol without depending on any assumption that the network is controlled by an adversary device . HoneyBadgerBFT has significantly higher latency and lower throughput . It is part of the use of expensive threshold cryptography . We show that BEAT is efficient : roughly , all our BEAT instances have a lot of money , in terms of both latency and throughput , Honey badger BFT . There are also new opportunities for keeping BFT with the rise of blockchains . For example , the Hyperledger umbrella has become an open-source project under the Linux Foundation , now with more than 250 members . BFT protocols have been argued in many different works that there needs to be a different chain-size to meet different needs , which are different . For example , ReedSoloman codes can only support one chain at a time , which can only be used with bit security and zfecasurecoding . For another example , there has been proposed to meet the different needs of different servers , for example R3 Corda [ 30 ] , Tendermint [ 88 ] and many more information . To copy , or other things , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . To make digital or hard copies of all or part of this work for personal or classroom use is given without fee . This provided that copies are not made or distributed for profit or commercial advantage and that copies have this notice and the full citation on the first page . ACM ISBN 978-0 -- 5693-0 / 18 / 10 . Other pages Other pages $ 15.00 BFT Protocols are the most appropriate solutions for building high-assurance and intrusiontoleranceant environment that allow blockchains in the environment . These protocols have more robust against timing and denial-of-service ( DoS ) attacks that can be mounted over a network such as the Internet . Compared to partially synchronous B FT protocols ( e . g . , PBFT [ 27 ] ) , HoneyBadgers BFT guarantees liveness only when theNetwork becomes synchronous ( i.e. , satisfies timing assumptions ) . For example , PFT would achieve zero against an asynchronous scheduler for a very long time ."}
{"ground_truth": "This paper presents an integrated behavioral anticipation and decision-making system that models behavior for both our vehicle and nearby vehicles as the result of closed-loop policies. Only a finite set of a priori known policies are considered. Bayesian changepoint detection is used to estimate which policy a given vehicle was executing at each point in its history of actions, then infer the likelihood of each potential intention of the vehicle. A statistical test is proposed based on changepoint detection to identify anomalous behavior of other vehicles, such as driving in the wrong direction or swerving out of lanes. Evidence  Anomaly detection was explored by recording three trajectories corresponding to two bikes and a bus. The bikes crossed an intersection from a sidewalk, while the bus made a significantly wide turn. System was able to detect these trajectories as anomalous (Not within the set of known policies)  Evaluated in simulated driving environment  Notes  Bayesian Changepoint detection infers the points in the history of observations where the underlying policy that generated the observations changed. Then, the likelihood of all available policies for the target car given the distribution over the car\u2019s potential policies at the current timestep can be computed (sounds like HMM). The CHAMP algorithm infers the maximum a posteriori set of times at which changepoints between policies have occurred, yielding a set of segments. Given a segment from time s to t and a policy pi, CHAMP approx the log of the policy-evidence for that segment via the (Bae)yesian information criterion (BIC)  Viterbi path is found for the most likely sequence of latent policies  For decision-making, a set of samples are drawn from the distribution over policies of other cars where each sample assigns a policy to each nearby vehicle, excluding the ego car. For each policy available to the ego car (not all policies are available in every scenario e.g. intersection handling policy is not applicable when driving on a highway), and for each sample s, the process is rolled out forward in time until the decision horizon. This yields a set of simulated trajectories. The reward is evaluated for each element of the set of simulated trajectories and the maximal policy for the ego vehicle is chosen. This repeats continuously in a receding horizon manner. Reward function  distance to the goal at the end of the evaluation horizon  minimum distance to obstacles to evaluate safety  lane choice bias to add a preference for the right lane  maximum yaw rate and longitudinal jerk to measure passenger comfort", "prediction": "Decision-making for autonomous driving is hard due to uncertainty on the continuous state of nearby vehicles. In this paper, we present an integrated behavioral anticipation and decision-making system that models behavior for both our vehicle and nearby vehicles as the result of closed-looppolicies. Each policy is designed to capture a different high-level behavior, such as following a lane, changing lanes, or turning at an intersection. We propose a statistical test based on changepoint detection to identify anomalous behavior of other vehicles. We evaluate our approach using real-world traffic-tracking data from our autonomous vehicle platform, and present decision- making results in simulation involving highway traffic scenarios. The central contributions of this paper are:  A changepoint-based behavioral prediction approach that thatleverages the history of actions of a target vehicle to infer the possible behavior of its possible interactions online. An algorithm that evaluates outcomes of modeled actions between vehicles, being able to account for the likelihood of modeled future actions. An evaluation of the proposed system using both traffic data obtained from a real vehicle and simulated traffic scenarios using both real and simulated scenarios. We introduced a principled framework for integrated behavioral anticipate and decisionmaking approach for both autonomous and non-autonomous cars. By explicitly modeling behaviors between reasonable agents with reasonable expectations, we proposed a framework for behavioral anticipation in both environments with and without autonomous cars. In contrast, previous work did not address the proposed framework for other cars for other anticipation of policies of other cars by explicitly modeling the behaviors of reasonable agents. However, we demonstrated the strategy of selecting multiple policies for our car by evaluating them via forward simulation and passing passing passing maneuvers using a real- world autonomous vehicle. We present the results of our system in a simulation of highway traffic on the University of California, San Diego campus in the next issue of the journal, \u2018Automation and the Future of Autonomous Vehicles\u2019. Back to Mail Online home.Back to the page you came from. Click here to read the next part of the article.. The next section of the paper includes an analysis of the results from the simulation of a realworld autonomous vehicle on the university\u2019s campus in San Diego, California, in the form of a \u2018Traffic Analysis and Prediction\u2019 report.", "simplified_prediction": "Decision-making for autonomous driving is hard because it is very hard on the state of nearby vehicles . In this paper , we present an integrated behavioral expection and decision-making system that models behavior for both our vehicle and nearby vehicles as the result of closed-looppolicies . Each policy has been designed to capture a different high-level behavior , such as following a lane , changing lanes , or turning at an area . We propose a statistical test based on changepoint detection to find the behavior of other vehicles . We evaluate our approach using real-world traffic-tracking data from our autonomous vehicle platform , and present decision- making results for highway traffic scenarios . The most important part of this paper is : A changepoint-based behavioral prediction approach that the history of actions of a target vehicle to stop the possible behavior of its possible interactions online . An algorithm that evaluates outcomes of modeled actions between vehicles , being able to account for making sure about the future actions . An evaluation of the proposed system using both traffic data obtained from a real vehicle and simulated traffic scenarios using both real and simulated scenarios . We introduced a principled framework for integrated behavioral anticipate and decisionmaking approach for both autonomous and non-autonomous cars . By explicitly modeling behaviors between reasonable agents , we proposed a framework for behavioral anticipation in both environments with and without autonomous cars . In contrast , previous work did not address the proposed framework for other cars of policies by explicitly modeling the behaviors of reasonable agents , not the same thing . However , we showed the strategy of selecting multiple policies for our car by evaluating them via simulation and passing passing passing passing maneuvers using a real- world autonomous vehicle . We present the results of our system in a simulation of highway traffic on the University of California , San Diego campus in the next issue of the journal and the Future of Autonomous Vehicles . Back to the home of the page , Back to the page . Click here to read the next part of the article . The next section of the paper has an analysis of the results from the realworld autonomous vehicle on the university canals campus in San Diego , California , in the form of a number of different types ."}
{"ground_truth": "The paper presents the task of abductive NLP (pronounced as alpha NLP) where the model needs to perform abductive reasoning. Abductive reasoning is the inference to the most plausible explanation. Even though it is considered to be an important component for understanding narratives, the work in this domain is sparse. A new dataset called as Abstractive Reasoning in narrative Text (ART) consisting of 20K narrative contexts and 200k explanations is also provided. The dataset models the task as multiple-choice questions to make the evaluation process easy. Task Setup  Given a pair of observations O1 and O2 and two hypothesis h1 and h2, the task is to select the most plausible hypothesis. In general, P(h | O1, O2) is propotional to P(h |O1)P(O2|h, O1). Different independence assumptions can be imposed on the structure of the problem eg one assumption could be that the hypothesis is independent of the observations or the \u201cfully connected\u201d assumption would jointly model both the observations and the hypothesis. Dataset  Along with crowdsourcing several plausible hypotheses for each observation instance pair, an adversarial filtering algorithm (AF) is used to remove weak pairs of hypothesis. Observation pairs are created using the ROCStories dataset which is a collection of short, manually crafted stories of 5 sentences. The average word length for both the content and the hypothesis is between 8 to 9. To collect plausible hypothesis, the crowd workers were asked to fill in a plausible \u201cin-between\u201d sentence in natural language. Given the plausible hypothesis, the crowd workers were asked to create an implausible hypothesis by editing fewer than 6 words. Adversarial filtering approach from Zellers et al. is used with BERT as the adversary. A temperature parameter is introduced to control the maximum number of instances that can be changed in each adversarial filtering iteration. Key Observations  Human performance: 91.4%  Baselines like SVM classifier, the bag-of-words classifier (using Glove) and max-pooling overt BiLSTM representation: approx 50%  Entailment NLI baseline: 59%. This highlights the additional complexity of abductive NLI as compared to entailment NLI. BERT: 68.9%  GPT: 63.1%  Numerical and spatial knowledge-based data points are particularly hard. The model is more likely to fail when the narrative created by the incorrect hypothesis is plausible", "prediction": "Abductive reasoning is inference to the most plausible explanation. For example, if Jenny finds her house in a mess when she returns from work, she can hypothesize that a thief broke into her house and caused the mess. We present the first study that investigates the viability of language-based abductive reasoning. The best model achieves 68.9% accuracy, well below human performance of 91.4%. On Abductive NLG, the current best language generators struggle even more, as they lack reasoning capabilities that are trivial for humans. Our analysis leads to new insights into the types of reasoning that deep pre-trained language models fail to performdespite their strong performance on the related but more narrowly defined task of entailment NLIpointing to interesting avenues for future research.  Jerry Hobbs, ACL 2013 Lifetime Achievement Award1. Work done while at AI2 1The full transcript of his award speech is available at X \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\ufffd :1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\ufffd:1 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\ufffd:1\u00e2\u20ac\u2122s: 1\u00e2\u20ac\u2019s:\u00a01\u00e2\u201ds: \u00a0\u2009\u201c\u00a0\u201d\u201c\u2019\u201d: \u2018\u2018\u2019: \u2019\u2019.\u2019 \u201d:. \u201d. \u2019:\u201d.\u2009: \u201c\u201d;. \u2009\u2019, \u201d\u2019;.\u201d, \u2009 \u201d;\u2019,. \u201d,\u201d \u2019;\u201d,. \u2019,\u2019\u00a0\u2019This is the only logical operation which introduces any new ideas, which contrasts with other types of inference such as entailment, that focuses on inferring only such information that is already provided in the premise\u2019 (Peirce, 1965a).\u2019 The brain is an abduction machine, continuously trying to prove abductively that the observables in its environment constitute a coherent situation. Despite the broad recognition of its importance, the study of abductive. reasoning in narrative text has very rarely appeared in the NLP literature, in large part because most previous work on abductive Reasoning has focused on formal logic, which has proven to be too rigid to generalize to the full complexity of natural language. In particular, we investigate the use of natural. language as the representation medium, probe deep neural models on abduction.", "simplified_prediction": "The reason is inference to the most plausible explanation . For example , if Jenny finds her house in a mess when she returns from work , she can find her house into her house and that she does not like the mess . We present the first study that looks at language-based abductive reasoning . The best model can get accuracy , well below human performance of 91.4 % . The current best language generators struggle even more , as they do not have a lot of features that are trivial for humans . Our analysis leads to new ways into the types of reasoning that deep pre-trained language models fail to performdespite their strong performance on the related but more often defined tasks that they thought NLIpointing to interesting for future research . Jerry Hobbs , ACL 2013 Lifetime Achievement Award1 Work while at AI2 1The full transcript of his award speech is available at X : 1 : 1 : 1 : 1 : 1 : about 1 : 1 : 1 : 1 : 1 : 1 : people can see : 1 : 1 candy : 1 : 1 pages : 1 . It is very good . \u00e2 '' \u00e2 : \u00e2 , \u00e2 . Today , there are : \u00e2 \u00e2 '' '' capital city ; \u00e2 '' \u00e2 \u00e2 \u00e2 . , things that are given , It is the only logical operation which introduces any new ideas , which contrasts with other types of inference such as entailment , that focuses on inferring only such information that is already provided in the premise all over the world ( Peirce , 1965a ) . The brain is abduction machine , continuously trying to prove abductively that the observables in its environment . Even though it was very important , the study of abductive . Most previous work on abductive Reasoning has focused on formal logic , which has been too formal to be too rigid to generalize to the full complexity of natural language . In particular , we look at the use of natural . The language has the same representation medium , probe deep neural models ."}
{"ground_truth": "`Update 2015/11/23: Since I first wrote this note, I became involved in the next iterations of this work, which became v2 of the arXiv manuscript. The notes below were made based on v1.`  This paper considers the problem of Maximum Inner Product Search (MIPS). In MIPS, given a query $q$ and a set of inputs $x_i$, we want to find the input (or the top n inputs) with highest inner product, i.e. $argmax_i q' x_i$. Recently, it was shown that a simple transformation to the query and input vectors made it possible to approximately solve MIPS using hashing methods for Maximum Cosine Similarity Search (MCSS), a problem for which solutions are readily available (see section 2.4 for a brief but very clear description of the transformation). In this paper, the authors combine this approach with clustering, in order to improve the quality of retrieved inputs. Specifically, they consider the spherical k-means algorithm, which is a variant of k-means in which data points are clustered based on cosine similarity instead of the euclidean similarity (in short, data points are first scaled to be of unit norm, then in the training inner loop points are assigned to the cluster centroid with highest dot product and cluster centroids are updated as usual, except that they are always rescaled to unit norm). Moreover, they consider a bottom-up application of the algorithm to yield a hierarchical clustering tree. They propose to use such a hierarchical clustering tree to find the top-n candidates for MIPS. The key insight here is that, since spherical k-means relies on cosine similarity for finding the best cluster, and since we have a transformation that allows the maximisation of inner product to be approximated by the maximisation of cosine similarity, then a tree to find MIPS candidates could be constructed by running spherical k-means on the inputs transformed by the same transformation used for hashing-based MIPS. In order to make the search more robust to border issues when a query is close to the frontier between clusters, at each level of the tree they consider more than one candidate cluster during top-down search, so as to merge the candidates in several leaves of the tree at the very end of a full top down query. Their experiments using search with word embeddings show that the quality of the top 1, 10 and 100 MIPS candidates using their spherical k-means approach is better than using two hashing-based search methods.", "prediction": "Efficient Maximum Inner Product Search (MIPS) is an important task that has a wide applicability in recommendation systems and classification with a large number of classes. We propose to train a spherical kmeans, after having reduced the MIPS problem to a Maximum Cosine Similarity Search (MCSS) This simple approach yields much higher speedups, for the same retrieval precision, than current state-of-the-art hashing-based and tree-based methods. This simple method also yields more robust retrievals when the query is corrupted by noise. All the methods discussed in this article are based on the notion of a candidate set, i.e. a subset of the dataset that they return and on which we will do an exact KMIPS, making its computation much faster. There is no guarantee that the candidate set contains the target elements, therefore these methods will provide us with approximate MIPS methods that are both smaller and have larger intersections with actual MIPS sets. We hope that this article will be of interest to those who are interested in the future development of machine learning systems that use MIPS to make recommendations for users and for classification of words in a predetermined vocabulary. Back to Mail Online home.Back to the page you came from.\"K-MIPS\" is a problem that arises naturally in many large scale tasks. If we can obtain large speedups over a full linear search without sacrificing too much on precision, it will have a direct impact on such large-scale applications. This problem amounts to solving a KMI PS problem, which can be solved exactly in linear time by calculating the K maximum values of the indices providing the maximum items, providing the set providing the K. Such a method can be too costly to be used on large applications where we typically have hundreds of thousands of entries in the set, but such a method could have a big impact on the future of recommendation systems. For example in neural probabilistic language models (Bengio et al., 2003) the probabilities of a next word given the context of the few previous words is computed, as a multiplication of the last hidden layer representation with a very large matrix (an embedding dictionary) that has as many columns as there are words in the vocabulary. The ranking of these probability values is unaffected by the softmax layer.", "simplified_prediction": "Maximum Inner Product Search ( MIPS ) is an important task that has many things in recommendation systems and classification with a large number of classes , including a large number of classes . We propose to train a spherical kmeans , after having reduced the MIPS problem to a Maximum Cosine Similarity Search ( MCSS ) This simple approach yields much higher speedups , than the current state-of-the-art hashing-based and tree-based methods . This method also gives more robust find out when the query is corrupted by noise . All the methods talk about this article are based on the notion of a candidate set . The dataset that they return and on which we will do an exact KMIPS , making it much faster in the same way . There is no guarantee that the candidate set contains the target elements , therefore these methods will provide us to approximate MIPS methods that are both smaller and have larger features with actual MIPS sets . We hope that this article will be of interest to those who are interested in the future development of machine learning systems that use MIPS to make recommendations for users and for classification of words in a special way . Back to the home of the page , Back to the page . There are many different kinds of K-MIPS in many large scale tasks . If we can get large speedups over a full linear search , it will have a direct impact on such large-scale applications ( such as a '' direct impact '' ) . This problem can be solved exactly in linear time by calculating the K maximum values of the indices that have hundreds of thousands of entries in the set , but such a method can be too costly to be used on the future of recommendation systems . This is because we usually have hundreds of thousands of entries in the set , but such a method could have a big impact on the future of recommendation systems . For example , a next word given the context of the few previous words is computed ( Bengio et al . , 2003 ) , as a multiplication of the last hidden layer representation with a very large matrix ( an embedding dictionary ) that has as many columns as there are words in the vocabulary . The ranking of these probability values is not the same as the softmax layer ."}
{"ground_truth": "Understanding lifecycle management complexity of datacenter topologies Zhang et al., NSDI\u201919  There has been plenty of interesting research on network topologies for datacenters, with Clos-like tree topologies and Expander based graph topologies both shown to scale using widely deployed hardware. This research tends to focus on performance properties such as throughput and latency, together with resilience to failures. Important as these are, note that they\u2019re also what\u2019s right in front of you as a designer, and relatively easy to measure. The great thing about today\u2019s paper is that the authors look beneath the surface to consider the less visible but still very important \u201clifecycle management\u201d implications of topology design. In networking, this translates into how easy it is to physically deploy the network, and how easy it to subsequently expand. They find a way to quantify the associated lifecycle management costs, and then use this to help drive the design of a new class of topologies, called FatClique. \u2026 we show that existing topology classes have low lifecycle management complexity by some measures, but not by others. Motivated by this, we design a new class of topologies, FatClique, that, while being performance-equivalent to existing topologies, is comparable to, or better than them by all our lifecycle management complexity metrics. Now, there\u2019s probably only a relatively small subset of The Morning Paper readers involved in designing and deploying datacenter network topologies. So my challenge to you as you read through this paper, is to think about where the hidden complexity and costs are in your own systems. Would you do things differently if these were made more visible? It would be great to see more emphasis for example on things like developer experience (DX) and operational simplicity \u2013 in my experience these kinds of attributes can have an outsize impact on the long-term success of a system. Anyway, let\u2019s get back to cables and switches\u2026  Physically deploying network topologies  When it comes to laying out a network topology for real in a datacenter, you need to think about packaging, placement, and bundling. Packaging is how you group things together, e.g. the arrangement of switches in racks, and placement concerns how these racks are physically placed on the datacenter floor. Placement in turn determines the kinds of cabling you need, and for optical cables the power of the transceivers. Within a rack we might package several connected switches into a single chassis using a backplane. At the other end of the scale, blocks are larger units of co-placement and packaging that combine several racks. With all those connections, it makes things a lot easier to group together multiple fibres all connecting the same two endpoints (racks) into bundles, which contain a fixed number of identical length fibres. Manufacturing bundles is simpler than manufacturing individual fibres, and handling such bundles significantly simplifies operational complexity. Patch panels make bundling easier by providing a convenient aggregation point to create and route bundles. Bundles and fibres are physically routed through the datacenter on cable trays. The trays themselves have capacity constraints of course. Here\u2019s an example of a logical Clos topology and its physical instantiation:  The authors identify three key metrics that together capture much of the deployment complexity in a topology:  The number of switches. More switches equals more packaging complexity. The number of patch panels, which is a function of topological structure and a good proxy for wiring complexity. The number of bundle types. This metric captures the other important part of wiring complexity \u2013 how many distinct bundle types are needed. A bundle type is represented by its capacity (how how many fibres) and its length. These complexity measures are complete. The number of cable trays, the design of the chassis, and the number of racks can be derived from the number of switches (and the number of servers and the datacenter floor dimensions, which are inputs to the topology design). The number of cables and transceivers can be derived from the number of patch panels. Here\u2019s how Clos and Expander (Jellyfish) representative topologies for the same number of servers stack up against these metrics:  The expander graph topology shows much higher deployment complexity in terms of the number of bundle types. Clos also exposes far fewer ports outside of a rack (it has better port hiding). Expanding existing networks  When you want to expand an existing network first you need to buy all the new gear and lay it out on the datacenter floor, and then you can begin a re-wiring process. This is all going on with live traffic flowing, so expansion is carried out in steps. During each step the capacity of the topology is guaranteed to be at least some percentage of the existing topology capacity. The percentage is sometimes known as the expansion SLO. During a step existing links to be re-wired are drained, then human operators physical rewire links at patch panels. The new links are tested and then undrained (strange word! ), i.e., brought into service. For example, here\u2019s a logical expansion (top row) and its physical realisation:  The most time-consuming part of all this is the physical rewiring. The two metrics that capture expansion complexity are therefore:  The number of expansion steps, and  The average number of rewired links in a patch panel rack. Here\u2019s how Clos and Expander stack up on those metrics for the same networks we saw earlier:  This time the victory goes to Expander (Jellyfish). Jellyfish has a much higher north-to-south capacity ratio. Northbound links exit a block, and southbound links are to/from servers within a block. \u201cFat edges\u201d have more northbound than southbound links, and the extra capacity means you can accomplish more movement in each step. Clos topologies re-wire more links in each patch panel during an expansion step and require many steps because they have a low north-south capacity ratio. Enter the FatClique  Inspired by these insights, the authors define a new class of topologies called FatClique, which combine the hierarchical structure of Clos with the edge expansion capabilities of expander graphs. There are three levels in the hierarchy. A clique of switches form a sub-block. Cliques of sub-blocks come together to form blocks. And cliques of blocks come together to from the full FatClique topology. Four key design variables determine the particular instantiation of a FatClique topology: the number of ports in a switch that connect to other servers; the number of ports in a switch that connect to other sub-blocks in a block; the number of switches in a sub-block; and the number of sub-blocks in a block. A synthesis algorithm  takes a set of six input constraints (see \u00a75.1) and determines the values for these four design variables. There is plenty more detail in section 5 of the paper which I don\u2019t have the space to do justice too here. FatClique vs Clos vs Expander  The evaluation compares FatClique to Clos, Xpander, and Jellyfish at different network topology sizes, as shown in the table below. ( Enlarge )  Here\u2019s how they stack up against the complexity metrics:  Number of switches  Number of patch panels  Number of bundle types  and associated cabling costs:  Number of expansion steps  Average number of rewired links  We find that FatClique is the best at most scales by all our complexity metrics. (The one exception is that at small and medium scales, Clos has slightly fewer patch panels). It uses 50% fewer switches and 33% fewer patch panels than Clos at large scale, and has a 23% lower cabling cost (an estimate we were able to derive from published cable prices). Finally, FatClique can permit fast expansion while degrading network capacity by small amounts (2.5-10%): at these levels, Clos can take 5x longer to expand the topology, and each step of Clos expansion can take longer than FatClique because the number of links to be rewired at each step per patch panel can be 30-50% higher. The one thing I couldn\u2019t find in the evaluation is any data to back up the opening claim that FatClique achieves all of this \u201cwhile being performance-equivalent to existing topologies.\u201d  The last word  As the management complexity of networks increases, the importance of designing for manageability will increase in the coming years. Our paper is only a first step in this direction\u2026", "prediction": "Lifecycle management is the process of building a network, physically deploying it on a data-center floor, and expanding it over several years so that it is available for use by a constantly increasing set of services. With datacenters living on for years, sometimes up to a decade, their lifecycle costs can be high. A data center design that is hard to deploy can stall the rollout of services for months. FatClique is a new class of topologies that, while being performance-equivalent to existing topologies, is comparable to, or better than them by all our lifecycle management complexity metrics. We find neither class dominates the other: Closling has lower wiring complexity; its symmetric design leads to more uniform bundling. Expander graphs also demonstrate better expansion capacity because they have fat edges (4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 80, 81, 82, 83, 84, 84,. 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 111, 113,. 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 131, 128, 129, 130,. 131, 131,. 130, 132, 133, 134, 135, 134,. 135, 136, 137, 138, 139, 140, 145, 149, 150, 151, 162, 163, 164, 165, 168, 169, 170, 174, 175, 176, 177, 178, 179, 188, 189, 190, 191, 192, 193, 204, 194, 195, 196, 197, 198, 199, 200, 220, 217, 218, 204,. 204, 217.", "simplified_prediction": "Lifecycle management is the process of building a network , physically using it on a data floor . It expands it over several years so that it is available for use by a constantly increasing set of services . With people living on for years , sometimes up to ten years , their lifecycle costs can be high . A data center design that is hard to stop people from being rolled into services for months . FatClique is a new class of topologies that , while being performance-equivalent to existing topologies , is similar to , or better than them by all our lifecycle management complexity . We find neither class dominates the other : Closling has lower wiring complexity ; its design leads to more uniform bundling . The total capacity of an expansion will also show better expansion capacity because they have fat edges ( 4 , 5 , 6 , 7 , 8 , 9 , 10 , 12 , 12 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 23 , 24 , 25 , 26 , 27 , 28 , 29 , 29 , 29 , 30 , 31 , 32 , 33 , 35 , 35 , 35 , 35 , 37 , 36 , 36 , 48 , 48 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 49 , 51 , 51 , 49 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 , 51 85 , 87 , 88 , 89 , 90 , 91 , 92 , 93 , 94 , 94 , 95 , 97 , 97 , 99 , 100 , 102 , 104 , 106 , 107 , 108 , 108 , 110 , 113 , 111 , 113 , 113 , 111 , 113 . 114 , 117 , 118 , 119 , 120 , 121 , 122 , 123 , 124 , 121 , 128 , 128 , 128 , 129 , 130 . 131 , 131 , pp . 130 , 133 , 135 , 134 , 134 . 135 , 137 , 138 , 138 , 139 , 145 , 149 , 150 , 151 , 162 , 163 , 165 , 168 , 168 , 168 , 170 , 174 , 175 , 175 , 177 , 177 , 178 , 178 , 179 , 198 , 191 , 191 , 192 , 193 , 193 , 204 , 194 , 195 , 195 , 195 , 195 , 198 , 196 , 196 , 196 , 198 , 196 , 198 , 198 , 198 , 198 , 196 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 198 , 204 , 217 ."}
{"ground_truth": "KV-Direct: High-performance in-memory key-value store with programmable NIC Li et al., SOSP\u201917  We\u2019ve seen some pretty impressive in-memory datastores in past editions of The Morning Paper, including FaRM , RAMCloud , and DrTM . But nothing that compares with KV-Direct:  With 10 programmable NIC cards in a commodity server, we achieve 1.22 billion KV operations per second, which is almost an order-of-magnitude improvement over existing systems, setting a new milestone for a general-purpose in-memory key-value store. Check out the bottom line in this comparison table from the evaluation:  ( Enlarge )  In addition to sheer speed, you might also notice that KV-Direct is 3x more power efficient than other systems, and the first general purpose KVS system to achieve 1 million KV operations per watt on commodity servers. Since the server CPU can also be used to run other workloads at the same time, you can make a case for KV-Direct being as much as 10x more power efficient than CPU-based systems. What we\u2019re seeing here is a glimpse of how large-scale systems software of the future may well be constructed. As the power ceiling puts a limit on multi-core scaling, people are now turning to domain-specific architectures for better performance. A first generation of key-value stores were built in a straightforward manner on top of traditional operating systems and TCP/IP stacks. More recently, as both the single core frequency scaling and multi-core architecture scaling are slowing down, a new research trend in distributed systems is to leverage Remote Direct Memory Access (RDMA) technology on NIC to reduce network processing cost. KV-Direct however, goes one step beyond. To support network virtualisation, more and more servers in data centers are now equipped with programmable NICS containing field-programmable gate arrays (FPGA). An embedded NIC chip connects to the network, and a PCIe connector attaches to the server. KV-Direct uses the FPGA in the NIC to implement key-value primitives directly. Like one-sided RDMA (Fig 1b below), KV-Direct bypasses the remote CPU. But it also extends the RDMA primitives from simple memory operations (READ and WRITE) to key-value operations (GET, PUT, DELETE and ATOMIC ops) \u2014 Fig 1c below. Compared with one-sided RDMA based systems, KV-Direct deals with the consistency and synchronization issues on the server-side, thus removing computation overhead in the client, and reducing network traffic. In addition, to support vector-based operations and reduce network traffic, KV-Direct also provides new vector primitives UPDATE, REDUCE, and FILTER, allowing users to define active messages and delegate certain computations to programmable NIC for efficiency. Design goals and challenges  Use cases for in-memory key-value stores have evolved beyond caching to things such as storing data indices, machine learning model parameters, nodes and edges in graph computing, and sequencers in distributed synchronisation. The role of the store shifts from object caching to a generic data structure store (c.f. Redis). This leads to the following design goals:  High batch throughput for small key-value pairs (e.g., model parameters, graph node neighbours). Predictable low-latency (e.g., for data-parallel computation,where tail latency matters)  High efficiency under write-intensive workloads (e.g., graph computations, and parameter servers)  Fast atomic operations  (e.g., for centralized schedulers, sequencers , counters and so on). Vector-type operations (for machine learning and graph computing workloads that often require operating on every element in a vector). The throughput constraint ends up being PCIe bandwidth:  In order to saturate the network with GET operations, the KVS on NIC must make full use of PCIe bandwidth and achieve close to one average memory access per GET. Getting to this level involves work on three fronts:  Minimising DMA (direct memory access) requests per KV operation. The two major components that drive random memory access are hash tables and memory allocation. Hiding PCIe latency while maintaining consistency, which entails pipelining requests. Care must be taken to respect causal dependencies here though. Balancing load between NIC DRAM and host memory. The NIC itself has a small amount of DRAM available, but it turns out not to be much faster than going over PCIe. So the trick turns out to be to use both in order to utilise the joint bandwidth. KV-Direct  KV-Direct enables remote direct key-value access. Clients send operation requests to the KVS server, and the programmable NIC processes requests and sends back results, bypassing the CPU. The following table shows the supported operations. The most interesting of course are the vector operations. KV-Direct supports two types of vector operations: sending a scalar to the NIC on the server, where the NIC applies the update to each element in the vector; and sending a vector to the server, where the NIC updates the original vector element-by-element. Furthermore, KV-Direct supports user-defined update functions as a generalisation to atomic operations. The update functions needs to be pre-registered and compiled to hardware logic before executing. When the user supplies an update function, the KV-Direct toolchain duplicates it several times to leverage FPGA parallelism and match computation with PCIe throughput, and then compiles it into reconfigurable hardware logic using a high-level synthesis (HLS) tool. These functions can be used for general stream processing on a vector value. The programmable NIC on the KVS server is reconfigured as a KV processor, which receives packets from the network, decodes vector operations, and buffers KV operations in a reservation station. The out-of-order engine then issues independent KV operations from the reservation station into the decoder. To minimise memory accesses, small KV pairs are stored inline in the hash table, while others are stored in dynamically allocated memory from a slab memory allocator. After a KV operation completes, the result is sent back to the out-of-order execution engine to find and execute matching KV operations in the reservation station. The reservation station is used to avoid dependencies between two KV operations leading to data hazards and a stalled pipeline. We borrow the concept of dynamic scheduling from computer architecture and implement a reservation station to track all in-flight KV operations and their execution context. To saturate PCIe, DRAM and the processing pipeline, up to 256 in-flight KV operations are needed. However, comparing 256 16-byte keys in parallel would take 40% of the logic resource of our FPGA. Instead, we store the KV operations in a small hash table in on-chip BRAM, indexed by the hash of the key. When a KV operation completes, the latest value is forwarded to the reservation station, where pending operations in the same hash slot are checked. Those with a matching key are executed immediately and removed from the station. Further design and implementation details can be found in sections 3 and 4 of the paper. Evaluation  The evaluation section contains a suite of microbenchmarks, followed by a system benchmark based on the YCSB workload. To simulate a skewed Zipf workload, skewness 0.99 was chosen. This is referred to as the long-tail workload in the figures. The testbed comprises eight servers with two 8-core CPUS per server,and one Arista switch. There is a total of 128 GiB of host memory per server. A programmable NIC is connected to the PCIe root complex of CPU 0, and its 40 Gbps Ethernet port is connected to the switch. The NIC has two PCIe Gen3 x8 links in a bifurcated Gen3 x16 physical connector. Here\u2019s the overall throughput achieved by the system. The throughput of a KV-Direct NIC is on-par with a state-of-the-art KVS server with tens of CPU cores. Without network batching, the tail latency ranges from 3-9  s depending on KV size, operation type, and key distribution. Network batching adds less than 1  s latency, but significantly improves performance. It is possible to attach multiple NICs per server. With 10 KV-Direct NICs on a server, one billion KV ops/s is readily achievable on a commodity server. Each NIC owns a disjoin partition of the keys. Multiple NICs suffer the same load imbalance problem as a multi-core KVS implementation, but for a relatively small number of partitions (e.g. 10) the load imbalance is not too great \u2013 1.5x of the average in the highest loaded NIC even for the long-tail highly skewed workload. KV-Direct throughput scales almost linearly with the number of NICS on a server. The last word:  After years of broken promises, FPGA-based reconfigurable hardware finally becomes widely available in main stream data centers. Many significant workloads will be scrutinized to see whether they can benefit from reconfigurable hardware, and we expect much more fruitful work in this general direction.", "prediction": "In-memory key-value store (KVS) is a key distributed system component in many data centers. KVS enables access to a shared key- Value hash table among distributed clients. With 10 programmable NIC cards in a commodity server, we achieve 1.22 billion KV operations per second, which is almost an order-of-magnitude improvement over existing systems. This approach achieves better performance for transactional operations but degrades performance for PUT operations due to high communication and synchronization overhead. For most of these applications, the performance of the KVS is the key factor that directly determines the system efficiency. In the meantime, another line of research uses one-sided CPU and remote RDMA shift to bypass remote KVS processing and transfer workload to clients. The research was conducted during an internship at Microsoft Research in Shanghai, China. For confidential support, call the National Suicide Prevention Lifeline at 1-800-273-8255 or visit http://www.suicidepreventionlifeline.org/. For confidential. support in the U.S., call the Samaritans on 08457 90 90 90 or visit a local Samaritans branch or see http:// www.samaritans.org/ for details. In Europe, contact the National Institute of Health and Human Services at http:www.acm.org.uk/\u00a0for-health-and-well-being\u00a0in-the-U.S. or call \u00a0the\u00a0National Institute of Public Health and Social Security at\u00a01-844-788-9090. For more information on how to use KV-Direct in your data center, visit http: www.acM.com/kv-direct/. For more about the ACM\u2019s In-Memory Key-value Store (KV-SV) project, visit the In-memory Key-Value Store Project (ISV) page. For. more information about KVS, visit www.ACM.gov/KVS/Kv-S V-V-V, or see www. ACM.net/KVV- V-S, or click here for a copy of the article. The article was written by Bojie Li and Zhenyuan Ruan, and is published by ACM on behalf of ACM (http: www.-acm-com.org).", "simplified_prediction": "In-memory key-value store is a key distributed system that can be used in many data centers . This allows access to a shared key- Value hash table among other clients . With 10 programmable NIC cards in a commodity server , we get 1.22 billion KV operations per second , which is almost the same as the same server in the same order . This approach achieves better performance for playing operations because of high communication and synchronization overhead because of high communication . For most of these applications , the performance of the KVS is the key factor that is directly related to the system . In the meantime , another line of research uses one-sided CPU and remote RDMA shift to bypass remote KVS processing and transfer workload to clients . The research was conducted at Microsoft Research in Shanghai , China during World War II . For support , call the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 or visit to the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 . For confidential information support in the U . , call the Samaritans on 08457 90 90 90 90 or visit a local Samaritans branch or it is also known as samaritans . In Europe , contacting the National Institute of Health and Human Services at the same time as the National Institute of Health and Social Security at 1 - 844 - 788- 9090 . This is called the National Institute of Public Health and Social Security . For more information on how to use KV-Direct in your data center , visit other things : www . Other pages In-Memory Key-value Store ( KV-SV ) project , the In-memory Key-Value Store Project ( ISV ) page for more about it . For . more information about KVS , visit www . ACM gov / KVS / Kv-S V-V-V or see www . ACM . This is why KV- V-S , or click here for a copy of the article . The article was written by Bojie Li and Zhenyuan Ruan . The article is published by ACM on behalf of ACM which can be used ."}
{"ground_truth": "The paper presents a generalized framework for graph clustering (clusters of network motifs) on the basis of higher-order connectivity patterns. Approach  Given a motif M , the framework aims to find a cluster of the set of nodes S such that nodes of S participate in many instances of M and avoid cutting instances of M (that is only a subset of nodes in instances of M appears in S). Mathematically, the aim is to minimise the motif conductance metric given as cutM(S, S\u2019) / min[volM(S), volM(S\u2019)] where S\u2019 is complement of S, cutM(S, S\u2019) = number of instances of M which have atleast one node from both S and S\u2019 and volM(S) = Number of nodes in instances of M that belong only to S.  Solving the above equation is computationally infeasible and an approximate solution is proposed using eigenvalues and matrices. The approximate solution is easy to implement, efficient and guaranteed to find clusters that are at most a quadratic factor away from the optimal. Algorithm  Given the network and motif M, form a motif adjacency matrix WM where WM(i, j) is the number of instances of M that contains i and j.  Compute spectral ordering of the nodes from normalized motif laplacian matrix. Compute prefix set of spectral ordering with small motif conductance. Scalability  Worst case O(m1.5), based on experiments O(m1.2) where m is the number of edges. Advantages  Applicable to directed, undirected and weighted graphs (allows for negative edge weights as well). In case the motif is not known beforehand, the framework can be used to compute significant motifs. The proposed framework unifies the two fundamental tools of network science (motif analysis and network partitioning) along with some worst-case guarantees for the approximations employed and can be extended to identify higher order modular organization of networks.", "prediction": "Networks are a fundamental tool for understanding and modeling complex systems in physics, biology, neuroscience, engineering, and social science. Here we develop a generalized framework for clustering networks based on higher-order connectivity patterns. This framework provides mathematical guarantees on the optimality of obtained clusters and scales to networks with billions of edges. The framework reveals higher- order organization in a number of networks including information propagation units in neuronal networks and hub structure in transportation networks. For each network motif (Figure 1A), a different higher- Order clustering may be revealed, which means that different organizational patterns are exposed depending on the chosen motif. Finding the exact exact set of nodes that minimizes the conductance of the motif is computationally infeasible (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 74, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 94,. 95, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 111, 113,. 116, 116, 117, 118, 119, 119,. 118, 123, 118,. 119, 120, 121, 122, 123,. 123, 124, 125, 130, 131, 130,. 130, 130. 135, 135, 134, 131,. 135, 136, 137, 137,. 138, 139, 144, 145, 155, 156, 157, 163, 168, 165, 175, 174, 177, 178, 179, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 204, 199, 200, 204.", "simplified_prediction": "Networks are an important tool for understanding and modeling systems in physics , biology , engineering , and social science . Here we develop a framework for clustering networks that are based on higher-order patterns . This means that mathematical guarantees on the optimality of obtained clusters and scales to networks with billions of edges . The framework shows higher- order organization in a number of networks including information units that can be moved to other networks and hub structure in transportation networks . Each network motif ( Figure 1A ) , a different higher- Order clustering may be revealed , which means that different patterns depend on the chosen motif . According to the exact set of nodes that minimizes the conductance of the motif is computationally infeasible ( 1 , 2 , 4 , 6 , 8 , 9 , 9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 35 , 35 , 35 , 41 , 41 , 41 , 35 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 35 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 35 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 35 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 41 , 35 , 41 , 41 , 95 , 96 , 97 , 98 , 99 , 100 , 102 , 103 , 104 , 105 , 106 , 108 , 108 , 112 , 113 , 114 , 111 , 111 , 113 , 113 . 116 , 117 , 118 , 119 , 119 . 118 , 123 , 118 . 119 , 120 , 121 , 122 , 123 . 123 , 125 , 121 , 131 , 130 . 130 . 135 , 134 , 131 , 131 . 135 , 137 , 137 , 137 . 138 , 139 , 144 , 145 , 156 , 167 , 163 , 168 , 175 , 175 , 177 , 178 , 178 , 188 , 189 , 191 , 192 , 193 , 193 , 194 , 195 , 195 , 195 , 195 , 196 , 198 , 199 , 199 , 200 204 ."}
{"ground_truth": "They suggest a new method to train GANs. They start training them at low resolution (4x4), wait until \"convergence\", then add more convolutions to the existing model to generate and discriminate higher resolutions. Each new block of convolutions is slowly blended in, instead of being added from one batch to the next. Combined with two new normalization techniques, they get good-looking images at up to 1024x1024 on their new CelebA-HQ dataset (CelebA in high resolution). They also suggest a new scoring method based on the approximated Wasserstein distance between real and generated image patches. According to that score, their progressive training method improves results significantly. What  They suggest a new, progressive training method for GANs. The method enables the training of high resolution GANs (1024x1024) that still produce good-looking, diverse images. They also introduce two new normalization techniques. They also suggest a new method to estimate/score the quality of the generated images. They introduce CelebA-HQ, a variation of CelebA containing high resolution images. How  Progressive growing/training  They train their GANs resolution by resolution, starting with 4x4 and going up to 1024x1024 (a bit similar to LAPGAN). Visualization:  Initially, their generator produces 4x4 images and the discriminator receives 4x4 images. Once training at 4x4 does not improve any more (measured by their new score, see below), they add an upscaling module (to 8x8) to the generator and add a downscaling one to the discriminator. They don't switch to the added convolutions instantly/suddenly, but give the model a grace period during which the upscaled features are computed from (1-alpha)*A + alpha*B, where A are the features after just upscaling, B are the features after upscaling AND the convolutions and alpha is the overlay factor, which is gradually increased over time. This is done for both the generator and the discriminator and at all resolutions. Visualization:  Note that all layers are always trained (after they were added to the models). Training for the earlier layers does not stop. Training in this way focuses most of the computation on the earlier resolutions. It also seems to increase stability, as the model does not have to learn all features of all resolutions at the same time. Minibatch Standard Deviation  They try to improve diversity by adding a method very similar to minibatch discrimination. They compute the standard deviation of each feature per spatial location (for one of the disciminator's last layers). They do this per example in each minibatch, resulting in B*H*W*C standard deviations. (B = batch size, H = height, W = width, C = channels/filters)  They average these values to one value, then replicate them to size H*W and concatenate that to the layer's output. This adds a channel with one constant value to each example in the minibatch. The value is the same for all examples. Equalized Learning Rate  They use Adam for their training. Adam updates weights roughly based on mean(gradient)/variance(gradient) (per weight). They argue that this has the downside of equalizing all weight's stepsizes. But some weights might require larger stepsizes and other smaller ones (large/small \"dynamic range\"). As a result, the learning rate will be too small for some weights and too large for others. To evade this problem, they first stop using modern weight initialization techniques and instead simply sample weights from the standard normal distribution N(0,1). Then, they rescale each weight w_i continuously during runtime to w_i/c, where c is the per-layer normalization from He's initializer. (TODO exact formula for c?) (This looks an aweful lot like weight normalization .) Using simpler weight initialization equalizes the dynamic range of parameters. Doing the normalization then fixes problems related to the simpler weight initialization. Pixelwise Feature Vector Normalization in the Generator  They argue that collapses in GANs come from the discriminator making some temporary error, leading to high gradients, leading to bad outputs of the generator, leading to more problems in the discriminator and ultimately making both spiral out of control. They fix this by normalizing feature vectors in the generator, similar to local response normalization. They apply the following equation in the generator (per spatial location (x, y) with N = number of filters):  Scoring Images  They suggest a new method to score images generated by the generator. They perform the following steps:  Sample 16384 images from the generator and the dataset. Build a Laplacian Pyramid of each image. It begins at a 16x16 resolution of the image and progressively doubles that until the final image resolution. Each level of the pyramid only contains the difference between the sum of the previous scales and the final image (i.e. each step is a difference image, containing a frequency band). Sample per image 128 7x7 neighbourhoods/patches (randomly?) from each pyramid level. Per image set (generator/real) and pyramid level, compute the mean and standard deviations of each color channels of the sampled patches. Normalize each patch with respect to the computed means and standard deviations. Use Sliced Wasserstein Distance (SWD) to compute the similarity between the image sets (generator/real). The result is one value. Lower values are better. CelebA-HQ  They derive from CelebA images a new dataset containing 30k 1024x1024 images of celebrity faces. They use a convolutional autoencoder to remove JPEG artifacts from the CelebA images. They use an adversarially-trained superresolution model to upscale the images. They crop faces from the dataset based on their facial landmarks, so that each final face has a normalized position and rotation. They rescale the images to 1024x1024 using bilinear sampling and box filters. They manually select the 30k best looking images. Other stuff  They use Adam for training (alpha=0.001, beta1=0, beta2=0.99). They use the WGAN-WP method for training, but LSGAN also works. They set gamma to 750 (from 1) for CIFAR-10, incentivizing fast transitions. They also add regularization loss on the discriminator, punishing outputs that are very far away from 0. Their model for CelebA-HQ training is similar to a standard DCGAN model. The generator uses two convolutions after each upscaling, the discriminator analogously two convolutions after each downscaling. They start with 512 filters in the generator and end in 16 (before the output) - same for the discriminator. They use leaky ReLUs in the generator and discriminator. They remove batch normalization everywhere. Results  Scores  Results, according to their new scoring measure (Sliced Wasserstein Distance) and MS-SSIM measure:  So progressive growing (b) significantly improves results. Same -- to a smaller degree -- for minibatch standard deviation (e), equalized learning rate (f) and pixelwise normalization (g). Minibatch discrimination worsened the results. Using small batch sizes also worsened the results. In (d) they \"adjusted the hyperparameters\" (??) and removed batch normalization. They generate 1024x1024 CelebA images, while maintaining pixelwise quality compared to previous models. They achieve an Inception Score of 8.80 on CIFAR-10. Images look improved. CelebA-HQ example results:  LSUN dining room, horse, kitchen, churches:", "prediction": "We describe a new training methodology for generative adversarial networks. The key idea is to grow both the generator and discriminator progressively. Starting from a low resolution, we add new layers that model increasingly fine details as training progresses. This both speeds the training up and greatly stabilizes it, allowing us to produce images of unprecedented quality, e.g., CELEBA images at 1024. We also propose a simple way to increase the variation in generated images, and achieve a record inception score of 8.80 in unsupervised CIFAR10. We suggest a new metric for evaluating GAN results, both in terms of image quality and variation. We construct a higher-quality version of the CELEba dataset. The GAN does not explicitly require the entire training data to be represented by the resulting image quality. The tradeoff is that there is a tradeoff between training quality and conventional image wisdom. We will discuss this in Section 2 of the paper. We use the improved least-squares loss loss to experiment with the generation of high-resolution images, which makes it easier to tell the generated images apart from training images. Large resolutions drastically amplifying the gradient problem also necessitate using smaller minibatches due to memory constraints, thus further compromising training stability. Our contributions are largely orthogonal to this ongoing discussion, and we primarily use theimproved least-Squares loss to Experiment with Wasserstein loss, but we will discuss the formulation in Section 3 of the book. The book is published by Oxford University Press and can be pre-ordered on Amazon.com for $39.99. The first edition of the journal, which includes the book, is available on Amazon Kindle for $24.99, with a two-week free trial. For confidential support, call the National Suicide Prevention Lifeline at 1-800-273-8255 or visit\u00a0http://www.suicidepreventionlifeline.org/. The second edition, which is on sale on Amazon for $29.99 and includes the third edition, is also available for $34.99 (with a one-year free trial). The book can be ordered from\u00a0Amazon.com\u00a0for $49.99; the fourth edition, for $59.99,. the fifth edition, \u00a0the book is available from\u00a0the\u00a0online auction site, www.samaritans.org.", "simplified_prediction": "We describe a new training methodology for the adversarial network . The key idea is to grow both the generator 's and discriminator . In a low resolution , we add new layers that model increasingly fine details as training is done . This speeds the training up and greatly stabilizes it . This allows us to produce images of quality , e.g. CELEBA images at 1024 . We also propose a simple way to increase the variation in generated images . He also achieve a record for 8.80 unsupervised CIFAR10 . We suggest a new metric for evaluating GAN results , both in terms of image quality and variation . We a higher level version of the CELEba dataset . The GAN does not require the entire training data to be represented by the image quality when it is needed . The tradeoff is that there is a tradeoff between training quality and a good image . We will talk about this in Section 2 of the paper . We use the improved least-squares loss to experiment with the picture of the images . This makes it easier to tell the picture of the images apart from training images . Large resolutions that have amplifying the problem also necessitate using smaller minibatches due to memory constraints , thus further compromising training stability . Our contributions are largely orthogonal to this ongoing discussion , and we mostly use theimproved least loss to the Wasserstein loss , but we will talk about the formulation in Section 3 of the book . The book is published by Oxford University Press . It can also be put on Amazon for $ 39.99 . The first edition of the journal , which includes the book , is available on Amazon Kindle for $ 24.99 , with a free trial . For support , call the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 or visit to the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 . The second edition , which is on sale on Amazon for $ 29.99 . It includes the third edition , is also available for $ 34.99 ( with a one-year free trial ) . The book can be ordered from Amazon to make $ 49.99 . The fourth edition is for $ 59.99 . The fifth edition , the book is available from the online auction site and is available ."}
{"ground_truth": "In this paper, the authors proposed a method for convexifying convolutional neural networks to train them without backpropagation. Furthermore, this relaxation to the convex setting allows for theoretical proofs of bounds on the generalization error. Succinctly, they propose to use RKHS and the kernel trick to lift the data into a high-dimensional space that is expressive enough to capture certain nonlinear activation functions. Hence, on experiments on MNIST and CIFAR-10, they show that they can outperform smaller CNNs by \u201cconvexifying\u201d them. They note that their method doesn\u2019t work with max pooling or very deep CNNs with lots of bells and whistles. This is a thought-provoking paper. I like how the authors pursued a theoretically interesting question, even though there isn\u2019t much practical use yet for this. I don\u2019t have personal experience writing theory papers, but I imagine that this is a good(?) representation of how they often go in ML. The research is driven by an interesting theoretical question, not a practical application that needs solving/SOTA results.", "prediction": "Convexified convolutional neural networks (CCNNs) capture the parameter sharing of CNNs in a convex manner. Empirically, CCNNs achieve performance competitive with CNNs trained by backpropagation, SVMs, fully-connected neural networks, stacked denoising auto-encoders, and other baseline methods. We show that the generalization error obtained by a conveXified CNN converges to that of the best possible CNN. For learning deeper networks, we train CCNNS in a layer-wise manner. On the CIFAR-10 dataset, we outperform CNNs of the same depths, using nonconvex optimization methods that do not involve nonconx optimization. We find that it achieves the state-of-the-art performance using the MNIST digit dataset as well as four variation datasets. We obtain CCNN's by convexifying CNNs with RKHS filters by a low-rank matrix. Our results refer to the oracle risk risk for the size of the sample for CCnns, which we show is significantly higher than that of a fully- connected neural network. For more than one layer, our theory does not apply, but we provide encouraging empirical results. We then apply to the handwritten MNIST dataset, and find that CCNN\u2019s outperform the same baseline methods, using a greedy layer- Wise training heuristic. We conclude by showing that it is upper bounded by thebest possible performance achievable by a two-layer CNN given infinite dataa quantity to which we add a model that decays to zero polynomially in the sample size. We refer to this as the \u2018oracle risk\u2019 term that we refer to when the model is more than a few layers deep in the data set, and we show that it can be used to predict the outcome of a particular type of game. We also refer to it as \u2018the oracle error\u2019 when it is applied to a handwritten handwritten digit dataset, which is a well-known and well-understood problem. We. conclude by saying that the \u201coracle inequality\u2019 on generalizationerror achieved by our class of CCNNes is lower than that on CNNs from the previous paper.", "simplified_prediction": "Convexified convolutional neural networks capture the parameter sharing of CNNs in a convex manner . CCNNs achieve performance competitive with CNNs trained by backpropagation , SVMs , stacked denoising auto-encoders and other baseline methods , and other baseline methods . We show that the generalization error obtained by a CNN converges to that of the best possible CNN . For learning deeper networks , we train a lot of money in a layer-wise manner . On the CIFAR-10 dataset , we outperform CNNs of the same depths , using nonconvex optimization methods that do not involve other things . We find that it can get the state-of-the-art performance using the MNIST digit dataset as well as four types of data . We get CCNN's by convexifying CNNs with RKHS filters by a matrix . Our results mean the risk of the size of the sample for higher than that of a fully connected neural network , which we show is much higher than that of the risk . For more than one layer , our theory does not apply , but we provide a lot of energy . We then apply to the handwritten MNIST dataset . They find that the outperform the same baseline methods , using a greedy layer- Wise training heuristic . This is because showing that it is upper bounded by thebest possible performance achievable by a two-layer CNN given infinite dataa quantity to which we add a model to the sample size . We call this as a risk term when the model is more than a few layers deep in the data set , and we show that it can be used to predict the outcome of a particular type of game . We also mean it as one of the most common errors when it is applied to a handwritten handwritten handwritten digit dataset , which is a well-known and well-known problem . We . conclude by saying that the main person inequality is lower than that on CNNs from the previous paper . This is lower than that on CNNs from the previous paper ."}
{"ground_truth": "Proposes a novel, end-to-end architecture for generating short email responses. Single most important benchmark of its success is that it is deployed in Inbox by Gmail and assists with around 10% of all mobile responses. . Challenges in deploying Smart Reply in a user-facing product  Responses must always be of high quality. Ensured by constructing a target response set to select responses from. The likelihood of choosing the responses must be maximised. Ensured by normalising the responses and enforcing diversity. The system should not add latency to emails. Ensured by using a triggering model to decide if the email is suitable to undergo the response generation pipeline. Computation time is further reduced by finding approximate best result instead of the best result. Ensure privacy by encrypting all the data which adds challenge in verifying the model's quality and debugging the system. Architecture  Preprocess Email  Perform actions like language detection, tokenization, sentence segmentation etc on the input email. Triggering Model  A feed-forward neural network (with embedding layer and 3 fully connected hidden layers) to decide if the input email is suitable for suggesting responses. Data  Training set of pairs (o, y) where o is the incoming message and y is a boolean variable to indicate if the message had a response. Features  Unigrams, bigrams from the messages. Signals like - is the recipient in the contact list of the sender. Response Selection  LSTM network to predict the approximate best response for an incoming message o  Network  Sequence to Sequence Learning. Reads the input message (token by token) and encode a vector representation. Compute softmax to get the probability of first output token given the input token sequence. Keep feeding in the previous response tokens and the input token sequence to compute the probability of next output token. During inference, approximate the most likely response greedily by taking the most likely response at each timestamp and feeding it back or by using the beam search approach. Response Set Generation  Generate a set of high-quality responses that also capture the variability in the intent of the response. Canonicalize the email response by extracting the semantic structure using a dependency parser. Partition all response messages into \"semantic\" clusters. These semantic clusters define the response space for scoring and selecting possible responses and for promoting diversity among the responses. Semantic Intent Clustering  Since a large, labelled dataset is not available, a graph based, semi-supervised approach is used. Graph Construction  Manually define a few clusters with a small number of example responses for each cluster. Construct a graph with frequent response messages (including the labelled nodes) as response nodes (VR). For each response node, extract a set of feature nodes (VF) corresponding to features like skip-gram and n-grams and add an edge between the response node and the feature node. Learn a semantic labelling for all response nodes by propagating semantic intent information (available because of labelled nodes) throughout the graph. After some iterations, sample some of the unlabeled nodes from the graph, manually label these sample nodes and repeat this algorithm until convergence. For validation, extract the top k members of each cluster and validate the quality with help of human evaluators. Suggestion Diversity  Provide users with a varied set of response by omitting redundant response (by not selecting more than one response from any semantic cluster) and by enforcing negative (or positive) responses. If the top two responses contain at least one positive (negative) response and none of the top three responses is negative (positive), the third response is replaced with a negative (positive) one. This is done by performing a second LSTM pass where the search is restricted to only positive (or negative) responses in the target set. Strengths  The system is already in production and assists with around 10% of all mobile responses. This comment has been minimized. Sign in to view  Copy link  Quote reply  vegetakarthhik commented  Nov 26, 2018  hey do you have python implementation?", "prediction": "The development of intelligent machines is one of the biggest unsolved challenges in computer science. In this paper, we propose some fundamental properties these machines should have, focusing in particular on communication and learning. We discuss a simple environment that could be used to incrementally teach a machine the basics of natural-language-based communication, as a prerequisite to more complex interaction with human users. We present some conjectures on the sort of algorithms the machine should support in order to profitably learn from the environment. A machine capable of performing complex tasks without requiring laborious programming would be tremendously useful in almost any human endeavor, from performing menial jobs for us to helping the advancement of basic and applied research. The goal is to build a machine that can learn new concepts through communication at a similar rate as a human with similar prior knowledge. We believe our roadmap constitutes the beginning of a long journey towards AI, and we hope researchers will join us in pursuing the goals it will be joined it with other goals it outlined. We tried to put this in contrast with the currently accepted paradigms in machine learning, to show that current methods are far from adequate. We must strive to develop non-increally novel techniques to developnon-increasingly novel techniques in the development of a powerful AI. We hope to join you in pursuing these other goals and joining it joining it with the other goals that will be outlined in the other articles it will join. The article is organized as follows. In Section 2 we specify the two fundamental characteristics that we consider crucial for developing intelligence. In section 3 we propose a plan for an interactive learning environment fostering the incremental development of progressively more intelligent behavior. Section 4 briefly discusses some of the algorithmic capabilities we think a machine should possess. Finally, Section 5 situates our proposal in the broader context of past and current attempts to develop intelligent machines. The plan encompasses many ideas that have already appeared in different research strands. What we believe to be novel in our approach is the way in which we are combining such ideas into a coherent program. We defined basic desiderata for an intelligent machine, stressing learning and communication as its fundamental abilities. We propose a simulated environment that requires the intelligent machine to acquire new facts and skills through communication. The machine must learn to perform increasingly more ambitious tasks, being naturally induced to develop complex linguistic and reasoning abilities.", "simplified_prediction": "The development of intelligent machines is one of the biggest challenges in computer science . In this paper , we propose some important properties of machines should have , focusing on communication , and learning . We talk about a simple environment that could be used to teach a machine the basics of natural-language-based communication , to more complex interaction with human users . We presently conjectures on the sort of algorithms the machine should support in order to learn from the environment . A machine capable of performing complex tasks without doing work would be useful in almost any human endeavor , for us to helping the advancement of basic and applied research , and applied research . The goal is to build a machine that can learn new ideas through communication at a similar rate as a human with similar knowledge . We believe our roadmap is the beginning of a long journey towards AI . We hope researchers will join us when the goals it will be joined it with other goals it outlined . We tried to put this in contrast with the currently accepted paradigms in machine learning , to show that current methods are far from needed . We must develop non-increally novel techniques to develop a novel called '' novel '' techniques in the development of a powerful AI . We hope to join you to get these other goals , and joining it with the other goals that will be outlined in the other articles it will join . The article is known as follows . In Section 2 we think the two fundamental characteristics that we consider crucial for developing intelligence . In section 3 we propose a plan for an interactive learning environment helping people to learn about progressively more intelligent behavior . Section 4 talks about some of the algorithmic capabilities we think that a machine should have . Section 5 situates our proposal in the context of past and current attempts to develop intelligent machines in the past . The plan includes many ideas that have already appeared in different things . What we believe to be novel in our approach is the way in which we do not think such ideas into a program . We defined basic desiderata for a intelligent machine , to learn learning and communication from other things . We propose a environment that requires the intelligent machine to get new facts and skills through communication . The machine must learn more tasks because it is naturally induced to develop complex linguistic and reasoning abilities ( like abilities ) ."}
{"ground_truth": "Build a supervised reading comprehension data set using news corpus. Compare the performance of neural models and state-of-the-art natural language processing model on reading comprehension task. Reading Comprehension  Estimate conditional probability p(a|c, q), where c is a context document, q is a query related to the document, and a is the answer to that query. Dataset Generation  Use online newspapers (CNN and DailyMail) and their matching summaries. Parse summaries and bullet points into Cloze style questions. Generate corpus of document-query-answer triplets by replacing one entity at a time with a placeholder. Data anonymized and randomised using coreference systems, abstract entity markers and random permutation of the entity markers. The processed data set is more focused in terms of evaluating reading comprehension as models can not exploit co-occurrence. Models  Baseline Models  Majority Baseline  Picks the most frequently observed entity in the context document. Exclusive Majority  Picks the most frequently observed entity in the context document which is not observed in the query. Symbolic Matching Models  Frame-Semantic Parsing  Parse the sentence to find predicates to answer questions like \"who did what to whom\". Extracting entity-predicate triples (e1,V, e2) from query q and context document d  Resolve queries using rules like exact match, matching entity etc. Word Distance Benchmark  Align placeholder of Cloze form questions with each possible entity in the context document and calculate the distance between the question and the context around the aligned entity. Sum the distance of every word in q to their nearest aligned word in d  Neural Network Models  Deep LSTM Reader  Test the ability of Deep LSTM encoders to handle significantly longer sequences. Feed the document query pair as a single large document, one word at a time. Use Deep LSTM cell with skip connections from input to hidden layers and hidden layer to output. Attentive Reader  Employ attention model to overcome the bottleneck of fixed width hidden vector. Encode the document and the query using separate bidirectional single layer LSTM. Query encoding is obtained by concatenating the final forward and backwards outputs. Document encoding is obtained by a weighted sum of output vectors (obtained by concatenating the forward and backwards outputs). The weights can be interpreted as the degree to which the network attends to a particular token in the document. Model completed by defining a non-linear combination of document and query embedding. Impatient Reader  As an add-on to the attentive reader, the model can re-read the document as each query token is read. Model accumulates the information from the document as each query token is seen and finally outputs a joint document query representation in the form of a non-linear combination of document embedding and query embedding. Result  Attentive and Impatient Readers outperform all other models highlighting the benefits of attention modelling. Frame-Semantic pipeline does not scale to cases where several methods are needed to answer a query. Moreover, they provide poor coverage as a lot of relations do not adhere to the default predicate-argument structure. Word Distance approach outperformed the Frame-Semantic approach as there was significant lexical overlap between the query and the document. The paper also includes heat maps over the context documents to visualise the attention mechanism. This comment has been minimized. Sign in to view  Copy link  Quote reply  yauhen-info commented  Apr 28, 2017  Thank you for sharing a good piece of work. Let me also ask if you had found a link to an implementation of the Attentive and Impatient Readers?", "prediction": "Machine reading systems can be tested on their ability to answer questions posed on the contents of documents that they have seen. Until now large scale training and test datasets have been missing for this type of evaluation. Traditional approaches to machine reading and comprehension have been based on either hand engineered grammars or information extraction methods. We have demonstrated a methodology for obtaining a large number of document- queryanswer triples and shown that recurrent and attention based neural networks provide an effective modelling framework for this task. Our analysis indicates that the Attentive and Impatient Readers are able to propagate and integrate semantic information over long distances. The incorporation of world knowledge and multi-document queries will also require the development of attention and embedding mechanisms whose complexity to query does not scale linearly with the data set size. There are still many queries requiring complex inference and long range reference resolution that our models are not yet able to answer. As such our data provides a scalable challenge that should support NLP research into the future. The results indicate that the neural models achieve a higher accuracy, and do so without any specific encoding of the document or query structure. The supervised paradigm for training machine reading. and comprehension models provides a promising avenue for making progress on the path to building full natural language understanding systems. 7Note that these examples were chosen as the average validation document contained 763 tokens and 27 entities, thus most were chosen to answer significantly harder instances than these examples. We believe that the incorporation of an attention mechanism is the key contributor to these results. The attention mechanism that we have employed is just one instantiation of a very general idea which can be further exploited. We demonstrate the efficacy of our new corpora by building novel deep learning models for reading comprehension. These models draw on recent developments for incorporating attention mechanisms into recurrent neural network architectures [6, 7, 8, 4]. We compare these neural models to a range of baselines and heuristic benchmarks based upon a traditional frame semantic analysis provided by a state-of-the-art natural language processing (NLP) pipeline. We show that these models can be used to train more expressive and accurate models, undoubtedly allowing us to train a more expressive model of reading comprehension in the near future. We also show that they are more accurate than previous models.", "simplified_prediction": "Machine reading systems can be tested on their ability to answer questions on the contents of documents that they have seen . Until now large scale training and test datasets have been missing for this type of work . Traditional approaches to machine reading and comprehension have been based on either hand engineered grammars or information extraction methods . We have shown a methodology for obtaining a large number of document- queryanswer triples and shown that attention based neural networks provide an effective modelling framework for this task . Our analysis indicates that the Attentive and Impatient Readers are able to find information over long distances and are able to read semantic . The incorporation of world knowledge and multi-document queries will also require the development of attention and embedding mechanisms whose complexity to query does not have the data set size . There are still many things that need complex inference and long range reference resolution that our models are not yet able to answer . As such , our data provides a challenge that should support NLP research into the future . The results indicate that the neural models achieve a higher accuracy , and do so without any certain kind of document or query structure . The supervised paradigm for training machine reading . and models provide a promising avenue for making progress on the path to building full natural language understanding systems . 7Note that these examples were chosen as the average validation document had 763 tokens and 27 entities . These were chosen to answer significantly harder examples than these examples . We believe that an attention mechanism is the most important contributor to these results . The attention mechanism that we have used is just one instantiation of a very general idea which can be used more often . We demonstrate the efficacy of our new corpora by building novel deep learning models for reading new things . These models draw on recent developments for using attention mechanisms into new kinds of neural network architectures [ 6 , 7 , 8 , 4 . We compare these neural models to a range of baselines and heuristic benchmarks based upon a traditional frame semantic analysis provided by a natural language processing ( NLP ) pipeline . We show that these models can be used to train more expressive and accurate models . This allows us to train a more expressive model of reading new models in the near future . We also show that they are more accurate than previous models ."}
{"ground_truth": "RPCValet: NI-driven tail-aware balancing of \u00b5s-scale RPCs Daglis et al., ASPLOS\u201919  Last week we learned about the [increased tail-latency sensitivity of microservices based applications with high RPC fan-outs. Seer uses estimates of queue depths to mitigate latency spikes on the order of 10-100ms, in conjunction with a cluster manager. Today\u2019s paper choice, RPCValet, operates at latencies 3 orders of magnitude lower, targeting reduction in tail latency for services that themselves have service times on the order of a small number of \u00b5s (e.g., the average service time for memcached is approximately 2\u00b5s). The net result of rapid advancements in the networking world is that inter-tier communications latency will approach the fundamental lower bound of speed-of-light propagation in the foreseeable future. The focus of optimization hence will completely shift to efficiently handling RPCs at the endpoints as soon as they are delivered from the network. Furthermore, the evaluation shows that \u201cRPCValet leaves no significant room for improvement\u201d when compared against the theoretical ideal (it comes within 3-15%). So what we have here is a glimpse of the limits for low-latency RPCs under load. When it\u2019s no longer physically possible to go meaningfully faster, further application-level performance gains will have to come from eliminating RPCs altogether. RPCValet balances incoming RPC requests among the multiple cores of a server. Consider for example a Redis server maintaining a sorted array in memory\u2026  \u2026 an RPC to add a new entry may incur multiple TLB misses, stalling the core for a few \u00b5s while new translations are installed. While this core is stalled on the TLB miss(es), it is best to dispatch RPCs to other available cores on the server. In theory, how fast could we go? Consider a 16-core server handling 16 requests. We could put anywhere from 1 to 16 queues in front of those cores. At one extreme we have a \u201816 x 1\u2019 architecture with 16 queues each with one associated processing unit. At the other extreme is a \u20181 x 16\u2019 architecture with one shared queue serving all 16 processing units. Or we could have e.g. a \u20184 x 4\u2019 with 4 queues each serving 4 units, and so on\u2026  If you model that out with Poisson arrivals and variety of different service time distributions (fixed, uniform, exponential, and generalised extreme value, GEV) what you\u2019ll find is that the \u20181\u00d716\u2019 architecture performs the best, and the \u201816\u00d71\u2019 architecture performs the worst. 1 x 16 significantly outperforms 16 x 1. 16 x 1\u2019s inability to assign requests to idle cores results in higher tail latencies and a peak throughput 25-73% lower than 1 x 16 under a tail latency SLO at 10x the mean service time\u2026 The theoretical results suggest that systems should implement a queueing configuration that is as close as possible to a single queue (1 x 16) configuration. In practice those models failed to account for a significant source of overhead: synchronizing across multiple cores on the single queue. When you take synchronisation into account, a dedicated queue per core starts to look like a good idea again. NICs supporting Receive-Side Scaling (RSS) can push messages into each core\u2019s queue, but while RSS can help to achieve load distribution, it can\u2019t truly achieving load balancing. Any resulting load imbalance after applying these [RSS] rules must be handled by system software, introducing unacceptable latency for the most latency-sensitive RPCs with \u00b5s-scale service times. Introducing RPCValet  RPCValet uses a push-based model, while also taking into account the current loading of the cores. It\u2019s designed for \u201cemerging architectures featuring fully integrated NIs and hardware-terminated transport protocols.\u201d. The key hardware feature is that the network interface has direct access to the server\u2019s memory hierarchy, eliminating round trips over e.g. PCIe. Servers register a part of their DRAM into a partitioned global address space (PGAS), where every server can read and write memory in RDMA fashion. (We\u2019re not given any details on system reconfiguration etc.). An integrated NI can, with proper hardware support, monitor each core\u2019s state and steer RPCs to the least loaded cores. Such monitoring is implausible without NI integration, as the latency of transferring load information over an I/O bus (e.g. ~ 1.5 \u00b5s for a 3-hop posted PCIe transaction) would mean that the NI will make delayed\u2014hence sub-optimal, or even wrong\u2014 decisions until the information arrives. With N participants in the system, RPCValet first writes every incoming message into a single PGAS-resident message buffer of NxS slots. Then it notifies the selected core to process the request. Message arrival and memory location are thus decoupled from the assignment of a core for processing. We have the synchronization-free zero-copy behaviour of a partitioned multi-queue architecture, together with the load-balancing flexibility of a single queue system. In the implementation each node maintains a send and a receive buffer. Send buffers contain a valid bit indicating whether they are currently being used, and a pointer to a buffer in local memory containing the payload. Receive buffers on the other hand have slots that are size to accommodate message payloads directly. Overall, the messaging mechanism\u2019s memory footprint is 32 x N x S + (max_msg_size + 64) x N x S bytes. That is, a few tens of MB at most. The implementation uses a simple scheme to estimate core loads. RPCValet simply keeps track of the number of outstanding send requests assigned to each core. Allowing only one inflight request per core corresponds to a true single-system queue behaviour, but introduces a small inefficiency waiting for the notification of completed request processing. A practical compromise is to allow two outstanding requests per core. This results in marginal performance gains over the single request design for ultra-fast RPCs with service times of a few nanoseconds. All IN backends independently handle incoming network packets and access memory directly, but they hand off to a single NI dispatcher (over the on-chip interconnect) that is statically assigned to dispatch requests to cores for servicing. \u2026 for modern server processor core counts, the required dispatch throughput should be easily sustainable by a single centralized hardware unit, while the additional latency due to the indirection from any NI backend to the NI dispatcher is negligible (just a few ns). Evaluation  The evaluation is conducted using against three different service implementations: a synthetic service that emulates different service time distributions; the HERD key-value store, and the Masstree data store. An SLO of less than or equal to 10x the mean service time is assumed in each case, and configurations are evaluated in terms of throughput under SLO. Compared to a software implementation, which requires a synchronisation primitive, the hardware implementation delivers 2.3x-2.7x higher throughput under SLO. The following plots show the performance of different queueing arrangements under the three workloads, with the \u20181\u00d716\u2019 arrangement that RPCValet simulates performing the best as expected. ( Enlarge )  Compared to a theoretically optimal 1 x 16 model, RPCValet gets within 3-15% (depending on the service time distribution). \u201cWe attribute the gap between the implementation and the model to contention that emerges under high load in the implemented systems, which is not captured by the model.\u201d  At the end of the day though:  RPCValet leaves no significant room for improvement; neither centralizing dispatch nor maintaining private request queues per core introduces performance concerns. Throughput under tight tail latency goals is improved by up to 1.4x, and tail latency before saturation is reduced by up to 4x.", "prediction": "RPCValet is an NI-driven load-balancing design for architectures with hardware-terminated protocols and integrated NIs. It delivers near-optimal tail latency. Our design improves throughput under tight tail latency goals by up to 1.4. Tail-tolerant computing is one of the major ongoing challenges in the datacenter space, as long-tail events are rare and rooted in convoluted hardware-software interactions. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee. copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of thiswork owned by others than ACMmust be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. ACM Reference Format: Alexandros Daglis, Mark Sutherland, and Babak Falsafi. 2019. In 2019 Architectural Support for Programming Languages and Operating Systems (ASPLOS 19), April 1317, 2019, Providence, RI, USA. . . $15.00 Modern datacenters deliver a breadth of online services to millions of daily users. In addition to their huge scale, online services come with stringent Service Level Objectives (SLOs) to guarantee responsiveness. Often expressed in terms of tail latency, SLOs target the latency of the slowest requests, and thus bound theslowest interaction a user may have with the service. The net result of rapid advancements in the networking world is that inter-tier communication latency will lower bound of speed-of-light propagation in the foreseeable future. The focus of optimization will shift to efficiently handling RPCs at the endpoints of the network, hence the need for tail latency optimization. The research was published in the journal ASPLOS 19, April 13 17, 2019,.  2019 Association for Computing Machinery.  ACM ISBN 978-1-4503-6240-5/19/04, ACM paperback version:    50, 50,50, 50,. 50, 48.", "simplified_prediction": "PCValet is an NI-driven load-balancing design for architectures with hardware-terminated protocols and operating systems . It delivers near the tail latency . Our design improves under tight tail latency goals by up to 1.4 . Tail-tolerant computing is one of the major challenges in the datacenter space , as long-tail events are rare and rooted in hardware-software interactions . Permission to make digital or hard copies of all or part of this work for personal use is given without money . copies are not made or distributed for profit or commercial advantage . This is because copies have this notice and the full citation on the first page . Some parts of thiswork owned by others than ACMmust have been honored . He with credit is permitted . To copy , or other things , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . Format : Alexandros Daglis ( AC ) , Mark Sutherland , and Babak Falsafi . 2019 . Support for Programming Languages and Operating Systems ( ASPLOS 19 ) , April 1317 , April 19 , 2019 , Providence , USA . Other pages Other pages Modern datacenters deliver a breadth of online services to millions of daily users . In addition to their huge scale , online services come with stringent Service Level Objectives ( SLOs ) to make sure they are good . Often , in terms of tail latency , SLOs target the latency of the slowest requests , and in some cases a user may have with the service . The net result of rapid advancements in the networking world is that inter-tier communication latency will lower between the speed of propagation and the future . The focus of optimization will shift to better handling RPCs at the endpoints of the network . This will change the need for tail latency optimization . The research was published in April 17 , 2019 in the journal ASPLOS . 2019 Association for Computing Machinery . ACMN 978 - 1 - 4503 - 6240 - 5 / 19 / 04 , ACM paperback version : 50 , 50,50 , 50 . 50 ."}
{"ground_truth": "Scalable Atomic Visibility with RAMP Transactions \u2013 Bailis et al. 2014  RAMP transactions came up last week as part of the secret sauce in Coordination avoidance in database systems that contributed to a 25x improvement on the TPC-C benchmark. So what exactly are RAMP transactions and why might we need them? As soon as you partition your database across multiple servers, things start to get interesting. We\u2019d like to maintain atomic isolation \u2013 either all of a transaction\u2019s effects are visible or none are \u2013 for transactions that span partitions\u2026  The status quo for these multi-partition atomic transactions provides an uncomfortable choice between algorithms that are fast but deliver inconsistent results and algorithms that deliver consistent results but are often slow and unavailable under failure. A lot of implemented systems have chosen to go with the fast-and-furious option resulting in incorrect behaviour for cases where atomic visibility matters. The RAMP (Read Atomic Multiple Partition) transaction models introduced in this paper show that you can have performance and scalability of transactions spanning multiple partitions with atomic visibility. \u2026data stores like Bigtable, Dynamo, and many popular \u201cNoSQL\u201d and even some \u201cNewSQL\u201d stores do not provide transactional guarantees for multi-item operations. The designers of these Internet-scale, real-world systems have made a conscious decision to provide scalability at the expense of multi-partition transactional semantics. Our goal with RAMP transactions is to preserve this scalability but deliver correct, atomically visible behavior for the use cases we have described. Under evaluation, the RAMP algorithms did not degrade substantially under contention, and scaled linearly to over 7.1 million operations per second on 100 servers. Bad things that can happen when you don\u2019t have atomic multi-partition isolation  Without atomic isolation foreign key constraints, secondary indexing, and materialized view maintenance can all break! Data models often represent bi-directional relationships as two distinct uni-directional relationships. \u201cFor example, in TAO, a user performing a \u2018like\u2019 action on a Facebook page produces updates to both the LIKES and LIKED_BY associations.\u201d  These applications require foreign key maintenance and often, due to their unidirectional relationships, multi-entity update and access. Without atomic isolation broken bi-directional relationships, and dangling or incorrect references can surface. With data partitioned across servers by primary key, access by secondary attributes becomes more challenging. There are two dominant strategies for distributed secondary indexing. First, the local secondary index approach co-locates secondary indexes and primary data, so each server contains a secondary index that only references (and indexes) data stored on its server. This allows easy, single-server updates but requires contacting every partition for secondary attribute lookups (write-one, read-all), compromising scalability for read-heavy workloads. Alternatively, the global secondary index approach locates secondary indexes (which may be partitioned, but by a secondary attribute) separately from primary data. This alternative allows fast secondary lookups (read-one) but requires multi-partition update (at least write-two)  Real-world services tend to use either local secondary indexing (non-scalable but correct), or non-atomic (scalable but incorrect) global indexes. In the latter cases queries involving the secondary attributes can return records that shouldn\u2019t match, and omit ones that should. Without atomic isolation, materialized views can diverge from the base data. For example, a count may become inaccurate. With RAMP transactions, base data and views can be updated atomically. The physical maintenance of a view depends on its specification, but RAMP transactions provide appropriate concurrency control primitives for ensuring that changes are delivered to the materialized view partition. For select-project views, a simple solution is to treat the view as a separate table and perform maintenance as needed: new rows can be inserted/deleted according to the specification, and, if necessary, the view can be (re-)computed on demand (i.e., lazy view maintenance). For more complex views, such as counters, users can execute RAMP transactions over specialized data structures such as the CRDT G-Counter. Scalability Requirements  Consider databases that are partitioned over multiple servers. Each item has a single logical copy stored on one of those partitions, which one can be calculated using the item itself (e.g. primary key). In order to achieve scalability the author\u2019s identify two key properties that must be preserved: synchronization independence, and partition independence. Synchronization independence ensures that one client\u2019s transactions cannot cause another client\u2019s to block and that, if a client can contact the partition responsible for each item in its transaction, the transaction will eventually commit (or abort of its own volition). (Also known as transactional availability). Partition independence ensures that, in order to execute a transaction, a client never has to contact partitions that its transaction does not access. Thus, a partition failure only affects transactions that access items contained on the partition. This also reduces load on servers not directly involved in a transaction\u2019s execution. In the distributed systems literature, partition independence for replicated data is called replica availability or genuine partial replication. A third constraint is that the metadata required to achieve synchronization and partition independence is not too large: \u201cthere are many potential solutions for providing atomic visibility that rely on storing prohibitive amounts of state.\u201d  The RAMP transaction algorithms  You may be wondering why I keep referring to algorithms (plural). This is because the authors actually define three RAMP variants: RAMP-Fast, RAMP-Small, and RAMP-Hybrid. These trade-off between performance and the amount of metadata that needs to be kept. At a high level, RAMP transactions allow reads and writes to proceed concurrently. This provides excellent performance but, in turn, introduces a race condition: one transaction might only read a subset of another transaction\u2019s writes, violating RA (i.e., fractured reads might occur). Instead of preventing this race (hampering scalability), RAMP readers autonomously detect the race (using metadata attached to each data item) and fetch any missing, in-flight writes from their respective partitions. To make sure that readers never have to block for writes to arrive at a partition, writers use a two-phase (atomic commitment) protocol that ensures that once a write is visible to readers on one partition, any other writes in the transaction are present on and, if appropriately identified by version, readable from their respective partitions. RAMP-Fast stores metadata in the form of write sets (thus the overhead is linear in transaction size), and has one RTT for reads in the best case (two in the worst case). RAMP-Small uses constant size metadata (it only stores the transaction timestamp) but always requires two RTT for reads. RAMP-Hybrid takes the same write set information as RAMP-Fast, but encodes it in a Bloom filter. With no false positives from the filter, Ramp-Hybrid would therefore behave as RAMP-Fast. And with all false positives, it behaves as RAMP-Small. All of the variants require two RTTs/transaction for writes. The two-phase atomic commitment protocol used by RAMP ensures readers never block waiting for writes to arrive. It is known that every atomic commitment protocol may block during failures. Blocked writes instead act as \u201cresource leaks\u201d on partitions: partitions will retain prepared versions indefinitely unless action is taken. To \u201cfree\u201d these leaks, RAMP servers can use the Cooperative Termination Protocol (CTP). CTP can always complete the transaction except when every partition has performed PREPARE but no partition has performed COMMIT\u2026 Compared to alternatives (e.g. replicating clients), we have found CTP to be both lightweight and effective. There is of course much more detail in the full paper, which I encourage you to go on and read. Section 6 on Related Work contains a nice short summary of isolation guarantees in the wild. \u201cIn recent years, many \u2018NoSQL\u2019 designs have avoided cross-partition transactions entirely, effectively providing Read Uncommitted isolation\u2026\u201d", "prediction": "Read Atomic (RA) isolation matches the requirements of these use cases by ensuring atomic visibility. We present algorithms for Read Atomic MultiPartition (RAMP) transactions that enforce atomic visibility while offering excellent scalability. RAMP transactions correctly mediate atomic visibility of updates and provide readers with snapshot access to database state by using limited multi-versioning and by allowing clients to independently resolve non-atomic reads. We demonstrate that, in contrast with existing algorithms, RAMP Transactions incur limited overheadeven under high contention and scale linearly to 100 servers. We subsequently develop three new, scalable algorithms for achieving RAP transactions that collectively title Read Atomic-Partition transactions. We believe these algorithms will be useful in the development of the next generation of distributed databases and in the storage of large amounts of data. For more information, or to request a copy of this paper, please contact permissions@acm.org. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of the work owned by others than the author(s) must be honored. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. For confidential support, call the National Suicide Prevention Lifeline at 1-800-273-8255 or visit http://www.suicidepreventionlifeline.org/. For support in the UK, contact the Samaritans on 08457 90 90 90 or visit a local Samaritans branch or see www.samaritans.org for details. In the U.S., contact the National Institutes of Health on 1-844-847-788 or go to http:// www.nhs.org/news/article/2013/09/08/0908/nhs-topics-and-researchers-on-top-of-the-world-situational-solutions-for-critical-threats-in-a-big-data-world.", "simplified_prediction": "Read Atomic ( RA ) isolation matches the requirements of these use cases by making the atomic visibility of it . We present algorithms for Read Atomic MultiPartition ( RAMP ) transactions that offer atomic visibility while offering excellent scalability . RAMP transactions correctly mediate atomic visibility of updates and provide readers with a database state by using limited multi-versioning and by allowing clients to read out non-atomic reads . We demonstrate that , in contrast with existing algorithms , RAMP incur limited overheadeven under high contention and scale linearly to 100 servers . We then develop three new algorithms for achieving RAP transactions . This makes the algorithm 's '' Read '' Atomic-Partition transactions . We believe these algorithms will be useful in the development of the next generation of distributed databases and in large amounts of data . For more information , or to request a copy of this paper , please contact permission acm . Permission to make digital or hard copies of all or part of this work for personal or classroom use is given without fee . This is not made or distributed for profit or commercial advantage and that copies have this notice and the full citation on the first page . Copyrights for some parts of the work owned by others than the author must be honored . To copy , or other things , to post on servers or to redistribute to lists , requires prior specific permission and / or a fee . For support , call the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 or visit to the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 . For support in the United Kingdom , contact the Samaritans on 08457 90 90 90 90 90 90 or visit Samaritans branch or see www . In the U . , contact the National Institutes of Health on 1 - 844 - 847 - 788 or go to layout : / / / www . nhs .20 / news / 09 / 09 / 0908 / 0908 / nhs-topics-and-researchers-on-top-of-the-world-situational-solutions-for-for-alcriticalcritics-s-re-the-world ."}
{"ground_truth": "Uncertainty propagation in data processing systems Manousakis et al., SoCC\u201918  When I\u2019m writing an edition of The Morning Paper, I often imagine a conversation with a hypothetical reader sat in a coffee shop somewhere at the start of their day. There are three levels of takeaway from today\u2019s paper choice:  If you\u2019re downing a quick espresso, then it\u2019s good to know that uncertainty can creep into our data in lots of different ways, and if you compute with those uncertain values as if they were precise, errors can compound quickly leading to incorrect results or false confidence. If you\u2019re savouring a cortado, then you might also want to dip into the techniques we can use to propagate uncertainty through a computation. If you\u2019re lingering over a latte, then the UP (Uncertainty Propagation) framework additionally shows how to integrate these techniques into a dataflow framework. We implement this framework in a system called UP-MapReduce, and use it to modify ten applications, including AI/ML, image processing, and trend analysis applications to process uncertain data. Our evaluation shows that UP-MapReduce propagates uncertainties with high accuracy and, in many cases, low performance overheads. Are you sure? Uncertainty can arise from a number of different sources including probabilistic modelling, machine learning, approximate computing, imprecise sensor data, and such like. For many applications, uncertain data should be represented as probability distributions or estimated values with error bounds rather than exact values. Failure to properly account for this uncertainty may lead to incorrect results. For example, Bornholt et al. have shown that computing speeds from recorded GPS positions can lead to absurd values (e.g., walking speeds above 30mph) when ignoring uncertainties in the recordings. If you have a dataflow system with computation based on a DAG, then uncertainty in upstream data values needs to flow through the computation. For example, consider a simple 2-node DAG where an approximate query is used to produce an approximate count of the number of customers in different age groups (e.g., using BlinkDB ), and then we take a weighted average of those groups. The second node will by default produce a single value, but in reality it should result in a distribution. There may be meaningful parts of that distribution where the outcome would be disadvantageous (for example), but the probability of this is completely lost when reporting a single value. Uncertainty propagation  Our method offers, to the best of our knowledge, the only known computationally tractable (and as our evaluation will show, potentially with low overheads) large-scale uncertainty propagation. Consider a function  , where  is an arbitrary function without side-effects representing the computation at a node in a dataflow,  is a set of random variables representing inputs with uncertainties, and  is a set of random variables representing outputs with uncertainties. Depending on the nature of  , we can use different statistical methods to approximate the mean and variance of each variable in the output. When  is a continuous differentiable function we can use first-order Differential Analysis:  The general strategy is to compute  by approximating  using its first-order Taylor series at the expected value of  . This approximation is accurate if  is roughly linear around the support (in other words, neighborhood) of  \u2026  When there are multiple inputs and multiple outputs, the calculation also needs to take into account the covariances between the outputs. When  is a semi-continuous function we have two possibilities. If the support of each input mostly or entirely falls within a continuous differentiable part of the function then we can use Differential Analysis (DA) as before. If it spans a discontinuity then we have to use Monte Carlo simulation. For example, consider the function  when  , and  otherwise. If each input is greater than  then we can use DA. We use Monte Carlo simulation to approximate  for functions  that do not meet (or the developers do not know whether they meet) the requirements for DA. is evaluated on  randomly drawn samples of the input, and the outputs are used as an approximation of  . To generate accurate samples, one must know the joint density of  and pay the heavy computational cost of any rejection-sampling algorithm. Unfortunately that cost grows exponentially with an increasing size of  and thus we resort to two approximations:  Given input distributions, generate samples accordingly and ignore covariances  In the absence of full distributional information, assume that each input is normally distributed with the same mean and covariance matrix as the unknown distribution. (This approximation works because the mean and variance estimation of Y depends solely on the mean and variance of  ). Uncertainty propagation in dataflows  As stated earlier, in a dataflow graph we need to perform uncertainty propagation at all nodes downstream of uncertain data. For Monte Carlo simulation-based uncertainty propagation (UP-MC) we can just treat a node as a black box, dynamically generate samples from the input set, and compute the mean and variance for each output using empirically derived distributions (or assume normal distributions in the absence of this information). The implementation of Differential Analysis (henceforth called UP-DA) is more challenging. Specifically, when a DAG node produces multiple outputs, we view it as being implemented by multiple sub-functions, each producing one of the outputs\u2026 input covariances can require additional data flow to be added to the DAG for computing output variances and covariances. If the programmer can provide a partial derivative function, then using this often gives better performance than resorting to numerical differentiation. Observe that we might make a saving early in the dataflow by introducing uncertainty (e.g. by computing an approximate result), but then we have to pay more later for the resulting uncertainty propagation. The evaluation explores this trade-off. UP-MapReduce is an implementation of the above ideas in the in MapReduce. The UP-MapReduce extension includes three Mapper and three Reducer classes that implement UP-MC, UP-DA for continuous functions, and UP-DA for semi-continuous functions. The extension also introduce the uncertain type PV (Probabilistic Value) which contains one or more random variables, each described by a mean, a variance-covariance matrix, and possibly an entire empirical distribution. The UP-DA Continuous Reducer class for example provides an abstract derivative method that a developer can implement to provide a closed-form derivative function. Uncertainty propagation in practice  We have built a toolbox of common operations (e.g., sum) and modified ten common data processing applications using UP-MapReduce to process uncertain data. Baselines for the evaluation are established by running a large Monte Carlo experiment over a precise version of each application. When input errors are small (e.g. below 3%) then UP-MapReduce estimates means with very low error. The following figure shows the relative errors and execution times for the three variants of UP-MC as compared to the baseline. Enlarge  For six of the applications UP-MapReduce is highly accurate, but when input errors are significant (e.g. eig, svd) its estimated relative errors can deviate noticeably from baseline values. The best performance is obtained when using closed-form (user provided) derivatives. tsocial and latency are both multi-stage approximate workflows. The following chart shows the execution times and maximum relative errors for sampling rates from 0.1% to 100% (precise). For tsocial, a sampling rate of 80% or less is required before the overheads of uncertainty propagation are outweighed by the sampling benefits. Experimentation with ten common data analytic applications revealed that UP-MapReduce is highly accurate in many cases, while its performance overheads are very low\u2014 an average of 6% performance degradation\u2014 when closed-form derivatives are provided. When numerical differentiation or Monte Carlo simulation must be used, overheads can become much more significant as input size increases. Fortunately, the impact of these overheads on overall execution time can be reduced by allocating additional computational resources.", "prediction": "In many cases, performing computations on uncertain data as if it were exact leads to incorrect results. We present a framework for uncertainty propagation (UP) that allows developers to modify precise implementations of DAG nodes to process uncertain inputs with modest effort. We implement this framework in a system called UP-MapReduce, and use it to modify ten applications, including AI/ML, image processing and trend analysis applications. Our evaluation shows that UP- mapreduce propagates uncertainties with high accuracy and low performance overheads. Embedding such a framework in systems such as MapReduce and Spark will make it easily available to many developers working in many application domains, we say. We are seeing an explosion of uncertain datai.e., data that is more properly represented by probability distributions or estimated values with error bounds rather than exact values from sensors in IoT, sampling-based approximate computations and machine learning algorithms. We propose and evaluate a general framework that significantly eases this challenging task in DAG-based data processing systems, we write. We conclude that our UP framework presents a compelling approach for handling uncertain data in D AG processing. The paper is published in the open-source journal, The Open Data Society (ODS) (http://www.opendata.org/doi/full/10.1038/ OpenData.2013/13/11/14/1414/1314/1114/15/15.1. The abstract: The OpenData Society (OPS) is a non-profit organization that provides open source software for data analysis, storage and other related fields. It is funded by the Open Data Foundation (ODF) ( http:// www.OpenData.org/) (http:www.the OpenDataFoundation.org) (1). The abstract is also available in the online version of the paper, which can be downloaded by clicking here. (2) The book is available in hard-to-read PDFs, which includes a free download of the entire book. (3) The online version includes the free PDF version, which is available for download in the U.S. and Europe. (4) The free PDF is available on the OASIS website. (5)", "simplified_prediction": "In many cases , performing computations on uncertain data as if the data was not true . We present a framework for uncertainty propagation ( UP ) that allows developers to use precise implementation of DAG nodes to process uncertain inputs with modest effort . We use this framework in a system called UP-MapReduce , and use it to modify ten applications , including aI / ML , image processing and trend applications . Our evaluation shows that UP- mapreduce look like uncertainties with high accuracy and low performance overheads . Embedding such a framework in systems such as MapReduce and Spark will make it easily available to many developers working in many application domains . We seeing an explosion of uncertain datai . For example , data that is more properly represented by probability distributions or estimated values with error bounds rather than exact values from sensors in IoT ( IoT ) and machine learning algorithms . We propose and evaluate a general framework that eases this task need to work in DAG-based data processing systems , we write . We conclude that our UP framework presents a good approach for handling uncertain data in D AG processing . The paper is published in the open-source journal , The Open Data Society ( ODS ) , which is also called the Open Data Society ( ODS ) org / full / 10.1038 / OpenData . 2013 / 13 / 1414 / 1314 / 15 / 15 / 15.1 . The abstract : The OpenData Society ( OPS ) is a non-profit organization that provides open source software for data analysis and other related fields . It is funded by the Open Data Foundation ( ODF ) ( sometimes called OpenData org / ) , the OpenDataFoundation org / the OpenData ) . The abstract is also available in the online version of the paper , which can be downloaded by clicking here . The book is available in hard-to-read PDFs , which includes a free download of the entire book . The online version includes the free PDF version , which is available for download in the U.S. and Europe . The free PDF is available on the website of OASIS . 5 ."}
{"ground_truth": "Mining High-Speed Data Streams \u2013 Domingos & Hulten 2000  This paper won a \u2018test of time\u2019 award at KDD\u201915 as an \u2018outstanding paper from a past KDD Conference beyond the last decade that has had an important impact on the data mining community.\u2019  Here\u2019s what the test-of-time committee have to say about it:  This paper proposes a decision tree learner for data streams, the Hoeffding Tree algorithm, which comes with the guarantee that the learned decision tree is asymptotically nearly identical to that of a non-incremental learner using infinitely many examples. This work constitutes a significant step in developing methodology suitable for modern \u2018big data\u2019 challenges and has initiated a lot of follow-up research. The Hoeffding Tree algorithm has been covered in various textbooks and is available in several public domain tools, including the WEKA Data Mining platform. The goal is to create a knowledge discovery system that can cope with large volumes of data (perhaps an unbounded stream) without needing to fit everything in memory (40MB was the allotted amount used in their evaluation tests \u2013 remember this was 2000). Ideally, we would like to have KDD systems that operate continuously and indefinitely, incorporating examples as they arrive, and never losing potentially valuable information. Such desiderata are fulfilled by incremental learning methods (also known as online, successive or sequential methods), on which a substantial literature exists. However, the available algorithms of this type have significant shortcomings from the KDD point of view. Some are reasonably efficient, but do not guarantee that the model learned will be similar to the one obtained by learning on the same data in batch mode. They are highly sensitive to example ordering, potentially never recovering from an unfavorable set of early examples. Others produce the same model as the batch version, but at a high cost in efficiency, often to the point of being slower than the batch algorithm. Based on a statistical result known as the Hoeffding bound, the authors show how to create Hoeffding (decision) trees and build a Very Fast Decision Tree (VFDT) system based on them. A key property of the Hoeffding tree algorithm is that it is possible to guarantee under realistic assumptions that the trees it produces are asymptotically arbitrarily close to the ones produced by a batch learner (i.e., a learner that uses all the examples to choose a test at each node). In other words, the incremental nature of the Hoeffding tree algorithm does not significantly affect the quality of the trees it produces. In a classification problem, a set of N training examples of the form (x\u20d7,y) is given, where y is a discrete class label and x\u20d7 is a vector of d attributes. From these examples we need to produce a model y = f(x\u20d7) that will predict the class of future examples x\u20d7 with high accuracy. Decision tree learners create models in the form of decision trees, where each node contains a test on an attribute, each branch corresponds to a possible outcome of the test, and each leaf contains a class prediction. To learn a decision tree you recursively replace leaves by test nodes, starting at the root. Our goal is to design a decision tree learner for extremely large (potentially infinite) datasets. This learner should require each example to be read at most once, and only a small constant time to process it. This will make it possible to directly mine online data sources (i.e., without ever storing the examples), and to build potentially very complex trees with acceptable computational cost. In Hoeffding trees, in order to find the best attribute to test at a given node, only a small subset of the training examples that pass through that node are used. The key of course, is to determine how small that subset can be, and what guarantees we can give concerning it. Thus, given a stream of examples, the first ones will be used to choose the root test; once the root attribute is chosen, the succeeding examples will be passed down to the corresponding leaves and used to choose the appropriate attributes there, and so on recursively. We solve the difficult problem of deciding exactly how many examples are necessary at each node by using a statistical result known as the Hoeffding bound (or additive Chernoff bound). Given a real-valued random variable r with range R (e.g. 0-1 for a probability), and n independent observations of the variable, we can compute the mean of those observations, r\u0304. The Hoeffding bound tells us that with probability 1 \u2013 \u03b4, the true mean of the variable is at least r\u0304 \u2013 \u03b5, where:  The Hoeffding bound has the very attractive property that it is independent of the probability distribution generating the observations. The price of this generality is that the bound is more conservative than distribution-dependent ones (i.e., it will take more observations to reach the same \u03b4 and \u03b5). If G(Xi) is the heuristic used to choose test attributes, then we want to ensure with high probability the attribute chosen using n examples (where n is as small as possible) is the same that would be chosen using infinite examples. Suppose that we\u2019ve seen n examples so far, and the best attribute predicted by G is Xa and the second best is Xb. Call the difference between the observed heuristic values of Xa and Xb \u0394G\u0304  Now, given a desired \u03b4, the Hoeffding bound tells us that Xa is the correct choice with probability 1 \u2013 \u03b4 if n examples have been seen at this node and \u0394G\u0304 > \u03b52. Thus a node needs to accumulate examples from the streamuntil \u03b5 becomes smaller than \u2206G. (Notice that \u03b5 is a monotonically decreasing function of n.) At this point the node can be split using the current best attribute, and succeeding examples will be passed to the new leaves. Pseudo-code for a Hoeffding tree algorithm based on this is given in table 1 of the paper. The VFDT system was built using this algorithm, and included a number of additional optimisations:  When two or more attributes have very similar scores, lots of examples may be needed to decide between them with confidence. But if they are very similar, it probably doesn\u2019t matter too much which one we choose, so let\u2019s just pick one after we reach some user-defined threshold and move on\u2026  We don\u2019t need to recompute G after every example since it is unlikely the decision to split will be made at that specific point. So we can micro-batch and accept a minimum number of new examples before recomputing G.  Under memory pressure, VFDT deactivates the least promising leaves in order to make room for new ones. Likewise VFDT can also drop early on attributes that do not look promising. VFDT can be initialised with a tree produced offline by a traditional batch learner. (Trained on a subset of the overall data). VFDT can rescan previously seen examples if desired. This option can be activated if either the data arrives slowly enough that there is time for it, or if the dataset is finite and small enough that it is feasible to scan it multiple times. This means that VFDT need never grow a smaller (and potentially less accurate) tree than other algorithms because of using each example only once.", "prediction": "VFDT is an anytime system that builds decision trees using constant memory and constant time per example. VFDT can incorporate tens of thousands of examples per second using off-the-shelf hardware. It uses Hoeffding bounds to guarantee that its output is asymptotically nearly identical to that of a conventional learner. We apply VF DT to mining the continuous stream of Web access data from the whole University of Washington main campus. We also describe and evaluate a decision-tree learning system based on HOEffding trees based on I/O bound in the sense that it is ready-to-use at any time. It does not require examples from an online stream to be stored. It can learn by seeing each example once, and therefore does not need to store any examples at all. It is an ever-use-to model that mines any data stream that is available at any point in time, and that can be stored in main memory, only proportional to the size of the tree and the number of examples associated with it. The probability that the tree learners will choose different tests at any given node decreases exponentially with the amount of examples being taught. We show how this can be done using an online, successive or sequential learning method based on the Hoefding tree. We demonstrate its utility through an extensive set of experiments on synthetic data and show how it can be used to build decision trees on a continuous data stream. We conclude with a discussion of the future of machine learning and data mining in the Internet age and its implications for data mining systems and the future state of the Internet as well as the role of the cloud in this field in the 21st century. Back to Mail Online home. Back To the page you came from. Click here to read the original version of this article. For confidential support, call the Samaritans on 08457 90 90 90 or visit a local Samaritans branch or see www.samaritans.org. For more information on how to help, visit the\u00a0University of Washington\u2019s\u00a0Online Giving page or the\u00a0U.S. Samaritans\u2019\u00a0\u2018On-Line Giving\u2019 page, or click here to go to the\u00a0OnlineGiving page.", "simplified_prediction": "The system builds decision trees using constant memory and constant time per example ( VFDT ) . VFDT can include tens of thousands of examples per second using hardware . It uses a lot of bounds to guarantee that its output is asymptotically nearly identical to that of a conventional learner . We have to mining the stream of Web access data from the whole University of Washington 's main campus . We also describe and evaluate a decision-tree learning system based on trees based on I / O bound in the sense that it is ready-to-use at any time . It does not require examples from an online stream to be stored . It can learn by seeing each example once , and does not need to store any example at all . It is an ever-use-to model that mines any data stream that is available at any point in time . It can be stored in main memory , only because the size of the tree and the number of examples associated with it . The probability that the tree learners will choose different tests at any given node with the amount of examples being taught . We show how this can be done using an online way of learning . This is based on the Hoefding tree . We show its utility through a large set of experiments on synthetic data and show how it can be used to build decision trees on a continuous data stream . We concluded with a discussion of the future of machine learning and data mining in the Internet age . It is about data mining systems and the future state of the Internet as well as the role of the cloud in the 21st century . Back to home , the home Back page you came from . Click here to read the original version of this article . Samaritans call the Samaritans on 08457 90 90 90 90 90 90 , or visit Samaritans branch or see www.maritans . For more information on how to help , visit the University of Shan Washingtons Online Giving page or the U . Samaritans make people know about this page , or click here to go to the OnlineGiving page ."}
{"ground_truth": "The paper looks at the problem of learning structured exploration policies for training RL agents. Structured Exploration  Consider a stochastic, parameterized policy \u03c0\u03b8(a|s) where \u03b8 represents the policy-parameters. To encourage exploration, noise can be added to the policy at each time step t. But the noise added in such a manner does not have any notion of temporal coherence. Another issue is that if the policy is represented by a simple distribution (say parameterized unimodal Gaussian), it can not model complex time-correlated stochastic processes. The paper proposes to condition the policy on per-episode random variables (z) which are sampled from a learned latent distribution. Consider a distibution over the tasks p(T). At the start of any episode of the ith task, a latent variable zi is sampled from the distribution N(\u03bci, \u03c3i) where \u03bci and \u03c3i are the learned parameters of the distribution and are referred to as the variation parameters. Once sampled, the same zi is used to condition the policy for as long as the current episode lasts and the action is sampled from then distribution \u03c0\u03b8(a|s, zi). The intuition is that the latent variable zi would encode the notion of a task or goal that does not change arbitrarily during the episode. Model Agnostic Exploration with Structured Noise  The paper focuses on the setting where the structured exploration policies are to be learned while leveraging the learning from prior tasks. A meta-learning approach, called as model agnostic exploration with structured noise (MAESN) is proposed to learn a good initialization of the policy-parameters and to learn a latent space (for sampling the z from) that can inject structured stochasticity in the policy. General meta-RL approaches have two limitations when it comes to \u201clearning to explore\u201d:  Casting meta-RL problems as RL problems lead to policies that do not exhibit sufficient variability to explore effectively. Many current approaches try to meta-learn the entire learning algorithm which limits the asymptotic performance of the model. Idea behind MAESN is to meta-train policy-parameters so that they learn to use the task-specific latent variables for exploration and can quickly adapt to a new task. An important detail is that the parameters are optimized to maximize the expected rewards after one step of gradient update to ensure that the policy uses the latent variables for exploration. For every iteration of meta-training, an \u201cinner\u201d gradient update is performed on the variational parameters and the post-inner-update parameters are used to perform the meta-update. The authors report that performing the \u201cinner\u201d gradient update on the policy-parameters does not help the overall learning objective and that the step size for each parameter had to be meta-learned. The variation parameters have the usual KL divergence loss which encourages them to be close to the prior distribution (unit Gaussian in this case). After training, the variational parameters for each task are quite close to the prior probably because the training objective optimizes for the expected reward after one step of gradient descent on the variational parameters. Another implementation detail is that reward shaping is used to ensure that the policy gets useful signal during meta-training. To be fair to the baselines, reward shaping is used while training baselines as well. Moreover, the policies trained with reward shaping generalizes to sparse reward setup as well (during meta-test time). Experiments  Three tasks distributions: Robotic Manipulation, Wheeled Locomotion, and Legged Locomotion. Each task distribution has 100 meta-training tasks. In the Manipulation task distribution, the learner has to push different blocks from different positions to different goal positions. In the Locomotion task distributions, the different tasks correspond to the different goal positions. The experiments show that the proposed approach can adapt to new tasks quickly and the learn coherent exploration strategy. \u2022 In some cases, learning from scratch also provides a strong asymptotic performance although learning from scratch takes much longer.", "prediction": "Trajectory-ranked Reward EXtrapolation (T-REX) extrapolates beyond a set of (approximately) ranked demonstrations in order to infer high-quality reward functions. When combined with deep reinforcement learning, T-REx outperforms state-of-the-art imitation learning and IRL methods on multiple Atari and MuJoCo benchmark tasks. The algorithm is robust to ranking noise and can accurately extrapolate intention by simply watching a learner noisily improve at a task over time. It can be difficult, even for experts, to design reward functions and objectives that lead to desired behaviors when designing autonomous agents. For example, the degenerate all-zero reward function (the agent receives a reward of 0) makes a given set of demonstrations appear optimal. However, such a reward function is likely due to the regularizing effect of having many pairwise constraints between trajectories. This, in turn, enables a reinforcement learning agent to exceed the performance of the demonstrator by learning to optimize this extrapolated reward function. It also allows us to identify features that are correlated with the rankings, in a manner that can be extrapolated beyond the demonstrations that could potentially overfit to the reward function, provided we demonstrate empirically that it could successfully predicting returns that are significantly better than any observed demonstration. The author(s) present their algorithm at the 36 th International Conference on Machine Learning, Long Beach, California, PMLR 97, 2019. For confidential support call the National Suicide Prevention Lifeline at 1-800-273-8255 or visit http://www.suicidepreventionlifeline.org/. For support in the UK, call the Samaritans on 08457 90 90 90 or visit a local Samaritans branch or see www.samaritans.org. In the U.S., call the national suicide prevention Lifeline on 1-866-273 -8255. For information on how to get involved in the Lifeline, see http:// www.cs.utexas.edu/ Lifeline. For more information about how to help, visit the\u00a0University of Texas at Austin\u2019s\u00a0Programming and Research Center for Computer Science (U.S. Campus) or\u00a0the University of Texas Computer Science Institute (US Campus)", "simplified_prediction": "Trajectory-ranked Reward EXtrapolation ( T-REX ) extrapolates beyond a set of ( approximately ) ranked demonstrations in order to get more reward functions . When combined with deep reinforcement learning , T-REx helps people learn state-of-the-art imitation learning and IRL methods to learn more atari and MuJoCo . The algorithm is robust to ranking noise and can make it better to watch by simply watching a learner improve at a task over time . It can be difficult , even for experts , to design reward functions . This objectives that lead to desired behaviors when designing autonomous agents . For example , the degenerate all-zero reward function ( the agent receives a reward of 0 ) makes a given set of demonstrations appear . However , such a reward function is likely because of a regularizing effect of having many pairwise constraints between a reward function . This allows a reinforcement learning agent to become more popular than the performance of the demonstrator by learning to optimize this reward function . It also allows us to identify features that are correlated with the rankings , in a manner that can be moved beyond the demonstrations that could be overfit to the reward function . This provided we show that it could successfully predict returns that are significantly better than any observed demonstration . The s ) present their algorithm at the 36 th International Conference on Machine Learning , Long Beach , California , United States . For support call the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 or visit the National Suicide Prevention Lifeline at 1 - 800 - 273 - 8255 . For support in the United Kingdom , call Samaritans on 08457 90 90 90 90 90 90 or visit Samaritans branch or see www.maritans . In the United States , call the national suicide prevention Lifeline on 1 - 866 - 273 -8255 . For information on how to get involved in the Lifeline , see here : / / / www . Lifeline edu / Lifeline . For more information about how to help , visit the University of Texas at Austin 's Programming and Research Center for Computer Science ( U. S. Campus ) , the University of Texas Computer Science Institute ( US Campus ) ."}
{"ground_truth": "The paper presents a framework that uses diverse suboptimal world models that can be used to break complex policies into simpler and modular sub-policies. Given a task, both the sub-policies and the controller are simultaneously learned in a bottom-up manner. The framework is called as Model Primitive Hierarchical Reinforcement Learning (MPHRL). Idea  Instead of learning a single transition model of the environment (aka world model) that can model the transitions very well, it is sufficient to learn several (say k) suboptimal models (aka model primitives). Each model primitive will be good in only a small part of the state space (aka region of specialization). These model primitives can then be used to train a gating mechanism for selecting sub-policies to solve a given task. Since these model primitives are sub-optimal, they are not directly used with model-based RL but are used to obtain useful functional decompositions and sub-policies are trained with model-free approaches. Single Task Learning  A gating controller is trained to choose the sub-policy whose model primitive makes the best prediction. This requires modeling p(Mk | st, at, st+1) where p(Mk) denotes the probability of selecting the kth model primitive. This is hard to compute as the system does not have access to st+1 and at at time t before it has choosen the sub-policy. Properly marginalizing st+1 and at would require expensive MC sampling. Hence an approximation is used and the gating controller is modeled as a categorical distribution - to produce p(Mk | st). This is trained via a conditional cross entropy loss where the ground truth distribution is obtained from transitions sampled in a rollout. The paper notes that technique is biased but reports that it still works for the downstream tasks. The gating controller composes the sub-policies as a mixture of Gaussians. For learning, PPO algorithm is used with each model primitives gradient weighted by the probability from the gating controller. Lifelong Learning  Different tasks could share common subtasks but may require a different composition of subtasks. Hence, the learned sub-policies are transferred across tasks but not the gating controller or the baseline estimator (from PPO). Experiments  Domains:  Mujoco ant navigating different mazes. Stacker arm picking up and placing different boxes. Implementation Details:  Gaussian subpolicies  PPO as the baseline  Model primitives are hand-crafted using the true next state provided by the environment simulator. Single Task  Only maze task is considered with the start position (of the ant) and the goal position is fixed. Observation includes distance from the goal. Forcing the agent to decompose the problem, when a more direct solution may be available, causes the sample complexity to increase on one task. Lifelong Learning  Maze  10 random Mujoco ant mazes used as the task distribution. MPHRL takes almost twice the number of steps (as compared to PPO baseline) to solve the first task but this cost gets amortized over the distribution and the model takes half the number of steps as compared to the baseline (summed over the 10 tasks). Pick and Place  8 Pick and Place tasks are created with max 3 goal locations. Observation includes the position of the goal. Ablations  Overlapping model primitives can degrade the performance (to some extent). Similarly, the performance suffers when redundant primitives are introduced indicating that the gating mechanism is not very robust. Sub-policies could quickly adapt to the previous tasks (on which they were trained initially) despite being finetuned on subsequent tasks. The order of tasks (in the 10-Mazz task) does not degrage the performance. Transfering the gating controller leads to negative transfer. Notes  I think the biggest strength of the work is that accurate dynamics model are not needed (which are hard to train anyways!) through the experimental results are not conclusive given the limited number of domains on which the approach is tested.", "prediction": "This paper presents a framework for using diverse suboptimal world models to decompose complex task solutions. This framework performs automatic decomposition of a single source task in a bottom up manner. We perform a series of experiments on high dimensional continuous action control tasks to demonstrate the effectiveness of this approach at both complex single task learning and lifelong learning. We propose an amethod architecture to train task decomposition and a gating controller to solve a given task. We will present our findings at the 18th International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2019), May 1317, 2019, Montreal, Canada.  2019 International Foundation for Autonomous agents and Multi Agent Systems (www.ifaamas.org). All rights reserved. For confidential support call the Samaritans on 08457 90 90 90, visit a local Samaritans branch or see www.samaritans.org for details. In the U.S. call the National Suicide Prevention Line on 1-800-273-8255 or visit www.suicidepreventionlifeline.org. For support in the UK call the helpline on 0800-847-9255 or click here for details on how to get in touch with Samaritans in the United Kingdom. For more information on the AAMAS conference, visit the conference website. For information on how the conference will be held in the U,S. and Canada, see the conference webpage. For details on the conference in the Netherlands, visit http://www.aamas.org/2019/01/13/18/18th-international-conference-on-autonomous-agents-and-multiagent-systems-may-be-held-in-the- Netherlands-May-1317-19/ . For more on the Conference in the US, see http:// www.aAMAS.org/. For the UK, see  the conference page here. For the European version of this article, visit  the Conference page here [www.academyofcomputer science.uk]. For the US version of the article, click here [ www.acs.ac.uk/news/2013/02/07/17/1813/1713/1313/stories/story.html.", "simplified_prediction": "This paper has a framework for using different world models to decompose complex task solutions in the world . This framework performs automatic decomposition of a single source task at the same time . We perform a series of experiments on high dimensional continuous action control tasks to show the effectiveness of this work at both complex single task learning and lifelong learning . We propose an amethod architecture to solve a given task and a controller to solve the task 's task . We will present our findings at the 18th International Conference , May 1317 , 2019 , Montreal , Canada and the 18th International Conference . 2019 International Foundation for Autonomous agents and Multi Agent Systems ( www . ) All rights have been made . Samaritans also call the Samaritans on 08457 90 90 90 90 90 90 90 , visit Samaritans branch or see www.maritans . In the U . call the National Suicide Prevention Line on 1 - 800 - 273 - 8255 or visit www . For support in the UK call the helpline on 0800 \u00e2 '' 847 9255 or click here for details on how to get in touch with Samaritans . For more information on the AAMAS conference , there is a conference website . information on how the conference will be held in the U.S. states . and Canada , see the conference website . For details on the conference in the Netherlands , visits aamas and org / 2019 / 13 / 18 / 18th-international-conference-on-autonomous-autonomous-agents-and-multiagent-systems-may-be-held-in-the- Netherlands-May-13-17 / 19 / . For more on the Conference in the United States , see route : / / www . For the United Kingdom see the page here . For the European version of this article , visit the Conference page here ( this is called school ) . For the U.S. version of the article , click here [ www. ac . uk / news / 2013 / 02 / 17 / 17 / 1713 / 1313 / story ."}
{"ground_truth": "The paper proposes an adversarial approach for estimating generative models where one model (generative model) tries to learn a data distribution and another model (discriminative model) tries to distinguish between samples from the generative model and original data distribution. Adversarial Net  Two models - Generative Model(G) and Discriminative Model(D)  Both are multi-layer perceptrons. G takes as input a noise variable z and outputs data sample x(=G(z)). D takes as input a data sample x and predicts whether it came from true data or from G.  G tries to minimise log(1-D(G(z))) while D tries to maximise the probability of correct classification. Think of it as a minimax game between 2 players and the global optimum would be when G generates perfect samples and D can not distinguish between the samples (thereby always returning 0.5 as the probability of sample coming from true data). Alternate between k steps of training D and 1 step of training G so that D is maintained near its optimal solution. When starting training, the loss log(1-D(G(z))) would saturate as G would be weak. Instead maximise log(D(G(z)))  The paper contains the theoretical proof for global optimum of the minimax game. Experiments  Datasets  MNIST, Toronto Face Database, CIFAR-10  Generator model uses RELU and sigmoid activations. Discriminator model uses maxout and dropout. Evaluation Metric  Fit Gaussian Parzen window to samples obtained from G and compare log-likelihood. Strengths  Computational advantages  Backprop is sufficient for training with no need for Markov chains or performing inference. A variety of functions can be used in the model. Since G is trained only using the gradients from D, fewer chances of directly copying features from the true data. Can represent sharp (even degenerate) distributions. Weakness  D must be well synchronised with G.  While G may learn to sample data points that are indistinguishable from true data, no explicit representation can be obtained. Possible Extensions  Conditional generative models. Inference network to predict z given x. Implement a stochastic extension of the deterministic Multi-Prediction Deep Boltzmann Machines  Using discriminator net or inference net for feature selection. Accelerating training by ensuring better coordination between G and D or by determining better distributions to sample z from during training.", "prediction": "We propose a new framework for estimating generative models via an adversarial process. We simultaneously train two models: a generative model G that captures the data distribution, and a discriminative model D that estimates the probability that a sample came from the training data rather than G. This framework corresponds to a minimax two-player game. There is no need for any Markov chains or unrolled approximate inference networks during either training or generation of samples. Experiments demonstrate the potential of the framework through qualitative and quantitative evaluation of the generated samples. This paper has demonstrated the viability of the adversarial modeling framework, suggesting that these research directions could prove useful in the future. We are happy to provide the code and hyperparameters for this paper at the request of the authors. The paper has been published in the open-source journal CIFAR, which can be downloaded for free at: http://www.cifAR.org/cifar/2013/02/13/cIFAR-2013-02-13/CIFAR.html#storylink=cpy. We would like to make clear that this article is not intended to be an endorsement of any particular algorithm or training procedure. It is intended to show that the framework can yield specific training algorithms for many kinds of model and optimization algorithm. For more information, please visit the CifAR website or visit the University of Montreal\u2019s website at: www.uMontreal.com/cifar/ 2013/02-14/Cifar-News-2012-04-13.html. The article was written by Jean Pouget-Abadie, Sherjil Ozair and Yoshua Bengio, all of the Universite de Montreal, and is published by the Canadian Institute of Technology (U.N.T) in association with the Canadian Computer Science Institute (CCSI) in Montreal. The U.S. version of this article can be accessed at:http:// www.cnn.co.uk/2014/03/14/science/features/deep-learning-and-machine-intelligence-in-a-new-formula-taken-by-the-university-of-montreal-and\u00a0the\u00a0Canadian-Institute-of\u00a0Technology (UCM) in the U.N.-T. in the form of a paper.", "simplified_prediction": "We propose a new framework for making generative models via an adversarial process . Wely train two models : a model G that captures the data distribution , and a discriminative model D that estimates the probability that a sample came from the training data rather than G/O. This is the same as a minimax two-player game . There is no need for any Markov chains inference networks during either training or generation of samples . Experiments show the potential of the framework through qualitative and evaluation of the generated samples . This paper has shown the viability of the modeling framework . This suggests that these research directions could prove useful in the future . We happy to provide the code and hyperparameters for this paper asked for the author to write . The paper has been published in the open-source journal CIFAR , which can be downloaded for free at : http:///www.g / cifar / 2013 / 2013 / 13 / 13 / cIFAR-2013 - 13 / CIFAR- 13 / CIFAR story = cpy . We like to make clear that this article is not intended to be a part of any algorithm or training procedure . It is intended to show that the framework can produce specific training algorithms for many kinds of model algorithms . For more information , please visit the CifAR website or visit the University of Montreal offensives website at : www . uMontreal and cifar / 02 - 14 / Cifar-News-2012 - 04 - 13 html . The article was written by Jean Pouget-Abadie , Sherjil Ozair and Yoshua Bengio , and is published by the Canadian Institute of Technology ( U. N. T. ) in association with the Canadian Computer Science Institute ( CCSI ) in Montreal , Canada . The U . version of this article can be accessed at : http:///nuk / 2014 / 03 / 14 / science / features / deep-learning-and-intelligence-in-a-new-formula-taken-by-the-of-of-montre-and the Canadian-Institute-Institute-of Technology ( UCM ) ."}
{"ground_truth": "An empirical analysis of anonymity in Zcash Kappos et al., USENIX Security\u201918  As we\u2019ve seen before, in practice Bitcoin offers little in the way of anonymity . Zcash on the other hand was carefully designed with privacy in mind. It offers strong theoretical guarantees concerning privacy. So in theory users of Zcash can remain anonymous. In practice though it depends on the way those users interact with Zcash. Today\u2019s paper choice, \u2018An empirical analysis of anonymity in Zcash\u2019 studies how identifiable transaction participants are in practice based on the 2,242,847 transactions in the blockchain at the time of the study. We conclude that while it is possible to use Zcash in a private way, it is also possible to shrink its anonymity set considerably by developing simple heuristics based on identifiable patterns of usage. The analysis also provides some interesting insights into who is using Zcash and for what as well. Founders and miners combined account for around 66% of the value drawn from the shielded pool. The code for the analysis is available online at  [url]", "prediction": "Among the now numerous alternative cryptocurrencies derived from Bitcoin, Zcash is often touted as the one with the strongest anonymity guarantees. In this paper, we examine the extent to which anonymity is achieved in the deployed version of Zcash. We conclude that while it is possible to use Zcash in a private way, it is also possible to shrink its anonymity set considerably by developing simple heuristics based on identifiable patterns of usage. We also examine the interactions with and within its main privacy feature, a shielded pool that acts as the anonymity set for users wishing to spend coins privately. We find that the vast majority of Z cash activity is in the transparent part of the blockchain, meaning it does not engage with the shielded pool in the move in which it is used. We provide the first in-depth empirical analysis of these claims and generally provide a more longitudinal study of how Zcash has evolved and how its main participants are using it. We then move on to examining the analysis that has been developed for Bitcoin and Zcash by adapting this analysis to this part of this move in Zcash's blockchain. Back to Mail Online home.Back to the page you came from.. The article was originally published in the online edition of the USENIX Security Symposium 463. For more information, visit the U.S.ENIX security Symposium. 463 (http://www.usenIX.org/security/2014/08/28/security- symposium-463.html). The article has been updated to reflect that the UENIX conference was held in Las Vegas, Nevada, on September 14, 2014. For the full version of this article, see the UEnIX security symposium. The online version of the article can be downloaded for free from the U ENIX security conference website [http:// www.uENIX.com/security.php/2014-08/news/463/Security-Symposium.html#storylink=cpy. We are happy to provide a link to the full article, which can be found at the link below. The full article can also be downloaded from the link above. The link is also available for the download of the PDF version, which is available for download from the same site.", "simplified_prediction": "Among the now numerous alternative cryptocurrencies that come from Bitcoin , Zcash is often touted as the one with the strongest guarantees . In this paper , we look like the extent to which anonymity is achieved in the sent version of Zcash . We conclude that while it is possible to use Zcash in a private way , it is also possible to shrink the word '' Zcash '' set a lot by developing simple patterns of usage . We also looked at the interactions with and within its main feature , a shielded pool that acts as anonymity set for users wanting to spend coins privately . We find that most of the time Z cash activity is in the part of the blockchain . This means it does not have a shield in the move where it is used . We provide the first analysis of these claims and generally provide a more longitudinal study of how Zcash has evolved and how its main participants are using it . We move on to look at the analysis that has been developed for Bitcoin and Zcash by adapting this analysis to this part of this move . Back to the home of home , Back to the page you came . The article was first published in the online edition of the USENIX Security Symposium . For more information , visit the U . S.S. security Symposium . 463 ( org / security / 08 / 28 / security-symposium-463 ; org / security / 08 / 28 / security ) . The article has been changed to talk about that conference was held in Las Vegas , Nevada on September 14 , 2014 . For the full version of this article , see the security symposium . The online version of the article can be downloaded for free from the U ENIX security conference website [ http:///www. uENIX/ / security . php / 2014 / news / 463 / Security-Symposium . We happy to provide a link to the full article , which can be found at the link below . The full article can also be downloaded from the link . The link is also available for the download of the PDF version , which can be downloaded by downloading the download ."}
{"ground_truth": "Statiscal foundations of virtual democracy Kahng et al., ICML\u201919  This is another paper on the theme of combining information and making decisions in the face of noise and uncertainty \u2013 but the setting is quite different to those we\u2019ve been looking at recently. Consider a food bank that receives donations of food and distributes it to those in need. The goal is to implement an automated decision making system such that when a food donation is received, the system outputs the organisation (e.g. housing authority or food pantry) that should receive it. We could hard code a set of rules, but what should they be? And who gets to decide? A democratic solution to this would be to give each of the stakeholders a vote on every decision. In the food bank setting, identified classes of stakeholders include the donors, the recipients, the volunteers (who pick up food from the donor and deliver it to the recipient), and employees. Their votes encode their own preferences and biases, perhaps in a way that even the voters themselves couldn\u2019t neatly codify in a set of explicit rules. It\u2019s not really practical to have an actual vote with all stakeholders participating every time a food donation is made though! One of the most basic ideas underlying democracy is that complicated decisions can be made by asking a group of people to vote on the alternatives at hand. As a decision-making framework, this paradigm is versatile, because people can express a sensible opinion about a wide range of issues. One of its seemingly inherent shortcomings, though, is that voters must take the time to cast a vote\u2014 hopefully an informed one\u2014 every time a new dilemma arises. The big idea behind virtual democracy is that we learn the voting preferences of each stakeholder, essentially creating an agent which is able to vote in their place, a virtual voter. Then when we need to make a decision we ask those virtual voters to cast their votes (in the form of a preference ranking). The central question in this paper is this: given a set of preference rankings, how should we combine them to produce an actual decision? The procedure for doing this is known as the voting rule. \u2026 the choice of voting rule can have a major impact on the efficacy of the system. In fact, the question of which voting rule to employ is one of the central questions in computational social choice. It\u2019s one thing to come up with a voting rule that works well when we have the actual true preference rankings of all of the stakeholders. In a virtual democracy setting though, where we have learned approximations to those preference rankings, a highly desirable feature of a voting rule is that it is robust to noise. I.e., we want a voting rule whereby\u2026  \u2026 the output on the true preferences is likely to coincide with the output on noisy estimates thereof. Learning preferences  To learn voter preferences, voters are asked to make a set of pairwise comparisons (about 100) between alternatives. I.e., given this donation, should it be sent to recipient A or recipient B? Each alternative is presented as a set of pre-determined features. In the case of the food bank question voters are given information about the type of donation, and seven additional features such as distance between the donor and recipient, and when the recipient last received a donation. At the end of this process, the training data is used to learn a model of the preferences of the voter. This model is then used to predict the voter\u2019s preference ranking over many hundreds of recipients for a given donation. The Mallows model  To be able to compare the efficacy of various voting rules, we\u2019re going to need a way to compare how good their outputs are. The Kendall tau (KT) distance between two rankings (permutations) of a set is defined as the number of pairs of alternatives on which the rankings disagree. By disagree we mean that given a pair  one ranks  ahead of  , and the other ranks  ahead of  . For example, the KT distance between  and  is 2. The Mallows (1957) model was originally designed for use in situations where there is true ranking of the alternatives, and assigns a probability that a given voter is associated with a given alternative ranking. The probability decreases exponentially with the number of pairs of alternatives on which the true and alternative ranking disagree, i.e., their KT distance. A Mallows model is parameterised by a  parameter  . Our technical approach relies on the observation that the classic Mallows (1957). model is an unusually good fit with our problem. In the problem at hand, instead of a single true ranking, each voter has their own true ranking. When validating a learned  model, the test for accuracy is done using pairwise comparisons, just like in Mallows. Given an observed prediction accuracy  , we can relate this accuracy to an underlying Mallows model through a parameter  , where pairwise comparisons are drawn from within the top  ranked items in the true ranking. (See \u00a73 in the paper). Voting rules and the Borda count  The next piece of the puzzle is the selection of a voting rule to combine rankings and produce a final decision. The main result in the paper concerns the Borda count voting rule. Borda count is a positional scoring rule. Positional scoring rules give a score vector that assigns points to each position in a ranking. E.g. 5 points for being ranked first, 3 points for being ranked second, and so on. The score of an alternative is the sum of its ranking points across all of the voters. The alternative with the biggest score wins (break ties via random selection). The Borda count uses a very straightforward score vector: if there are  alternatives in the ranking, the score vector is defined as  . The heart of the paper is \u00a74, where drawing on the properties of the Mallows model, it\u2019s relationship to the predicted accuracy, and the Borda count rule, the authors show the Borda count is surprisingly robust to noise. I\u2019m going to happily skip over the proofs here and leave you to follow up on those if you\u2019re interested! \u2026 it is intuitive that the separation in Borda scores has to depend on  , but it is encouraging (and, to us, surprising) that his dependence is almost linear\u2026 the theorem implies that our noisy Borda ranking is highly unlikely to make mistakes on pairs of alternatives whose average score difference is linear in  . Other rules  So far so good, but what about other voting rules? Are they also robust to noise or is there something special about the Borda count? The main alternative to positional scoring rules are pairwise-majority consistent (PMC) rules, of which there are many examples (e.g., the ranked pairs method). The key result in \u00a75 of the paper is that all rules in this class are not robust to noise. It is instructive to contrast our positive result, Theorem 1, with this negative result. On a very high level, the former result asserts that \u201cif Borda count says that the gaps between alternatives are signi\ufb01cant, then the alternatives will not \ufb02ip under Borda count,\u201d whereas the latter says \u201ceven if a PMC rule says that the gaps between alternatives are very signi\ufb01cant, some alternatives are likely to \ufb02ip under that rule.\u201d  Borda count FTW  So there you have it: if you need to robustly combine noisy rankings of alternatives to make a decision, use the Borda count! Our theoretical and empirical results identify Borda count as an especially attractive voting rule for virtual democracy, from a statistical viewpoint. Another important feature of the Borda count rule is that the decisions it takes can be easily explained. An explanation consists of two elements: first the average position in the predicted preferences of each of the stakeholder groups, and second the features that were most important in achieving that ranking position (possible since alternatives are presented as vectors of features).", "prediction": "Virtual democracy is an approach to automating decisions, by learning models of the preferences of individual people, and, at runtime, aggregating the predicted preferences of those people on the dilemma at hand. One of the key questions is which aggregation method  or voting rule  to use; we offer a novel statistical viewpoint that provides guidance. We seek voting rules that are robust to prediction errors, in that their output on peoples true preferences is likely to coincide with their noisy estimates thereof. We prove that the classic Borda count rule is robust in this sense, whereas any voting rule belonging to the wide family of pairwisemajority consistent rules is not. We have been building on this approach in a collaboration with a Pittsburgh-based non-profit, 412 Food Rescue, that provides on-demand food donation distribution services. The goal is to design and deploy an algorithm that would automatically make the decisions they most frequently face: given an incoming food donation, which recipient organization (such as a housing authority or food pantry) should receive it? The voters in our implementation are stakeholders: donors, recipients, volunteers (who pick up the food from the donor and deliver it to the recipient), and employees. We've collected roughly 100 pairwise comparisons from each voter, where in each comparison, the voter is provided information about the type of donation, as well as seven relevant features of the two alternatives that are being compared, e.g., the distance between donor and recipient, and when the recipient last received a donation. And given a predicted ranking for each voters, we map them into a ranking over the alternatives by applying a voting rule. While this implementation sounds simple enough, the choice of voting rule can have a major impact on the efficacy of the system. In fact, the question of which voting rule to employ is one of the central questions in computational social choice (Brandt et al., 2016), and in social choice theory more broadly. Our empirical results further support, and more precisely measure, the robustness of BordA count. Our research is also compelling in terms of usability and explainability in more detail in our donor-recipient matching system, in which donors are matched against each other and the recipients are matched with each other.", "simplified_prediction": "Virtual democracy is an approach to automated decisions by learning models of individual people , and , at runtime , making the predicted preferences of those people on the dilemma at hand . One of the key questions is which aggregation method or voting rule to use . We offer a book that does not want to do this . We seek voting rules that are thought to prediction errors , in that their output on peoples true preferences is likely to have noisy estimates thereof . We prove that the classic Borda count rule is robust in this sense , whereas any voting rule belonging to the family of pairwisemajority is not . We have been building on this approach with a Pittsburgh-based non-profit company , 412 Food Rescue , that provides food money from the United States . The goal is to design and deploy an algorithm that would automatically make the decisions they most frequently face : given an incoming food donation , which got organization ( such as a housing authority or food pantry ) should get it ? The voters in our implementation are : donors , recipients , volunteers ( who pick up the food from the donor and deliver it to the recipient ) , and employees . Weve collected about 100 pairwise comparisons from each voter , where the voter is provided information about the type of donation , as well as seven of the two alternatives that are being compared , e.g. the distance between donor and recipient , and when the winner received a donation . Because of this , we map them into a ranking over the alternatives by using a voting rule for each voters . The choice of voting rule can have a major impact on the efficacy of the system because of this . In fact , the question of which voting rule is one of the central questions in computational social choice ( Brandt et al . , 2016 ) , and in social choice theory more broadly . Our empirical results further support , and more precisely measure , the advent of BordA count . Our research is also written in terms of usability and explainability in more detail in our donor-recipient matching system , in which donors are matched against each other and the winners are matched with each other ."}
